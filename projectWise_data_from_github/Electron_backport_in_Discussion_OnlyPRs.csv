https://api.github.com/repos/electron/electron,29021,backport/node-38506::master,0,merged,merged/12-x-y::merged/13-x-y::semver/patch::,"#### Description of Change Backports: https://github.com/nodejs/node/pull/38506 See: https://github.com/electron/electron/pull/28957 for discussion In few words, `napi_threadsafe_function` was significantly slower in Electron due to scheduling each call on the next uv tick. We've patched electron in #28957 to let microtasks queue execute from within `uv_run()` and now this backports a patch that makes `napi_threadsafe_function` calls scheduled while one was running happen on the same tick. Fixing the performance issue. cc @codebytere @deepak1556 @zcbenz <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Improved performance of `napi_threadsafe_function` ::",5240c072cd4b2f3729cac38b4a6cc57bc35efde2::
https://api.github.com/repos/electron/electron,28723,dependabot/npm_and_yarn/ssri-6.0.2::master,1,merged,dependencies::semver/none::,"Bumps [ssri](https://github.com/npm/ssri) from 6.0.1 to 6.0.2. <details> <summary>Changelog</summary> <p><em>Sourced from <a href=""https://github.com/npm/ssri/blob/v6.0.2/CHANGELOG.md"">ssri's changelog</a>.</em></p> <blockquote> <h2><a href=""https://github.com/zkat/ssri/compare/v6.0.1...v6.0.2"">6.0.2</a> (2021-04-07)</h2> <h3>Bug Fixes</h3> <ul> <li>backport regex change from 8.0.1 (<a href=""https://github.com/zkat/ssri/commit/b30dfdb"">b30dfdb</a>), closes <a href=""https://github-redirect.dependabot.com/zkat/ssri/issues/19"">#19</a></li> </ul> <p><!-- raw HTML omitted --><!-- raw HTML omitted --></p> </blockquote> </details> <details> <summary>Commits</summary> <ul> <li><a href=""https://github.com/npm/ssri/commit/b7c8c7c61db89aeb9fbf7596c0ef17071bc216ef""><code>b7c8c7c</code></a> chore(release): 6.0.2</li> <li><a href=""https://github.com/npm/ssri/commit/b30dfdb00bb94ddc49a25a85a18fb27afafdfbb1""><code>b30dfdb</code></a> fix: backport regex change from 8.0.1</li> <li>See full diff in <a href=""https://github.com/npm/ssri/compare/v6.0.1...v6.0.2"">compare view</a></li> </ul> </details> <details> <summary>Maintainer changes</summary> <p>This version was pushed to npm by <a href=""https://www.npmjs.com/~nlf"">nlf</a>, a new releaser for ssri since your current version.</p> </details> <br /> [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ssri&package-manager=npm_and_yarn&previous-version=6.0.1&new-version=6.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores) Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end) --- <details> <summary>Dependabot commands and options</summary> <br /> You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/electron/electron/network/alerts). </details> Notes: none::",3adb7da1bea8d8d72ad147ed77c5250310dab4e0::
https://api.github.com/repos/electron/electron,28535,wasm-eval::master,1,merged,merged/11-x-y::merged/12-x-y::merged/13-x-y::semver/patch::,"#### Description of Change This PR backports https://chromium.googlesource.com/chromium/src/+/83913676803db53648b6a47d159102a7cf1dac36 from upstream Chromium, which makes the `wasm-eval` CSP available behind the `WebAssemblyCSP` blink runtime feature. This feature enables apps to use wasm without having to use the 'unsafe-eval' CSP, closes #23252. #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Support `wasm-eval` csp behind `WebAssemblyCSP` flag.::",95ba5e701cfe0a4f6e4ceb178e58095abfd41dc7::
https://api.github.com/repos/electron/electron,28497,web-frame-clean-up::master,1,merged,semver/none::,"The previous implementation of webFrame in the renderer process leaked sub-frame contexts and global objects across the context boundaries thus making it possible for apps to either maliciously or accidentally violate the contextIsolation boundary. E.g. `electron.webFrame.top.context` leaked the `window` object from the other side of the isolated world by accident (not by API, purely by implementation issues) This re-implementation binds all methods in native code directly to content::RenderFrame instances instead of relying on JS to provide a ""window"" with every method request.  This is much more consistent with the rest of the Electron codebase and is substantially safer. Notes: no-notes::do we want to keep this in for backportability?::Removing this (the deprecation warning) makes the implementation easier.  Need to figure out how best to handle this in older branches you're right::```suggestion content::RenderFrame* frame = render_frame(); ```::```suggestion void OnDestruct() override { // The underlying RenderFrame can be destroyed while this class // still lives, so all calls to |render_frame()| must be null-checked. // The MaybeGetRenderFrame method handles this. } ```::```suggestion "" could be executed""; ```::slight preference for this to receive `v8::Isolate*` instead of `gin_helper::ErrorThrower`. The latter is a zero-cost wrapper around an isolate pointer and can be ""constructed"" for free.::Why does this method have a handle / context scope when none of the others do? It doesn't look like it's ever called from outside of V8. Also, is `context` still needed here?::What does this change do..?::```suggestion if (!MaybeGetRenderFrame(thrower, ""findFrameByName"", &render_frame)) ```::I don't know, this method was copy-pasted.  Happy to take a look at some point but I don't want to change actual implementations here.::This specifically, changes `GetFrameParent` to return a new `WebFrameRenderer` instance for the given RenderFrame instead of just returning that frames global object.::Ah, I see, we used to do that wrapping on the JS side. 👍 ::I am removing this in https://github.com/electron/electron/pull/28456::",ab3a328ce5f108a5980828e9ac5655ad4be77f90::97e16b31786192637add95ecfd484033af6bb8a6::2d13f0b5cdbd1456a349d6bd94e4f98c7d6a2f02::962816823268716a68efd125b0cd1594b2b9d612::28183c2172ffd5b7d1eb621ef6920d63c9ca844d::
https://api.github.com/repos/electron/electron,28259,fix-ctx-iso-prop::master,1,merged,new-pr 🌱::semver/patch::,Discussed in api-wg --> https://electronhq.slack.com/archives/CNL6E1GJD/p1616022446002700 I've updated the notes of the original PR (#28030) and will cherry pick this commit onto the backport shortly Notes: no-notes::,26d23c3436b91a468566d42e8b05f714cef06162::b34c908521a33b3442a8e9c3e452dc8da96552c9::
https://api.github.com/repos/electron/electron,27926,revert-webframemain-executejs-isolated::master,1,merged,merged/12-x-y::semver/patch::,"#### Description of Change Addresses #27862. The upcoming `WebFrameMain` API implements `executeJavaScriptInIsolatedWorld` with an interface that doesn't match that of `WebContents`. Because we need to reconcile these two APIs, this PR temporarily reverts the API before the Electron 12 stable release. We'll then restore the refactored API both in master and in a 12-x-y minor release. _Note: I targeted master and a 12-x-y backport to keep master and 12 in sync, but since this is being specifically reverted for 12, happy to change this and only target 12._ #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Reverted `WebFrameMain.executeJavaScriptInIsolatedWorld()` ::",8b83c54762d99a98215651cd602dbacc7e66d85d::
https://api.github.com/repos/electron/electron,27920,smooth-webcontents-shutdown::master,1,merged,semver/patch::,"#### Description of Change This PR cleans up the shutdown routine of WebContents, so: 1. The `content::WebContents` is always destroyed synchronously in the destructor of `api::WebContents`. 2. The only way to destroy `api::WebContents` is to call `api::WebContents::Destroy`, both in C++ and JavaScript. With this change, it becomes much clearer how WebContents is destroyed, and the WebContents will have a deterministic destruction order. Note that this PR might introduce new crashes, we should not backport it to old branches. #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: none::",93bcbb575d766496b8c2a34c036dd9d6d68a5a0d::
https://api.github.com/repos/electron/electron,27486,patch-1::master,0,merged,documentation :notebook:::semver/patch::,"#### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> Add documentation about :apple: Apple Silicon. This may need to be backported to the 11.0.0 release notes. (Implemented in https://github.com/electron/electron/pull/24545) @MarshallOfSound #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [ ] PR description included and stakeholders cc'd - [ ] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [ ] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: <!-- Please add a one-line description for app developers to read in the release notes, or 'none' if no notes relevant to app developers. Examples and help on special cases: https://github.com/electron/clerk/blob/master/README.md#examples --> Update documentation about Apple Silicon. ::this was correct as-is - ""Electron 6.0.8 and later"" is a proxy for ""versions"" which as a plural subject requires pluralization of the verb. To be more clear, let's instead say ""include"" here.::Same as below - let's say: > Electron 11.0.0 and later include native support for Apple Silicon (`arm64`) devices.::",6734076fc12ba3a31232f6d9e8fc9fcb66ad3cc1::afa63b8d0ba21dd4b28a3c1c3324f53c1c08a361::eda008ea3e6c6845f2e035433a15678b879df6be::61cd36c42279d3ff26b5c8741e3cc6ce9817fd13::
https://api.github.com/repos/electron/electron,27398,cherry-pick/9-x-y/v8/63166010061d::9-x-y,0,closed,new-pr 🌱::,[liftoff][arm] Release temp registers after use The {ParallelRegisterMove} at the end of {AtomicLoad} might need a temporary scratch register for spilling values to the stack. Make sure that one is available by giving up the scratch register used for the address of the atomic access. R=ahaas@chromium.org Bug: chromium:1153442 Change-Id: I267c43e2193662c420f96f6683ebd4bbb0e1bca3 Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2566759 Reviewed-by: Andreas Haas <ahaas@chromium.org> Commit-Queue: Clemens Backes <clemensb@chromium.org> Cr-Commit-Position: refs/heads/master@{#71564} Notes: Security: backported fix for chromium:1153442.::,36d8636c982887afa66b9b92473f98c2ecfc764b::
https://api.github.com/repos/electron/electron,27363,cherry-pick/9-x-y/v8/6f5eecc2d796::9-x-y,0,closed,new-pr 🌱::,"Merged: [parser] Fix AST func reindexing for function fields Revision: a769ea7a4462115579ba87bc16fbffbae01310c1 NOTRY=true NOPRESUBMIT=true NOTREECHECKS=true R=leszeks@chromium.org Bug: chromium:1132111, chromium:1157790 Change-Id: I01ccb83a60163b3c99716f78a5a69a0943cedde3 Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/2593251 Reviewed-by: Leszek Swirski <leszeks@chromium.org> Cr-Commit-Position: refs/branch-heads/8.7@{#62} Cr-Branched-From: 0d81cd72688512abcbe1601015baee390c484a6a-refs/heads/8.7.220@{#1} Cr-Branched-From: 942c2ef85caef00fcf02517d049f05e9a3d4b440-refs/heads/master@{#70196} Notes: Security: backported fix for chromium:1132111, chromium:1157790.::",837c451817128cddb430ac70831d74cf44411fb6::2398248ed961900473c3518c993aa31518adb31a::
https://api.github.com/repos/electron/electron,27351,cherry-pick/10-x-y/chromium/9eeb09a73570::10-x-y,0,closed,new-pr 🌱::,"[x11] Fixed UAF in drag and drop. To short-cut round trips to the X server when drag and drop happens between two Chromium windows, XDragContext stored the raw pointer to XDragDropClient of the source window in its source_client_ attribute. This made possible to access the deleted object (use after free) if the source window had been destroyed during the operation.  In short, although the target context can call the source client directly via the shortcut, the PropertyNotify event comes from the X server (not using the shortcut), and apparently it can come to the target context after the source window and its client had been destroyed but before the target context is notified.  See the issue for full details. Here the XDragContext::source_client_ is removed, and all its uses are replaced with getting the client from the global map of clients [1]. The client removes itself from the map upon destruction [2] so this change eliminates the vulnerability. For the record, there is the test in the interactive_ui_tests suite (namely BookmarkBarViewTest22.CloseSourceBrowserDuringDrag) that should emulate this situation but is has some flaws [3]. [1] https://source.chromium.org/chromium/chromium/src/+/master:ui/base/x/x11_drag_drop_client.cc;l=120 [2] https://source.chromium.org/chromium/chromium/src/+/master:ui/base/x/x11_drag_drop_client.cc;l=200 [3] https://crbug.com/1106379 Bug: 1153595 Change-Id: Ibb875cb4fa04ddfa8f99b39e4dab654048da86c7 Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/2567229 Reviewed-by: Thomas Anderson <thomasanderson@chromium.org> Commit-Queue: Alexander Dunaev <adunaev@igalia.com> Cr-Commit-Position: refs/heads/master@{#833577} Notes: Security: backported fix for 1153595.::",c67f1ec1aea84babf1f9332c4fd61f9f6d2e76e9::
https://api.github.com/repos/electron/electron,27040,refactor-nativewindowmac::master,1,merged,semver/none::,"#### Description of Change The `NativeWindowMac` class has become a bit hard to work on, because its overrides do not match the base class's order, and its method definitions do not match the declarations' order. So I'm putting them in order in this PR. This will make certain backports harder, but I think it worths the efforts otherwise the class will only become more messy, and I already find it very difficult to add new methods to this class. There is no actual change to the code except for simple moves. #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: no-notes::",edd2f6d6943003d217c24806e6aabe2b3c0571d4::
https://api.github.com/repos/electron/electron,26889,enable-world-safe-by-default::master,1,merged,api-review/approved ✅::merged/12-x-y::semver/major::,"Fixes #25806 As per the original deprecation message, enabling `worldSafeExecuteJavaScript` by default in Electron 12.  Also plans its removal for Electron 14. In order to remain backwards-compatible (in regards to promise support and exception handling) I moved the copy-value logic to use the ctx bridge to support non-clonable types and also updated the ctx bridge logic to better handle exception messages Notes: Changed the default value of `worldSafeExecuteJavaScript` to be `true`.::Will it work when this code is executed? https://github.com/electron/electron/blob/e641a747fb8bc5a7115e4b0581b756aca039b864/shell/browser/api/electron_api_web_contents_view.cc#L112-L113::Hm? Why wouldn't it, this isn't new code.  It's just a boolean flip::Can we add a link to more info about what `worldSafeExecuteJavaScript` does and how to change your code to compensate?::This looks new—is it fixing some behavior issue? Should it be separated out and backported to older versions?::Yes, my plan was to extract is separately as a backport but land together with this change.  Otherwise we end up with a chain of 3 or 4 PRs to land to land this 😆 ::The docs for `worldSafeExecuteJavaScript` explain ""values returned from `webFrame.executeJavaScript` will be sanitized to ensure JS values can't unsafely cross between worlds when using `contextIsolation`"".  I'm not sure how much detail we want here.::I think this document should contain enough information to: 1. Enable apps to check whether or not their app will be affected by the change, and 2. Give a brief outline of how to adapt to the change. For (1) we should mention greppable functions (e.g. `webFrame.executeJavaScript`, maybe also `executeJavaScriptInIsolatedWorld`?). For (2) we don't need to go into a lot of detail, maybe just ""ensure that objects returned from `executeJavaScript` are serializable""?::@MarshallOfSound related to #18369::you need to use `IsEnabled(options::kWorldSafeExecuteJavaScript, true);` as well::",bf7201d8f9210e575e4bb9c45fa901bd8717e8c1::01485e120457a3722248ac8c8afacbb5782767c2::d8dad4e7542520bea194b99cca72b3a499684443::7b1c81f136de7c03cd79804443cfdb82eecd8ada::
https://api.github.com/repos/electron/electron,26135,net-request-fetch-metadata::master,0,merged,api-review/approved ✅::,"#### Description of Change This pull request is based on #26134. It's possible to reproduce a request send by Chrome Browser with #26134 and this pull request. Is ok to backport this PR to stable branches, such as 10-x-y? #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [ ] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Allowed setting the 'Origin' header and Sec-Fetch-* headers in net.request().::It looks like we'll start sending `Sec-Fetch-User: ?0` with all requests by default as of this change. Is that desirable?::```suggestion it(`should set sec-fetch-mode to ${mode} if requested`, async () => { ```::```suggestion it(`should set sec-fetch-dest to ${dest} if requested`, async () => { ```::Should we perhaps only allow setting this through the headers?::We need to set the origin url but not the origin header for sometime.::I don’t think so. But I will add a test to ensure this.::It seems the network stack will remove the Sec-Fetch-User header if has_user_activation is false.::Done.::Done.::I added a test to make sure this doesn't happen.::This can be a single test: ```suggestion it('should not send sec-fetch-user header by default', async () => { const serverUrl = await respondOnce.toSingleURL((request, response) => { expect(request.headers).not.to.have.property('sec-fetch-user'); response.statusCode = 200; response.statusMessage = 'OK'; response.end(); }); const urlRequest = net.request({ url: serverUrl }); await collectStreamBody(await getResponse(urlRequest)); }); ```::Done.::Headers are case insensitive when read by the networking stack but this assumes that `origin` is lowercase here.  To be accurate this should somehow pull `origin` in a case insensitive way right?::The header names are stored in lowercase internally. This is another issue we may fix in the future. ``` setHeader (name: string, value: string) { ... const key = name.toLowerCase(); this._urlLoaderOptions.extraHeaders[key] = value; } ```::I just go ahead and fixed this issue too.::This tuple type is somewhat hard to read, I'd recommend instead using an object: ```suggestion const urlLoaderOptions: NodeJS.CreateURLLoaderOptions & { redirectPolicy: RedirectPolicy, headers: Record<string, {originalKey: string, value: string | string[]}> } = { ```::Fixed now.::",a440390dcd670f80441a0dafe9e61f9272d10857::c735095eb5e7404d6e7e7e7af4db1e55e7b307d6::5573c346f73d9b93654cf611cb404224a27c55d9::7b0ed5af4d5ef800189ca5fa715f09ef4cd7fcc3::b8da31e2f53da930d658f1f60f6e246ea9827a25::
https://api.github.com/repos/electron/electron,25697,miniak/web-view-events::master,1,merged,,"#### Description of Change Derive `supportedWebViewEvents` from `WEB_VIEW_EVENTS` to avoid duplication. #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes Notes: no-notes ::I noticed that `render-process-gone` is new here; it was not in `WEB_VIEW_EVENTS` before this commit moved it from `guest-view-internal.ts`. Is this a fix that needs to be backported? The `render-process-gone` event itself was added in v10.0.0 (#23560) and was backported to v9.1.0 and v8.4.0. I’m trying to debug a crash (zulip/zulip-desktop#1016) with a trace that shows [this `WEB_VIEW_EVENTS[eventKey]`](https://github.com/electron/electron/blob/v9.3.0/lib/renderer/web-view/guest-view-internal.ts#L55) being undefined, and I wonder if this might be because `eventKey` is `""render-process-gone""`. Filed as #26561.::",9ae78a037db3a3475cdd6de2180af3f98c81f446::
https://api.github.com/repos/electron/electron,25098,fix-management::master,0,merged,merged/10-x-y::merged/11-x-y::merged/9-x-y::,"#### Description of Change This PR implements missing `extensions::ManagementAPIDelegate` which is being used by `chrome.management` API and also fixes a crash when an extension is attempting to use the API. It doesn't implement all of the `chrome.management` functionalities, as they need to emit relevant events in `session` or in `session.extensions`, so that developers could set their own behavior. I will probably do that in another PR. Could this be backported to 9-x-y? #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). - [x] This is **NOT A BREAKING CHANGE**. Breaking changes may not be merged to master until 11-x-y is branched. #### Release Notes Notes: Added support for some `chrome.management` APIs. ::Line ending has been changed in this file.::@zcbenz Seems like the pre-commit hook changes LF to CRLF automatically::I added a change to make sure the files have correct line endings (https://github.com/electron/electron/pull/25134), can you rebase this branch on master?::Done!::@sentialx Sorry the CI is failing because of forcing line endings, do you mind rebasing to latest master again?::Sure::",a9e738bb0e1f99d68c8b8f04f244bf6a5b07dff9::6c665a3610791017daaa15301e226f1ebf401ebe::84ede16f5594575a62089fbec31a2a61d0908304::1d908820aa001fcbf9b77a45c40bd1b674078c10::8dfcd7d65853c732b42bb3f3346f97fa1ec9e511::8601ea35b125848b4731064cd599a2dd0e998f58::d2cb217d267edd277af914338d61fc6c2cae1104::4af32f85349b954650acac9f7ed47f46648dbc3f::a82da8adf34d7bc968c03a0cfb1413d00449e59b::8fca85d4940978765966417d9b3d66cde3909ac8::6eb383889bf4fd63bbe8cddafce6714d490ac04c::53262bd175554d7ac33a86b21095e9c6dfd3aacc::a7129d51b6554764f512fa96de162585910cd31c::
https://api.github.com/repos/electron/electron,24801,fix-voiceover-reading-typing::master,1,merged,component/accessibility::fast-track 🚅::merged/10-x-y::,"Intention is to land this into tomorrows nightly for testing purposes, once feedback has been obtained upstream or once we have tested on the nightly this will be backported appropriately. Upstream attempt: https://chromium-review.googlesource.com/c/chromium/src/+/2330812 Notes: Fixed issued where voice over would not read words as you typed them::",992ba30e0f692b8a30c71088abc019d00e0c02a6::
https://api.github.com/repos/electron/electron,24798,fix-extensions-security-error::master,0,merged,merged/10-x-y::merged/9-x-y::,"#### Description of Change Ref #19447 Fixes a security error when calling `openDatabase` in an extension background page. An example major extension which uses it is LastPass. Could this be backported to 9-x-y? cc @nornagon #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). - [x] This is **NOT A BREAKING CHANGE**. Breaking changes may not be merged to master until 11-x-y is branched. #### Release Notes Notes: Fixed not working `WebSQLDatabase` in extension background pages. ::Perhaps ```suggestion if (extensions::ProcessMap::Get(browser_context)->Contains(process->GetID())) command_line->AppendSwitch(switches::kEnableWebSQL); ``` By analogy with //chrome/browser/extensions/chrome_content_browser_client_extensions_part.cc (ChromeContentBrowserClientExtensionsPart::AppendExtraRendererCommandLineSwitches) I think it's logically more correct to associate this with the _process_ rather than the WebContents, though the effect will presently be the same, I think.::So I assume it should be out of the `if (web_contents)` block?::yep, also you can get the BrowserContext similarly to this: https://source.chromium.org/chromium/chromium/src/+/master:chrome/browser/chrome_content_browser_client.cc;l=2189-2193;drc=398ae53c39c1011dfc62bc95e59edbdf62f66374::The trailing space should be removed to fix the lint warning.::@zcbenz Fixed!::",00111e84dc5e227eb75beea4fe1bd604625f90a2::69a8e7d6182cf3b0848fc3940d97699c4418f3e3::43fd4f838ae6ade308c4e682fe6aff00cbe89e34::6ff916354203c337aa4dc4c48a21329a9ff764c9::8efb496a1ef82393072cd46bb77e5717431cca35::
https://api.github.com/repos/electron/electron,24483,extensions-cors::master,0,merged,merged/10-x-y::merged/9-x-y::,"#### Description of Change This PR fixes CORS issues mentioned in https://github.com/electron/electron/issues/19447#issuecomment-619365573. Could this be backported to 9-x-y, please? cc @nornagon #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] Tests are changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). - [x] This is **NOT A BREAKING CHANGE**. Breaking changes may not be merged to master until 11-x-y is branched. #### Release Notes Notes: Fixed issues with CORS when making requests from extensions. ::```suggestion await expect(fetch(w.webContents, 'https://google.com')).to.not.be.rejected(); ```::",8198e7eb2f1b193672cf96f0129a9674f4368522::d9e8c189f013736429d8e37c05f927bedee794e9::3c2a474fe6db8f48e0cbd076485ea57359e455a8::aa1269b76507bbfb654af3356deb75f6fa5f0638::9558408cefb1a74c626666405c45f8ede8ae4905::
https://api.github.com/repos/electron/electron,24240,move-mouse-up::master,1,merged,merged/9-x-y::new-pr 🌱::,"#### Description of Change Refs https://github.com/electron/electron/pull/24200. Moved the `mouse-up` handler into `handleClickEvents` which it shouldn't have been. This does not need to go to 8 or 10, only 9, since it's been handled in the backports already (https://github.com/electron/electron/pull/24235). cc @MarshallOfSound #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). - [x] This is **NOT A BREAKING CHANGE**. Breaking changes may not be merged to master until 11-x-y is branched. #### Release Notes Notes: none. ::",33fb73b06fb7f160d1ade41c75609de9434c84f5::
https://api.github.com/repos/electron/electron,23989,fix-session::master,0,merged,merged/10-x-y::merged/9-x-y::,"#### Description of Change This PR ensures that remote webContents (such as devtools and extension background pages) get initialized with `session_` set. Could this be backported to 9-x-y and 10-x-y, please? Closes #23615 Ref #19447 #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). - [x] This is **NOT A BREAKING CHANGE**. Breaking changes may not be merged to master until 11-x-y is branched. #### Release Notes Notes: Fixed no `session` in webContents of type remote. ::Nit: needless whitespace change (and another one below)::",7179b805dedd450e48d1f5d38045630b34e83606::137385902be73fdb6adcdee716986ed4911b4f46::
https://api.github.com/repos/electron/electron,23674,tray-icon-but-i-dont-know-what-im-doing::master,1,merged,merged/10-x-y::merged/8-x-y::merged/9-x-y::,"#### Description of Change In https://chromium-review.googlesource.com/c/chromium/src/+/1820024 Chromium removed the implementation of `Tray` icons we were using on Linux (GTK + Appindicator backed) in favour of their new DBUS backed implementation. However the new DBUS implementation is not production ready and has a decent number of bugs that would prevent folks shipping to prod. * #23448 * #22443 * #23287 This PR carefully restores the original code that Chromium deleted.  Tested so far on Ubuntu and will be testing on other distros shortly 😄 **Note:** I know this looks like a lot of code, but 99% of it is literally just copy-pasting code from Chromium that we had already shipped with for years. The intention is to remove this implementation was the DBUS implementation has achieved production ready-ness which I will be actively monitoring.  In a follow up PR (as this PR is supposed to be backported) I'll add a build flag to toggle between the implementations. #### Release Notes Notes: Restored old implementation of Linux Tray icons to fix a collection of issues where the tray icon wouldn't appear, would be the wrong size or would randomly disappear ::",dda720b337a85508504c5587fbaa7ba760ab34d6::
https://api.github.com/repos/electron/electron,23335,remove-redundant-release-note-items::master,1,merged,merged/9-x-y::,"#### Description of Change In X.0.0 releases, skip PRs that have already been backported and released to older branches. Supercedes https://github.com/electron/electron/pull/23325. This is the same code change but this commit history is cleaner because I footgunned that branch :smiley: CC @jkleinsc for re-review #### Checklist - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: none::",958efb2a9a672448627fc1f0ffe50beede8453db::001092f0d4efe58cd53586b0fbe6ed72c58857e5::0ef0622df1f94f1bcb9da19091879e94a3a348f9::82ee6f56adf98797bfcd239beba3689f10a2fe32::403a957fea1519229fb0bda8cc94c37a7d7eaf07::b41ed77aa04e4dfbf76e20a31f06bc74990907f2::ec4b389ed4c063f548a0022b59e1493430a9f866::
https://api.github.com/repos/electron/electron,23325,omit-old-fixes-from-release-notes::master,1,closed,new-pr 🌱::,"#### Description of Change In X.0.0 releases, skip PRs that have already been backported and released to older branches. CC @codebytere because she's shown interest, but anyone is welcome to review #### Checklist - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: none::What changed here?  Is it something we are differently in our roller PRs?::User error. I was testing this from `master` but should've been in `9-x-y` :roll_eyes: ::Incorrect comment removed in f04d6a5::",62e360b7a048cd32f1e777052b5b3def823d08c8::d3e88b9b9c1e997ca3654bf2e0a6b1b27ed7d2e5::2d534787bb71ba751633f03f7eb5f0ab610727d2::364b94e0e1c6c0e391dfa749d0d7fa65d714527a::d7722956646f34c749c11334a4f5c7504edef1e2::cfdf629417a355bdff1ed994e3c74c324a9096a7::ec7942e8b5025cc748d837dd833642fa652cee6d::ad1f341d7a4f94ba5bcd5f4d38a10fbfb9c0a148::088a8256f90785bf5473c70b6dfcded6b155b39e::f04d6a5e6a2b58c6c0eb8803d5f92f3152730277::b89fadda6d7d3a523c1a1aa3422671d1845919ed::1a6072fd8bc5901df8fb3e27c458d66e602ee59f::9a7d7618434d78625d1c622995b05a5fbec93809::a801601cc7f24f8ff5a48062c4ea128583587b0c::4031f459fd7580ad4fc45ded8564aeaa96bc3b00::2e0d328cfc782187cba9e71c20fbf8770c05e9f6::4692d0b6d2cfa2e62b1e096fadbb5cf0c8f7c0aa::48c586bb7b6f186527ada0f2a4134c2072bc10f1::
https://api.github.com/repos/electron/electron,23247,langs::master,0,merged,merged/8-x-y::merged/9-x-y::,"#### Description of Change This PR aims to fix https://github.com/electron/electron/issues/18829. Please refer to the issue for more details. Add implementations to set user's OS language preferences to `Accept-Language` and `navigator.languages`, on Windows and macOS. This also improves the CJK fallback font selection on Windows. Chromium uses `Accept-Language` to determine fallback fonts on Windows, especially kanji/han characters in CJK. Previously the full preferences set to OS was not given to Chromium.  For instance, when user sets `en-US, ja-JP` to `Accept-Language`, while Chromium chooses Japanese font for kanji text, but Electron chooses Chinese font.  This is because only the first language is given to `Accept-Language` on Electron. This patch is based on the idea given at https://github.com/electron/electron/pull/15532 /cc @nitsakh ![image](https://user-images.githubusercontent.com/29440/80160961-eef3bc80-8609-11ea-9551-ef4b42909242.png) #### Considerations ##### fix or feat? ❓ No sure this a feat or a fix. Might be a fix, and backports would be appreciated as I'm thinking this is a bug for CJK speakers. ##### WinRT API <s>In this implementation, [`GetThreadPreferedUILanguages`](https://docs.microsoft.com/en-us/windows/win32/api/winnls/nf-winnls-getthreadpreferreduilanguages) API is used on Windows. But, I noticed this API doesn't provide the full list of user preferences. Only the system locale (i.e. used for logon screen) and the user locale (i.e. UI used while logged in) are returned. So, how do you think about adding `ELECTRON_ACCEPT_LANGUAGE` environment variable to give the preferences correctly, in addition to this change? </s> ✅ Resolved using WinRT utility in Chromium https://github.com/electron/electron/pull/23247#issuecomment-618269313 #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes notes: Fixed an issue with `navigator.languages` and `Accept-Language` did not fully respect users' language preferences on Windows and macOS. This also improved fallback font selection for CJK texts on Windows.::Can you move the language preferences code into separate files and then reference it here? Like this: ```c++ #include ""shell/common/lang_util.h"" prefs->accept_languages = GetSystemLanguage(); ``` It would make the code easier to maintain, and we might want to reuse the code in other places.::I wasn't sure where to put this kind of code. Extracted: d947ed9e7db679576d92045b7bdfe8254b37f645::would there be issue with fallback if there was a duplicate in the final string ?::Curious if we can remove this check incase its not necessary.::confirmed `navigator.languages`, and `Accept-Language` header would contain duplicated entry; this should have no issue but look strange from end-users maybe?::Cool, thanks for checking. In that case we can leave it in.::",dfbfb3d55e99ffa8d8656b3c7ee63279faff93de::
https://api.github.com/repos/electron/electron,22922,zcbenz-test2::master,1,merged,fast-track 🚅::,Fix the tests of https://github.com/electron/electron/pull/22903 so they do not throw unhandled promise rejections. I have included this commit in the backports of https://github.com/electron/electron/pull/22903. Notes: none::,ddbdbb3b82a62f28aa9fb5dbf66e5bc6ef77512c::
https://api.github.com/repos/electron/electron,22870,cherry-pick/6-1-x/chromium/fd211b44535c::6-1-x,1,merged,6-1-x::,"AudioContext HasPendingActivity unless it's closed An AudioContext is considered to have activity if it's not closed. Previously, suspended contexts were considered has having no activity, but that's not quite true since the context can be resumed at any time after.  This would allow contexts to be collected prematurely even though the context was resumed.  This causes the audio thread to access objects that are possibly deleted. Manually tested against test case from the bug; no issues seen. TBR=hongchan@chromium.org (cherry picked from commit 5efc951230de524c2b6787e25ec651c46f2652b4) Bug: 1023810 Change-Id: I81cc0aff57bf4701b3ef9c36dd72b7e8922af5b9 Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1955339 Reviewed-by: Hongchan Choi <hongchan@chromium.org> Commit-Queue: Raymond Toy <rtoy@chromium.org> Cr-Original-Commit-Position: refs/heads/master@{#724364} Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1969044 Reviewed-by: Raymond Toy <rtoy@chromium.org> Cr-Commit-Position: refs/branch-heads/3987@{#158} Cr-Branched-From: c4e8da9871cc266be74481e212f3a5252972509d-refs/heads/master@{#722274} Notes: Security: backported fix for use-after-poison in WebAudio (crbug.com/1023810)::",d6e5fb4052b027eb43e4e355ce40827406753c46::
https://api.github.com/repos/electron/electron,22869,cherry-pick/7-2-x/chromium/fd211b44535c::7-2-x,1,merged,7-2-x::,"AudioContext HasPendingActivity unless it's closed An AudioContext is considered to have activity if it's not closed. Previously, suspended contexts were considered has having no activity, but that's not quite true since the context can be resumed at any time after.  This would allow contexts to be collected prematurely even though the context was resumed.  This causes the audio thread to access objects that are possibly deleted. Manually tested against test case from the bug; no issues seen. TBR=hongchan@chromium.org (cherry picked from commit 5efc951230de524c2b6787e25ec651c46f2652b4) Bug: 1023810 Change-Id: I81cc0aff57bf4701b3ef9c36dd72b7e8922af5b9 Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1955339 Reviewed-by: Hongchan Choi <hongchan@chromium.org> Commit-Queue: Raymond Toy <rtoy@chromium.org> Cr-Original-Commit-Position: refs/heads/master@{#724364} Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1969044 Reviewed-by: Raymond Toy <rtoy@chromium.org> Cr-Commit-Position: refs/branch-heads/3987@{#158} Cr-Branched-From: c4e8da9871cc266be74481e212f3a5252972509d-refs/heads/master@{#722274} Notes: Security: backported fix for use-after-poison in WebAudio (crbug.com/1023810)::",e35bc8bc964eab102961f53d3934dc5a5d91bb01::
https://api.github.com/repos/electron/electron,22784,add-goma-to-older-branches::8-x-y,1,merged,,"#### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> This PR adds Goma to our older releases.  This is needed so that we can use smaller machines for building on Windows. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: <!-- Please add a one-line description for app developers to read in the release notes, or `no-notes` if no notes relevant to app developers. Examples and help on special cases: https://github.com/electron/clerk/blob/master/README.md#examples -->no-notes ::LGTM. The initial unavoidable 5 second sleep on line 5 looks reasonable; `ensure_start` takes a few seconds to run anyway.:::+1: on invoking build-tools instead of duplicating the implementation here, but invoking it like this means that CI will break if this part of build-tools is ever refactored. What would you think of a build-tools PR that added these things to the explicitly-supported world by adding something like `e fetch-goma`, `e show gomadir`, and `e show gomagn`?::@ckerr sure.  BTW this is a backport from master::",a2b6ce13fa11313767e2388b9557be45162cd0b8::639161df5b02719808a8cf8d052639b4bbfe79a1::
https://api.github.com/repos/electron/electron,22457,extensions-tabs-connect::master,0,merged,merged/9-x-y::,"#### Description of Change Implements `chrome.tabs.connect` extension API for background pages. Since Electron extensions already use `//chrome/renderer/extensions/tabs_hooks_delegate.cc` (see #21779), all that was needed for this feature was to copy the function schema into tabs.json. Electron maintainers, please add the `9-x-y` backport label if you're able to. 🙇 ref #19447 #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Added chrome.tabs.connect extension API for background pages. ::Does this test that the resulting port works (i.e. you can send messages across it)?::It only tests that the port was created, good catch! I'll send a message through to verify.::",ef799bc64f442cfe59d3069653f049c49d1fe246::b3920fc0a39718f90cdcd0d902c5c36a8353ce3c::
https://api.github.com/repos/electron/electron,22455,extension-i18n::master,0,merged,in-flight/9-x-y::merged/9-x-y::,"#### Description of Change Implements `chrome.i18n` extension API for content scripts. For maintainers reading this, please add the `9-x-y` backport label. ref #19447 #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Added chrome.i18n extension API. ::```suggestion ""extension_types"": [""extension""], ""contexts"": [""blessed_extension"", ""unblessed_extension"", ""content_script""], ```::",8ee4073a306cf4d4101da029dbd40e4cab04bbf3::0a2c95078e5d12f8195be12e37f6d2016d4ee970::e150e3206d639f9169d18c0b5dbd18be06fefdd7::f1bfd30b97038539efd9dff0f546eaad5585a3d8::a2448d93c916da43a9132f6bca011c4b0cd34b0b::422b50a00e3adc2eb8000b970107d665a2bbe78d::4b6f053a06e89228fe950f4c9fe6b8e92a3a0980::d3a951fa9480a97f7c95fbde264b0a1493801eeb::
https://api.github.com/repos/electron/electron,22282,only-strip-linux::8-x-y,1,merged,fast-track 🚅::,"#### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> This is a followup to #22257.  When I manually backported that fix, I missed the part that makes sure strip is only run on Linux.  This PR makes sure that strip is only run on Linux. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: <!-- Please add a one-line description for app developers to read in the release notes, or `no-notes` if no notes relevant to app developers. Examples and help on special cases: https://github.com/electron/clerk/blob/master/README.md#examples -->no-notes ::",11f155df6ee6be4d4cad598a402c7faca5720459::
https://api.github.com/repos/electron/electron,22217,fix-bgpage-devtools::master,0,merged,merged/10-x-y::merged/11-x-y::merged/9-x-y::,"#### Description of Change Ref #19447 This fixes DevTools not opening with Chrome extension background pages. - Assign `WebContents` type based on `ViewType` user data. - Manage background page `WebContents` to enable opening devtools. Electron maintainers, please add `9-x-y` backport label. TODO: - [x] Fix `ExtensionHost` crash on shutdown; likely related to `managed_web_contents` deleting `WebContents` instance. - [x] Fix crashes? or is it just flaky tests? #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: no-notes ::",b021bc1dca1c5c9e24c55c89f49417439e13a197::
https://api.github.com/repos/electron/electron,22176,rename-node-bindings::master,1,merged,,"#### Description of Change Followup to #21986. Missed some. This one is smaller, probs doesn't need to be backported. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes Notes: none::",f333d94130bb9a60cbbea5a41049aff6484548ac::
https://api.github.com/repos/electron/electron,22160,revive-osr::master,0,merged,merged/8-x-y::merged/9-x-y::,"#### Description of Change This PR reintroduces offscreen rendering on Windows, macOS, and Linux. It should be relatively backport friendly for `8-x-y` and `9-x-y`. #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Enable offscreen rendering::",955d31de2379c2704470a08347858b722345d2cf::
https://api.github.com/repos/electron/electron,21473,robo/fix_devtools_source_maps::master,1,merged,merged/8-x-y::,"#### Description of Change Fixes file:// based source maps failing to load in devtools with network service. Also backports fix for improvement in loading large source maps. Backports https://chromium-review.googlesource.com/c/chromium/src/+/1525270 Backports https://chromium-review.googlesource.com/c/chromium/src/+/1852212 #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: fix source maps not loading in devtools with file scheme::",676602416b0f2be6a65e206a42984b93d8cc067d::
https://api.github.com/repos/electron/electron,21236,wip-window-open::master,1,closed,semver/minor::wip ⚒::,"#### Description of Change Depends on #19703 Commits are atomic — The two ""easier review"" commits are meant to be ignored, as they're file moves. The `feat: add webContents.setWindowOpenOverride API` commit contains the actual changes. This is an implementation of the draft spec defined here: https://github.com/electron/governance/pull/208. A few minor things had to change based on ease of implementation: notably the override handler passed to `setWindowOpenOverride` will receive fewer arguments than initially anticipated. This is to avoid patching. I'm unsure of the process — should I go update that document? Is that going to be a source of truth? Read the draft spec for full rationale, but a quick summary: this adds an API, `webContents.setWindowOpenOverride`, which 1) addresses a fundamental flaw in our current implementation: the user can only cancel a window while it's initializating 2) improves the ergonomics of an API burgeoning in importance. Code is better than words. **The old way:** ```javascript // main.js mainWindow.webContents.on('new-window', (event, url, frameName, disposition, options, additionalFeatures) => { // to cancel: event.preventDefault() // or... // to customize: Object.assign(options, { frame: false }) event.newGuest = new BrowserWindow(options) }) // renderer.js window.open('about:blank') ``` **The new way:** ```javascript // main.js mainWindow.webContents.setWindowOpenOverride({ url, frameName }) => { // to cancel: return false // or... // to customize: return { frame: false } }) mainWindow.webContents.on('did-create-window', (win, { url, frameName, options: browserWindowOptions, disposition, additionalFeatures, referrer, postData }) => { myApp.subscribeToWindowEvents(win) }) // renderer.js window.open('about:blank') ``` **Alignment of code paths** Another major pillar of this PR is the continuation of the work that @brenca was doing in #19703, where he more closely aligned the `nativeWindowOpen` and `BrowserWindowProxy` code paths. Before his work, it was unclear if and why things were different between them. Now they are just about entirely the same. To that end, I moved the BrowserWindowProxy-specific pieces to their own file. **Code cleanup** Finally, the code was ripe for cleanup and relatively hard to understand without reading several entire files. I tried to break out logic into contained functions and document the things I'd learned while puzzling over how the code worked. I think the most important piece of that was understanding how the browser options are created — now the precedence is much more clear. **Deprecations** I'm proposing the following deprecations. I'm not really sure the best way to go about deprecations in behavior, so please advise. - `new-window` event - This event is problematic, as described in detail in the draft spec, and is no longer necessary. - `additionalFeatures` - AFAICT, this is an Electron creation. Its inclusion also forces our window.open implementation to go against the html spec, as it says bare keys should be interpreted to be value `true`. - Parent option inheritance - currently, most options are inheritable from the parent if the window.open doesn't specify otherwise. This can be annoying for consumers, as it forces them to find the inverse of parent-specified options when they create the new window and broadly doesn't align with the paradigm laid out in the rest of our API in creating windows. It's much easier for a developer to reuse BrowserWindowConstructorOptions if they want similarly styled windows than it is for a developer to find the inverse of the parent-specified options should they choose to diverge. Note that these are not removed in this PR as it's designed to be backportable. **Snapshots** Because this is rather heavy refactoring of the code underlying `new-window`, I employed snapshotting to prove to myself (and you, the reviewer) I hadn't broken things. I'm not wed to the idea that they actually are merged, but I do think they're generally useful. There are a couple small changes in the snapshot (which you can review in the commit `test: update new-window event snapshots` that I found to be permissible and in my mind represent ""bug fixes"" in the API. I recognize there is a blurred line between bug fix and API change so I want to call it out so we don't break applications in a minor bump. The most significant: previously, the `show` option was inherited from the `parent's visibility` (not their `show` property,  which could be different). I think this is incorrect behavior. If I open a window and don't specify show=false, it should be shown. However, I am willing to budge on the inclusion of this change in the backported version. <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Introduced a new API for customizing renderer window.open() creation. ::See the PR description for this change — I believe old behavior was wrong.::I don't think this was a necessary requirement? Happy to be shown that I'm wrong and reinstate the functionality, but I don't see how cycle prevention is helpful.::This was an internal implementation return value leaking out.::Note the wrong type here, not that it matters for the BrowserWindow constructor (as it will use x, y)::Note the bug from incorrect boolean conversion of an integer key.::Note the wrong type::Useful for emulating `_.pick` / `_.omit` via destructuring, as done here: https://github.com/electron/electron/pull/21236/commits/051706e4a8b620f46b3e7aa1f2096806e3b1653f#diff-39ff6eb84462bf6b40517f852555ac6dR262 ::",ef49e36bbefb0554394bdb0c5ff1e5ba899ec7de::54e48132dc0ed42f77f4f96271ef7890ae600d3b::d274231e934d57e001362d6e4c433411e12637ac::ca01bfd23772a3cb2504a88fbbdf5c0ed519147d::f7f92fbcdb1a96234e0ad4c31b7e6d3ae1c995bc::5e8de683bd6b5fe8fc46a2705684137dd92f2b96::27c736ff75138843426572b2d1f53677471756a6::3fda2a052064b77715de4fab90edd2821723fe36::e82794cf7f52d392bab8973f50ed3043aeb7bc49::cfe51927261ca0b8f6c650d09155dbf87b4dd231::65e36dee7c586ae1648e9266c737ded2e5ed27f7::ab52be53aa8943dd01aaf407f5635f7f5b01126d::b8b72e3999398df6f65aec82a75d195583f611e6::fd0ca40054bdcc455753829237840c2a29795f55::7bdd60c31d691bf5cec0889ef09f2555aef20218::051706e4a8b620f46b3e7aa1f2096806e3b1653f::8451458bbd7dcfd79e71667f5140c80e84a79177::60c398bfa39baafa7f9af20c85a625cf284ea6d1::e57869bb7ae1aeb8018a58654d1caa150510b935::281eefb9a53f8f1f5f2ac815e809d725817e4f34::28e8fc8dda65a3cee97b41b64a96416fb017dad8::db0a456dffe6386f9fcd015da4aa7f67894badd8::
https://api.github.com/repos/electron/electron,20965,mas-patch-remote-layer::master,1,merged,merged/8-x-y::merged/9-x-y::,"#### Description of Change Close https://github.com/electron/electron/issues/20027. This PR disables following private macOS APIs used in Chromium: * `CAContext` * `CALayerHost` Chromium has 2 ways of rendering on macOS: one is using official `IOSurface` way, and one is `CARemoteLayer` API. The `IOSurface` way is used when software compositing is enabled, and when the remote layer API is not available. This PR forces using `IOSurface ` even when remote layer API is available, it essentially behaves the same with passing the `--disable-remote-core-animation` command line flag. More information can be found at https://bugs.chromium.org/p/chromium/issues/detail?id=312462. * `NSAccessibilityRemoteUIElement` All related code using this class are disabled. It would affect accessibility when remote layer API is used, but we should be fine since remote layer API is disabled too. * `NSNextStepFrame` * `NSThemeFrame` Chromium overrides these private classes to implement custom frame. All related code are disabled so custom frame would not work. Since in Electron we only support standard frame and simple frameless window, we are not affected. * `NSURLFileTypeMappings` Chromium uses it to guess mime type from extension names, the iOS version of Chromium does not use it. The fallback detection should be enough for us. #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Fix Electron apps getting rejected to Mac App Store.::why are we excluding them here ?::`remote_accessibility_api.mm` implements `ui::RemoteAccessibility` which uses private APIs, excluding it is simpler than commenting out the whole file.::But we also seem to be patching them below is that needed ?::In theory it is fine leaving `remote_accessibility_api.h` untouched, but by commenting out the declarations defined in `remote_accessibility_api.h`, any other file that uses the private APIs would trigger compilation error early, so we won't miss things when updating/backporting the patch.::",3344ad99a43efe1ecf8240ea5689c2215ed04991::a088dac84ca68cd59222ba86729a4bd54a056085::
https://api.github.com/repos/electron/electron,20827,patch-1::master,0,merged,documentation :notebook:::,"#### Description of Change Changed invalid `bash session` language tag by `bash` for fixing docs generation. These change doesn't need backport due development docs takes from master. // cc @electron/wg-ecosystem #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: no-notes ::```suggestion ```console ```::```suggestion ```console ```::```suggestion ```console ```::```suggestion ```console ```::",f1d741a9cb06cd64be8f47661d6b6703bcf0034f::
https://api.github.com/repos/electron/electron,20408,fix_libuv_fsevents::master,1,merged,,"#### Description of Change This reverts the patch from https://github.com/electron/node/pull/100 which never got merged due to reasons outlined in https://github.com/libuv/libuv/pull/2313 Instead adds new patches that backports https://github.com/libuv/libuv/pull/2459 and https://github.com/libuv/libuv/pull/2460 Based on https://github.com/nodejs/node/issues/29460 Refs https://github.com/microsoft/vscode/issues/81516 #### Checklist - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: fix fs.watch behavior change in node >=10.16.0 ::",6003f0ce596d6c28c3500f133d16b2b8c64ad6a1::c2b5b8972bc0626e16a2ff89f52861af9cf7b1b6::
https://api.github.com/repos/electron/electron,20307,context-bridge::master,1,merged,semver/minor::,"#### What is this? This PR adds a new renderer-side module called `contextBridge` that allows you to expose an API synchronously from the isolated context to the main world (and optionally back again) to achieve the following goals. 1. Make it really easy for folks currently doing the `window.api = {}` pattern to enable contextIsolation.  The migration becomes `bindAPIInMainWorld('api', {})`. 2. Make it possible for synchronous APIs to exist between the main world and the isolated world.  Some app logic is heavily tied to being synchronous and rather than ask folks to refactor their entire app we can just make this possible. 3. Kind of tied to (1) this would solve the ""developer experience"" issues we briefly touched on at summit around enabling contextIsolation.  Once this is in, working and tested enabling `contextIsolation` by default no longer seems like a daunting task. #### How? The docs outline a lot of how this works from a users perspective so I'd recommend reading those.  From a Behind The Scenes perspective it is all implemented using our current converter and binding infrastructure. Primitives / Values get converted to `base::Value` and then converted back to `v8::Value` but in the other context.  Functions get stored as `v8::Global` and then proxied into a bound cpp method that calls the original function in context A.  Then does the primitive move trick and moves it to be the return value for context B.  Their is special logic to proxy promise return values but you can see that both in the docs and the source code. #### TODO: * [x] Freeze the API object that gets bound to ensure it is immutable in the other world * [x] Document that the API object is frozen and immutable * [x] Function arguments need to be proxied * [x] Only expose `debugGC` in a testing build * [x] Code clean up * [x] CI Tests that it works * [x] CI Tests that we don't leak prototypes across the bridge * [x] CI Tests that sending functions isn't a memory leak * [x] Naming? Main World vs Main Process -- How do we make that clear? * [x] Prevent recursion destroying us. * [x] Keep a weakmap of objects as we traverse, use already proxied versions if we can * [x] Throw an error if we handle a thing with a recursion depth >= 10000? * [x] Use the V8 serializer - Copy from @nornagon PR and resolve conflicts with whoever lands first Notes: Added new `contextBridge` module to make it easier to communicate between an isolated context and the main world::I think since contextIsolation is mentioned in a BW constructor option and isn't _super_ obvious from just a link to `browser-window.md` that it would be worthwhile to lower that barrier and re-copy it here or move it into a standalone document we could link to::It'd be helpful to add a brief explanation of what a world / context is, for example the JavaScript globals being different while the DOM remains the same.::You could also enforce a compatible api with something like: ```ts type Primitive = | string | boolean | number | bigint | symbol | null | undefined; type TransferableType = Primitive | Promise<Primitive> | Array<Primitive> | void; interface ProxyInterface { [k: string]: TransferableType | ((...args: Array<TransferableType>) => TransferableType) | ProxyInterface; }; ```::Will `undefined` / `null` work once we swap to the new serializer?::How bout Arrays containing promises 🤔 ::If `bind` already exists, I assume we'll just override it.  We may want to error / warn if that happens. > You can use this method by providing it a single `api` object in the same structure as the original `bindAPIInMainWorld` I'd use ""same limitations"" rather than ""same structure"" since structure could also be interpreted as ""the same keys and values""::Are there also more details that we need to mention around different frames?  Don't fully remember the distinctions::This limitation is gone now right::@samiskin Unfortunately due to technicaly reasons this type is not the one exposed to end users.  Typing this part strictly wouldn't be all that helpful. That type would be correct though if we can get it into the type generator::Yup 👍 ::Can you use `gin` APIs in this file? `mate::Dictionary` is replaced by `gin_helper::Dictionary` in `shell/common/gin_helper/dictionary.h`. Other converters for gin are defined in `shell/common/gin_converters`.::@zcbenz My intention is to request a `6.1` and backport this PR.  To avoid churn I chose to use `mate` in this file to ease the backport.  I'll refactor to `gin` once it's landed 👍 ::This is reasonable, I'm good with `mate` in this file then.::`v8::Global` resets itself automatically on destruction, so we do not need to do manual reset here.::Not a big issue but we can avoid duplicate lookup: ```c++ auto it = store_map_.find(render_frame); if (it == end()) ... return it->first; ```::The `util::Promise` can be allocated on heap, so `UnsafePromiseHandle` should not be needed: ```c++ auto* promise = new util::Promise<v8::Local<v8::Value>>(isolate); auto then_cb = base::BindOnce([](util::Promise* promise) { promise->Resolve(); delete promise; }, promise); ```::what about calling it just `bindInMainWorld`?::Updated to `exposeInMainWorld`::delete `default_app/index.ts`?::I'm not sure this is better than just hooking the `DOMContentLoaded` event::Add a short paragraph explaining why the reader might want to use this. What problems does this solve?::```suggestion An example of exposing an API to a renderer from an isolated preload script is given below: ```::It's pretty confusing to have ""Main Process"" and ""Main World"". Perhaps we should use a different word for the world where the page scripts run?::Again, ""Main World"" vs. ""Main Process"" seems like it might be unnecessarily confusing. Is it too late to change the terminology we use for main world?::are `BigInt`, `Map`, `Set`, `ArrayBuffer`, etc. allowed?::Is there a particular reason to do this rather than exposing a proxy?::```suggestion An example of a complex API object is shown below. ```::Maybe also include an async function example here? ```suggestion myPromises: [Promise.resolve(), Promise.reject()], anAsyncFunction: async () => return 123, ```::I don't think `JSON.stringify` / `parse` will provide any performance benefit if you're using the v8 serialization algorithm. also, ```suggestion Electron will attempt to proxy any object, array or other structure you provide the `contextBridge` module.  This includes method parameters, method return types, etc.  This can be quite costly when sending large data blobs.  If you need more performance out of the bridge and you are sending data, no methods or dynamic content then we recommend you `JSON.stringify` and `JSON.parse` the content across the bridge.  E.g. ```::```suggestion Your mileage may vary and before you start stringifying everything we recommend that you measure the speed of both to see which one works best for you. ```::is this always turned on/off at the process level? won't this be wrong when `allowRendererProcessReuse` is enabled?::this doesn't seem to be referred to anywhere else, can it be removed?::```suggestion return internal::IsTrue(GetHandle()->Has(context, v8_key)); ```::Why is it safe to cast to `Object` here? Can you make this function take a `Local<Object>` instead?::use `base::NoDestructor`::This doesn't recurse into `Array`?::This will overflow the stack and crash if the object is cyclic, or deep enough. Which I suppose is the fault of the app developer, but still seems undesirable...::Won't there still be references to the store from `FunctionLifeMonitor`s hanging around here..? Or do the v8 objects get cleaned up before `OnDestruct` runs?::```suggestion // Proxy promises as they have a safe and guaranteed memory lifecycle (unlike ``` also the 'unlike functions' bit isn't true::any particular reason to introduce a new scope here? I think the behavior will be the same if you just drop these curlies.::What happens if the RenderFrame is destroyed before the promise resolves? Does this leak?::Once https://github.com/electron/electron/pull/20214 lands, errors should be serializable through the V8 value serializer.::I'm not sure I understand this sentence (""deep functions get proxied or arrays of promises""...?) Could you rephrase?::This allows the main world to crash the process through overflowing the stack by passing a deeply-nested array to a bound function.::Throwing an error seems reasonable to me::Perhaps define a struct for this?::Should we [sanitize errors](https://cs.chromium.org/chromium/src/third_party/blink/renderer/bindings/core/v8/sanitize_script_errors.h?q=sanitizescripterror&sq=package:chromium&g=0&l=10)?::When are the keys for an object integers?::Why take a `mate::Dictionary` here rather than a `v8::Local<v8::Object>`?::```suggestion CHECK(frame); ```::```suggestion auto* render_frame = GetRenderFrame(api.GetHandle()); CHECK(render_frame); ```::No need for the extra scope.::instead of disabling lint, just qualify the function name::Better is questionable (it removes any race but minimal benefit) I'm half using this as an example of `contextBridge`::Currently no, that depends on V8 serialization afaik::Proxy'ing getters and setters is infinitely more complicated and may result in Hidden Cost issues where an object gets passed around until it isn't clear it's a magical proxy object.  Then when folks use `a.b = myBigObject` it's quite slow because it gets serialized twice. Opinionated but IMO it's better to remove that chance of the Hidden Cost.::> I don't think JSON.stringify / parse will provide any performance benefit if you're using the v8 serialization algorithm. We only use the V8 serialization algorithm for root nodes of the tree.  Anything in the middle is traversed by Electron's logic and proxied through Electron.  I benchmarked it and it's ~20% slower than using V8 serialization for everything but it's required in order to properly proxy functions and promises and such.::I think @miniak is doing work to move these options from command line flags and into webprefs but until that lands all the code in Electron has the same issue.::I'm going to use it in tests 👍 ::> Or do the v8 objects get cleaned up before OnDestruct runs? This is the case (at least from my own testing).  The context is destroyed before the frame is destroyed::My understanding is that the context is destroyed before the frame is destroyed, when the context is destroyed all V8 objects are GC'ed so this callback that is bound to V8 will be GC'ed which will then release everything else.::Rephrased.  Basically we can't treat arrays as values as they may contain deep functions or promises::Any recommendation here?  Limit the max recursion to like 100 or something?  I think that is what mojo does::I can't remember the case where I need this, let me test some things and maybe remove it::We're just gonna insta-wrap it anyway, felt easier and means we only wrap it once::One of the last remnants of a copy-paste from somewhere else::What's wrong with the pointers here? Haven't used `NoDestructor` in our code before::Arrays are objects with keys, this freezes deep inside arrays::Fixed 👍 ::These errors don't flow across origins right? Technically it's the same origin but a different context::Added a test, double checked we need this.  ::Confusing -- Yes Not sure what the alternative is though, we already deviated naming with `browser`/`main` process.  I don't want to invent a new name for worlds as well::I mean to use it for the map itself. We use `base::LazyInstance` elsewhere, but Chromium recommends using `NoDestructor` over `LazyInstance`: https://cs.chromium.org/chromium/src/base/no_destructor.h?q=base::nodes&sq=package:chromium&g=0&l=37::I think there are a couple of options. 1. Use a custom stack and a loop, instead of recursion. Then you have to run out of memory to crash the process, which JS can do anyway but which is a lot harder than running out of stack. 2. Detect stack overflow and throw a `RangeError: Maximum call stack size exceeded` exception. The `ValueSerializer` class in V8 does something like this (look for calls to `isolate->StackOverflow()` or `STACK_CHECK`).::The reason for the errors not to flow across origins is because you can inadvertently leak information through an error, and information isn't supposed to flow across origins unintentionally. I think the same is true of errors from the isolated world, right? I'd hesitate to say that the preload content has the same origin as the page, given the code comes from somewhere else and is controlled by something else. (I think in Chrome the isolated context is treated as having a `chrome-extension://` origin..? Maybe?) I suppose it's not as much of a concern as cross-origin stuff, because the error was generated in the same process as the page, so if the page really wanted access to that information, [it could have it](https://spectreattack.com).::I'm not sure I understand this: > We only use the V8 serialization algorithm for root nodes of the tree. Anything in the middle is traversed by Electron's logic and proxied through Electron. Can you rephrase?::FWIW I left this running on a thing nested like a million times and it didn't crash.  Not sure how deep it has to go for it to actually overflow 🤔 ::> serialized twice I'm not sure I get what would be serialized twice unexpectedly here? I was imagining a read-only proxy layer, so that updates in the isolated world are reflected in the main world. But perhaps that's enough of an edge case that we should go with the simpler option for now :+1:::Not sure what you did but here's a fiddle which crashes the renderer: https://gist.github.com/57c3730ec8bd3f170ca0a17e2b8fbdd7. Crashes at around ~50000 nested arrays for me.::Discussed: We're going to stick with Main World::Discussed: We're going to stick with Main World::I don't think error santization is what we want, partly because of the whole ""they're kind of the same origin"" and also because of this: > But in the promise unhandled rejection case error existence is hidden when kSanitize is specified. I.e. promise rejections are not supposed to be transferred when error sanitization is used.  That isn't that helpful for a bridge like this. I think the current measure of stripping the stack trace and only transferring the message hides enough information for now.::I also don't think ""main world"" is Good. Is there record of your discussion so I might change my mind or argue further?::Will this only ever be preload -> ""main world""? This line (and the name contextBridge come to think of it) suggest that you can expose to arbitrary contexts, which, as far as I can tell, is not true.::nit: I think we can do better than `apiKey`, which is avoidably loaded. I'm having trouble envisioning when a consumer would want to expose multiple API objects on `window` in the main world. It seems more likely that they'll want to expose a single object under one key, almost every time. Would it make sense to include a reasonable default and make the API slightly simpler? Maybe a signature like: ```ts contextBridge.exposeInMainWorld( api: { [key: string]: ContextBridgeSerializeable }, name?: string = 'electron' ); ``` And your example becomes: ```ts contextBridge.exposeInMainWorld({ doThing: () => ipcRenderer.send('do-a-thing') }) ```::preload -> main world and main world -> preload (bi-directional) The code in theory could also bridge any worlds but currently it's only intended to support a bridge between these two.::I've got a few use cases in mind for exposing multiple things it helps in tests + actual apps might want to use it (including us 😄 ).  Not sure I want to standardize `window.electron`::why move this to the preload script if the code can run just fine in the web context?::I get that we want to use the new API, but that's only strictly necessary for getting the versions. On the other hand that logic is also default-app specific... OK, this at least moves the code into a single place :)::Minor: This shouldn't need explicit namespace qualification.::can these new methods be added to `gin_helper::Dictionary` class since this class will go away soon.::We should probably eliminate `RejectWithErrorMessage` utility in favor of this generic one.::Better to convert the utility to gin namespace ?::can be a `const` function::`pair_` => `pair`::can use `base/containers/linked_list.h`::`gin_helper::Dictionary`::would be better maintain consistency with naming to avoid confusion, for contexts the variable can end with `_context`::its better to block scope to avoid any compiler optimizations here since we clearly want this call to execute after entering a context scope. ``` v8::Context::Scope scope(); { // scope related operatios. } ``` also in other places in this PR.::naming can be `source_promise` , `proxied_promise`::Can you try upstreaming this utility to `v8.h` , manually tracking this variation everytime is not good. Maybe upstream can suggest other alternatives to test this.::It shouldn't, but it does 😢 ::Outlined above when talking to @zcbenz this PR is written for easy backporting (so it uses native mate).  Once this lands I'll follow up and migrate it to `gin`::I actually prefer `RejectWithErrorMessage`.  It enforces the pattern that we reject promises with errors, the generic one let's people to the _wrong thing_ which isn't great IMO.  If I could get away with it I wouldn't have added this helper but we need it 😢 ::Same comment as above RE `mate` and backporting::Same comment as above RE `mate` and backporting::what about `Date`, `RegExp`, `ArrayBuffer`, `ArrayBufferView`? those are now natively supported by the IPC payload serializer. It would be nice if they were supported here as well.::maybe reference https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm?::Those are already supported, just need to put them or structured clone into this table::```suggestion `Function` values are proxied to the other context and all other values are **copied** and **frozen**.  I.e. Any data / primitives sent in ```::LOL! 😆::Given the change to use SCA for IPC is this still an issue?::```suggestion // array so that functions deep inside arrays get proxied or arrays of ```::Should this be removed?::Nope::Yeah can do 👍 ::The `promise_util` module also has a `Reject(void)` util, so I don't think it enforces this rule in a hard way, but nevertheless doesn't hurt to have another utility.::This didn't get addressed...?::Try this, copy / move semantics did not play nicely together.  This code is clean enough so gonna stick with it for now.::accidental `only` change ?::Whoops::These aren't really ""instance methods"" because there's nothing for `contextBridge` to be an instance of ```suggestion The `contextBridge` module has the following methods: ```::We should update this to point to SCA probably.::nit: can we invert this? ```js if (binding._debugGCMaps) contextBridge.debugGC = () => binding._debugGCMaps({}) ```::This should be `base::LazyInstance` or `base::NoDestructor`::nit: ```suggestion return object->IsObject() && !(object->IsNullOrUndefined() || object->IsDate() || ```::```suggestion return arr->IsArray() && !arr->IsTypedArray(); ```::`kMaxRecursion` is 1000, but this error message states 10x that::Is there a technical reason not to do this or is it just sort of a bad idea? If a user wants to do this, they can easily do it: ```js contextBridge.exposeInMainWorld('_myFakeLocation', {...}) webFrame.executeJavaScript('window.location = _myFakeLocation') ``` so it seems a bit weird to throw an error here.::How do objects get removed from this map?::They don't, they're all weak references so the underlying object is not retained::It's done in the current way so that typescript understands what is going on without `any` casting::I swear I did that, must have pushed over it.  Will do::I deliberately kept these as two separate checks to make it cleared to the reader that we first care if it an object at all and then we care what type of object. The compile will optimize this down for us.::Same as above, this is done for readability and consistency ::> Is there a technical reason not to do this or is it just sort of a bad idea? Overriding some globals will throw errors and also it's kinda a bad idea.  Stopping users shooting themselves in the foot or at least making it harder was important here.::So this map will get bigger every time a contextBridge function is called? that doesn't seem good.::Counterpoint: if a user exposes an API at a key that isn't currently present on `window`, but later becomes present due to a new Web API, their app will break for no good reason. I get the idea of trying to help users not shoot themselves in the foot, i'm just not sure the juice is worth the squeeze here.::Further counter point, wouldn't you want to know if you were suddenly overwriting a new web API that any one of your thousands of dependencies could be using?::I made a new object life monitor to track the keys and clean up as things get GC'ed.  Memory impact was small before but this is self-cleaning now 👍 ::i thought i commented on it before but it seems to have gotten lost; can we use a struct for this instead of `std::tuple`? ```suggestion struct FunctionContextPair { v8::Global<v8::Function> function; v8::Global<v8::Context> context; }; ```::here too ```suggestion struct WeakGlobalPair { v8::Global<v8::Value> value_in_isolated_context; v8::Global<v8::Value> value_in_main_context; }; ```::",5c4c9d56afd963f44c4c6a9c76f90c312b468913::64fa6f33edf10e3113849e7f2a257f9ca26cb023::4b79d73debc9162a7988683ce90bbb012239f4a8::50c3dfdafb9972338f797fbfb50186b3f5e7335a::4fe3eb6bbf2eb48379448ba3c3c68f111e19c458::1104711b3ca2d1dc04e86b5305c66f66ced44a77::f308827207bfab3be024c72034ffdbf08323fcbb::291e71e7504f6b56eb2b2a5fa0a826400a4595b3::dc170d458e2cad86b2117d7f87e50cc153fec85d::e897664c4fe8627bb1bbcb791c5c48b47c470ecb::7d652be3062d34b416ec4f232e61745505617f7f::07a87bc07923aec849de73dfe1e7b025ec98df39::fe23ca3c22fceded580e63c55f2721756971ea58::1f9312ac844e2531a1ba6fd2394ab9345e699f8b::cce347cd2e6b8c33eeb4d453dc699e0ca4370782::c1d1ae0fb06f72f2bbd4a59a86beb919a2fa2708::8ad78c0f760ef1cac3ae842d7e873e1a452602ae::403cb0e33abb471ca6ca44a38fff8282cdb9aa5c::de678018cb3e01a43ee234e24df0d2fa3564b4f2::d568dac812d8218457b690f1100344e68f431e95::a4339050a80464939270a66bae4040f2f667ac93::1fb7e4d6e752268755797542c6e0bd2ff0177ed7::42c31cb65131bdf981b718e0ef3241dec68f792f::2b9cbf2b6637b26191b2492a56f6a9528c5b6b5e::8573d0f9a7a7bae19d5b9a09b6cd065b1ff22282::8868b768b537f32f1ed9b93ceff39ce37841767b::ed8a8c2e0266de4436215cd58ded62f85a4508a3::c57c8ae7a478827f078b96b58b3bf55423209992::7306cfeb22efac1162e36f13c37e5310f8d35d0a::03c1cd97c241ac6a6ddbcc7463abd4adc0d904e9::3c77df063b68eec6f5759a47dad7a62ce47388a4::bb41a56d22693934f8773d995a1c83453d0b153f::785bc2f60eac103a18979a8ab6d7da470a4aa56b::33b598d3d2f8bbedd89c4666ce793b2e6909effb::6b05ca038bb5e5ca403d4275b59b80a7def32867::b7b23aef2e6b18f4d0e3ab01cbfae003bc92968b::7aa9d8063e8bec85ed007cc0e1d42b0dbcbb5c69::5a5548e15f286613f649dd9ef02f2e3f5b5d49c6::55bbdac597bc7ea427d20bfebaf9f73e9248881f::84598b8869096b00dffaeb304cfa370c1997f9a1::7913f52fc950da6d793b9ab166af863bc286c2fa::a4a5af167a6a1430ec29240530c67987820673ef::4475a88a6bf92ad2376b9652760117f752ad8d09::
https://api.github.com/repos/electron/electron,20232,fix-popup-bounds-offset::master,1,merged,,"#### Description of Change * Fix a popup positioning regression that caused the embed offset to be lost. Looks like this regression is pretty new from #18760 and doesn't need any backport. :tada: * Silence a minor clang-tidy warning about implicit type narrowing from int to float. This isn't a big deal, but the changed code is also easier to read. CC @brenca #### Checklist - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Fixed the position of popups being created over embedded content.::",61c93d5043db3c64b138b2af6476b9cf1781f50c::9e1968d7fa4e53387c2e15256d7eb53f81b18255::
https://api.github.com/repos/electron/electron,20010,fix-gtk-msgbox-button-i18n_5-0-x::5-0-x,1,merged,new-pr 🌱::,Manually backport #19904. See that PR for details. Notes: Fixed i18n of GTK messageboxes' stock buttons.::,fa044dcd5ef7975672e9ccd78bb85d8c5135f087::b2f53fa1afda3b76abd666e8efff320984ba67ef::25ebb0eddd54b05cf2caeec38d8ea34217c84236::
https://api.github.com/repos/electron/electron,19958,fix-parse-extern-windows-debug-build-6-0-x::6-0-x,0,merged,new-pr 🌱::,"#### Description of Change Manual backport of https://github.com/electron/electron/pull/19876 to `6-0-x`, since an automatic backport was not possible. Applies a patch to node. Externs node::options_parser::Parse implementation for node::DebugOptions to fix the Windows Debug build. This fixes https://github.com/electron/electron/issues/19291 for `6-0-x` too, allowing Debug builds on Windows. cc @codebytere cc @MarshallOfSound #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes Notes: no-notes::",f4c4385fb43ca82f008ee13af8665e0aa3abad47::
https://api.github.com/repos/electron/electron,19886,brenca/unresizable-window-sizing-fix::master,1,merged,,"#### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> This is a revert of #8047, the issues mentioned there are not reproducible after the revert (in fact #7951 resurfaced, and this fixes that). Since the issue mentioned in the comments (#2498) is about frameless window sizing and the PR I created to improve that landed in `6-0-x`, I'm only backporting until that to make sure not to re-introduce the original bug. Fixes #13043. Fixes #16900. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Fix a bug where an unresizable window would shrink when restored after being minimized on Windows.<!-- Please add a one-line description for app developers to read in the release notes, or `no-notes` if no notes relevant to app developers. Examples and help on special cases: https://github.com/electron/clerk/blob/master/README.md#examples --> ::",eb31741071e14357e4876f9c29f95e4fdaf86d7f::
https://api.github.com/repos/electron/electron,19872,fix-apply-patches-to-work-in-python3-too::master,1,merged,,"#### Description of Change Update the `script/` so that `apply_all_patches.py` runs in both python2 and python3. * when iterating through the directories containers, replace use of `dirs.iteritems()` with `dirs.items()` because the latter exists in both. (Discussion: there are [slightly faster](http://python-future.org/compatible_idioms.html#dictionaries) alternatives to `items()` on python2, but since we're only dealing with a few folders, they're overkill) * `Popen.communicate()` takes a byte array in python3, so when using it in `script/lib/git.py`, send `patch_data.encode('utf-8')` rather than `patch_data`). ([Discussion](https://stackoverflow.com/questions/48169667/how-to-handle-subprocess-popen-output-in-both-python-2-and-python-3)) * When reading patches from a directory, use `codec.open(filename, encoding='utf-8')` to ensure the previous line item's encoding will succeed. ([Discussion](https://stackoverflow.com/questions/10971033/backporting-python-3-openencoding-utf-8-to-python-2)) CC @alexeykuzmin @nornagon #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: no-notes::",ed6b20bf9f3ead927778bb331f56858b9d91b5f1::
https://api.github.com/repos/electron/electron,19760,fix-i18n_6-0-x::6-0-x,1,merged,semver/patch::,Backport of #19756 See that PR for details. NB: trop failed so this is a manual backport. CC @codebytere #### Release Notes Notes: Fixed i18n of GTK dialog buttons.::,32ce94d1f4e6ee1b4bd059ba8c4e274702ed34a2::
https://api.github.com/repos/electron/electron,19404,fix-6-0-x-lint::6-0-x,1,merged,fast-track 🚅::,"#### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> Manual backport of #18607. The lint job was failing on CI in 6-0-x because we were using npm instead of yarn.  This PR changes our CI lint job to use yarn. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: <!-- Please add a one-line description for app developers to read in the release notes, or `no-notes` if no notes relevant to app developers. Examples and help on special cases: https://github.com/electron/clerk/blob/master/README.md#examples -->no-notes ::",082247827ccda5cf2151042fc83ecc21ff87acda::1a06653051ddea64fbfdd5f74e3850e0e9754202::
https://api.github.com/repos/electron/electron,19213,intern/revert-regression-bug::master,1,merged,,"#### Description of Change Fixes #19124 Reverts #18995, which caused a regression (#19124). According to our discussion in https://github.com/electron/electron/pull/19128#issuecomment-509439237, it would be best to revert the fix for now, especially since this regression has already been backported into 4.2.X, 5.0.X, and 6.0.X. For now, the test that I wrote in #18995 has also been commented out. cc @codebytere @zcbenz @nornagon #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Reverted change to focus behavior that broke Character Viewer support on macOS. ::i'd rather just delete this for now; this is what version control is for :) the test commentary you added is also what's causing the bp failure; if you just delete the test all three backports will be clean i believe.::Will do!::",1ff8f32c1d92ebeeeb14c6df265f658b81a0ac30::9537867fa144ac589c354fb78be1c762749d6420::9ff37ca9562e3ad92cadee3f96e3c3e933ff9664::484d65d528084f72fea1a86194a8fa8ac2aca9d7::
https://api.github.com/repos/electron/electron,19144,fix_OSK_win_patch::4-2-x,1,merged,4-2-x::,"#### Description of Change Backports the following CLs: https://chromium-review.googlesource.com/c/chromium/src/+/1194406/ https://chromium-review.googlesource.com/c/chromium/src/+/1220560/ https://chromium-review.googlesource.com/c/chromium/src/+/1140199/ (this one was backported to safely apply the other two CLs) Crbug: https://bugs.chromium.org/p/chromium/issues/detail?id=871756 This is fixed for 70 and higher. Fixes https://github.com/microsoft/vscode/issues/76560 #### Checklist - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: fix windows virtual keyboard appearing for all mouse events ::",b2a1a0900267063a445128bc75930c9b86946b5b::
https://api.github.com/repos/electron/electron,19143,no-sfs-animation::4-2-x,1,merged,,"#### Description of Change This PR fixes the bug described in https://github.com/microsoft/vscode/issues/75054. There is a bug with Chromium that, after setting window style, calling setFrame with animation immediately would block window rendering for a few seconds. This Chromium bug is fixed in later versions, but it is hard to find out how to backport the fix or how to work around it, disabling the animation is the easist fix and most users would not even notice it. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Fix toggling simple fullscreen being very slow.::",c066ac1f30bb0d19520812e4097a9f5793f4ebee::
https://api.github.com/repos/electron/electron,19019,intern/media-bp::5-0-x,1,closed,platform/macOS::,"#### Description of Change Fixes #19017. Or at least tries to fix it. The expected behavior is that the promise won't be resolved until the user grants or declines permission for media access on macOS. I backported [this](https://chromium-review.googlesource.com/c/chromium/src/+/1511401) Chromium fix to v5 but it didn't change anything. The bug seems to be present in v6 and master as well, although Chromium says the [original issue](https://bugs.chromium.org/p/chromium/issues/detail?id=885184) is fixed. Can someone help me out here? cc @codebytere @erickzhao @MarshallOfSound #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [ ] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: TODO ::",e69669b778ac4e6f32ad60d924236b76746eb602::
https://api.github.com/repos/electron/electron,18990,ipc-handle-promise::master,1,merged,,"#### Description of Change Close #18638. This PR fixes the bug in `ipcMainUtils.handle` that, the helper waits on Promise returned by handler when it shouldn't. For the original issue, `ipcMainUtils.handle` waits on the Promised returned by `WebContents.loadURL`, resulting in setting src being blocked until the URL is loaded. #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Fix setting `src` on `<webview>` being too slow.::Shouldn't there be a corresponding doc change to note the loadURL is now async?::@jkleinsc The `<webview>.loadURL` was actually asynchronous while it was under put `syncMethods`, the `WebContents.loadURL` API works asynchronously that it only starts the loading and returns immediately without waiting for anything. So with this PR `<webview>.loadURL` won't change any documented behavior. The side effect of this PR is making `<webview>.loadURL` return a `Promise`, but since we are backporting it to 6.0, I think it is probably better keeping it undocumented otherwise it would be a `feat`.::@zcbenz I understand what you are saying, but what happens then is we do not end documenting this behaviour.  I would rather see the doc change made and go through @electron/wg-releases to approve moving this `feat` to 6.0.  Given the issue it solves I don't think it will be a problem to get @electron/wg-releases approval.::",c56b5b6d3c045f67daaf9194033cf15e6987530d::77dd7a8af97d1181b97bd60be17a7d354af06005::
https://api.github.com/repos/electron/electron,18902,revert-arm-yarn-6-0-x::6-0-x,1,merged,,"#### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> #18779 was backported to 6-0-x, and 5-0-x, but the script it was using does not exist in 6-0-x or 5-0-x.  This PR fixes arm testing in 6-0-x by performing npx yarn manually. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: <!-- Please add a one-line description for app developers to read in the release notes, or `no-notes` if no notes relevant to app developers. Examples and help on special cases: https://github.com/electron/clerk/blob/master/README.md#examples -->no-notes ::",1013f6020c88b2d142945c80791b295530a4b397::8841d1989904e807e586d92e9bbdbb53e79eca04::
https://api.github.com/repos/electron/electron,18886,less-atom::master,1,merged,new-pr 🌱::,"About time we start getting rid of / renaming the old atom references.  This PR replaces the `atom` directory with a `shell` directory and renames the `atom` namespace to `electron` The GitHub UI is really confused here, trust me it's a `git mv`.  I tested that backports work and if you look at just this commit --> https://github.com/electron/electron/pull/18886/commits/1ffc54012b66a633a982c05c724b9514ea5d3eb0 you can see all the files were just renamed Notes: no-notes::",a54794c817aefbeafdab853ea7e5eb2497d5db88::06301ac2efcdf48332872c1183840be4d4826a13::43211b13ca99716bfe5a4d87bf9bf39f0fcb109d::a4610bfdb52c891dce799b1a98f14f2d5a2c4b3c::44fe46ab51ec360fad41246ca3e25b86b7e57d0e::
https://api.github.com/repos/electron/electron,18846,intern/boringssl::master,1,closed,,"#### Description of Change Addresses #18826 and #18827. Tbh I didnt find out if this PR really does the expected thing. To which versions should we backport this? cc @codebytere @erickzhao #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: none::",92e00e43e3b08c59b1090dc49ae57813f17e290c::
https://api.github.com/repos/electron/electron,18783,stricter-menu-item-role-type::master,0,merged,documentation :notebook:::,"#### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> 👋 This pull request uses the possible values for `role` in the `MenuItem` constructor to describe the instance `MenuItem.role`. This makes the types more consistent and allows developers to take the value of an existing `MenuItem.role` and use it to construct a new `MenuItem` without extra typecasting (or other workarounds). Helps with upgrading GitHub Desktop to Electron 5 (https://github.com/desktop/desktop/pull/7799), so it would be great to have this fix backported to 5 (and 6, I assume). :bowtie: Thank you! cc @codebytere #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: no-notes::",11b697333cfc45e61864759ba951e669dd40f3f6::
https://api.github.com/repos/electron/electron,18721,jeremyspiegel/open-external-activate-5-0-x::5-0-x,0,merged,,"backport of #18657 to 5-0-x #### Description of Change A reference to an `OpenExternalOptions` structure was being captured by an Objective-C block that outlived the object that was being referenced (added in https://github.com/electron/electron/pull/15065). This caused the default browser window to not be activated when passing a URL on macOS when the default browser is Safari or Firefox. Fixes https://github.com/electron/electron/issues/18293. cc @codebytere #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Fixed issue where `shell.openExternal` would not activate opened window on macOS. ::",cd81eb5c60d6c5babf86e4ed4cb10e280a078db3::
https://api.github.com/repos/electron/electron,18483,use-crashpad::master,1,merged,6-0-x::,"#### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> Migrate crashReporter to use crashpad on Windows. This fixes issue #17993. Although chromium has moved to using crashpad for crash reporting on windows, electron was still using the deprecated breakpad. With this change, some crashreporter APIs that were only macOS specific will now also work for windows. Besides, the crashreporter process does not need to be started separately with the environment variable. Crashpad takes care of launching a process when the crashreporter is started from the main process. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Migrate crashReporter to use crashpad on Windows.::Will we be able to move Linux to using crashpad in the future too?::Would love to fix this and use the full include paths.::how come this is only required on win64?::I don't see an analogous rule in Chrome. How come we need this and Chrome doesn't?::It's no longer `breakpad`, should we rename this function?::These options seem like they ought to be configurable::Will this break if the crashes dir has non-ASCII characters in it? (e.g. if the path contains `%APPDATA%`, which includes the user's home directory, which includes their user name, which may be non-ASCII) maybe ```suggestion base::UTF16ToUTF8(crashes_dir.value()).c_str())); ```::Would it be possible to transmit this info through a command-line argument rather than an IPC?::this means ""is main process"", right? maybe add a comment?::We shouldn't need to involve v8 in this... can `WebContents` maybe get a method that returns a direct pointer to the all the WebContentses rather than v8 handles?::This `args->erase(std::remove_if(...))` construction is confusing and I'm not sure it's doing what you intend. What are you trying to accomplish here? Perhaps there's another way to express this that's more clear?::is wrapping this with `base::FilePath` required / desirable now? What changed here?::This is somewhat concerning, what are the implications of the incorrect PID being returned here?::Chromium still uses breakpad for linux. So not until they move::Here's the related v8 change that added it. https://chromium.googlesource.com/v8/v8.git/+/969cb0c7a58b4c8b53ff411adde5fc4a5a6785e4::What part is confusing exactly? It's the standard erase-remove idiom.::The lambda can take a `char*` though. ::Ah, I see... `std::remove_if` _mutates_ the underlying collection and returns an iterator pointing to the end of the new list, and `vector::erase` causes the vector to be resized. very confusing :( but i guess it's correct.::Yeah, we can update the API for configuring these for both win and macos. How about I do that in a followup PR? Mainly to keep the changes separate.::Yeah, will change it to just `Init`.::💡 Yeah, should use `UTF16ToUTF8` here.::Done. 👍 ::It's possible that crashpad will start after the renderer processes have started, so it cannot be a command line arg. @zcbenz can probably answer better.::This confuses me too, in theory using pipes requires explicit allowance from sandbox, and it does in our case. It is probably because Chrome organizes crashpad code into `chrome_elf.dll` and then access to the named pipe come from the same module instead of different processes. We can do the same in Electron but it would be another refactoring and should probably be done in a separate PR.::Yeah, it is especially true in our own tests, as the crashReporter in main process is only started after the renderer process has landed related tests.::No, not needed.  I needed it during the process of making changes, but it's not needed anymore. Will revert it.::Chrome uses `GetNamedPipeClientProcessId` to check if the PID passed via pipe is actually the process connecting the pipe. However there may be multiple processes connecting the pipe and `GetNamedPipeClientProcessId` only returns the first PID, which ends up with the check here. The PID returned by `GetNamedPipeClientProcessId` is only used for the check here, it does not affect other parts. I guess Chrome does not have this problem because they put crashReporter code in `chrome_elf.dll`.::I'll add a method in `InspectableWebContents` so we can avoid all V8 related code.::Not a necessary change for this PR but can lazy construct this with `base::NoDestructor`::style nit: as a follow up, cleanup these variables to be private.::Interesting that this doesn't require a blocking scope, `base::PathService::Get` makes blocking calls and couldn't be called directly on main runner.::Hm, I'm not sure I understand how putting the code in a different dll would affect the order of processes that connect to the pipe or the process IDs returned by `GetNamedPipeClientProcessId`. Could you expand on the `chrome_elf.dll` theory?::Hmm, I'm not sure how `chrome_elf.dll` would play into that. If you load a dll in two separate processes, it's still two separate processes... Does Chrome set up crashpad before the sandbox is engaged?::Hmm, IMO we should change our API such that crashpad is always initialized in the main process and always before renderer processes are started (as in Chrome) (but given this patch is intended for backporting to 6-0-x, that would be a followup change)::It seems that they set it up before sandbox: https://cs.chromium.org/chromium/src/chrome/app/chrome_main_delegate.cc?type=cs&q=v8_crashpad_support&sq=package:chromium&g=0&l=645 That should explain the difference on the behavior.::Use `kRunAsNode` (currently only defined in `atom/app`, we should move it into `atom/common`)::It is a wild guess, I don't really understand why this check passes in Chromium.::We need to give users a chance to setup product name, crash server URL, etc. and it can not be done after the crash reporter is started. CEF works around it by reading crash reporter settings from an INI config file, we can probably do the same by reading from `package.json`. And yeah it should be a followup change.::How does this interact with the [`upload_parameters_` dictionary](https://github.com/electron/electron/pull/18483/files#diff-e2f601f3e76bb760d9fc3a52faa7a098R59)? Seems like this info is duplicated.::Do these hard-coded settings match the behaviour of the old breakpad system?::I agree, setting those values in `package.json` would be a good idea. Extra parameters /etc. that could be runtime dependent could be amended after the JS is run, but at least the crash URL should be set up statically.::Please update the patch description.::we are doing this in Teams, we've modified the crashReporter to be only initialized once in the main process and all renderer then inherit the same config. I am planning to upstream this change.::",3974e83119de20f2a38aa72e3875d7330e3e1af5::037ad5e213c9ae0ce1a43cc4b97af726379ee7a9::bfee86bd69854d4177c726159d53cf6a2d8a3a00::7cd83f764ab39ea8c5118549bf42c02f5b80dabb::352e84ba65f95fe919723ffd4a985d6641a69750::06b885502298c62d78e799638ccfe8e9fcf1f901::f13a7013cb23a08cfe40321550b727424e404442::a37dce9d538ec4bb2067afb4209d1b0bc5c96697::d1fc27a027551cf67db152f2dfb5e4a6c08650d3::caba1ce5a93b9e5af97e6fab9522f870c0946a4f::19675341b769361806dd1d299262e3c49c949aa2::d701326da587570890b4e53e59e6ee267863dc32::a1b23180eeac9ef7eed55bebb5de1b0f3b1c1a55::07139dc8ab65340a34dade2c2b7cd99f01d3e9ae::3fdb47734ed11fedab90fb1dc12b06a1abf9a4e2::4c3c9d4f25e38b4ba9af54138ef8b4b6f6bfd1e5::a9d120d634a892613436cefbdccfd37c1bc0f99e::ab6d8d03ab06a99e0d2988e5295668743119c38d::6ac3daf1c95e455dcb7b11d6c48b8d90cd476a0c::508796872d0a05021cecbfb488070aea2f4d9671::372f4df423e4fa5f331d76913a0658ed4eacb3ab::f6ac2106609b25cd20ca9118992aa3310d6e4421::477a0d7ce492640cd22e27798c5514041b7087ba::1d99b0f46ebdd2a2ac9e01a012f49f7abde7f8f0::733b375fe7a6cc88217355c5a4a1f66642a0081a::484e4712fbead8de04830fa01285ce96fb256f18::e1b2c9997a03760a53fa7525a6e14b0dd385db85::39125b39b61fefec2e9fcafcb46585bd0ea1ce34::01769878e2d45eecbc2b09c9db8de4de1b240ef1::cf3d971931d16cfb99b4c01ec4a787aeefe8ef6a::dbe24effcdcc9280319d58bbb27ea0843be6b221::5ffe55078301d89f38b119d7243d7777bc7d5e95::a94f6c3319823ece6df74f6ea09982a22a08a7b0::
https://api.github.com/repos/electron/electron,18425,custom-on-hover-fix::master,1,merged,,"#### Description of Change Fixes https://github.com/electron/electron/issues/18364. This PR ameliorates an issue whereby `minimizable` and `closable` weren't respected in `customButtonsOnHover` mode. `maximizable` isn't addressable here, since it's been blanket disabled in newer versions of macOS owing to an issue with the `NSWindowStyleMaskFullSizeContentView` style mask. That will, however, be addressed in the relevant backport pull request. This can be backported to 6 as-is but will need to be manually backported to 5 & 4 to account for the `maximizable` consideration. cc @pronebird @MarshallOfSound @nornagon @miniak #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Fixed an issue whereby `minimizable` and `closable` weren't respected in `customButtonsOnHover` mode. ::TIL `[NSView viewWithTag]`::i wish there was a less hacky way to identify & fetch a specific subview but this seemed like the safest option 🤔 i also don't love that i basically used magic numbers for the tags but adding two new `define`s for this purpose felt a bit like overkill::You can store the pointer. Not sure why you need to fetch the `viewWithTag` like that.::",2ce91e63af943858a37991d6395ac9882734e4f3::
https://api.github.com/repos/electron/electron,18393,sofianguy-patch-1::master,1,merged,documentation :notebook:::fast-track 🚅::,"#### Description of Change Changing versioning document to explicitly say Week 3 for feature requests during a beta cycle. Ref: https://github.com/electron/governance/tree/master/wg-releases#feature-backport-requests-for-major-versions-in-beta cc @electron/wg-releases #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: no-notes ::",97ad872c7c53dae7982c9e7f8bd8373b4005767a::
https://api.github.com/repos/electron/electron,18239,use-types-for-node-10::3-1-x,0,closed,,"#### Description of Change Backport of #16174 Electron 3 embeds Node `10.2.0`, but the corresponding `@types/node` declaration is still on `8.something`. It looks like the original PR #16174 was backported to v4 in #16177 but there wasn't a backport to v3, so here's me trying to do this. I thought I'd be able to hack around this using yarn's `resolutions` trick: ``` ""resolutions"": { ""**/@types/node"": ""10.1.4"" } ``` But even that is not happy with me: <img width=""765"" src=""https://user-images.githubusercontent.com/359239/57483502-5db2fb00-727d-11e9-892d-0bdb38ede18d.png""> Maybe it works anyway? Not sure what other checks I need to do while I'm in here to catch any potential regressions, but I'll see what CI does first. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - ~~[ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md)~~ - ~~[ ] relevant documentation is changed or added~~ - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Update @types/node dependency to version compatible with Node 10.2.0 ::This version might seem weird, but `@types/node` literally skipped the `10.2.x` range: <img width=""466"" src=""https://user-images.githubusercontent.com/359239/57491656-066c5500-7294-11e9-9221-a5b2aacb5f4f.png""> ::",3ca31be0fadfb76877f626a8ef3e93d21d4714a6::
https://api.github.com/repos/electron/electron,17850,libcc-83fd716a064b29c7a314f4e6b3447d8144d99035-1555543208537::3-1-x,0,merged,new-pr 🌱::,Updating libcc reference to latest.  Changes since the last roll: * [`3c35d8eb`](https://github.com/electron/libchromiumcontent/commit/3c35d8eb696a79938e95a91bea2619c524f92266) fix: backport IntersectionObserver fixes (https://github.com/electron/libchromiumcontent/issues/758) * [`83fd716a`](https://github.com/electron/libchromiumcontent/commit/83fd716a064b29c7a314f4e6b3447d8144d99035) fix: overly thin font rendering on mojave (https://github.com/electron/libchromiumcontent/issues/759) Notes: no-notes::,a90f5f605e4e91b837c6c40198278364347902cb::56197047fad1ca0f584db9025cb046f80b765b61::
https://api.github.com/repos/electron/electron,17833,jefgen/add-ICU-support-for-Reiwa-to-4-1-x::4-1-x,0,merged,,"#### Description of Change This change backports changes from the upstream ICU project's maintenance release for ICU 62.2 in order to enable support for the new Japanese Era ""Reiwa"" in Chromium 69 (which uses ICU version 62.1). Upstream release: http://site.icu-project.org/download/62 Background information: > The current Japanese Emperor will abdicate on April 30, 2019. The current era Heisei (平成) will end on that date, and a new Japanese era Reiwa (令和) will start on May 1, 2019. Until the end of April, the year in Japanese calendar is Heisei 31 (平成31年), but from May 1 on it will be changed to Reiwa 1 (令和元年). > > Existing ICU versions support Japanese calendar date calculation and formatting, but the new era Reiwa was not known when these versions were released. Therefore, these ICU versions produce an incorrect year format when using the Japanese calendar, which is the default calendar for the Japanese locale. This PR removes the patch for the ""placeholder"" era name support that was added in PR #17518, and replaces it with a new patch that adds support for the official new era name, and bumps the ICU version from 62.1 to 62.2. With this change you now get correct results for various JavaScript date/time formatting APIs for the Japanese calendar. Additionally, this PR also backports some additional bug fixes from upstream as well. This PR also includes the following fixes/updates: - Update IANA time zone data to tzdata2019a. - Japanese calendar: era calculation should use local time, not UTC. - Japanese calendar: use all valid eras for calendar calculations. - Fix LocalMemory move constructor deletion issue. This change requires re-generating the checked-in Chromium ICU data files (ex: icudtl.dat) in order for them to have the updated data for the new era name. Note: All of the checked-in files are be regenerated, even though the Electron project only uses the ""common"" one. Screenshots: Before, with the placeholder era not enabled. (Incorrectly showing dates after May 1 2019 using the Heisei era). ![image](https://user-images.githubusercontent.com/29107334/56255339-5e3ee400-6079-11e9-9706-b6ddf1009add.png) After, correctly using the new era Reiwa for dates after April 30, 2019. ![image](https://user-images.githubusercontent.com/29107334/56255400-93e3cd00-6079-11e9-9853-3526c331d12f.png) You can also see the version bump for `icu` and `tz` in the screenshot. Sample code (for testing): ```html <p>Outputs:</p> <form> <textarea id=""jaEraOutputs"" rows=""9"" cols=""60""></textarea> </form> <script type=""text/javascript""> // Heisi Era will end on April 30, 2019 so pick a date before. var dateHeisi = new Date(Date.UTC(2019, 01, 15, 3, 0, 0)); // New Era starts on May 1, 2019. var dateNew = new Date(Date.UTC(2019, 05, 02, 3, 0, 0)); var out = document.getElementById(""jaEraOutputs""); out.value = """"; out.value += ""Heisi: \n""; out.value += ""\t ja-JP:  "" + dateHeisi.toLocaleString('ja-JP-u-ca-japanese', {era: 'long'}) + ""\n""; out.value += ""\t en-US:  "" + dateHeisi.toLocaleString('en-US-u-ca-japanese', {era: 'long'}) + ""\n""; out.value += ""\n""; out.value += ""New Era: \n""; out.value += ""\t ja-JP:  "" + dateNew.toLocaleString('ja-JP-u-ca-japanese', {era: 'long'}) + ""\n""; out.value += ""\t en-US:  "" + dateNew.toLocaleString('en-US-u-ca-japanese', {era: 'long'}) + ""\n""; </script> ``` #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd. [CC: @alexeykuzmin] [FYI for @aandrejs , @daniel-ju] - [ ] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: * Added support for the new Japanese Era Reiwa (令和) to JavaScript date/time formatting APIs. * Updated ICU library to version 62.2 * Updated IANA time zone data to tzdata2019a.::",682608ba78fa03b5ff19e5115f303b790ae0cea3::
https://api.github.com/repos/electron/electron,17654,libcc-3c35d8eb696a79938e95a91bea2619c524f92266-1554199848093::3-1-x,0,closed,,Updating libcc reference to latest.  Changes since the last roll: * [`3c35d8eb`](https://github.com/electron/libchromiumcontent/commit/3c35d8eb696a79938e95a91bea2619c524f92266) fix: backport IntersectionObserver fixes (https://github.com/electron/libchromiumcontent/issues/758) Notes: no-notes::,ec1882bdd91c2b2944b9405be1775625ce76eb55::6b97539d5dd12c5f49befb2910d00b3940ee12a2::
https://api.github.com/repos/electron/electron,17642,fix-explicitly-allowed-ports::4-1-x,1,merged,,"https://chromium-review.googlesource.com/c/1400042 Landed in 73.0.3666.0, no need to backport to any other version. #### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Fixed the --explicitly-allowed-ports switch.::",ab25d100624e0cee0c8f4433fb8349911c768f0c::
https://api.github.com/repos/electron/electron,17503,libcc-bdb1c8e9d2f184ebeb75a25824aca0be27aa879b-1553185998683::3-1-x,0,merged,new-pr 🌱::,Updating libcc reference to latest.  Changes since the last roll: * [`2591ae67`](https://github.com/electron/libchromiumcontent/commit/2591ae67b34bde96d2a07e424cd9285262dd7e29) ci: move MacOS builds to CircleCI * [`73f5e539`](https://github.com/electron/libchromiumcontent/commit/73f5e539a048c7630beffc75bc4950005a22def6) Remove unneeded vsts.yml * [`096ff1d7`](https://github.com/electron/libchromiumcontent/commit/096ff1d7ae6292ddb4b982f3c99275a36513ee95) Merge pull request https://github.com/electron/libchromiumcontent/issues/754 from electron/move-maclibcc-to-circleci ci: Move MacOS builds to CircleCI * [`bdb1c8e9`](https://github.com/electron/libchromiumcontent/commit/bdb1c8e9d2f184ebeb75a25824aca0be27aa879b) fix: backport KDE icon size fix (https://github.com/electron/libchromiumcontent/issues/757) The code that adds padding to too small icons was breaking the larger ones by cutting the minimal size (22x22px) out of their center. Backports: https://chromium-review.googlesource.com/c/chromium/src/+/1173235 Notes: no-notes::,635ad0dbbf60ca0b61e518d10e89438a55d2272c::02f947080f3c9635821eaa82878e895f836e2b72::
https://api.github.com/repos/electron/electron,17398,brenca/node-integration-subframes-webview-5-0-x::5-0-x,1,merged,,"#### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> Manual backport of #17226. Depends on #17396 for the node backport to land in `5-0-x`. This was previously not done because of a crash. electron/node#94 fixes that crash, and allow us to enable this option for the `webview`. The node PR also fixes #16733. Fixes #16780. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Enabled `NodeIntegrationInSubFrames` option usage for `webview` tags. ::",60f6fe0347b3fc10575f1eab908fc3de73d025ca::e02689e1740303c3e55dde88687640fe73d0cabb::cf92c22a587e2ca1bb99ed2d320efb67a4a41757::0efc99204789d0ab28989ee854708ab96e111f24::857a86381ae0a5b573b6466388567f6af092a99f::
https://api.github.com/repos/electron/electron,17356,libcc-b84920f84f69782d82bd03b692826811a231fa3d-1552412784805::3-0-x,0,closed,,Updating libcc reference to latest.  Changes since the last roll: * [`55dc4296`](https://github.com/electron/libchromiumcontent/commit/55dc429603f6c6d045910ac590facb2597bf41a7) ci: move MacOS builds to CircleCI * [`98ba95ff`](https://github.com/electron/libchromiumcontent/commit/98ba95ff1d59dae7ab902e2011e1a939800d61e0) Remove unneeded vsts.yml * [`b84920f8`](https://github.com/electron/libchromiumcontent/commit/b84920f84f69782d82bd03b692826811a231fa3d) Merge pull request https://github.com/electron/libchromiumcontent/issues/755 from trop-bot/electron-3-0-x-bp-ci-move-macos-builds-to-circleci-1552400562016 ci: Move MacOS builds to CircleCI (backport: electron-3-0-x) Notes: no-notes::,db52d28b839f69b5833438f1992432f0ccd38d0d::e3141c3daf723bd53a3ad558eb76b71a7956a921::
https://api.github.com/repos/electron/electron,17273,libcc-5ff272e25eb552d8c0e7f07f919ed0bad804500b-1551993039159::3-1-x,0,merged,new-pr 🌱::,Updating libcc reference to latest.  Changes since the last roll: * [`a05ae194`](https://github.com/electron/libchromiumcontent/commit/a05ae194520c14c134a0faff2b75f15641aa5194) backport fix: accessibility detection patch backport (3-1-x) (https://github.com/electron/libchromiumcontent/issues/746) * [`ce68ddc8`](https://github.com/electron/libchromiumcontent/commit/ce68ddc81a62260e9494c972bc65e4e11485e2f7) fix: update sandbox rules on Mac that target 10.13 exactly to target 10.13 and higher (https://github.com/electron/libchromiumcontent/issues/747) * [`8bebd745`](https://github.com/electron/libchromiumcontent/commit/8bebd745129ced083e46069e3bb1d87681eeb4fb) fix: network hangs when using DHCP based WPAD Backports: https://chromium-review.googlesource.com/c/chromium/src/+/876921/ https://chromium-review.googlesource.com/c/chromium/src/+/946870/ Upstream Issue: https://bugs.chromium.org/p/chromium/issues/detail?id=770201 * [`b4d2be24`](https://github.com/electron/libchromiumcontent/commit/b4d2be246ca4c44c839b8f23ee2fd27bb1071082) Merge pull request https://github.com/electron/libchromiumcontent/issues/749 from electron/dhcp_wpad_3_1_x fix: network hangs when using DHCP based WPAD (backport: 3-1-x) * [`5ff272e2`](https://github.com/electron/libchromiumcontent/commit/5ff272e25eb552d8c0e7f07f919ed0bad804500b) fix: FileReader: Make a copy of the ArrayBuffer when returning partial results. (https://github.com/electron/libchromiumcontent/issues/753) Notes: no-notes::,54106bc870ff7f1455b64d15c5b4b4a5777a7850::55d4200906347b0302a148ec61737887c26d969c::
https://api.github.com/repos/electron/electron,17256,backport-filereader-4-0-x::4-0-x,1,merged,new-pr 🌱::,"backports https://chromium-review.googlesource.com/c/chromium/src/+/1495209 #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: no-notes ::",9ac49f05a7337737347ef42aa02f6c8595e96d7b::39b38f6ba3cbfc426ac8f1577f142f1eaaa6d97b::
https://api.github.com/repos/electron/electron,17253,libcc-b4d2be246ca4c44c839b8f23ee2fd27bb1071082-1551922943140::3-1-x,0,closed,new-pr 🌱::,Updating libcc reference to latest.  Changes since the last roll: * [`a05ae194`](https://github.com/electron/libchromiumcontent/commit/a05ae194520c14c134a0faff2b75f15641aa5194) backport fix: accessibility detection patch backport (3-1-x) (https://github.com/electron/libchromiumcontent/issues/746) * [`ce68ddc8`](https://github.com/electron/libchromiumcontent/commit/ce68ddc81a62260e9494c972bc65e4e11485e2f7) fix: update sandbox rules on Mac that target 10.13 exactly to target 10.13 and higher (https://github.com/electron/libchromiumcontent/issues/747) * [`8bebd745`](https://github.com/electron/libchromiumcontent/commit/8bebd745129ced083e46069e3bb1d87681eeb4fb) fix: network hangs when using DHCP based WPAD Backports: https://chromium-review.googlesource.com/c/chromium/src/+/876921/ https://chromium-review.googlesource.com/c/chromium/src/+/946870/ Upstream Issue: https://bugs.chromium.org/p/chromium/issues/detail?id=770201 * [`b4d2be24`](https://github.com/electron/libchromiumcontent/commit/b4d2be246ca4c44c839b8f23ee2fd27bb1071082) Merge pull request https://github.com/electron/libchromiumcontent/issues/749 from electron/dhcp_wpad_3_1_x fix: network hangs when using DHCP based WPAD (backport: 3-1-x) Notes: no-notes::,88dcc9241915af954c2f43518ad64b43bb1bb82c::89e3705b4e2e2671a761c650a129c3a612983717::
https://api.github.com/repos/electron/electron,17229,promisify-session-hostresolver::master,1,merged,semver/minor::,"#### Description of Change Promisifies `ses.clearHostResolverCache()`. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Converted `session.clearHostResolverCache()` to return a Promise instead of taking a callback. ::function needs to be `async` + remove `done` from the arguments::keep the deprecated version documented?::I'm not planning to keep the sync version around for this one i don't think. Also, we're no longer backporting features to 5 really so i'd backport a deprecation in docs but not in this PR i don't think::I meant the callback version from `deprecate.promisify`::Keep `Session::ClearHostResolverCache(mate::Arguments* args)` signature and prefer `args->isolate()`::",a606d407ef7e3a785adc1b4fc090fef0e4e92712::
https://api.github.com/repos/electron/electron,17218,update-chrome-version::4-0-x,1,merged,new-pr 🌱::,"In #15275 we switched to using Chrome's auto-generated version headers instead of hard-coding the Chrome version into this header, but that change wasn't backported to 4-0-x and we've since rolled our Chrome dependency. This fixes the discrepancy. We don't expect any further Chrome rolls on this branch since M69 is out of Chrome's support window. <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) <!-- Used to describe release notes for future release versions. See https://github.com/electron/clerk/blob/master/README.md for details. --> Notes: Fixed `process.versions.chrome` reporting the wrong patch version.::",97145a56ad036be54096e22aff581f70f94b2b57::
https://api.github.com/repos/electron/electron,17192,roll-chrome-5-0-x::5-0-x,1,merged,new-pr 🌱::,Updating Chromium to 73.0.3683.61. Also backport https://chromium-review.googlesource.com/c/chromium/src/+/1496448 which fixes the build on ARM/ARM64. See [all changes in 73.0.3683.54..73.0.3683.61](https://chromium.googlesource.com/chromium/src/+/73.0.3683.54..73.0.3683.61) Notes: Updated Chromium to 73.0.3683.61.::,42e2ce5f21fb6e2cb0406425070f5f73f79e0ec7::9f78f3752873be20b63691fa7d5ba34a3237d1b8::
https://api.github.com/repos/electron/electron,17191,roll-chrome-73.0.3683.61::master,1,merged,new-pr 🌱::,Updating Chromium to 73.0.3683.61. Also backport https://chromium-review.googlesource.com/c/chromium/src/+/1496448 which fixes the build on ARM/ARM64. See [all changes in 73.0.3683.58..73.0.3683.61](https://chromium.googlesource.com/chromium/src/+/73.0.3683.58..73.0.3683.61) Notes: Updated Chromium to 73.0.3683.61.::,9f10ffbb8fc61b8ba0c486c48f6905e277067498::5ba07df85b061bc0cab8fa292096996d19123c15::
https://api.github.com/repos/electron/electron,17142,libcc-ce68ddc81a62260e9494c972bc65e4e11485e2f7-1551205192025::3-1-x,0,closed,,Updating libcc reference to latest.  Changes since the last roll: * [`a05ae194`](https://github.com/electron/libchromiumcontent/commit/a05ae194520c14c134a0faff2b75f15641aa5194) backport fix: accessibility detection patch backport (3-1-x) (https://github.com/electron/libchromiumcontent/issues/746) * [`ce68ddc8`](https://github.com/electron/libchromiumcontent/commit/ce68ddc81a62260e9494c972bc65e4e11485e2f7) fix: update sandbox rules on Mac that target 10.13 exactly to target 10.13 and higher (https://github.com/electron/libchromiumcontent/issues/747) Notes: no-notes::,cded4c5ec6344cb25ac0f379b064373c5e81b71c::a4fcbc8f52ff2d36c85201bcd6d154b535f63f15::
https://api.github.com/repos/electron/electron,17127,libcc-a05ae194520c14c134a0faff2b75f15641aa5194-1551132569822::3-1-x,0,closed,new-pr 🌱::,Updating libcc reference to latest.  Changes since the last roll: * [`a05ae194`](https://github.com/electron/libchromiumcontent/commit/a05ae194520c14c134a0faff2b75f15641aa5194) backport fix: accessibility detection patch backport (3-1-x) (https://github.com/electron/libchromiumcontent/issues/746) Notes: no-notes::,e28be2c0a90c204e5da9975e5b4575ba2472eeaf::d52386c982bdb8c0e2987402b1a291ba1656bf91::
https://api.github.com/repos/electron/electron,16971,libcc-cd7a2326b0668f24b83d568eccab16ee9ba8dc9a-1550168367665::3-1-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`cd7a2326`](https://github.com/electron/libchromiumcontent/commit/cd7a2326b0668f24b83d568eccab16ee9ba8dc9a) fix: renderer hang in cc BeginMainFrame (https://github.com/electron/libchromiumcontent/issues/745) backports https://chromium-review.googlesource.com/c/chromium/src/+/1419132 Notes: no-notes::,60705a0f8a26945c4f537cbc3e02cdd6b2be6b79::73a87d22cd13d107c4652fd14a936bd5a4bc4328::
https://api.github.com/repos/electron/electron,16946,hang-fix::4-0-x,1,merged,,"#### Description of Change This backports a change from Chromium that fixes a rare renderer hang in the `BeginMainFrame` method. The bug in Chromium is view-restricted, but enne@ indicated that this is the change that should fix the issue: https://chromium-review.googlesource.com/c/chromium/src/+/1419132 It's already present in m72 so 5-0-x should be fine. https://chromium-review.googlesource.com/c/chromium/src/+/1427521 #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Fixed a rare renderer hang in cc::ProxyMain::BeginMainFrame. ::",c7e1ae230be05461695dea0144811960ddb24cdb::e0f448e7e5958c4eaef59ccd74c4f12dbb8bbece::
https://api.github.com/repos/electron/electron,16944,fix-virtual-keyboard::4-0-x,1,merged,,"#### Description of Change First commit here is just running `git-import-patches` followed by `git-export-patches`. The second commit backports https://chromium-review.googlesource.com/c/chromium/src/+/946928 to enable the inputpane virtual keyboard by default, which should fix some scenarios in Windows 10 RS4 and later in which the virtual keyboard wasn't showing when it should have. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Fixed an issue on Windows 10 RS4 and later that was causing the virtual keyboard not to appear when focusing some input fields. ::",d1892c24456bc9e86b8cbb33184a3c852c5101d3::
https://api.github.com/repos/electron/electron,16701,wg-release-codeowners::master,1,closed,wip ⚒::,"#### Description of Change Update primary codeownership of the `script/` folder to `@wg-releases`. This is a broad stroke, as not every single file in there is release-specific.  However, I would hedge that 95% of changes to that folder are in fact release-specific, so this seems to me to be more efficient than marking specific files under the new WG. cc @electron/wg-releases #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: none ::this seems overly broad. Can we move all release-related scripts to e.g. `script/release` and protect that instead?::my concern is that it'd break all our release-related backports as well as require all the paths to be updated in sudowoodo and i'd love to not do that i think::",725653761206ce0e11ff04f9cac04847698271ee::feb15b48ec2fc419725749c3a2823f16f8459236::
https://api.github.com/repos/electron/electron,16601,fix-the-scheme-privileges-api-docs-and-ts-generation::master,1,merged,semver/major::,"#### Description of Change Update protocol API docs and the api options key. Also update electron-typescript-definitions. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Updated the `protocol.registerSchemesAsPrivileged` API options key::Unless I'm misreading this (which is possible), this looks like an unadvertised breaking API change, which would go against our [policy](https://github.com/electron/electron/blob/master/docs/api/breaking-changes.md#api-contract) of announcing these changes at least one major version ahead of time. If this is targeted for 6.0, please make sure to update `breaking-changes.md` in `5-0-x` before merging this.::This new API hasn't been published yet. We want to backport this to 5.0.x. The new API been listed in `breaking-changes.md` . This attribute name change is happening before publishing the new API.::",1a93b81a10fa63fce2e404ae71c0289d373e08f4::73ab8d4e30a3bea0ea03a5ebb70fa53573e9208e::4a3f88d67b7c26a9ce2d2c713cb4dfe5f9373d86::
https://api.github.com/repos/electron/electron,16600,promisify-tracebufferusage::master,1,merged,,"#### Description of Change Promisify `contentTracing.getTraceBufferUsage()`. **NB**: this PR required backwards-incompatible changes and thus cannot be backported to `5-0-x`. cc @ckerr @deepak1556 #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Converted `contentTracing.getTraceBufferUsage()` to return a Promise instead of taking a callback. ::you can use `promise->isolate()`::no need for the duplicate return::I would wait for the `electron.d.ts` generation to be fixed in master to be able to check if it's going to be generated properly.::This is a breaking change, unfortunately, and goes against the project's policy of publicly announcing this at least one major version ahead of time. We should either add *another* `deprecate()` helper to explicitly address this, or to get a breaking change announcement into the 5.0 betas so that this breaking change can land in 6.0.::Please consider making this const as it isn't modified. ```diff - bool success = ... + const bool success = ... ```::we are not that strict with const for values in the C++ code (except for making const references to avoid copies):::tada:::",2245b41afc6c0e4e854ba86d29ce3197bebba99f::abd64ba73bb6ba9333447c711203dd15e41b5583::d752922c59ffb8055c10be11ec051c3afc823d29::89c1685fbdf45b49efe1ea660a943a82d53603b6::
https://api.github.com/repos/electron/electron,16590,miniak/troppers::master,1,merged,,"#### Description of Change I would like to be able to run trop backports manually. /cc @codebytere, @ckerr #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes Notes: no-notes::",1257aa269248aa5d9546310de53a187c7b358d37::
https://api.github.com/repos/electron/electron,16570,remove-menu::master,1,merged,semver/minor::,"#### Description of Change This PR adds `win.removeMenu()` as a replacement for `win.setMenu(null)`, which is less intuitive and a bit of an antipattern for modern JS. We can most likely backport the additional method into `5-0-x` and only remove the original in `master`. cc @MarshallOfSound @ckerr #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Added `win.removeMenu()` to remove application menus instead of using `win.setMenu(null)`. ::",773843ea37e3a83453bbbad80328415dd0d1aca6::3efd83678adc663419f8ed9a8a61b89d06f9e5a5::d9f11702882a630c68c003243bc3a39b1d80b661::
https://api.github.com/repos/electron/electron,16494,chromium-upgrade/73::master,1,merged,,"#### Description of Change Refs https://github.com/electron/electron/projects/17 BREAKING CHANGE #### Checklist - [ ] PR description included and stakeholders cc'd - [ ] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [ ] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [ ] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: upgrade to Chromium 73.0.3683.27::What's the intent behind returning an internal list instead of making a new empty one? This seems like a potential issue if this somehow became non-empty::should we do something else with this event?::this should perhaps go in the `atom` namespace? otherwise, it should have a comment about why it isn't::Did we update the docs for this? We should probably continue to support the old API as deprecated for 5-0-x::can we really get rid of all this stuff? that's great!::can we instead switch to using [beginSheetModalForWindow:completionHandler:](https://developer.apple.com/documentation/appkit/nsalert/1524296-beginsheetmodalforwindow?language=objc)? here and below::can we remove this now?::please note that this is a backport::oh you did :)::@nornagon There is a separate PR to deprecate the current API in `5-0-x`::https://github.com/electron/electron/pull/16801::`network::ResourceRequestBody` got typemapped in https://chromium-review.googlesource.com/c/chromium/src/+/1395977 , which helped us get rid off these manual conversions. Side note: mojom typemaps are really cool feature :)::The change got landed in 74 https://chromium-review.googlesource.com/c/chromium/src/+/1436036::Yup that seems like the alternative, can we change this as a follow up ? There are cards for this in the project board.::It was added in https://chromium-review.googlesource.com/c/chromium/src/+/1354442. The feature seems specifically designed for chrome's screen sharing UI, can consider it for improvement in our desktop capture model once the issue goes public (the chromium issue has restricted view) and provides a bit more context.::This is already behind a noop code path because of `DisableDeviceEnumerationForTesting`. I am inclined to remove this condition all together, the goal of rewriting this was to see if the upstream `MediaCaptureDevicesDispatcher` class can be reused with less patch.::Fixed.::",2752ae4ae816e9b16af4abe2a8798aed37ac6fa8::3f75724a31cfb4771e517474b8399b5f4b23cdfb::e517139e3cb3993981424049352ecc15d7bfbf6c::fbefab422777b809802a95d3ed7da3dcc838b5da::f09cb56f1906893f7bc365ee06f01b9712ddcb14::92cfc4a62d68bd00232259509e127554a4482c48::a864167d46281cb0bcd250c16c32c5e0adb7c386::9439ac108dff65ceadb1f5237a2e9c635cb2b809::79040e348a5aba0ec455829ba242fb1a4c3c2bfa::a913e396d59698c6293de042e9689c1f4fc921f8::abec938b0a9a1a7a29cdf152651000ead746c3bd::e1502f6953aaf870a4425f0785683c5d61182dde::b2bd9ffd704b37e0818feed89226100209ec8ffd::1c4241bff5396da7ca287eee867dc8e11899562f::2c282203b523af99431c4151d8d3e49451fb5e56::606c84b30233a440ae5741dfbe740d14d3fb49cb::0e39ec688ad0ad7e7be342c66646c59e9d5e562d::52ef6d9ae4b7a4dddb3a009837564932037174dc::dd4a31633f81693a9b89eba81be2360cab05d954::547add94d0a92ac82d01ce408077e6349ed9e8f8::3898a44e884505e2ba2d5bd521ff7e2e7f5676e4::e4cfc52c296dfe509c7ecedfeb5a9bcf2974551d::61c46c6313d9b0c61624cc55c2d283f02a418b33::9b82e7d27b077e98a7bad94fb3216af7f45550ee::315f8c0cc7adce2420de9e1df9d4bff3ca134e68::1d21e9c35da45d40fa2e30b784ba142e122e7cec::c2be0846c2f7855f213b2c128e1fbf0dfe3c1d5a::10850808e9961a98341683fb5c7ca0580daeb3b5::1b982e200ad55f80fa51869ef44b3e5587667bd5::035eee5c032c7ac156546fd5758e0386304d8cd6::86a94126fb2ecd1357e87420d693d4478a24d68a::0545d47ca7a62bd6d168c6e1a14119dee608694f::510ca79dddcbc8833b38b149ea745c3c70ddd865::005b7d809969857259123bc430a609f753f50cdd::a9ab4c5039b15bfa29c3a0b436ba3828cf82ab76::34d7e019ce38f1f6c853b1dfaecfe61af2f5bc4c::70bbbb84bb00a5972d4ac3e087e1082269e8c9ac::37279822173804e599743302a66056c5a59b64ec::e11589b5be3db90e03cfeeffc04661a47975fff6::8a51c9c2f688a7c16579aa8e0175cc9486c0c1cc::76fde58e27413dacf6de172dbccfb0a2c8b50cc7::66db62791395ab1433eeb1c005310f92a4386237::cece8bce0b03e92e813c1661a0e43bcb8e78417a::d7557cb66ab94c66b0f3bf14644bd728e3594148::2ccf5904e0199f803161fd0911db0d268cc92225::d7fea1b4848f01e9ab8a2a56624913f5ca8fd30b::2556d86c8a95b7778316b28a57c207b1ad0195ed::b6f7157910ccd318ca1b9ba0f0eae443dffba292::1d9170f1bb82d3fe3740bcbe137e45f1d866afb4::95386ef56f9148065e7ca84fffbcecfc83ba80a2::b927be99828a9932c45ee04b3bd396ca075d4725::46a49b74a61d418b127ce99a4c6e8c27beac1a51::
https://api.github.com/repos/electron/electron,16368,release-notes_4-0-x::4-0-x,1,merged,,"#### Description of Change Manual backport of https://github.com/electron/electron/pull/16343 to 4-0-x. See that PR for discussion. @BinaryMuse #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: no-notes::",4d18987ab37eec91ab6a32ce8a247045eac10ca2::
https://api.github.com/repos/electron/electron,16331,libcc-01b1896f3f91266d757eb4b1d42464bbee3058f7-1546990177617::3-1-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`01b1896f`](https://github.com/electron/libchromiumcontent/commit/01b1896f3f91266d757eb4b1d42464bbee3058f7) backport fix:export GetFgColor:3-1-x (https://github.com/electron/libchromiumcontent/issues/742) Notes: no-notes::,5a27a7f02110beb4f945c02eea69affeb6385cbf::daa0b8231d7118c2039f37bd0bd69341a2c1a87c::
https://api.github.com/repos/electron/electron,16279,mkt-additional-release-logging-again::master,1,merged,,"#### Description of Change ""Manual backport"" of https://github.com/electron/electron/pull/16127 This was never merged to master; it's already been backported to 2-0-x, 3-0-x, and 3-1-x. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: no-notes::",08470faa226c724541a134e07d7e591b2b85d5be::
https://api.github.com/repos/electron/electron,16276,shortcut-bp-3-1::3-1-x,1,merged,,"#### Description of Change Backports https://github.com/electron/electron/pull/16125 to `3-1-x`. Also partially backports https://github.com/electron/electron/pull/16119, as it's required for the fix impl. See those PRs for more details. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) - [x] [PR release notes](https://github.com/electron/clerk/blob/master/README.md) describe the change in a way relevant to app developers, and are [capitalized, punctuated, and past tense](https://github.com/electron/clerk/blob/master/README.md#examples). #### Release Notes Notes: Fixed crash on macOS when using `globalShortcut` for media keys when accessibility access is not granted. ::replace with `#include ""third_party/WebKit/Source/platform/mac/VersionUtilMac.h""`::`blink::internal::MacOSXMinorVersion()`::`return blink::internal::MacOSXMinorVersion() >= 14;`::",aec1254a35bd9a3f0099aae77cb46e6f757e2723::
https://api.github.com/repos/electron/electron,16245,libcc-1b74a92a80c2077fb0848d81b58ee6f0e4db752d-1546487100188::3-0-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`1b74a92a`](https://github.com/electron/libchromiumcontent/commit/1b74a92a80c2077fb0848d81b58ee6f0e4db752d) backport fix:export GetFgColor:3-0-x (https://github.com/electron/libchromiumcontent/issues/741) Notes: no-notes::,7aef5d14bbf5a90bbf6da62b5f52b8b0e90731d9::6a366b991f737b7a0444e54151c41a65b0bd637f::
https://api.github.com/repos/electron/electron,16112,libcc-daf9bdcdfdfd6bad258b5e1e48b2e17d06c1a987-1545086006343::2-0-x,0,merged,,"Updating libcc reference to latest.  Changes since the last roll: * [`0cc7c937`](https://github.com/electron/libchromiumcontent/commit/0cc7c93746f8895cf9197580bd2ad5068d6edc88) build: Upgrade //third_party/sqlite from 3.20.0 to 3.26.0 (https://github.com/electron/libchromiumcontent/issues/733) Backports https://chromium-review.googlesource.com/c/chromium/src/+/1352694 * [`794df100`](https://github.com/electron/libchromiumcontent/commit/794df100d964356627c3cf36bb4b6d22c27f65ca) fix: update more api under //sql for 3.26 (3-0-x) This is a backport PR similar to the 3-0-x and 3-0-x PRs https://github.com/electron/libchromiumcontent/pull/736 and https://github.com/electron/libchromiumcontent/pull/737. One difference: the upstream patch to remove auto-vacuum at https://chromium-review.googlesource.com/c/chromium/src/+/1362222 was problematic to backport to 2-0-x, and its PR description says ""no functional changes are expected, because the patch is inert in production"", so I've omitted it here. * [`2f4bff31`](https://github.com/electron/libchromiumcontent/commit/2f4bff3109596acced815abde3e80c1fe02efae4) fix omitted changes add internal_api_token.h include and chrome_sqlite3_recoverVtableInit * [`88a5ee3a`](https://github.com/electron/libchromiumcontent/commit/88a5ee3adae71772a266a61e7030eacf38b7dd02) remove duplicate changes The changes to  are already present in * [`efa6c4c5`](https://github.com/electron/libchromiumcontent/commit/efa6c4c587c81983380c4cdcd90af2f71c92dae3) restore accidentally-removed patch * [`30f4e255`](https://github.com/electron/libchromiumcontent/commit/30f4e255577c062973aebd3be373b622c3e419fa) Merge pull request https://github.com/electron/libchromiumcontent/issues/739 from electron/fix_sqlite_2_0_x fix: update more api under //sql for 3.26 (2-0-x) * [`daf9bdcd`](https://github.com/electron/libchromiumcontent/commit/daf9bdcdfdfd6bad258b5e1e48b2e17d06c1a987) fix: Magellan sqlite security issue (https://github.com/electron/libchromiumcontent/issues/740) * Revert ""restore accidentally-removed patch"" This reverts commit efa6c4c587c81983380c4cdcd90af2f71c92dae3. * Revert ""remove duplicate changes"" This reverts commit 88a5ee3adae71772a266a61e7030eacf38b7dd02. * Revert ""fix omitted changes"" This reverts commit 2f4bff3109596acced815abde3e80c1fe02efae4. * Revert ""fix: update more api under //sql for 3.26 (3-0-x)"" This reverts commit 794df100d964356627c3cf36bb4b6d22c27f65ca. * Revert ""build: Upgrade //third_party/sqlite from 3.20.0 to 3.26.0 (https://github.com/electron/libchromiumcontent/issues/733)"" This reverts commit 0cc7c93746f8895cf9197580bd2ad5068d6edc88. * Use upstream SQLite's Magellan security fixes. https://www.sqlite.org/src/vinfo/d44318f59044162e * fix tyop Notes: Fixed 'Magellan' security vulnerability in SQLite.::",bd8c3e76539619c8246d3179fa5349e713dfe699::
https://api.github.com/repos/electron/electron,16101,libcc-30f4e255577c062973aebd3be373b622c3e419fa-1545053835050::2-0-x,0,closed,,"Updating libcc reference to latest.  Changes since the last roll: * [`0cc7c937`](https://github.com/electron/libchromiumcontent/commit/0cc7c93746f8895cf9197580bd2ad5068d6edc88) build: Upgrade //third_party/sqlite from 3.20.0 to 3.26.0 (https://github.com/electron/libchromiumcontent/issues/733) Backports https://chromium-review.googlesource.com/c/chromium/src/+/1352694 * [`794df100`](https://github.com/electron/libchromiumcontent/commit/794df100d964356627c3cf36bb4b6d22c27f65ca) fix: update more api under //sql for 3.26 (3-0-x) This is a backport PR similar to the 3-0-x and 3-0-x PRs https://github.com/electron/libchromiumcontent/pull/736 and https://github.com/electron/libchromiumcontent/pull/737. One difference: the upstream patch to remove auto-vacuum at https://chromium-review.googlesource.com/c/chromium/src/+/1362222 was problematic to backport to 2-0-x, and its PR description says ""no functional changes are expected, because the patch is inert in production"", so I've omitted it here. * [`2f4bff31`](https://github.com/electron/libchromiumcontent/commit/2f4bff3109596acced815abde3e80c1fe02efae4) fix omitted changes add internal_api_token.h include and chrome_sqlite3_recoverVtableInit * [`88a5ee3a`](https://github.com/electron/libchromiumcontent/commit/88a5ee3adae71772a266a61e7030eacf38b7dd02) remove duplicate changes The changes to  are already present in * [`efa6c4c5`](https://github.com/electron/libchromiumcontent/commit/efa6c4c587c81983380c4cdcd90af2f71c92dae3) restore accidentally-removed patch * [`30f4e255`](https://github.com/electron/libchromiumcontent/commit/30f4e255577c062973aebd3be373b622c3e419fa) Merge pull request https://github.com/electron/libchromiumcontent/issues/739 from electron/fix_sqlite_2_0_x fix: update more api under //sql for 3.26 (2-0-x) Notes: no-notes::",dcc2a3ce5d1efdefb9bf3979fd8ad54c6f57710d::
https://api.github.com/repos/electron/electron,16076,libcc-29e02cd4c37777734f97d00b5a538d7c7acfa67a-1544820233689::3-1-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`064d8061`](https://github.com/electron/libchromiumcontent/commit/064d806190beca91c960e4182391e73252c200e7) build: fix native mksnapshot magic number mismatch * [`f782f573`](https://github.com/electron/libchromiumcontent/commit/f782f5739f621184043b0f5a9dbb6532ddd573f3) build: Upgrade //third_party/sqlite from 3.22.0 to 3.26.0 (https://github.com/electron/libchromiumcontent/issues/735) https://chromium-review.googlesource.com/c/chromium/src/+/1352694 https://chromium-review.googlesource.com/c/chromium/src/+/1357358 * [`8954813e`](https://github.com/electron/libchromiumcontent/commit/8954813e6197c73592e486d2c04fa665a074a8e0) Merge pull request https://github.com/electron/libchromiumcontent/issues/732 from trop-bot/electron-3-1-x-bp-build-fix-native_mksnapshot-magic-number-mismatch-3-0-x--1544717454108 build: fix native_mksnapshot magic number mismatch (3-0-x) (backport: electron-3-1-x) * [`6bd9fc84`](https://github.com/electron/libchromiumcontent/commit/6bd9fc8491860364f1a5b0938b7324ab9ec9ab89) fix: update more api under //sql for 3.26 (3-1-x) * [`29e02cd4`](https://github.com/electron/libchromiumcontent/commit/29e02cd4c37777734f97d00b5a538d7c7acfa67a) Merge pull request https://github.com/electron/libchromiumcontent/issues/736 from electron/fix_sqlite_3_1_x fix: update more api under //sql for 3.26 (3-1-x) Notes: no-notes::,2aca9613047de23e507ea600948c33fba15c5255::5f6a7683cb320bcc28e49c8802e484fbb4b29588::
https://api.github.com/repos/electron/electron,16072,libcc-8954813e6197c73592e486d2c04fa665a074a8e0-1544806392376::3-1-x,0,closed,,Updating libcc reference to latest.  Changes since the last roll: * [`064d8061`](https://github.com/electron/libchromiumcontent/commit/064d806190beca91c960e4182391e73252c200e7) build: fix native mksnapshot magic number mismatch * [`f782f573`](https://github.com/electron/libchromiumcontent/commit/f782f5739f621184043b0f5a9dbb6532ddd573f3) build: Upgrade //third_party/sqlite from 3.22.0 to 3.26.0 (https://github.com/electron/libchromiumcontent/issues/735) https://chromium-review.googlesource.com/c/chromium/src/+/1352694 https://chromium-review.googlesource.com/c/chromium/src/+/1357358 * [`8954813e`](https://github.com/electron/libchromiumcontent/commit/8954813e6197c73592e486d2c04fa665a074a8e0) Merge pull request https://github.com/electron/libchromiumcontent/issues/732 from trop-bot/electron-3-1-x-bp-build-fix-native_mksnapshot-magic-number-mismatch-3-0-x--1544717454108 build: fix native_mksnapshot magic number mismatch (3-0-x) (backport: electron-3-1-x) Notes: no-notes::,3f7243c2fd947a8d69444629b23bf61a49009825::cfd4e5aea7b6b2cfae2e3f2ed8654c53fc058f58::
https://api.github.com/repos/electron/electron,16061,mkt/backport-12686-to-4-0-x::4-0-x,1,closed,,#### Description of Change Backports https://github.com/electron/electron/commit/d1f0d6c1846f6949fe6f5d102c35d342750eebf3 Fixes https://github.com/electron/electron/issues/15725 The original change didn't backport cleanly because of the `nodeIntegration` stuff. I'm about 87% sure I did this correctly. /cc @deepak1556 #### Checklist - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes Notes: Fix crash with mouse wheel event monitor on app quit in macOS::,4a53fb3b56b40bee041f59fc528eab262a2f5a5c::
https://api.github.com/repos/electron/electron,16035,libcc-e90608c237f1ccac2056037bbcc3c75cc16f05a7-1544639551396::2-0-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`e90608c2`](https://github.com/electron/libchromiumcontent/commit/e90608c237f1ccac2056037bbcc3c75cc16f05a7) fix: checkboxes not rendering in mojave (backport: 2-0-x) (https://github.com/electron/libchromiumcontent/issues/730) Notes: no-notes::,f4c6545c45e29e84164563cdba3e87b7903f8d5d::
https://api.github.com/repos/electron/electron,16033,libcc-e856446abf81a7eaa3e2f7884f0ef837228234fc-1544625512729::3-1-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`c257f88d`](https://github.com/electron/libchromiumcontent/commit/c257f88d8044251f70ffa67209163de541464374) fix: backport patch to fix scrolling problem (https://github.com/electron/libchromiumcontent/issues/706) (https://github.com/electron/libchromiumcontent/issues/709) * [`e856446a`](https://github.com/electron/libchromiumcontent/commit/e856446abf81a7eaa3e2f7884f0ef837228234fc) fix: checkboxes not rendering in mojave (https://github.com/electron/libchromiumcontent/issues/731) Notes: no-notes::,152fdbded1984ecd086b58ff82e12c0dacacc8c1::d4f5e6c78e37b451447336bb8fee7027f4289e82::
https://api.github.com/repos/electron/electron,15946,libcc-ebe1313308aa95c71f23b2725efd091b8ece05ff-1543921905132::2-0-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`3c6f8641`](https://github.com/electron/libchromiumcontent/commit/3c6f864111cadcead58cdcf6218c278148a04001) fix: backport patch to fix scrolling problem * [`733be8c7`](https://github.com/electron/libchromiumcontent/commit/733be8c78461ccd5ada227b278c835ac2ab06a4c) S3Upload was in there twice * [`ebe13133`](https://github.com/electron/libchromiumcontent/commit/ebe1313308aa95c71f23b2725efd091b8ece05ff) Merge pull request https://github.com/electron/libchromiumcontent/issues/707 from electron/fix-trackpad-scrolling-2-0-x fix: backport patch to fix scrolling problem (2-0-x) Notes: no-notes::,8a6c3c040f2cbcf596a23c92430d7298697ffc20::
https://api.github.com/repos/electron/electron,15945,libcc-c257f88d8044251f70ffa67209163de541464374-1543911416403::3-1-x,0,closed,,Updating libcc reference to latest.  Changes since the last roll: * [`c257f88d`](https://github.com/electron/libchromiumcontent/commit/c257f88d8044251f70ffa67209163de541464374) fix: backport patch to fix scrolling problem (https://github.com/electron/libchromiumcontent/issues/706) (https://github.com/electron/libchromiumcontent/issues/709) Notes: no-notes::,2f01523e6e93989d05c418dd2d4757870c867925::9639ec92570d20adc31a1582973068a94f3fe2e0::
https://api.github.com/repos/electron/electron,15902,backport-mksnapshot-testing::4-0-x,1,merged,,"This is a backport of #15800 for 4-0-x.  This fixes an issue with running ffmpeg and mksnapshot tests on VSTS. Also, add testing of ffmpeg and mksnapshot to arm tests (cherry picked from commit 515525cfc68731ae879af606b79e8cc1a6b9c91a) #### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes <!-- Used to describe release notes for future release versions. Use `no-notes` to indicate no user-facing changes. --> Notes: no-notes::",66eca9ab61f7576d631853adf1218b015ab20c07::
https://api.github.com/repos/electron/electron,15887,clean-git-vsts::3-1-x,1,merged,,"#### Description of Change This PR makes sure that the git directories don't contain any extra files.  This is a backport of #15248 to 3-1-x <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes <!-- Used to describe release notes for future release versions. Use `no-notes` to indicate no user-facing changes. --> Notes: no-notes::",f11aedf5770a482fde41bdb1d1eede162d89cb84::
https://api.github.com/repos/electron/electron,15884,fix-unused-result::master,1,merged,,"#### Description of Change The `freopen`s introduced in https://github.com/electron/electron/pull/15555 were erroring on release builds a result of their return values being unused. This wraps them in a macro to mitigate that error. /cc @deepak1556 @ckerr #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes <!-- Used to describe release notes for future release versions. Use `no-notes` to indicate no user-facing changes. --> Notes: no-notes::I think the better fix here would be `CHECK(freopen(...))`. On success, the return value is just `stdin`, but on failure the return value is `null`.::I see this is already merged and backported, but we should at least switch this to `CHECK` on master.::",d1a4794f450e161ae7cf2740aacce8439e25cf48::
https://api.github.com/repos/electron/electron,15850,libcc-5efc170f1f3194da636f1c2b499d3e46e99cce5e-1543328820788::3-0-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`5efc170f`](https://github.com/electron/libchromiumcontent/commit/5efc170f1f3194da636f1c2b499d3e46e99cce5e) fix: backport patch to fix scrolling problem (https://github.com/electron/libchromiumcontent/issues/706) Notes: no-notes::,46fe6e681b57ffc767527ec5f4eea88a9de2a6dd::3f0516b912173a7a99015ef102afed953c924c54::
https://api.github.com/repos/electron/electron,15813,backport_14656_mojo_proxy_resolver::3-1-x,1,merged,,"#### Description of Change The first commit is direct backport with only gyp specific changes, the second commit gets the patches made in libcc and the last commit updates api for Chromium 66 since the original PR was agains Chromium 69. Backports https://github.com/electron/electron/pull/14656 Depends on https://github.com/electron/libchromiumcontent/pull/705 Fixes https://github.com/electron/electron/issues/13829 #### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes Notes: Switch to mojo proxy resolver::",d7136bf79bc699e4bc13cebbd79310f5255630bd::624161b639610abb0db56899dc57f9ee84b2fce9::47c9ab1255a1a7bdfc1517350de5ffd5edcc6a24::527148f488fedc9d7b8f37b000c89190729913c8::830c57bf1530c67784ce4b2d74e175be503ae311::1228db1ea8be61279336d41d827765fac674e292::
https://api.github.com/repos/electron/electron,15801,web_security_corb_patch-backport-4_0_x::4-0-x,1,merged,,#### Description of Change Manual backport of `web_security_corb_patch` from `master`. See https://github.com/electron/electron/pull/15737 for details. CC @deepak1556 #### Checklist - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes Notes: Disable CORB checks when web security preference is disabled::,45c3d3118fb94c30e956059f07b540492c74766e::
https://api.github.com/repos/electron/electron,15659,libcc-7361dbe5ac927be4276ec7da1d3548c4f22343a0-1541795324352::3-0-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`7d3fbcae`](https://github.com/electron/libchromiumcontent/commit//7d3fbcaee05f57adb5a82960cbd88d4d3bc2e83d) backport: SQLitePersistentCookieStore: recover from uniqueness violation on V9->V10 migration * [`4a2bbf12`](https://github.com/electron/libchromiumcontent/commit//4a2bbf12bba5d3aac6ef6fa7d484543c0f453010) Update Azure S3 task name * [`1feeb2c2`](https://github.com/electron/libchromiumcontent/commit//1feeb2c2760360ac743dac1a1a6ebcf973314a0d) S3Upload was in there twice * [`5f612443`](https://github.com/electron/libchromiumcontent/commit//5f6124431b3130c85aad0274714f208d65182495) Merge pull request #700 from electron/3-0-x_backport_6c41b439b fix: backport: SQLitePersistentCookieStore: recover from uniqueness violat… * [`d47b03d1`](https://github.com/electron/libchromiumcontent/commit//d47b03d13caf297f950a26ea0cb455c543eb7f05) build: include bin files needed for v8_context_snapshot_generator * [`7361dbe5`](https://github.com/electron/libchromiumcontent/commit//7361dbe5ac927be4276ec7da1d3548c4f22343a0) Merge pull request #701 from electron/v8-gen-bins build: include bin files needed for v8_context_snapshot_generator Notes: no-notes::,cf7d48290d95a2095df9ed617c8b280d29cc31fb::6be41461d9bd6ac0cba8797e5e6c5e5b5d437f51::
https://api.github.com/repos/electron/electron,15657,libcc-5f6124431b3130c85aad0274714f208d65182495-1541784504305::3-0-x,0,closed,,Updating libcc reference to latest.  Changes since the last roll: * [`7d3fbcae`](https://github.com/electron/libchromiumcontent/commit//7d3fbcaee05f57adb5a82960cbd88d4d3bc2e83d) backport: SQLitePersistentCookieStore: recover from uniqueness violation on V9->V10 migration * [`4a2bbf12`](https://github.com/electron/libchromiumcontent/commit//4a2bbf12bba5d3aac6ef6fa7d484543c0f453010) Update Azure S3 task name * [`1feeb2c2`](https://github.com/electron/libchromiumcontent/commit//1feeb2c2760360ac743dac1a1a6ebcf973314a0d) S3Upload was in there twice * [`5f612443`](https://github.com/electron/libchromiumcontent/commit//5f6124431b3130c85aad0274714f208d65182495) Merge pull request #700 from electron/3-0-x_backport_6c41b439b fix: backport: SQLitePersistentCookieStore: recover from uniqueness violat… Notes: no-notes::,726b87302bc35b9eab3c37087d78bc8926fb4a8d::63817d48849573853761574246762359087916df::
https://api.github.com/repos/electron/electron,15520,latest-tag-fix-3-0-x::3-0-x,1,merged,,Manual backport of #15274 to <= 3-0-x Notes: no-notes::,eba7eadbd4423e84b688c3539f063fc7de1f1368::
https://api.github.com/repos/electron/electron,15400,brenca/fix-shift-accelerators::master,1,merged,,"#### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> Fixes #15392. For some reason our patch applied a `Shift` modifier to a whole bunch of accelerator characters (like `Backspace`, but `Tab` and `Enter` were also affected), my best guess is that those used to be broken with `Shift` but now are working properly in `chromium`. I'll backport this manually, trop couldn't deal with `4-0-x`. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes <!-- Used to describe release notes for future release versions. Use `no-notes` to indicate no user-facing changes. --> Notes: fixed some accelerators having `Shift` appended to them twice <!-- One-line Change Summary Here-->::those spaces are important, leave them in please! this patch should be exactly as exported by `git-export-patches`.::I knew there was something up with those spaces, gonna fix asap::Who owns this `accelerator` ? I don't see any explicit ownership claim in the code path, maybe I am missing something here.::oooh, good catch! this should probably be on the stack. ```suggestion ui::Accelerator accelerator; model_->GetAcceleratorAtWithParams(index, true, &accelerator); ```::Done! Thanks for catching this::",83b36ae5cf8b095f32aad17e44a8f57a4c993b6c::af2c6f3e98b04cf0104bad8b5ce8e74bdd98be9f::7fae6dbcfd4d801d6066638f005f491e527de83a::880b9bbb536141262b15a20a6ba728c70b2298e1::2b0e4be5499c0bbea136f794f2c8cad2f2d788f4::
https://api.github.com/repos/electron/electron,15346,dump-syms-verbose-4-0-x::4-0-x,1,merged,,"#### Description of Change Manual backport of #15176 to 4-0-x. This PR temporarily add additional debugging statements to generate_breakpad_symbols.py to determine why it is hanging. I can't reproduce the hang but if it does happen again, we should now have more information as to why it is happening. <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes <!-- Used to describe release notes for future release versions. Use `no-notes` to indicate no user-facing changes. --> Notes: no-notes::",f0af2e1ab153b0c2dfed149cf3c4170176656112::
https://api.github.com/repos/electron/electron,15213,no-node-integration-in-child-window::master,1,merged,semver/major::,"#### Description of Change <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> Don't allow child windows opened with `nativeWindowOpen` to have node integration, otherwise memory leak will happen. This change should NOT be backported since it is a breaking change. This is the last PR to close #12634. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes <!-- Used to describe release notes for future release versions. Use `no-notes` to indicate no user-facing changes. --> Notes: Don't allow child windows opened with `nativeWindowOpen` to have node integration.::",373da1b47c4e41465248908f35b52febe25c15ec::d34f6fb535787261f2ca27020fbb35fe0780cebd::
https://api.github.com/repos/electron/electron,15181,menu-fix-3::3-0-x,1,merged,,"#### Description of Change Manually backporting single commit from #15094, not backporting the test as it needs robotjs dependency. #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [ ] PR description included and stakeholders cc'd - [ ] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [ ] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes <!-- Used to describe release notes for future release versions. Use `no-notes` to indicate no user-facing changes. --> Notes: Fixed bug that caused menu accelerators to stop working on some linux::",6a22705b9342d57b6be2e5828708e8734cd912cf::
https://api.github.com/repos/electron/electron,15169,better-release-notes::master,1,merged,,"#### Description of Change Improved release note generation. CC @MarshallOfSound @codebytere - [x] Support our commit message idioms - [x] support semantic commits - [x] support [GitHub keywords](https://help.github.com/articles/closing-issues-using-keywords/) for determining issue number (e.g. `Fixes #999`) - [x] scan for idiom of `(#\d+)$` for PR number - [x] Infer type if non-semantic message contains `Chore(docs)` etc. - [x] Infer type 'fix' if non-semantic message has a sentence beginning with `(fix|fixed|fixes)` - [x] check for [`BREAKING CHANGE`](https://www.conventionalcommits.org/en/v1.0.0-beta.2/#commit-message-with-description-and-breaking-change-in-body) in commit body or PR body - [x] scan for trop message `Merge pull request #\d+ from branchname` - [x] scan for trop message `Backport of #\d+` - [x] scan roller-bot PR messages that summarize all the changes - [x] Support Notes - [x] Use Notes when available in PRs - [x] support [multiline Notes](https://github.com/electron/clerk/pull/16) - [x] Walk through roll PRs back to the orginal commits/PRs to find Notes - [x] Remove the 'One-line change summary here' placeholder if it was accidentally left in PR - [x] Do not show commits associated with 'No-notes' PRs - [x] Support other variations of 'No-notes' e.g. 'no_notes' or 'none' - [x] Do as much computation as possible from local git repo -- generally hit GitHub only for PRs. - [x] Add command-line interface to specify arbitrary reference points for easier manual use / testing - [x] Fold related commits into one line at render time - [x] Plug it into existing prerelease scripts #### Checklist - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [ ] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [ ] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes Notes: no-notes::Was the loss of this period intended?::Mostly for my curiosity, how is this different from `require('./notes.js')`?::![It's over 900!](https://vignette.wikia.nocookie.net/dragonball/images/4/4b/VegetaItsOver9000-02.png/revision/latest?cb=20100724145819)::capitalizing `ReleaseNotes` here indicates to me that this is a class, but it looks like its actually a function called getReleaseNotes. I'd redo this as `const releaseNotesGenerator = require('./release-notes/index.js')`::Instead of duplicating this from line 129, why not put that line in `getReleaseNotes`?::I'm not a big fan of using 1 letter variable names. I mean I can guess that t is tag but characters are cheap.::Commented out code should be removed.::I prefer to always use brackets with if statements to provide better visual context and for future expansion of logic inside the if statement::I think its better to be more precise here with: ``` if (commitMessage.toLowerCase().includes('backport') && ``` It also helps if someone is looking for the word `backport` in the code.::Good catch. No, this wasn't intentional. Fixed 282475c86::...because I didn't realize you could do that. :grimacing: I agree, that's much simpler. Fixed e712a78cc::Fixed 571cab6a::Good suggestion! Fixed 6b92ce6b::You're right. I was going for terseness in filter/map arrow functions, but looking at the before & after, I agree it's more readable the way you suggest. Fixed b1c24f66::Fixed 9572e830::Fixed 701a6cac2234844d388986480536354f9e4927f4 As an aside, I temporarily added `curly` to eslintrc to check for this::Fixed 037831a5d13ab78baca2bb10b227cb4b3a6b18a3::> The year is 2348 and Electron v1000 was just released, suddenly release notes stop working, the world grinds to a halt as we wonder what has changed::",886ae3b5bb69e2249688e8c79a177948c5ac2f56::98be5f61241e237a015bed4355b6d93a5c9ddde4::6c56f0cfe5c46c3896b6ea98bc35c7d350534108::c5386cca1d40637bb65af37e53623582e1ce6217::b60a8398ab4768482a05d44b01a20ff1e6cf8e2f::7c52dd58892a047588a64652474f91b227a79170::deb8b58fb525462cff153fda494f3fb0f33b4c65::a185178a54a4cdd53102f7c3568966648610eaa7::1ef341af3858543e913f7c477ab808fb9519068b::b451aacc85b92fd04879f994b8989af8cd7600b1::c28fe06a4933f8b83f8563a3cce3886128072ba8::6d3806942bcbca66ce4b791c939a882837a38226::d60d56949ae18bd8ae4e133469d2e0df609b5a29::e239e86c2356ea721019c8c9ee3d10c456ece36b::16898fab8c9a986359eb12b6bf868d7752b530a7::7594c73a34d97432ab94a81244f4b6a595987ceb::9e02b6204249cc4c220038638c49aa9132205188::db99eaca5daeb8385acfb5f7062c3656750d8ab5::70f1b51d64f4d93f406559f8e791d374a631bf1e::1266f99e5af5516ca8038325b777f699a3f2262f::282475c8660329b15d113e04daf682ed9296a293::e712a78ccccf6319d5982d555d423524549d18c2::571cab6af7621bba4b7ea654c958c045cfc05642::6b92ce6b773956fe26a743bb944db13c75f0c3e6::9572e830315f98e3c19a7525efaed83b9363103f::b1c24f662c6804a0272738f2e546cd0a388ece75::037831a5d13ab78baca2bb10b227cb4b3a6b18a3::701a6cac2234844d388986480536354f9e4927f4::29cdf537f3669e88ff99c6bc0a71a18d67c83c04::9244a34b83abc4c38d17ebda9e85d97b69a5492b::6fae0013cb0ef9f90a42946f0ff079291e9705c3::
https://api.github.com/repos/electron/electron,15152,3-0-x-pie::3-0-x,0,merged,,"#### Description of Change [Corresponding 2-0-x's PR is here.](https://github.com/electron/electron/pull/15148) > build: Enable PIE when compiling Linux builds, fix #14961. (3-0-x) > > PIE allows an application to utilize the full benefits of ASLR > to prevent itself from exploitations, but it was disabled for > all released versions of Electron (3.0 and prior). > > Currently, PIE is already enabled since 9294fac but enabling it > for all released version is still an ongoing work (#14961). This > patch backports PIE to the 3.0.x branch. > > Signed-off-by: Tom Li <tomli@tomli.me> > #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [ ] PR description included and stakeholders cc'd - [ ] `npm test` passes - [X] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes <!-- Used to describe release notes for future release versions. Use `no-notes` to indicate no user-facing changes. --> Notes: Enable PIE when compiling Linux builds.::",a18a97c9abfc1a5bf71fe6cb049b236f56677f78::
https://api.github.com/repos/electron/electron,15148,2-0-x::2-0-x,0,merged,,"> > PIE allows an application to utilize the full benefits of ASLR > to prevent itself from exploitations, but it was disabled for > all released versions of Electron (3.0 and prior). > > Currently, PIE is already enabled since 9294fac but enabling it > for all released version is still an ongoing work (#14961). This > patch backports PIE to the 2.0.x branch, which is an especially > important branch, since security is an urgency for many existing > programs including Signal-Desktop. Enabling it can help protect > many high-risk users. > > Signed-off-by: Tom Li <tomli@tomli.me> > #### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [ ] PR description included and stakeholders cc'd - [ ] `npm test` passes - [X] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) #### Release Notes <!-- Used to describe release notes for future release versions. Use `no-notes` to indicate no user-facing changes. --> Notes: Enable PIE when compiling Linux builds.::",ca8ba42b2baa738b116adc6d848e4c5cf15f0f76::
https://api.github.com/repos/electron/electron,15088,fix-power-observer-dbus_2-0-x::2-0-x,1,merged,,##### Description of Change Fixes #14958. Manual backport of #15030 to fix a pair of power-monitor bugs: * nullptr dereference in dbus response handling (14958) * redundant dbus signal subscriptions cc @alexeykuzmin ##### Checklist - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) ##### Release Notes Notes: Fixed crash when login1 manager dbus calls failed. ::,89da1e4c026dff44241ae67391e1244bc43f7b0d::
https://api.github.com/repos/electron/electron,15072,libcc-42e375e8b0bf4d7e030237adbb9cf7122d9f3246-1539217614684::3-0-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`42e375e8`](https://github.com/electron/libchromiumcontent/commit//42e375e8b0bf4d7e030237adbb9cf7122d9f3246) fix: update accelerator patch to handle recent chromium fixes (#693) backports electron/electron#14966 Notes: no-notes::,884a29cf9c4e5774d119557c8aabe07deda439d5::2b382ccbf2f1196dd5899d58e0b5817c78aeff53::
https://api.github.com/repos/electron/electron,15052,minSizeConstraints_2-0-x::2-0-x,1,merged,,"##### Description of Change Manual backport of #14931 to fix #13994, enforcing window minimum height/width @Kthulu120 @nornagon ##### Checklist - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) ##### Release Notes Notes: setSize() now honors minimum size constraints.::",bdf563b1d17d819d71698a4ce9c5d3ecc350f9ea::
https://api.github.com/repos/electron/electron,15033,fix-power-observer-dbus_3-0-x::3-0-x,1,merged,,"##### Description of Change Fix: backport #15030 to fix #14958 dbus crash, re-enable power monitor tests. Manual backport was required because between `3.0.0` and `master` the tests were refactored to use BDD-style syntax. CC @alexeykuzmin  @deepak1556 ##### Checklist - [x] PR description included and stakeholders cc'd - [ ] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) ##### Release Notes Notes: Fixed crash when login1 manager dbus calls failed.::",aeb463bacaac4c72ef55aebe264024365237ed97::bfa687840ad5e322fea6ef804c8c8b227f613589::93dc523527e89656d26c4b2133327ce781790b23::
https://api.github.com/repos/electron/electron,14966,fix-accelerator-patch::master,1,merged,app-feedback-program::,Closes #14501 This will need to be manually backported into libcc electron-3-0-x Notes: fix shift based accelerators not rendering correctly::,0e316a5af3176c25c73bc89590ab922050508fed::
https://api.github.com/repos/electron/electron,14829,v4-node-headers::master,1,merged,,"Closes #14828 This doesn't need to be backported, it's for >= v4 Notes: no-notes::The uploading of this new headers file will be done in #14831::",fc2ef5eea19a6ed90e67cd5e6c2513eb401819ab::
https://api.github.com/repos/electron/electron,14800,fix-xcode-ten-build::master,1,merged,,"##### Description of Change This PR backports [this commit](https://chromium.googlesource.com/chromium/src/build.git/+/4287a0d364541583a50cc91465330251460d489a%5E%21), which does the following: * Removes IDEBundleInjection.framework from egtests. * Corrects the DTXcode generation function to handle leading '10'. * Fixes a main_application_delegate SDK change * Fixes a non-null SDK change in a net unittest. And allows Chromium, and thus Electron, to build once more. ##### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) ##### Release Notes <!-- Used to describe release notes for future release versions. See https://github.com/electron/clerk/blob/master/README.md for details. --> Notes: no-notes::should note that this is the `build` commit id, the chromium commit hash is https://chromium.googlesource.com/chromium/src/+/27f9cbd88beea37bda9d6b46dabec9cf5eb386f3::",fc143a51f083861f04386fb525ddd223df252cf6::0cf76692ca4a196f83fa569c0d4ccb8e0d06f9bd::
https://api.github.com/repos/electron/electron,14668,skip-vsts-debug-2-0-x::2-0-x,1,merged,,"##### Description of Change This backports #14652 to 2-0-x. Skip VSTS testing builds on older branches Also, don't send slack notifications for actual releases <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> ##### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) ##### Release Notes <!-- Used to describe release notes for future release versions. See https://github.com/electron/clerk/blob/master/README.md for details. --> Notes: no-notes::",e893472e0817688a3b109f8775688b63fc8b0e45::
https://api.github.com/repos/electron/electron,14654,libcc-cbd04c0dccc7655cd42f02baee3a622d5170ac08-1537218429615::2-0-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`09483806`](https://github.com/electron/libchromiumcontent/commit//09483806e9a1ee17e8873c7bf41fdbaf37808e75) Merge pull request #643 from electron/roll-clang chore: roll clang 307486:308728 * [`cbd04c0d`](https://github.com/electron/libchromiumcontent/commit//cbd04c0dccc7655cd42f02baee3a622d5170ac08) fix: Skip network adapters that are not in state IfOperStatusUp when probing for WPAD via DHCP (backport: 2-0-x) (#686) Backports https://chromium-review.googlesource.com/c/chromium/src/+/946870 Notes: no-notes::,ba565a2808e0f0f9a4d8bbbb4276632de8a2b4af::
https://api.github.com/repos/electron/electron,14615,bp-deprecation::3-0-x,1,merged,,##### Description of Change Combination backport of [#14495](https://github.com/electron/electron/pull/14495) and [#14579](https://github.com/electron/electron/pull/14579). Fixes issue whereby we were printing: ``` (electron) The 'privateBytes' property of function getAppMetrics() { [native code] } has been deprecated and marked for removal. ``` /cc @ckerr ##### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] tests are [changed or added](https://github.com/electron/electron/blob/master/docs/development/testing.md) - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) ##### Release Notes Notes: no-notes::,d341c9233fe8ad1ca4df32a7d9b871cbaff79172::
https://api.github.com/repos/electron/electron,14581,make-cpplint-work-in-gn::master,1,merged,,"##### Description of Change cpplint didn't work in the GN world because it was looking for depot_tools to exist as a result of `./script/bootstrap.py` rather than already being in the user's environment. @codebytere @jkleinsc ##### Checklist - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) ##### Release Notes Notes: no-notes::Why would you need this in the master?::`null` should be used to represent an ""empty value"". `undefined` has different semantics of ""absent"" entity.::`const line` =)::Hm good point. My initial thinking was that it would be useful to have a script that worked regardless of which branch it was in, e.g. if we backport it. But I didn't think it through; this doesn't rise to the level of severity needed to backport::Agreed. Mooted by previous comment as the helper function is now gone.::",6ee515f92c9f836193d19f98367be1501781d11c::ea1cfcfd710d401f0319f8b6b8cd8a487627b0aa::779dd5df10589f823cc5e2074bf41e6e45334f0e::7851b8f5aa2fecf902c3f13687ba30e411bf8238::
https://api.github.com/repos/electron/electron,14317,libcc-99c3a9966a9bef4a54b1740d9fed30ce78b4c421-1535318086012::master,0,merged,,"Updating libcc reference to latest.  Changes since the last roll: * [`278da7d9`](https://github.com/electron/libchromiumcontent/commit//278da7d9bad0d6273fe91f9f65a0f019a585ce70) Revert ""fix: implement ArrayBuffer Realloc (#625)"" (#661) This reverts commit 5fe4b309eabf609bcecc5f5b184989cd4a895066. * [`99c3a996`](https://github.com/electron/libchromiumcontent/commit//99c3a9966a9bef4a54b1740d9fed30ce78b4c421) build: disable a DCHECK in viz::ServerSharedBitmapManager (#662) It gets constantly triggered on Windows CI, e.g. https://windows-ci.electronjs.org/project/AppVeyor/electron-i8wjp/build/1.0.91 We expect that backporting of https://chromium-review.googlesource.com/802574 should fix it. Notes: no-notes::",6d5c61e458d86ac8fca40e9a5a915357d2e51880::03a77195fb6995dccd5303febe94f270f78773a9::
https://api.github.com/repos/electron/electron,14280,libcc-7165af0ca9863529f28e493568ae3d105eddcdef-1535034953960::3-0-x,0,merged,,Updating libcc reference to latest.  Changes since the last roll: * [`f2865461`](https://github.com/electron/libchromiumcontent/commit//f2865461cc28f95092c6ad27eb05325ac460ae8f) build:[gyp] ship //net:extras for component build * [`f7a7b462`](https://github.com/electron/libchromiumcontent/commit//f7a7b46258fe44e9ee0d510e8d25deabedba7587) fix: allow content_browser service to access GeolocationControl interface from device service * [`7165af0c`](https://github.com/electron/libchromiumcontent/commit//7165af0ca9863529f28e493568ae3d105eddcdef) Merge pull request #660 from electron/3_x_backports chore: backport some commits to 3-0-x * build:[gyp] ship //net:extras for component build * fix: allow content_browser service to access GeolocationControl interface from device service Notes: no-notes::,fe3cfe05feb234c92c8232b569a9d89f5f3820ee::04c070715f0cd34915c48f9f0668f6ca57ddaa79::
https://api.github.com/repos/electron/electron,14215,allow-all-backwards-compatible-changes-during-beta::master,1,merged,,"This proposal changes what's allowed in stabilization branches during beta. Currently, only backwards-compatible bug fixes (ie, `semver/patch`) are allowed. With this, only backwards-compatible changes (ie, `semver/minor`) would be allowed. Notes: no-notes::Do we really need beta cycles for minor releases? It looks like it's too complicated to have two betas at the same time. Allowing only ""safe"" features to minor releases can be a good alternative.::> Do we really need beta cycles for minor releases? This PR doesn't change existing policy on betas in minors. My main answer to this question is I don't think it matters because we we won't be shipping supported minor releases for the forseeable future -- we have to catch the majors up with upstream first. My default answer is 'yes we should have betas' because it's risky to ship code that hasn't been user-tested. We should reconsider this if/when a supported minor comes up, since by that time maybe the nightly builds will mitigate that risk. > Allowing only ""safe"" features to minor releases can be a good alternative. As voted by consensus in the maintainers group meetings?::> This PR doesn't change existing policy on betas in minors. But it _is_ policy related. And I think it would be great to change policies regarding minor releases too. > it's risky to ship code that hasn't been user-tested I don't see any difference between non user-tested bugfixes and non user-tested features. A change type should only dictate a next version number, not to be a criterion (TIL a new word!) for backporting.::",faf2c62e3c58ec59e6d00a9a80e8dc02ff73121b::d6c69895ad97e34290a2241b8a2afc811a4549e0::0a48b7efb971c0258073e9d36c91caf00188f86d::
https://api.github.com/repos/electron/electron,14170,backport-release-scripts::3-0-x,1,merged,,"##### Description of Change Backports the totality of our release script changes to support sudowoodo. Also backports changes that have been made to a few other release script files in master after `3-0-x` was cut with the purpose of keeping them in sync. /cc @jkleinsc @MarshallOfSound ##### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines) ##### Release Notes Notes: no-notes::",bd76f57539bf26317146ea5fedbca290dbb8dbda::10979f282ecc7bd25fbb86c3fdac73a8f2b58a71::
https://api.github.com/repos/electron/electron,13993,ajm-win7-crash_2-1-x::2-1-x,1,merged,,"Manual backport of https://github.com/electron/electron/pull/13543 I don't even know yet if this builds on Windows and usually wouldn't do a premature PR like this; however since time is a factor for `2.1.0` and I'm about to EOD, this is here if someone wants to take the baton and run with it. @ajmacd @MarshallOfSound ::",5298cf7071726b67acbf29cab41075d84ff60d52::70140ae9153f0f9ed56e43485eba599b03762387::488c6ab5f34cdd27c109bfeab6bb48179b93d996::
https://api.github.com/repos/electron/electron,13921,reinit-feature-list-sooner-2-0-x::2-0-x,1,merged,,"As it turns out, we can reinitialize the feature list directly after the user JS script has been executed instead of much later. This allows modifications to `--enable-features`/`--disable-features` to work with a greater set of features. This backports #13920 to `2-0-x`.::",f979f9adcaca0584c142d402e635e0c863dee0fb::
https://api.github.com/repos/electron/electron,13891,update-node-doc::master,1,merged,,"Update the `upgrading-node.md` doc for latest paths and script commands. /cc @alexeykuzmin ##### Checklist - [x] PR description included and stakeholders cc'd - [x] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines)::`--output_-dir` ? )::> `--filename backport_abc123.patch cherry-pick_def456.patch` Can we ""recommend"" to use default patchfile names here? Simply by omitting the `--filename` arg. ::> and libc"" Probably should read ""libcc"".::What's `git pso`?::> deps/V8 Should be ""deps/v8"".::> the `get-patch` script Should it be a link to https://github.com/electron/libchromiumcontent/blob/master/script/README.md#get-patch ?::",780b295caaeab8eeab4aa26a3c8cdf2f80628a0c::762b12b94ae7c707ca0a3c75f6326a0193998627::b30a559316c492727dea0b8937c8cf6106f59679::
https://api.github.com/repos/electron/electron,13782,fix-enable-disable-features-2-0-x::2-0-x,1,merged,,"Unlike Chrome, we were not using the --enable-features and --disable-features command-line arguments to initialize `base::FeatureList`. This backports #13784 to `2-0-x`.::use `auto feature_list = std::make_unique<base::FeatureList>();` instead::We can't use that in this branch: ``` ../../brightray/browser/browser_main_parts.cc:263:28: error: no member named 'make_unique' in namespace 'std' auto feature_list = std::make_unique<base::FeatureList>(); ```::",6689dce5baa6b1a21373ce8143e3f1e3fb4625d6::
https://api.github.com/repos/electron/electron,13749,context-id-webcontents-id::master,1,merged,,"This fixes some double-freeing issues introduced by #13727 when having multiple `WebContents` sharing the same renderer process. After after using `processId-contextCounter` as `contextId`, it may happen that contexts in different `WebContents` sharing the same renderer process get the same `contextId`, which then leads to double-freeing when using certain options. Using `webContentsId` as part of key in `ObjectsRegistry` can fix this. I have backported this fix to #13734 (3-0-x) and #13735 (2-0-x).::I know it's commented out, but should be `next_context_id_`?::*(trivial; optional)* even though this is an easy one-liner, it's repeated three times. Arguably better to extract into a simple helper method::Since we already have this, I think we can avoid the extra property lookup by saying `delete owner` instead?::s/destoryed/destroyed/::To delete a key in dictionary this is the only supported syntax.::",c4a0447a609c5a7da81bd4a7a4aea54a07388abe::
https://api.github.com/repos/electron/electron,13725,node-headers::master,1,merged,,"This adds a target that builds a node_headers directory suitable for building test modules against (i.e. to be passed as `npm_config_nodedir` to `npm rebuild`). We can't just use `//third_party/electron_node`, because that will result modules being built using the headers from `deps/v8`, instead of those in `//v8`. This target builds a hybrid header dir combining nodejs's headers and those of its non-v8 dependencies, combined with the v8 headers from chromium's v8. To build the headers: ```sh $ ninja -C out/Default electron/build/node:headers ``` This will produce a directory in `out/Default/gen/node_headers` containing the hybrid headers. You can pass this directory as `nodedir` to `npm rebuild`. The files in the lists are taken from the files that nodejs generates in its `install` step: ```sh node$ HEADERS_ONLY=1 python tools/install.py install foo / node$ find -s foo -type f -not -path '*openssl*' ``` (with the notable addition of backporting https://github.com/nodejs/node/pull/20925, which adds some headers that were accidentally missing in node v10.2.0) ##### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [ ] relevant documentation is changed or added - [x] PR title follows semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines)::",70068f313ad5a98d5e6e8b021403cd1a549f032c::
https://api.github.com/repos/electron/electron,13615,release-updates-2-0-x::2-0-x,1,merged,,"This is a backport of #13597 for 2-0-x This PR includes two updates to our release process: 1. Adds support for running the 32-bit and 64-bit AppVeyor release builds as separate builds.  The builds have already been split into separate builds, but the release process needs to be updated to accommodate this change. 2. The upload script (`script/upload.py`) used by the release process was using an old python module to get the release information from GitHub.  It also used this module to create the release if it didn't exist.  This release creation isn't necessary anymore as `script/prepare-release.js` does this work.  Also, in the last couple of releases, there was an issue where this ended up creating extra releases and uploading the files to the wrong release.  This PR changes to use a new node script `script/find-release.js` to find the release instead. <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md --> ##### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [X] PR description included and stakeholders cc'd - [X] `npm test` passes - [X] commit messages or PR title follow semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines)::",799b94d43a307d98e0da5296a112b3dc718367ad::6e200012d2692a8378aec899e605c6596f124ccd::
https://api.github.com/repos/electron/electron,13538,dwm-backport::2-0-x,1,merged,,"Disable chromium's redraw locking on Windows when DWM is disabled (#12501) * disable redraw locking on windows * update libcc ref (cherry picked from commit a14ebc80d2f8c30d8443cdbfc0f9dd7aebad1040) Backporting https://github.com/electron/electron/pull/12501 and backport libcc PR is https://github.com/electron/libchromiumcontent/pull/582. Fixes #1821 for 2-0-x. ##### Checklist <!-- Remove items that do not apply. For completed items, change [ ] to [x]. --> - [x] PR description included and stakeholders cc'd - [x] `npm test` passes - [x] commit messages or PR title follow semantic [commit guidelines](https://github.com/electron/electron/blob/master/docs/development/pull-requests.md#commit-message-guidelines)::",4abe5a296303d4805e93ce19ff5000cbc3372308::
https://api.github.com/repos/electron/electron,13359,release-notes-generator::master,1,merged,,"This will auto-generate release notes but is semantic-version aware and aware of backports For a release of 5.0.0 it will generate release notes from the last release in 4.x by * Taking all PR's that have landed on the `5-0-x` branch * Taking all PR's that have landed on the `master` branch since `4-0-x` was branched off * But ignore any PR's that were backported into `4-0-x` For a release of 5.0.1 it will generate release notes from 5.0.0 by * Taking all PR's that have landed since 5.0.0 on the `5-0-x` branch TODO: I don't think this logic currently supports the case of a `5.1.0` release (minor releases), but because we haven't done one of those in a while and probably won't for a while to come I think we can merge this in to get better release notes now. Usage: ```bash ELECTRON_GITHUB_TOKEN={my_github_token} node script/release-notes ```::Instead of this mapping, I would prefer that we run a script that updates the old PR titles.::How would this work when releasing an older release (eg 2.0.4)?::It's not super obvious from the usage, but the value from this method won't be used if you are cutting a `2.0.4` release, it will only be used if you are cutting a new major release, which will always be the ""newest"" release 👍 ::It was editing 200 PR titles manually or making a file locally 😆 I went with the option that caused less work for me 😆 If someone wants to go through and update all those PR titles 👍 otherwise this mapping will work for now until all PR's have the correct title style::",2c255680a96ba5dce512100c271f1f1c0b8ef346::57a18d4c495c6df4e57b97f6dec6507027e78460::81640806bc1439f98cd1ededc38deb89031ee188::
https://api.github.com/repos/electron/electron,13247,node-backport-efffcc26::2-0-x,1,closed,,Test PR that to run CI on a build using our Node branch https://github.com/electron/node/tree/backport-efffcc26 Details @ https://github.com/electron/node/pull/38::,e2393b7cedadca4d02848c6c04b245985d5e61d4::
https://api.github.com/repos/electron/electron,13021,backport-12877-to-2-0-x::2-0-x,1,closed,,"#12877::@tarruda looks like this file doesn't exist in the 2-0-x branch::It's not clear to me what the criteria is for putting a module in `loadedModules` vs `remoteModules`? If Node caches `require(foo)` calls s.t. `if (remoteModules.has(module)) return require(modules)` is cheap, why preload anything at all in `loadedModules`? OTOH if this setup exists because `require(foo)` still has some nonzero cost, why not make `loadedModules` a lazy-populated map that caches previous `require(foo)` calls? ::_(minor)_ if this clause is true then we don't need to look for `CONTEXT_ARG` in argv at all, so that work should go into an `} else { ... ` block after this block::I agree with @miniak and @MarshallOfSound that this is a [""read any file plz""](https://github.com/electron/electron/pull/12877#discussion_r187762273) API. The consensus in the `master` PR seems to have been ""address that in a followup change"" but that's not been written yet so what we're doing here is proposing only the risky bits for a bugfix-only stable release. I see the value in fixing https://github.com/electron/electron/issues/12316 for sandboxed mode, but this seems like a risky fix. Maybe we should wait for this to finish baking in `master`, then backport it to a future 2-0-x release::> If Node caches require(foo) calls s.t. if (remoteModules.has(module)) return require(modules) is cheap, why preload anything at all in loadedModules? This is a browserify `require` and browserify can only bundle modules specified as string literals. > OTOH if this setup exists because require(foo) still has some nonzero cost, why not make loadedModules a lazy-populated map that caches previous require(foo) calls? As I said above, it is not about the cost, but I can change it so it returns from loadedModules directly::As I said in previous comments, there's no new risk being introduced here, because renderers currently have unfiltered access to the full range of Electron IPC messages. That means if some code can do IPC, it can do anything such as loading modules remotely and calling arbitrary functions. Even if I make this change now it won't have any benefit for the reason stated above: Untrusted code can still invoke any function remotely. OTOH I will have to test more scenarios since taking the preloadPath from webPreferences is not guaranteed to work for every webContents (think of windows created with window.open). This is why I wanted to make another PR for changing the preload path behavior: It is a refactoring change that doesn't have much to do with the bugfix being addressed here.::In case it was not clear, the ""read any file plz"" API is already available through the IPC messages that implement `electron.remote` (as well as ""write/delete any file plz"" APIs, since it is all available through electron.remote.fs)::I don't have a strong opinion on whether to lazy-cache these in `loadedModules`. My uninformed guess is that it would be faster than re-requiring a module but I don't know how often we'll hit that use case. However, I'm still interested in understanding this patch better -- what's the criteria for putting a module in `loadedModules` vs `remoteModules`? That is, how to decide which modules to preload and which to lazy-load?::`remoteModules` are modules which are proxies to node.js modules in the browser process. We do this because the browserify-provided shims for some modules (child_process, os, fs and path) are not ideal for Electron apps. Here's how browserify is invoked by Electron build system: https://github.com/electron/electron/blob/master/electron.gyp#L513-L519 These arguments provide replacements for browserify shims, but they also cause electron's `remote` module to be loaded, which is what we want to avoid in early startup for sandbox `loadedModules` are browserify shims that are already available in the renderer process, so it is possible for an Electron app to create a preload bundle and pass `-e` to exclude from their own bundle, and the `require` will work since it is provided by `loadedModules`.::these things should have been discussed in the original PR. this is a backport.::",931cb295fadf8e4a54f22972b05bade0548699f1::
https://api.github.com/repos/electron/electron,12923,fix-12875-2-0-x::2-0-x,1,merged,,Backport of #12904 Trop should be able to backport thisto `1-8-x` now. <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Bug fixes and new features should include tests and possibly benchmarks. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md -->::,e2e70e9b1e64ca80a91412ee6101148b608ac309::2fbb3716896bdcd9764532293a3c7d9427d98acb::
https://api.github.com/repos/electron/electron,12530,fix_isoffscreen::master,1,merged,,"`isOffscreen` should be available to JS even when OSR is disabled in build. This needs to be backported to 2.0, where `isOffscreen` is actually called from `lib/browser/rpc-server.js`::",427ee1d5500b6f6ecbc0f8206f629df929e3a31f::
https://api.github.com/repos/electron/electron,12524,native-arm-mksnapshot-2-0-x::2-0-x,1,merged,,"This backports #12521 to 2-0-x This PR adds the native arm and arm64 mksnapshot binaries to our releases. Additionally, every release will now have mksnapshot and chromedriver binaries included in the release assets. <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Bug fixes and new features should include tests and possibly benchmarks. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md -->::",62cee2dcb03ef582a5ac37b49a480b0cb14a2dd4::216b32b1d7812af0cf80a3fedfea059b257188df::
https://api.github.com/repos/electron/electron,12371,fix-browser-view-draggable-region-1-8::1-8-x,1,merged,,This backports #12348 to `1-8-x`.::,97547989c672606c9e04436f2223eb1fe2661f54::f492730548a44b4a3c987aa62ea0e66e8d349ffb::661d0b0e4c6fa6e22dd4f188cf8f0d76d1256f78::1882e16784b5106219bddbafa5510d77798c1e0d::cdb8734cccfdee6772758af6d98840276b9a7d50::
https://api.github.com/repos/electron/electron,12370,fix-browser-view-draggable-region-2-0::2-0-x,1,merged,,This backports #12348 to `2-0-x`.::,c668521d32d8a6e6cb485f1f7e85940ecb1a9346::575c6d8cb11801da8813d7fde6c0509fe4c4abab::24e2473ad597baa3751296caca51429e68bc39f2::d760f9f77ff5dc2aae59002a22e99148837982e0::d79484b096a41a56718ca3883b44b676a956cc78::
https://api.github.com/repos/electron/electron,12323,fix-mips64el-1-8-x::1-8-x,1,merged,,Relies on https://github.com/electron/libchromiumcontent/pull/482. This PR fixed the release build of mips64el with: * Disable official build for it; * Re-enable nss since we have backported https://github.com/electron/libchromiumcontent/pull/469. /cc @jkleinsc ::,8200d6cdbf8c7ddbca966442b21c0bfce7c1e396::9a9b4910e8dbe0ab469121c1c34ac677c70f9255::
https://api.github.com/repos/electron/electron,12178,arm64-ci-for-2-0-x::2-0-x,1,merged,,This backports #12080 to 2-0-x which will allow us to run CI on arm64 hardware <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Bug fixes and new features should include tests and possibly benchmarks. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md -->::,c932cf56927d7b96347d0519e07a04f429f4a132::5f3b16675bdd34a663057a7011c641fdbd8b8b26::
https://api.github.com/repos/electron/electron,12101,upgrade-node-v9.7.0::master,1,merged,,Updating to Node `v9.7.0`. Todo: - [x] update libcc ref with new v8 backports - [x] update Node ref to new `electron-node-v9.7.0` branch - [x] fix build error on windows /cc @alexeykuzmin ::,068f0cce96975014cf0f78ad84f5218f24b3608b::d88fa8b787d2adf13210ac2e0ec944d29a0ab485::e3bb3c3906d5da66b41a33c2de421cf3d378aae6::c8ef15cf4040989c170eb7280546080deae021d9::3fea581ec80137bd6a0ffdbbfe0d705ec059f591::1882b88c78509c3e6d8ae1fdd657c064b3bcb6ac::50a5a69c46604401d10b97eecd16001c0b922329::5d2452608d02e261218ff914fba45cb912e85275::83f01096c017de42a3b7c9c6de6f4bd3f530d81a::e79b18762e35459dba146770ca6b92b3ea163b9c::
https://api.github.com/repos/electron/electron,12100,fix-protocol-origin-filtering-1-8::1-8-x,1,merged,,This backports #11804 to 1.8 <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Bug fixes and new features should include tests and possibly benchmarks. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md -->::,c3da3ae3f0575748bfa32ccc6b01845d41fd741d::120bc964c6103647148f0edecb7b23c49225b1d4::
https://api.github.com/repos/electron/electron,12083,arm64-ci-for-2-0-x::2-0-x,1,closed,,This PR backports #12080 to 2-0-x <!-- Thank you for your Pull Request. Please provide a description above and review the requirements below. Bug fixes and new features should include tests and possibly benchmarks. Contributors guide: https://github.com/electron/electron/blob/master/CONTRIBUTING.md -->::,663e621344b0745a4cc52b61e92e90e8a9e69210::
https://api.github.com/repos/electron/electron,12053,network-delegate-race::2-0-x,1,merged,,Fix network delegate race condition; backporting to `2-0-x` branch. https://github.com/electron/electron/pull/12044 /cc @ckerr @zcbenz ::,38345c726741de20c6a0a072747b6e28a67f584d::1918da7c2e50e3b235a84a0b9857760c1043de68::1e6d7295cf5151f25766f39fc9009c20e792c5b1::
https://api.github.com/repos/electron/electron,11918,fix-typo-docs::master,0,merged,,- backport - stabilization branch - and some typo::,8a84bd8d195faea14f973b027fa63d66fbb5fd2f::
https://api.github.com/repos/electron/electron,11730,osr-gpu-update-1-7-x::1-7-x,0,merged,,This backports #11728 to 1.7.x::,b22734ccc11b7cc812de452ca4d1354fda02cae5::7fb00bfca7712d35786d6085499a9d782a0a3e56::6f27d5dd51f48c5774e37796f681718721d11145::04efcac8cc42996d4ddb686b1dcb7cbbd2ce77f4::4a61a8dd342d4ae8dba60d0cbdfc90fc54760caf::9021989cfd709f2030e0d1365f9c441a8697b689::cd5bdc88c33e3f48cfa70d050fed257082cbd7f0::
https://api.github.com/repos/electron/electron,11729,osr-gpu-update-1-8-x::1-8-x,0,merged,,This backports #11728 to 1.8.x::,290f985571f957956f31d1007f41d278986281d9::cb1ee8982d8bca8fdd652ab01f820356d645ab57::ba933e2998de96c9e39b0c99da6899f455dcfce2::d45b8dfe83eac6142cdfceb394864f2f40de4bb7::f15ce53dcadcdcfbf35096d8ff829fec7f2cf081::281e1748ef1af175c43d4b03fa7976c59ed8b07f::e912091aca567ec83a950306c98e5b42d607ebe0::
https://api.github.com/repos/electron/electron,11396,enable_base_dchecks::master,1,merged,,"ToDo: ~~Refactor JsAsker class to avoid dereferencing weakPtr on a sequence it wasn't created on https://github.com/electron/electron/blob/master/atom/browser/net/js_asker.h#L83~~ ~~Fix and enable stream protocol specs after https://github.com/electron/electron/pull/11357~~ ~~Remove ThreadRestrictions::ScopedAllowIO usage where possible. Currently we are doing some blocking IO tasks on UI thread~~ Debug Build: - [x] MacOS - [x] Linux - [x] Windows ::Can it be rewritten as some sort of a map? I don't really care about speed or usage of a ""proper"" data structure here, only about readability. ::> net::GetWellKnownMimeTypeFromExtension(...) @deepak1556, nice!::We can not delay the initialization of Node.js to `PostMainMessageLoopStart`, it is too late for certain APIs to work. (Like changing default locations for Chromium dirs.)::I'll backport https://github.com/electron/electron/pull/11230/commits/ad493c2654d9eb7b5fe5c779b8fc4f8a3b29d9a8 to the master branch to fix the V8 dead lock on startup, which should be able to fix some dcheck failures here.::> We can not delay the initialization of Node.js to PostMainMessageLoopStart, it is too late for certain APIs to work. (Like changing default locations for Chromium dirs.) The DCHECK here https://github.com/electron/electron/pull/11396/files#diff-85bd8d8e80263b8547de573fd87cb532R532 fails with being called on invalid thread instead of main thread otherwise. Any ideas on how to fix it ? Also the thread task runner we try to obtain on the `JavaScriptEnvironment` initialization will be a difference one in that case.::That's a surprise to me, it is impossible for `App` to be initialized on threads other than UI thread, is it because the `BrowserThread` class has not been initialized by the time the Node.js modules are loaded? Regarding the task runner, by the time of `JavaScriptEnvironment`'s initialization, there is no thread task runner available, I used `BridgeTaskRunner` to workaround it.::Yup, the main thread is initialized only in [BrowserMainLoop::MainMessageLoopStart](https://cs.chromium.org/chromium/src/content/browser/browser_main_runner.cc?sq=package:chromium&l=107) , while the node modules are loaded early on because of `PostEarlyInitialization` hook. I am not sure of the best way to fix this and at the same time not cause any performance issue.::I think we can just remove the `DCHECK_CURRENTLY_ON` in `App:App`.::Cool but is it ok for the app module to be initialized on a different thread that UI ?::I don't think the module is initialized on other threads, the DCHECK failed because the `BrowserThread` class is not initialized, not because `App` is initialized on other threads.::👍 ::Even if I remove the DCHECK on app module, I hit the DCHECK in [BrowserChildProcessObserver::Add](https://github.com/electron/electron/blob/master/atom/browser/api/atom_api_app.cc#L535) ``` [36149:1222/174140.514620:FATAL:browser_child_process_host_impl.cc(133)] Check failed: ::content::BrowserThread::CurrentlyOn(BrowserThread::UI). Must be called on Chrome_UIThread; actually called on Unknown Thread. 0   libbase.dylib                       0x000000011242b60e base::debug::StackTrace::StackTrace(unsigned long) + 174 1   libbase.dylib                       0x000000011242b6dd base::debug::StackTrace::StackTrace(unsigned long) + 29 2   libbase.dylib                       0x000000011242997c base::debug::StackTrace::StackTrace() + 28 3   libbase.dylib                       0x00000001124c84af logging::LogMessage::~LogMessage() + 479 4   libbase.dylib                       0x00000001124c5e25 logging::LogMessage::~LogMessage() + 21 5   libcontent.dylib                    0x000000011b0e95ee content::BrowserChildProcessHostImpl::AddObserver(content::BrowserChildProcessObserver*) + 270 6   libcontent.dylib                    0x0000000119aae155 content::BrowserChildProcessObserver::Add(content::BrowserChildProcessObserver*) + 21 7   Electron Framework                  0x000000010e259324 atom::api::App::App(v8::Isolate*) + 916 8   Electron Framework                  0x000000010e25acbd atom::api::App::App(v8::Isolate*) + 29 9   Electron Framework                  0x000000010e263233 atom::api::App::Create(v8::Isolate*) + 51 10  Electron Framework                  0x000000010e2692d2 (anonymous namespace)::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*) + 258 11  libnode.dylib                       0x0000000110acb72b node::InitModule(node::Environment*, node::node_module*, v8::Local<v8::String>) + 251 12  libnode.dylib                       0x0000000110ac4254 node::Binding(v8::FunctionCallbackInfo<v8::Value> const&) + 692 13  libv8.dylib                         0x00000001116b6292 v8::internal::StrDup(char const*) + 722 14  libv8.dylib                         0x0000000111788615 v8::internal::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, v8::internal::BasicBlockProfiler const&) + 137269 15  libv8.dylib                         0x0000000111787387 v8::internal::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, v8::internal::BasicBlockProfiler const&) + 132519 16  ???                                 0x00000de827b044c4 0x0 + 15290749437124 17  ???                                 0x00000de827ca5fc0 0x0 + 15290751147968 ``` should probably move it once browser thread is initialized.::We can move the `content::BrowserChildProcessObserver::Add` call to `App::PreMainMessageLoopRun`.::",5c25855ac59f18e0eecf5d6ed48ac4fd1a471f12::b4e6516ad8b25f01b9b289132c402e3009e29df5::db156865e7ffe9981c780a48b3a9704feac77352::fedf1d889b047a95103b45e2228d8c36da55d110::a518c5c3c4d3ce5d7a8972533bc2b9e378b8b5e4::90acb22a58e992c6dd2dc3db1bbcc28525089ecc::1d9524118516721144986d15e134d34dfbb7c0ee::c3154d86e0f6ac562b113a920a7523ce83e1a848::88e53b1b5eadabc5c2aa7878ab366bf04e8f0fe6::e30131f30be2b09afe7d2d70c0a7863759fd5d99::6d9b186fa7d913dd4353ab92f37fa935140cfa89::b2cef31bc00a0d7278cb6a1e2ee74f85da1e8c38::ebb0e46380033a4336baad3e99f3646845ecefec::69bd44edbb1e03e866b34ae5d87f578ba9d76ff8::1912fbb073dfcdb703e6215c3c3b904fad7906df::a1592446da1ebac57b913c8f6e8421346604be95::e072213923c1ef317d4f136dfcf5ce1090893031::d29c27dc7851dce6f5e19dd03ed585632f3a91ae::ee803136664ef6263c496c74ba788f9fdcea4165::0df464e16ad56bd1958b56c42578a12bee61cedd::d27744f4552bdb363b9e0c8fb0db69fccd490651::73919ea91ab5edd040b30cddba865562e43cbf37::fd297722a82001599b0ba55b4ea2743399de4932::e3a56240c956023ea0ee709146901e279c2a586b::abe1faea5cc12508c970657f023c71213895c944::237bd6790b457c288f3e21e50543cb9634874fbd::1043f07b42515aa9ac4d7870475a7c00b814892a::1b30cac372b3506d1647a115acb70179b8c3b87d::769fbd0d3bcefed19a57638c11004e5a23cd1a4d::b9ace16959dec44c13f460354a4e218e424dfe55::7b9dd81018b489201ff1f90360dab7ef7274a633::7bf156d1971972bf7dc3246e94f484fd0e6a1fe5::82452e7924a0fd94fdcc03fad6e669d3da484491::de93b30d3ce36de74404c4a9220326f41e79bfcb::cbc433d4cb20c04e0d8fb856c97d7472f140330c::14de22a8c72281f256605a1c007fa45f2b5bb95c::d6068759b67ec29f6f03b77b6fcd39f826ed903a::0cce6b3d212f2bba7c226ea7df20696b3a6c12d9::952928dc79c2f204ef905d691ee0898bbfc357e3::104585e772a749b7a04b16a7c8957a333f52bda7::fb78052b3d27c84f81f4f3f930830a223f3edd13::1072c75e384878fd7d4f71edb7f72cba56e3ca46::1ff872519c485fe011db369e2143f4f3286e5cab::9bd192ea17cdc4d31bb261e7709feab7c14dc224::
https://api.github.com/repos/electron/electron,10516,fix_notification_crash::master,1,merged,,There's a potential crash when iterating over toast instances where a null pointer is dereferenced in case an instance's HWND has already been destroyed. This is a backport candidate to previous releases which have Windows 7 notifications.::,af92a639be92f8970e8dd5e8b76f0b20e7beaf2c::
https://api.github.com/repos/electron/electron,10403,modify-bump-version::master,1,merged,,"Modify the `bump-version` script to reflect changes in naming convention as per #10336. New usage would be: - `npm run bump-version -- --bump=patch` to increment patch version, or - `npm run bump-version -- --stable` to promote current beta to stable, or - `npm run bump-version -- --version=1.8.1-beta.1` to set version number directly. Note: - you can use both `--bump` and `--stable` simultaneously. - not all the version numbers will be affected due to certain format restrictions - this will change `process.versions.electron` as well To do: - [x] kick off a round of fake builds with this new naming convention to make sure nothing is broken as a result - [x] document changes ::> beta starts at 1 So the first 1.8.5 beta would be `1.8.5-beta1`? If so, we should update #10336 to reflect this. ::Might be good to add some examples here, like in your PR body: ``` npm run bump-version -- --bump=patch to increment patch version, or npm run bump-version -- --stable to promote current beta to stable, or npm run bump-version -- --version=1.8.1-beta.1 to set version number directly. ```::This assumes that a prerelease exists already. In other words, this won't behave as expected when used for backports, e.g. ``` $ cat package.json | json version 1.7.6 ~/git/electron/electron modify-bump-version $ npm run bump-version -- --stable --dry-run > electron@1.7.6 bump-version /Users/z/git/electron/electron > ./script/bump-version.py ""--stable"" ""--dry-run"" new version number would be: 1.7.6 ```::Ahh in this case, it would be `npm run bump-version -- --stable --bump=patch --dry-run`; the `bump` argument and `stable` flag aren't mutually exclusive. :) Though I see the documentation is lacking on this front, I will update it with better examples. ::Yup. That's to adhere to the format restriction of the `FILEVERSION` number for windows .exe, which requires 4 numbers at all times.::",8fe675e56cb069d899b3431b778b02344c346616::74c970c25f5a202e5f88838d0930a090aafbb10f::b54804d449b002521f049e50e9f34a412be3e8f6::a936430fd5b4954bae0146e969505979ae5a3321::c56d8b4fe94594935a8ff8cbcdfb979122241034::a81ea1ffdeeeec35e4e9bd1f05a9e38a440b7c4c::4fb800a8994d336a89e37251606c929d53ded682::
https://api.github.com/repos/electron/electron,10375,backport-notification-sounds::1-7-x,1,merged,,"This PR backports #10293, adding support for `sound` to macOS notifications. The cherry-pick had zero conflicts and the feature still works fine 🍒 cc @jkleinsc @CharlieHess::",551509294447ce0fb926dd6f2d8328792498ac4e::
https://api.github.com/repos/electron/electron,10374,backport-drag-browser-view::1-7-x,1,merged,,"This PR backports #10232, adding `-webkit-app-region` support to BrowserViews. The cherry-pick had zero conflicts and the feature still works fine 🍒 cc @jkleinsc @MarshallOfSound ::",fb7661d2d26f57dcd46d3cd861074a4b8fc26930::
https://api.github.com/repos/electron/electron,10190,update-releasing-guide::master,1,merged,,"@vanessayuenn, @jkleinsc, and I are working on getting a backported 1.6.12 release out, with 1.7.6 and 1.8.0 soon to follow. This PR updates the releasing guide with some discoveries we've made during the process today.::",01283c26a8b5e20a57576c7cc6bed13b614b53a1::e8af45e130e0a06a81746994369421479b05b83a::
https://api.github.com/repos/electron/electron,10166,1-6-fixes::1-6-x,1,merged,,This PR backports the following fixes to the 1.6 release line. - https://github.com/electron/libchromiumcontent/pull/310 - linux appIndicator submenu fix - https://github.com/electron/libchromiumcontent/pull/323 - accented letter input resulting double letters in webview - https://github.com/electron/electron/pull/10099 - Leak the Node environment when context is released 🍒::,5253c0a81608ca39f046b384c6c9e2e0d60d4010::0573919fd34ef3eaf8ca31ffcfbe08c87870e68d::9c0a8ab1684ba7f2d4cb4900d425baeee15b0b93::c12f7d313294a1a633b3145da6e87e5997ac4703::
https://api.github.com/repos/electron/electron,9564,pdf-plugins-preference-backport::1-6-x,0,merged,,"This PR backports [#9507](https://github.com/electron/electron/pull/9507#issuecomment-303226315) to the 1.6.x branch. 🍒 ::`nativeWindowOpen` was added in 1.7.1 so this method can be removed here.::`nativeWindowOpen` was added in 1.7.1 so this method can be removed here.::Sorry, didn't look close enough at the diff. Should be removed now.::",d94bbd15739e95ec381bbf68b941ba7858c6dddf::bbcdbc2e7c49230c5b85dbed086de946c415bf66::1ddb8a8bf19202f773e0429a8eeedd0c93ef7af9::1612ebc5395c3a4335bc1fc889c6e9ea30ed7f2d::456e83f28634acf68bae729ac130a25bd79f7755::ab95ecda425bac9e95a1ef54d919b2d0261079b6::21f15fa87e303c596e859e56a8d95f0dd4cbb844::c29316b568effdd47bc32ddf9d7a52477f9b8f30::
https://api.github.com/repos/electron/electron,9044,1-4-x::1-4-x,0,merged,,Fixes #8489 Fix printing selected pages by backporting https://bugs.chromium.org/p/chromium/issues/detail?id=553446::,3d54b23b7a21a176d15696739b717d3732c322ad::
https://api.github.com/repos/electron/electron,8922,v8-snapshot-patch::1-3-x,1,merged,,This change pulls in https://github.com/electron/libchromiumcontent/pull/271 which removes the verification of snapshot data on Windows. This has been removed upstream in https://codereview.chromium.org/2680653002 and this backports it to 1.3.x so Atom can use it via https://github.com/atom/atom/pull/13916::,2f4dc075e087996e2f2ea7cfb55b75ed04960cf3::
https://api.github.com/repos/electron/electron,8147,upgrade-libcc-for-linux-keyevent-fix::master,1,merged,,Pulls in https://github.com/electron/libchromiumcontent/pull/247 which backports a Chrome 56 patch to Chrome 53 to fix issues on Linux where key events were reporting the wrong key when Control was pressed on certain keyboard layouts. Closes #8116::,d1da48ff0f396f04b02d1a9dc33c62f8494b38e2::
https://api.github.com/repos/electron/electron,8142,1-3-backports::1-3-x,1,merged,,This pull request backports several fixes currently on master to 1.3. - [x] Update Linux CI scripts https://github.com/electron/electron/pull/8105 - [x] Fix issue incorrectly deferencing remote objects on reload https://github.com/electron/electron/pull/8110 - [x] Move alert/confirm/close implementations to main process https://github.com/electron/electron/pull/8120 - [x] Clean up CoffeeScript apply helpers by using spread syntax https://github.com/electron/electron/pull/8122 - [x] Backport Chrome 56 Linux key event fix https://github.com/electron/electron/pull/8147::,0a587bc611810cc44ec81c815586ac0a83d62e93::ab21a8b03a640df0baa39a3cac50a0464b8a7236::7a9a2c003c9c4f4f9a7478d8f77cc2445c131b23::02dcc1bf3f0d5d5eb633ee5187a9601822f76484::d29bed026c287f9a014defe42b3ac597fbd8f327::cac7e9460de10c770d86e1a8ae4d0cf68f406abf::3fe9762082f6cfdc071053995a41af5bfcca6057::f5a6f290bc1974ff1607be60b6288f692503a9f4::ab634e6c2079c605124da5fb79885dc6b48511e2::5a768b3dfe3624858174243817bf397a5c087a88::fc299189eb9976f1dd43e06754cd398e4b50ec8f::c300104cbdbd27cb886299ec44077b5abfa9be37::ac54984763c666c112cf24a0331029585636b9ce::1bd9fc1a09f86d05f173aa386f5b66e1f7bbeba8::746ea3e0453c48367432a4e43cad4dfde2da7855::
https://api.github.com/repos/electron/electron,6986,arm-release-asset-name::master,1,merged,,This pull requests adds the `v7l` suffix to ARM build release assets so they can eventually be disambiguated from future `armv6l` and `arm64` assets that may be produced. This mirrors the ARM build names that node uses: https://nodejs.org/dist/v4.5.0/ ### Example - Old name: `electron-v1.3.4-linux-arm.zip` - New name: `electron-v1.3.4-linux-armv7l.zip` This will be backported to all 1.0+ releases but no old assets will be deleted. Closes #2343 Refs #5706 ::,87e60466d38f22e5c3915e4ddd0fad17d07dd3d5::d0b95e9298cfa1b6c2968fc6cef898b7d65e9c6b::fd38cfd88c02cbd89ad61cb6d542b9b24ebef64c::
