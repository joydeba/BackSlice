https://api.github.com/repos/magento/magento2,22866,22479-price-sorting-custom-options-2.2::2.2-develop,0,closed,Component: Catalog::Progress: on hold::Release Line: 2.2::,"### Description (*) Backport pull request When products has required options, their prices were summed up in min_price index column. Price take into account in sorting is min_price, thus on category page, products with options were sorted incorrectly. ### Fixed Issues (if relevant) If product has required options, its price on category page is displayed with required additions. 1. magento/magento2#22479: Sort by price is not working with custom options as expected in magento 2.3.0 product listing page ### Manual testing scenarios (*) 1. Valid path provided in linked [issue](https://github.com/magento/magento2/issues/22479) ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds are green) Backport for: https://github.com/magento/magento2/pull/22865",af409228e04a38f91c063739eb322e9fa6781ca0::
https://api.github.com/repos/magento/magento2,22078,backport-issue-21507::2.2-develop,0,merged,Area: Lib/Frontend::Progress: accept::Release Line: 2.2::,### Description Fotorama gallery is too sensitive. This pull request regulates sensitivity to change image only when user swipe horizontally. **Original PR** #14123 ### Fixed Issues (if relevant) 1. magento/magento2#7906: Fotorama Gallery too sensitive on Android Devices. (chrome) ### Manual testing scenarios 1. Open a product page using an android mobile device 2. Swipe gallery immages ### Contribution checklist - [X] Pull request has a meaningful description of its purpose - [X] All commits are accompanied by meaningful commit messages - [X] All new or changed code is covered with unit/integration tests (if applicable) - [X] All automated tests passed successfully (all builds on Travis CI are green),744986b6b081c2f1e562ec25988a22a5e5970767::
https://api.github.com/repos/magento/magento2,21934,2.2-develop-PR-backport-21376::2.2-develop,0,closed,Area: Frontend::Component: Cms::Component: Newsletter::Partner: Krish TechnoLabs::Release Line: 2.2::partners-contribution::,"<!--- Thank you for contributing to Magento. To help us process this pull request we recommend that you add the following information: - Summary of the pull request, - Issue(s) related to the changes made, - Manual testing scenarios Fields marked with (*) are required. Please don't remove the template. --> <!--- Please provide a general summary of the Pull Request in the Title above --> ### Description (*) <!--- Please provide a description of the changes proposed in the pull request. Letting us know what has changed and why it needed changing will help us validate this pull request. --> ### Fixed Issues (if relevant) <!--- If relevant, please provide a list of fixed issues in the format magento/magento2#<issue_number>. There could be 1 or more issues linked here and it will help us find some more information about the reasoning behind this change. --> 1. magento/magento2#<issue_number>: Issue title 2. ... ### Manual testing scenarios (*) <!--- Please provide a set of unambiguous steps to test the proposed code change. Giving us manual testing scenarios will help with the processing and validation process. --> 1. ... 2. ... ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",7c015e761220a9378bf00ac531e37db2caa560c8::c60d387400087c4a944c393683ef21fcfc32ef80::0c8e455fbc664237f6ea8491c197863e8221ae9d::b82b70d32e079128dd81d4cbf93b488eb63c3539::bf31ff54ddb54266c9dcb17da636aab1863e5474::8e314361dce1537b2ada71019c9eb36313b10315::8f97ccaed7e79f89516af37e0de08eaca414a1c1::3a911b4148f26c08dae140313877319e1bf08635::4d8916d022f09e04e5f5130d885eaf12f8307582::668e63be62133da2dbccf0c5c018c478a6d3362a::703a9ded4473e88839f02bc85ad03d1a694313b7::782109af4d438c4e4fd671defc44decbe58213f3::
https://api.github.com/repos/magento/magento2,21933,2.2-develop-PR-backport-21376::2.3-develop,0,closed,Component: AdminNotification::Partner: Krish TechnoLabs::Release Line: 2.3::partners-contribution::,"<!--- Thank you for contributing to Magento. To help us process this pull request we recommend that you add the following information: - Summary of the pull request, - Issue(s) related to the changes made, - Manual testing scenarios Fields marked with (*) are required. Please don't remove the template. --> <!--- Please provide a general summary of the Pull Request in the Title above --> ### Description (*) <!--- Please provide a description of the changes proposed in the pull request. Letting us know what has changed and why it needed changing will help us validate this pull request. --> ### Fixed Issues (if relevant) <!--- If relevant, please provide a list of fixed issues in the format magento/magento2#<issue_number>. There could be 1 or more issues linked here and it will help us find some more information about the reasoning behind this change. --> 1. magento/magento2#<issue_number>: Issue title 2. ... ### Manual testing scenarios (*) <!--- Please provide a set of unambiguous steps to test the proposed code change. Giving us manual testing scenarios will help with the processing and validation process. --> 1. ... 2. ... ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",387e9251c2b9331307315ab30ad9238e5a427b3e::f3c9589f3327c0c48d15dd1d9f79da1276d94674::0982a537990e84e1feedd3b68263c2aa452a3cf1::3b19b5526c6a03fe37d0685c6533538abfdc09b3::c6f87fa59eb2ddf96ddd6ea884415a01d4baec03::42d7504d1def753cf8bedfdac9b1b4a7d165aab8::97258984db2041e1f6f7b6f8d47db8b3f9d12686::41fc945ea5fd7eae7bf10f9aaa6954b18cba6e50::79429edd3f660bac9c26e09afab5abefe6c8a178::07dd8c34bebe22b76ca78af4800a28916f26e667::f3b9e7096d3bd27245ea43b6642f6a6a0117aeb8::4a477ce5d1ca2b4bca8f31eb57069b610df1b0a3::09d34fc4f5369b7ddea1590c9124e8d7ab8924e6::082368d2f25ee0055f894bbe4f36518d722dc13d::f0ef0dcb75b5afb981cf35924c754ba5f9535867::0682da5a53005e4478f6a6c57e9d8736252b2379::6d41d590875a4d378c8f5b61c1949654fa031389::dbfeb36a1f95f45d19c9698f996a67a999f4ce4d::0b2410faad577a28e52722877fa1d531f0cc3912::487ffc952447b583aab21c4024a0e39027e6d53c::d8110c23e4f66ce819b4be90b12a1e4eb190b178::41e694f19ab1c66019abad1910bb9fe8fb0d9a3a::080743fba05fdcc4cfb98fd9bcdc15e39d7e02d9::2b41017794d74966ed2df9932d7d1d33518475f1::b169fe3f94c7107bb9f88380b530d00a812f765a::b2d04ca9882e660cf60de599b1446620f5f5ae91::b4af1319de272df127c3a4c0945e871f258f91ab::ce1c1a2e8f2342efb287934066e70587fe16c30d::c821730fa110d93f92a87feb3e1bc8253c6ba820::2dd1931a80b8e780307c8b255318c7641d937ccb::91bec29b8ace5ae9769d46b3ecdddfec862e8e8b::eea46883e0941bec6bc71350338160dbe68877da::2c956f661caf1a10b1b6e6afea185fd473313fd3::082f4268630601f764ec469e3988cc5b4bef9535::d5ed9e89b41c6d407869d4cf00f8293fb5f6e41f::ca72609de5bdd2ff1d74eb5957a8acca125eadba::f88ec3fefb9daaf6f9bc0c1fbd6383b79303bc57::6f49160d0e1ab9aeed36ab1b7258ce3a5cf29dd5::97cbde6944b1d47d46716dd38d9aecb713032846::3345ec4f9de51d5ccafe078edce34423e199a229::ab2de1505b5b98d746c3623269e19fdb283676b5::c6c6ead1aaaa5e45b992aff7d564a44c2276e083::905085d16039d44c5a1159d2fc68a68062291f37::887433247a7d0da1237c0d7f60fe5bee1dfa4324::f455069c46cca1b56e23c51c91c3b2bee72f4b5f::0edb1bf9387933c0dfb372b90ef5826fd19626a5::843e3704296cba82da35f48fd1e0f593bf7265cd::ebe3650c3775f77cd94036ba87c66b09dd1852dc::d14e221e9179624a7b9ff424d96a1cb59cbb00b7::b5a849b498f96082e1cb886cdf983ad185e69d71::0567f1688d8e8f88cf05ff4ceda894368412a721::1c45357d60ef44975e12bad55fa7f2ef9107cad9::ab8d312286fa448f408727ea6fff9e790424cb34::cb3182aebd2b973290549b451f1c72eef3c0a016::945fa8e8b7a23f2ff050741d2f4c6fa68b6ca14e::2d3a876863188a5c0b10abda33ff3c58e2f695f3::2745e0fca4cc27fd57f915847b460eb8fd1446b6::290b998c6309d52e77c0c226e5317643ce915677::797203a6f29d5dd773528b91cdb63d9b7cc180e8::e1146fdd21143c19b2709a517870b875d8182783::5803620a81885be861e0c5ca4cf7fee8e8eaba1d::c07c4daf17d5fb011136e914170322ae1c3e8167::450359792007c49ac8dcca4ca7109b0cd13282ed::c51de1c14a84a9094f3343b4d736f17e943b75ba::05c8b48ea657ce18691ec47ccc54e8a5b36d0319::7591297930b86968473a62f05cf3f4600973ed84::f6f1419c332b05ad87f985cc56ea61b569c96c47::501e032cb342fd4dc950038d34beffcc764f4ebe::65afa8aa599a811ddb02cb7448c6aa2441505c70::715bd00fa49db50bdff175d8918e006120bcf2b9::63e268c1332f8040cdb8b5c4583125b6e9e25dd4::4b3127e50242bea2e2e6bf6ea2b137470b219684::ec51033a066a2684350d30bab3b459f0b7f04960::d9de3d3e4e6958d1b5e3ae242f7202c848cc7a53::f80d38218d0d42a297fe6f6727f5d63191093fad::b7ad0754b9f78510ec1f47ddf866d70ed05f91fc::a9016e9a58187fa8bb81cfecd6e0bc5bfdd6ce90::114bceccd8ffd81d82074d6fc502f0f4c28021a2::0d2be601dc5bc184364f136aa2499c29a98221db::293f6d3199634306a2fe9a998d2ec2eeb9d73086::21cd1cb0ac7479528da78b802231c65d98a416bd::39a1be971820336d6f1e6e093e4bdd5354fba608::b9e9b0f2894c30903613f5b2c96cf1541caf8e90::1108bdeb3c08c31c5e9d27a3a4bf6d90ef52922a::edc400df210f54f10272cee955ae3e85bc3d859b::581861bab96cb5d50250d508b120566fad0eb279::6cb1f94d4396de971014683b5c2ff1a65b9695ff::a089cfec0bc26982f751d179cd298fbecc093b97::adf4425136c276f0e482f154198c4f39cc15d00d::b4283aa17b03927d8f2b0983b9b519b684610b5e::ffb3ca40d9c027ddfe853618aca4e40a63a96c5e::a4a487829684c76c3b5dfd7e5786a9352dfb915f::ec22cec535a36c0708cf2d0ce7fae97a11c4a644::0992c48dc0f34a24c69df88ec26edc1da392efc1::46810b0771c4b646c6791f17347848082f3ec0b8::c5993ce4e0c1b4a9e460d45734a63cebaea7488a::a69a3d01a9e94e98ec224cf575c4b536ded92a4a::9a839d176f1d8d1ec46d5ce47f7a8ba6cea76067::8e7ddbf4656b15fd37b1321cadabed9d9175ea6e::a3e87bdfbefe486eb5217b8dbdded50fffde1236::bfd1d4f7c38c0fe3c8e17449b621bbc5c996d59b::8b8a46c4beb8cf3c4c0d881660f442d4df545782::571cf9bfd6ba69ef2c8f4f7a6f1dacb17452a495::ea34b66bd90957d7495428f3adff94f83c92dbb5::3541b85d2d18902b3ad9669b706a672cdc9473a9::dbf671438ef01bf9cc8882c7a36bb28bea280434::113f58d60962b8f1827946b5581390a599d7100e::ea9b1b70a4a1c228095a227fa4ea1f83f34709f1::903ede7ec996e109442ec511b2e264fc8a6e0506::34f017a8ace7359adeb3390311a9bd6a15f6c321::57508634320241a9582d390760e118ee55af6760::df364432458bc551964a14cc1c1aaa50110c72e3::943a27bb87b2eb8379cd6d39d7416090f95774ff::5cc67fc4f8468dc340f9a9c210b6aa9c1db694c2::90573e377b8767244f47b3c5a780439f0d886c4e::f8a1eb526a4dbac17f093fb29fb3a5e9e853ae82::25b3256be152b30846df18031dfbe0b4a7b88935::19819d0a8dfa97c551fd62c09cb822df32261fb4::805680a151e3d9ca6e957e1cf64dba37fee67a9d::357471c201c215d0ea41c22d2917364436a70979::eb8fd3e9b6177dfbb32fa37df64cc91100659341::334cf17fe941b79b74560be7c55cba57bde526aa::5dc23cdc3a5b1e4bd00a6c28ffe81e22e3c3e0fb::dd1b43dc7b34bf8968b3259817a2ee8b2585bb62::eb1ead313385e18772075ec623afe28a4e5d6db3::30ed8299cfbac7cb415613a0f11b058bdecc6d6a::a01bd6a0439bbf4ae25a80be999dd2ae282e49ba::a75958fb46f606faec4d06e69f938188d5de5005::6bb9d923a004a0c9aa70c0427ea984c74ad82c7a::f8dd7ca7f97e97abc1f40e2a65e1deee41bfc6e0::eef6935a716d218feb20d3caed213e0ece26bd6a::77feb6612a5043e8b40fcfd8415c3bf16f825706::2aed503fbb4b8bdee75bcc25ebded80b65ad8b5e::f0b3b92960f79366325ed8ce7f68e97bc23d5b71::d9b01e35fb0e068b25db777a128144fede1c37fd::9661291658022dc4b9ff60cc73bc320b101d48be::3a911b4148f26c08dae140313877319e1bf08635::630445197f7bbee7c71855b6771ab6f881e3502f::7962eefef6c7085c78a1e42de70767fa74d85fea::f31e7f0949db2d817461473f57f162e550f253c2::64f37305db22e6d3d8b3a45140ba7ac0ae787974::694831343f509388adc23251be6424b7866fc951::7736434fd2e93d17f329b5bb8779300b3d77beb8::0ed7d3cfc4891b6268aa70fdf0c2a4b1b05db3d2::1c0403a780c28ae330357880bd62aba9c2810aa2::4b133afd2f5ff7bfb8daa048deeae278bb4b9a59::7dba2af7a625e4e2f08fac138c05d54475cf9200::840af6bbdcfe8c3e46c16ff02349330ed734fcb9::66eb64d325658d515ece30eda226d62ff26ca9ef::ae9cd83eea0b70e221971f4c133b9fbf1c2cdbd2::1df10d81f20ef1ef55af0430c2d90736527d437b::71e61a7295d1533bfb042c45608209b6810161e4::11045e88e32ba702e51ae8bf40e1c58e0d41abff::1baf7f8db3441ae1bf80729166d76397862b6e8b::27d113fc9295cff8909913a41867d64dbbcfb377::827bc02113df8d281fa434a94fdf154ac5c12102::095b9f4ef371d9e5692f42b655c81294f14c5137::e7fb7fe185639ca6f811c63023eb0d04ceda892b::dcf808e1922de7665c27d8d7b9f292ca96c333b9::ab7aee90f55ccd02738ff98a69e6e29b083faed8::743c034291d62a4329350d637832ad0ef7b8439b::2bf1a3026f6a8e2f9c3866716916ccf2a9d9bdc2::b2ce250a76cc30cadd225356628cd1b31abb53c8::2710f87bb76ef152d0ebd9cad7bc7763ebf3be34::4d8916d022f09e04e5f5130d885eaf12f8307582::bdedda8d704dca9fa96424f4db9f0379b1ea1e17::2314bd8a8d703e9c029e2a70c6d2b202e7b92cba::0ce67ad7b81891a4e2d6565e3a96de5c3954ba4e::3fa5a07399597cf9487f457361dd15b2b36ee5d4::abe4071b881fab3c964954b30054bc99cd41b901::3843a6c601a8be065d78f2af2278cba53d84dc1b::fa540f2dda6515b56f8af707c3d3ab70aedb2873::d314910fc4237c7b430777845e33f8ea3a2dcf3d::61677190cf8e0516544f2157fa60583b6e4b6be1::3b9b259226813c089e34de7b7b055890580c960a::d002ee26966b0f61aeaf1304fcc50cb1bca19544::4dd101e6d2d2970b5591bce726476f4c55dfc1fe::3dea8d0f34f9e4d033a7a82a22cbe93f418635ff::ea010b81a8b962a59f25c36e132f43e72e26838b::a951d50079853e99708f17b348225ce2e8ca8c52::e1d808d4aff82ce12a08a319a5f10f6c2d431e8a::a098d0a8c598af491dd2f14da7523e08256c5068::0f76e4cef4fe1ec353f194a006aa7df10f34686a::8d15e078a8bfb96cc72da865710d544d250ebc74::8a8e2274b61d1e0acde91d1484307d234739f240::f028c02b6fa1b0405e28368d7f84b8becbc29567::7b544a2278fc08f599f1ab04190adf6a1b189398::079ecb3689e76e1d5ed85de20f19b59eb347cd66::943fb3374c379c9d00236251d6901a371ee98682::745df9a3c45a38bbb6da3bfc81d01f7ad2f5563b::8c609c4f546316d3726594cb8ea71f1e91a6594f::b56a75028c10c85ef7e17ef05ab50ad9c2f21434::0c65f5dc8917af75e159951136e934c7162873d0::9529d318c284fc153b4edba9c24b428e57395b95::362bbf239373ed70d11da43b04a861b76e5d4190::a5608f0d6c9c476d18f9dfe59a9053b7fac29393::48291cf40f3bde9a8c8d52bb28c633f6e35c76fd::045ac255e1f7bba289d712c1341cd4dd2e734901::ad661035d0056c19c07b02ee3593279118d4a131::dd3a94a7a0bd2ec81c6a58538efa0ff0882b7367::30dcb562fe05d9ddac82ee322f6ae15d7073133e::d7042e299cfe19068887626924bc6c7e6d45c321::fba80960d8996180baa5b213ea0c583bc018f8cc::29820569cbb2d760812385495f560cd0f1e85046::8c3d3b26498b46fbdaf965f6367d870ae8c0ffd4::29648619aeb9e6ebb1354815c39c30a7cc85077e::229da15cd22f9688b1018dd796da655571132a3c::89bcefa5296d551ef4fa568066f235f6b30c65f4::0cd94e2ea07bfe29b21efacfae61bd92be646576::afa9a80a9cbe246cf37d544ad9209ed8adfe8ed4::de307c7186820a1018446298a1a280bf74c45d1d::1f4ac71cdfa8e9c3d34b46fa106d66609c77aa55::18b26bf0b2adb02b198af36b21ecea7299c67ff9::ae34e60a0f34416cdc10c5569ef83d1f1178f7f2::14aa22adc9d44451426b4cf01839f66bff3980a6::c2f479cc445e2293c3c127f474e57b13463ac5b0::44604d6e45df8ae6810d2734473bcd59112d0f3c::1ad4fd0640116d126a400a65453368c61d7c0d9f::9a2108bc689881c78ead34d60490170b2bb0ff8d::484ce36c7b4484790b99f54e5968ae8953b39a49::5c8dba8ecab605be8fdbc7c44b9b399704196b61::95c1bc86ca8e5de7e5607d1b83d0fa46e9ded636::a27497754471da118b258a181968075205816037::a62d5d6daee174ff2f016316a3d6d54862d97d9a::8606b2edc82474825a4d53c6db1ca2db762baa78::c4312eb23f5d3b9502f866322c4b71dea23be2fd::0b706e6f14769de62b74c3efe2ee5361a00a1abe::5bca968d4c64061d6dee2736fc0956f61333a3ec::f44720a6d89ff5a7886d29c6b65a5f7e8f58d6e7::375e0a6a3db1769f80f4c8e2afde60d8ca5e828b::88b17601d3c7b2fae2d04c4b414bb5e53ee7a576::0240e8105f0d89ac27c5af3e35e7722e18808698::c966223b45b9f3800b434c5338041d4142047258::50f4365c96b45e7ea1bf08404786c748ed9f3a0f::f0da8bd17158a8367906cd2edebe45afd7667137::d1013b90c97aa2e0fcbc75837e306e770bc09704::a009e7f0bea2c0815cbf0cfed2b44d32f57d3ffc::81d04971d3be9278459c95d310a0cebc32e526d9::28885ed5c9309d44b330a41003c56feaa88b4bf0::ade99c824140f729099e66c2d0a9c0b0ffbd1ddf::9629729e49cff651b48c286d3d00c0d63b729966::252effc94aaa9c2ee85ca3f65473513bceefb74f::25e2facb39cebfbfc4f983d1ba4186bb002595af::a65bc160e85ea7f31e9da3349d355c823e7ea271::d1190ce5727d3a8d6c0455a81dd50b201d3d77af::c2ca0fe395cb90a7e316f71f8091dd45762a3b1c::b83845a68e85b7482e4f65ffe5664e5466227489::668e63be62133da2dbccf0c5c018c478a6d3362a::703a9ded4473e88839f02bc85ad03d1a694313b7::782109af4d438c4e4fd671defc44decbe58213f3::
https://api.github.com/repos/magento/magento2,21661,2.2-develop::2.2-develop,0,merged,Area: Frontend::Component: Swatches::Progress: accept::Release Line: 2.2::,"<!--- Thank you for contributing to Magento. To help us process this pull request we recommend that you add the following information: - Summary of the pull request, - Issue(s) related to the changes made, - Manual testing scenarios Fields marked with (*) are required. Please don't remove the template. --> <!--- Please provide a general summary of the Pull Request in the Title above --> ### Description (*) Updates swatches.css to add overflow:auto to the three swatch tables (text, dropdown & visual) to allow for scrolling if the amount of inputs exceeds the available space and increase the min width of inputs (150px) within the table for better usability. Intentionally left original input width (50px) as a fallback and updated .col-swatch-min-width to be consistent with 2.3. ### Fixed Issues (if relevant) <!--- If relevant, please provide a list of fixed issues in the format magento/magento2#<issue_number>. There could be 1 or more issues linked here and it will help us find some more information about the reasoning behind this change. --> 1. magento/magento2#21421: Improve swatch table overflow handling (original) 2. magento/magento2#19932: Fix Swatch Overflow issue 3. magento/magento2#19933: [backport] Fix Swatch Overflow issue ### Manual testing scenarios (*) <!--- Please provide a set of unambiguous steps to test the proposed code change. Giving us manual testing scenarios will help with the processing and validation process. --> 1. Add multiple store view and languages to your store (Our store has 19 but you should be able to reach replicate the issue with less) 2. Open an attribute page within the Admin area to configure (Stores > Product > Any attribute). 3. Table inputs at the bottom for languages should be too small to to use effectively 4. If 3. isn't true add more store views, the more that are added the smaller the input fields get. ### Contribution checklist (*) - [x] Pull request has a meaningful description of its purpose - [x] All commits are accompanied by meaningful commit messages - [x] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green)",ec51033a066a2684350d30bab3b459f0b7f04960::
https://api.github.com/repos/magento/magento2,21213,focus-not-proper-on-configurable-product-swatches-2.2::2.2-develop,0,merged,Area: Design/Frontend::Area: Frontend::Component: Swatches::Partner: Two Jay::Progress: accept::Release Line: 2.2::partners-contribution::,"<!--- Thank you for contributing to Magento. To help us process this pull request we recommend that you add the following information: - Summary of the pull request, - Issue(s) related to the changes made, - Manual testing scenarios Fields marked with (*) are required. Please don't remove the template. --> <!--- Please provide a general summary of the Pull Request in the Title above --> ### Description (*) <!--- Please provide a description of the changes proposed in the pull request. Letting us know what has changed and why it needed changing will help us validate this pull request. --> On configurable product page, swatches not having proper focus ### Fixed Issues (if relevant) <!--- If relevant, please provide a list of fixed issues in the format magento/magento2#<issue_number>. There could be 1 or more issues linked here and it will help us find some more information about the reasoning behind this change. --> 1. #20992: focus not proper ### Manual testing scenarios (*) <!--- Please provide a set of unambiguous steps to test the proposed code change. Giving us manual testing scenarios will help with the processing and validation process. --> 1.  go on configurable product 2.  click on add to cart button without selecting any option ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green) Backport for: https://github.com/magento/magento2/pull/20992",180db3301dedcc50a1098c3b97ca715dd6f978e1::
https://api.github.com/repos/magento/magento2,21171,My-account-page-Recently-Ordered-check-box-misaligned-on-tab-portrait-view1-2.2::2.2-develop,0,closed,Area: Design/Frontend::Partner: Two Jay::Progress: needs update::Release Line: 2.2::partners-contribution::,"<!--- Thank you for contributing to Magento. To help us process this pull request we recommend that you add the following information: - Summary of the pull request, - Issue(s) related to the changes made, - Manual testing scenarios Fields marked with (*) are required. Please don't remove the template. --> <!--- Please provide a general summary of the Pull Request in the Title above --> ### Description (*) <!--- Please provide a description of the changes proposed in the pull request. Letting us know what has changed and why it needed changing will help us validate this pull request. --> #20143 : My account page ""Recently Ordered"" check box misaligned on tab portrait view ### Fixed Issues (if relevant) <!--- If relevant, please provide a list of fixed issues in the format magento/magento2#<issue_number>. There could be 1 or more issues linked here and it will help us find some more information about the reasoning behind this change. --> 1. #20155: My account page ""Recently Ordered"" check box misaligned on tab portrait view ### Manual testing scenarios (*) <!--- Please provide a set of unambiguous steps to test the proposed code change. Giving us manual testing scenarios will help with the processing and validation process. --> 1. placed order with login customer on my account page in sidebar check resend order product. ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green) The `calc` operator is used not properly here. It won't give the expected result. Currently, it results with value ""80%"".::I guess we can use `.lib-clearer()` mixin instead.::thanks::",adc2699742e43a696689eb5a35a8b7b0b1037158::69f1b376f6cd7ab63e03841811d619a113ceb539::4585a5607e15ae8d2e2202eeccad80f8a76a82d3::e48ed0050775b32d72cd3eeb5a47529dc5339113::
https://api.github.com/repos/magento/magento2,20970,admin-store-view-label-not-alignment-2::2.2-develop,0,merged,Area: Design/Frontend::Partner: Two Jay::Progress: accept::Release Line: 2.2::partners-contribution::,"<!--- Thank you for contributing to Magento. To help us process this pull request we recommend that you add the following information: - Summary of the pull request, - Issue(s) related to the changes made, - Manual testing scenarios Fields marked with (*) are required. Please don't remove the template. --> <!--- Please provide a general summary of the Pull Request in the Title above --> ### Description (*) <!--- Please provide a description of the changes proposed in the pull request. Letting us know what has changed and why it needed changing will help us validate this pull request. --> ### Fixed Issues (if relevant) <!--- If relevant, please provide a list of fixed issues in the format magento/magento2#<issue_number>. There could be 1 or more issues linked here and it will help us find some more information about the reasoning behind this change. --> 1. magento/magento2#20956: Admin store view label not alignment ### Manual testing scenarios (*) <!--- Please provide a set of unambiguous steps to test the proposed code change. Giving us manual testing scenarios will help with the processing and validation process. --> 1. Login admin -> Content -> Configuration -> Select store 2. 2.2.x ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green) Backport for: https://github.com/magento/magento2/pull/20956",f4bec9aec5a22af59021b937fc09555823d3598e::
https://api.github.com/repos/magento/magento2,20958,backport-issue-18246::2.2-develop,0,closed,Component: Catalog::Release Line: 2.2::,### Original Pull Request https://github.com/magento/magento2/pull/19451 ### Description (*) Product attribute option manager's existing option check fails Added strict flag to in_array ### Fixed Issues (if relevant) 1. #18246 ### Manual testing scenarios (*) 1. Add attribute options by calling \Magento\Catalog\Model\Product\Attribute\OptionManagement::add 2. Add attribute option that has admin scope value '01'. 3. Add another option for same attribute that has admin scope value '1'. ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),8d85f5089f0cd1c72da41d6f746425fe428ede88::22cdce56e2ee68c84fe66a02e8ac10def8477e9c::
https://api.github.com/repos/magento/magento2,20876,backport-issue-20716::2.2-develop,0,merged,Component: Framework/Search::Progress: accept::Progress: on hold::Release Line: 2.2::,"### Description (*) Try to search products with end of string like ""-"" or ""-"" The exception error appear `Unexpected $end` https://dev.mysql.com/doc/refman/8.0/en/fulltext-boolean.html Original PR #20727 ### Fixed Issues (if relevant) 1. magento/magento2#20716: Exceptions when search product with sku like ""42-"" 3. magento/magento2#9988 Quick search by SKU not working properly ### Manual testing scenarios (*) 1.Enable the MySql as search engine in configuration. 2.Search in the frontend with sku ""42-"" or ""-"" 3.No exception appear ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",49d09cf331cd1ec6644b19ee7666ccfd87500c38::
https://api.github.com/repos/magento/magento2,20475,2.2-develop#20472::2.2-develop,0,closed,Area: Frontend::Component: Catalog::Partner: ISM eCompany::Progress: on hold::Release Line: 2.2::partners-contribution::,"Base issue: #20472 ### Description (*) Magento 2.3.X Magento 2.2.X #### Steps to reproduce (*) Navigate to admin catalog product grid Using ""Columns"" selection add 'Special Price' column in the grid #### Expected result (*) Special Price will be shown with currency code #### Actual result (*) Special Price showed without currency code. ### Fixed Issues (if relevant) Backport for https://github.com/magento/magento2/pull/20474 ### Manual testing scenarios (*) Navigate to admin catalog product grid Using ""Columns"" selection add 'Special Price' column in the grid ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",53c5871a4792c34b41909ac001a60b40b24ed3c1::398aadbe66962f033d675fdeac207e1d7fab92e5::04c943edd5075d4c10751dc92f8391b8c2f6ddbc::
https://api.github.com/repos/magento/magento2,20459,2.2-develop##13864::2.2-develop,0,closed,Component: Catalog::Partner: ISM eCompany::Progress: on hold::Release Line: 2.2::partners-contribution::,"Backport for https://github.com/magento/magento2/pull/20458 ### Description (*) #### Base issue #13864 Magento provide built-in product attribute with code country_of_manufacture. In admin product grid sorting on this attribute is not working. #### Preconditions Magento Version : CE 2.2.2 PHP version : PHP 7.0.18-1+deb.sury.org~xenial+1 MySQL version : mysql Ver 14.14 Distrib 5.7.20 #### Steps to reproduce Navigate to admin catalog product grid Using ""Columns"" selection add Country of Manufacture column in grid Now click on this Country of Manufacture column to apply sorting in grid Now you can see that sorting is not working in any order for this column #### Expected result Sort by Country of Manufacture should be working fine. #### Actual result Sort by country_of_manufacture product attribute not working. ### Fixed Issues (if relevant) Backport for https://github.com/magento/magento2/pull/20458 ### Manual testing scenarios (*) #### Steps to reproduce Navigate to admin catalog product grid Using ""Columns"" selection add Country of Manufacture column in grid Now click on this Country of Manufacture column to apply sorting in grid Now you can see that sorting is not working in any order for this column ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",1dea8378420e6a86080c9bf85910fffe6ff934ef::62272c7e18d3f9b908b34eb0cd8f4727e8954de3::175c098882992309b14da44795c335b7b8e2c13b::
https://api.github.com/repos/magento/magento2,19833,2.2-develop-PR-port-19462::2.2-develop,0,closed,Component: Sales::Progress: reject::Release Line: 2.2::,"### Original Pull Request #19462 <!--- Thank you for contributing to Magento. To help us process this pull request we recommend that you add the following information: - Summary of the pull request, - Issue(s) related to the changes made, - Manual testing scenarios Fields marked with (*) are required. Please don't remove the template. --> <!--- Please provide a general summary of the Pull Request in the Title above --> ### Description (*) <!--- Please provide a description of the changes proposed in the pull request. Letting us know what has changed and why it needed changing will help us validate this pull request. --> regarding the #18509 you can't cancel invoice if state == paid, If state == paid, you can do the credit memo. When you create an invoice and realise that it needs to be cancelled, be aware that there are some legal restrictions involved. Technically, you should never delete an issued invoice but instead use a credit note to cancel the invoice. This code doesn't make sense ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",07d9735c4caa12253add2d32ffd12049cc40ae02::
https://api.github.com/repos/magento/magento2,19113,2.2-openssl-1.1.1::2.2-develop,0,merged,Component: Analytics::Progress: accept::Progress: on hold::Release Line: 2.2::,"if openssl is updated to 1.1.1, openssl_get_cipher_methods returns all ciphers lowercase. Before you would get mixed uppercase and lowercase ciphers. You can still use uppercase or lowercase to use openssl. To avoid ""Not valid cipher method."" we must search if the cipherMethod exist in uppercase or lowercase before failing. output of openssl_get_cipher_methods with openssl 1.1.0f: ``` php -r 'print_r(openssl_get_cipher_methods());' Array ( [0] => AES-128-CBC [1] => AES-128-CBC-HMAC-SHA1 [2] => AES-128-CBC-HMAC-SHA256 [3] => AES-128-CFB [4] => AES-128-CFB1 [5] => AES-128-CFB8 [6] => AES-128-CTR [7] => AES-128-ECB [8] => AES-128-OCB [9] => AES-128-OFB [10] => AES-128-XTS [11] => AES-192-CBC [12] => AES-192-CFB [13] => AES-192-CFB1 [14] => AES-192-CFB8 [15] => AES-192-CTR [16] => AES-192-ECB [17] => AES-192-OCB [18] => AES-192-OFB [19] => AES-256-CBC [20] => AES-256-CBC-HMAC-SHA1 [21] => AES-256-CBC-HMAC-SHA256 [22] => AES-256-CFB [23] => AES-256-CFB1 [24] => AES-256-CFB8 [25] => AES-256-CTR [26] => AES-256-ECB [27] => AES-256-OCB [28] => AES-256-OFB [29] => AES-256-XTS [30] => BF-CBC [31] => BF-CFB [32] => BF-ECB [33] => BF-OFB [34] => CAMELLIA-128-CBC [35] => CAMELLIA-128-CFB [36] => CAMELLIA-128-CFB1 [37] => CAMELLIA-128-CFB8 [38] => CAMELLIA-128-CTR [39] => CAMELLIA-128-ECB [40] => CAMELLIA-128-OFB [41] => CAMELLIA-192-CBC [42] => CAMELLIA-192-CFB [43] => CAMELLIA-192-CFB1 [44] => CAMELLIA-192-CFB8 [45] => CAMELLIA-192-CTR [46] => CAMELLIA-192-ECB [47] => CAMELLIA-192-OFB [48] => CAMELLIA-256-CBC [49] => CAMELLIA-256-CFB [50] => CAMELLIA-256-CFB1 [51] => CAMELLIA-256-CFB8 [52] => CAMELLIA-256-CTR [53] => CAMELLIA-256-ECB [54] => CAMELLIA-256-OFB [55] => CAST5-CBC [56] => CAST5-CFB [57] => CAST5-ECB [58] => CAST5-OFB [59] => ChaCha20 [60] => ChaCha20-Poly1305 [61] => DES-CBC [62] => DES-CFB [63] => DES-CFB1 [64] => DES-CFB8 [65] => DES-ECB [66] => DES-EDE [67] => DES-EDE-CBC [68] => DES-EDE-CFB [69] => DES-EDE-OFB [70] => DES-EDE3 [71] => DES-EDE3-CBC [72] => DES-EDE3-CFB [73] => DES-EDE3-CFB1 [74] => DES-EDE3-CFB8 [75] => DES-EDE3-OFB [76] => DES-OFB [77] => DESX-CBC [78] => RC2-40-CBC [79] => RC2-64-CBC [80] => RC2-CBC [81] => RC2-CFB [82] => RC2-ECB [83] => RC2-OFB [84] => RC4 [85] => RC4-40 [86] => RC4-HMAC-MD5 [87] => SEED-CBC [88] => SEED-CFB [89] => SEED-ECB [90] => SEED-OFB [91] => aes-128-cbc [92] => aes-128-cbc-hmac-sha1 [93] => aes-128-cbc-hmac-sha256 [94] => aes-128-ccm [95] => aes-128-cfb [96] => aes-128-cfb1 [97] => aes-128-cfb8 [98] => aes-128-ctr [99] => aes-128-ecb [100] => aes-128-gcm [101] => aes-128-ocb [102] => aes-128-ofb [103] => aes-128-xts [104] => aes-192-cbc [105] => aes-192-ccm [106] => aes-192-cfb [107] => aes-192-cfb1 [108] => aes-192-cfb8 [109] => aes-192-ctr [110] => aes-192-ecb [111] => aes-192-gcm [112] => aes-192-ocb [113] => aes-192-ofb [114] => aes-256-cbc [115] => aes-256-cbc-hmac-sha1 [116] => aes-256-cbc-hmac-sha256 [117] => aes-256-ccm [118] => aes-256-cfb [119] => aes-256-cfb1 [120] => aes-256-cfb8 [121] => aes-256-ctr [122] => aes-256-ecb [123] => aes-256-gcm [124] => aes-256-ocb [125] => aes-256-ofb [126] => aes-256-xts [127] => bf-cbc [128] => bf-cfb [129] => bf-ecb [130] => bf-ofb [131] => camellia-128-cbc [132] => camellia-128-cfb [133] => camellia-128-cfb1 [134] => camellia-128-cfb8 [135] => camellia-128-ctr [136] => camellia-128-ecb [137] => camellia-128-ofb [138] => camellia-192-cbc [139] => camellia-192-cfb [140] => camellia-192-cfb1 [141] => camellia-192-cfb8 [142] => camellia-192-ctr [143] => camellia-192-ecb [144] => camellia-192-ofb [145] => camellia-256-cbc [146] => camellia-256-cfb [147] => camellia-256-cfb1 [148] => camellia-256-cfb8 [149] => camellia-256-ctr [150] => camellia-256-ecb [151] => camellia-256-ofb [152] => cast5-cbc [153] => cast5-cfb [154] => cast5-ecb [155] => cast5-ofb [156] => chacha20 [157] => chacha20-poly1305 [158] => des-cbc [159] => des-cfb [160] => des-cfb1 [161] => des-cfb8 [162] => des-ecb [163] => des-ede [164] => des-ede-cbc [165] => des-ede-cfb [166] => des-ede-ofb [167] => des-ede3 [168] => des-ede3-cbc [169] => des-ede3-cfb [170] => des-ede3-cfb1 [171] => des-ede3-cfb8 [172] => des-ede3-ofb [173] => des-ofb [174] => desx-cbc [175] => id-aes128-CCM [176] => id-aes128-GCM [177] => id-aes128-wrap [178] => id-aes128-wrap-pad [179] => id-aes192-CCM [180] => id-aes192-GCM [181] => id-aes192-wrap [182] => id-aes192-wrap-pad [183] => id-aes256-CCM [184] => id-aes256-GCM [185] => id-aes256-wrap [186] => id-aes256-wrap-pad [187] => id-smime-alg-CMS3DESwrap [188] => rc2-40-cbc [189] => rc2-64-cbc [190] => rc2-cbc [191] => rc2-cfb [192] => rc2-ecb [193] => rc2-ofb [194] => rc4 [195] => rc4-40 [196] => rc4-hmac-md5 [197] => seed-cbc [198] => seed-cfb [199] => seed-ecb [200] => seed-ofb ) ``` that output is missing the uppercase versions using openssl 1.1.1: ``` php -r 'print_r(openssl_get_cipher_methods());' Array ( [0] => aes-128-cbc [1] => aes-128-cbc-hmac-sha1 [2] => aes-128-cbc-hmac-sha256 [3] => aes-128-ccm [4] => aes-128-cfb [5] => aes-128-cfb1 [6] => aes-128-cfb8 [7] => aes-128-ctr [8] => aes-128-ecb [9] => aes-128-gcm [10] => aes-128-ocb [11] => aes-128-ofb [12] => aes-128-xts [13] => aes-192-cbc [14] => aes-192-ccm [15] => aes-192-cfb [16] => aes-192-cfb1 [17] => aes-192-cfb8 [18] => aes-192-ctr [19] => aes-192-ecb [20] => aes-192-gcm [21] => aes-192-ocb [22] => aes-192-ofb [23] => aes-256-cbc [24] => aes-256-cbc-hmac-sha1 [25] => aes-256-cbc-hmac-sha256 [26] => aes-256-ccm [27] => aes-256-cfb [28] => aes-256-cfb1 [29] => aes-256-cfb8 [30] => aes-256-ctr [31] => aes-256-ecb [32] => aes-256-gcm [33] => aes-256-ocb [34] => aes-256-ofb [35] => aes-256-xts [36] => aria-128-cbc [37] => aria-128-ccm [38] => aria-128-cfb [39] => aria-128-cfb1 [40] => aria-128-cfb8 [41] => aria-128-ctr [42] => aria-128-ecb [43] => aria-128-gcm [44] => aria-128-ofb [45] => aria-192-cbc [46] => aria-192-ccm [47] => aria-192-cfb [48] => aria-192-cfb1 [49] => aria-192-cfb8 [50] => aria-192-ctr [51] => aria-192-ecb [52] => aria-192-gcm [53] => aria-192-ofb [54] => aria-256-cbc [55] => aria-256-ccm [56] => aria-256-cfb [57] => aria-256-cfb1 [58] => aria-256-cfb8 [59] => aria-256-ctr [60] => aria-256-ecb [61] => aria-256-gcm [62] => aria-256-ofb [63] => bf-cbc [64] => bf-cfb [65] => bf-ecb [66] => bf-ofb [67] => camellia-128-cbc [68] => camellia-128-cfb [69] => camellia-128-cfb1 [70] => camellia-128-cfb8 [71] => camellia-128-ctr [72] => camellia-128-ecb [73] => camellia-128-ofb [74] => camellia-192-cbc [75] => camellia-192-cfb [76] => camellia-192-cfb1 [77] => camellia-192-cfb8 [78] => camellia-192-ctr [79] => camellia-192-ecb [80] => camellia-192-ofb [81] => camellia-256-cbc [82] => camellia-256-cfb [83] => camellia-256-cfb1 [84] => camellia-256-cfb8 [85] => camellia-256-ctr [86] => camellia-256-ecb [87] => camellia-256-ofb [88] => cast5-cbc [89] => cast5-cfb [90] => cast5-ecb [91] => cast5-ofb [92] => chacha20 [93] => chacha20-poly1305 [94] => des-cbc [95] => des-cfb [96] => des-cfb1 [97] => des-cfb8 [98] => des-ecb [99] => des-ede [100] => des-ede-cbc [101] => des-ede-cfb [102] => des-ede-ofb [103] => des-ede3 [104] => des-ede3-cbc [105] => des-ede3-cfb [106] => des-ede3-cfb1 [107] => des-ede3-cfb8 [108] => des-ede3-ofb [109] => des-ofb [110] => desx-cbc [111] => id-aes128-CCM [112] => id-aes128-GCM [113] => id-aes128-wrap [114] => id-aes128-wrap-pad [115] => id-aes192-CCM [116] => id-aes192-GCM [117] => id-aes192-wrap [118] => id-aes192-wrap-pad [119] => id-aes256-CCM [120] => id-aes256-GCM [121] => id-aes256-wrap [122] => id-aes256-wrap-pad [123] => id-smime-alg-CMS3DESwrap [124] => rc2-40-cbc [125] => rc2-64-cbc [126] => rc2-cbc [127] => rc2-cfb [128] => rc2-ecb [129] => rc2-ofb [130] => rc4 [131] => rc4-40 [132] => rc4-hmac-md5 [133] => seed-cbc [134] => seed-cfb [135] => seed-ecb [136] => seed-ofb [137] => sm4-cbc [138] => sm4-cfb [139] => sm4-ctr [140] => sm4-ecb [141] => sm4-ofb ) ``` So checking if uppercase or lowercase exists in the array fixes the issue with openssl 1.1.1 where the uppercase 'AES-256-CBC' is not found. You could also fix this by changing the $cipherMethod to 'aes-256-cbc', but you never know if openssl will change the output case again. The issue appears when just running the unittests on php with openssl 1.1.1, with the previous version of openssl (1.1.0f) the issue is not yet present. Test: ``` $ openssl version OpenSSL 1.1.1  11 Sep 2018 $ php -d memory_limit=2048M vendor/bin/phpunit --configuration dev/tests/unit/phpunit.xml.dist PHPUnit 6.5.13 by Sebastian Bergmann and contributors. .....................................................................................    85 / 21418 (  0%) .....................................................................................   170 / 21418 (  0%) ..............EE...F.................................................................   255 / 21418 (  1%) .....................................................................................   340 / 21418 (  1%) ... There were 2 errors: 1) Magento\Analytics\Test\Unit\Model\CryptographerTest::testEncode Magento\Framework\Exception\LocalizedException: The data is invalid. Use a valid cipher method and try again. /phpapp/app/code/Magento/Analytics/Model/Cryptographer.php:70 /phpapp/app/code/Magento/Analytics/Test/Unit/Model/CryptographerTest.php:134 2) Magento\Analytics\Test\Unit\Model\CryptographerTest::testEncodeUniqueInitializationVector Magento\Framework\Exception\LocalizedException: The data is invalid. Use a valid cipher method and try again. /phpapp/app/code/Magento/Analytics/Model/Cryptographer.php:70 /phpapp/app/code/Magento/Analytics/Test/Unit/Model/CryptographerTest.php:167 ... ``` Signed-off-by: BlackEagle <ike.devolder@gmail.com> <!--- Thank you for contributing to Magento. To help us process this pull request we recommend that you add the following information: - Summary of the pull request, - Issue(s) related to the changes made, - Manual testing scenarios Fields marked with (*) are required. Please don't remove the template. --> <!--- Please provide a general summary of the Pull Request in the Title above --> ### Description (*) See commit message ### Original PR See https://github.com/magento/magento2/pull/19104 ### Manual testing scenarios (*) See commit message ### Contribution checklist (*) - [x] Pull request has a meaningful description of its purpose - [x] All commits are accompanied by meaningful commit messages - [x] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green)",77304d4f5c00868995679f15e90776872ce07d13::
https://api.github.com/repos/magento/magento2,19023,2.2-develop-backport-17833-Child-theme-does-not-inherit-translations-from-parent-theme::2.2-develop,0,merged,Component: Framework/Translate::Partner: ISM eCompany::Progress: accept::Release Line: 2.2::partners-contribution::,"### Original pull request ( https://github.com/magento/magento2/pull/19018 ) ### Description ( #17833 ) Child theme does not inherit translations from parent theme. Theme inheritance does not work as expected with [translation dictionaries][1].  The child theme does not use any translations defined in it's parent theme's `en_US.csv` translation dictionary. ### Fixed Issues 1. magento/magento2#17833: Child theme does not inherit translations from parent theme ### Preconditions I'm working on a Magento ver 2.2.5 installation with two websites & two corresponding theme's.  Each with their own [translation dictionary][1], and one theme inheriting from the other. ### Manual testing scenarios 1. Set up a magento instance with two websites and with two theme's, one inheriting from luma and the other inheriting from the other theme you created.  See theme structure below. 2. Add a the translation string `""Create New Customer Account"",""Create New Account""` to the parent theme's `en_US.csv` translation dictionary. 3. Go to the _/customer/account/create/_ URL for the website with the child theme applied. **Expected result** The page title should be _Create New Account_ **Actual result** The page title is still _Create New Customer Account_ - If go to the _/customer/account/create/_ URL for the website with the parent theme applied, the page title should is _Create New Account_.  So the child theme is not picking up translations from the parent theme. - If you add the translation string `""Create New Customer Account"",""Create New Account""` to the Child theme's `en_US.csv` translation dictionary you can see the translation string applied corectly on the website with the child theme applied. Is this a bug with Magento or am I doing something wrong? Is the [translation dictionary][1] documentation incorrect and this is actually the correct behaviour? ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green) Hi @vpodorozh, please use `DIRECTORY_SEPARATOR` instead of `'/'`. ::Hi @vpodorozh, since Magento 2.2 supports PHP 7.0 you can't use nullable return types as this is a feature of PHP 7.1 and higher. See http://php.net/manual/en/migration71.new-features.php::This is not needed as `'/'` works in Windows as well.::@vadimjustus - Yes, I've missed it. Fixed in my latest commit.::@vadimjustus - as I understand we can skip it?::@vpodorozh yep::",caa2fe87bcf4d2f452d65119ba8c89672ed60ba6::24330d629eca6494445b533126dbc0796605fe4d::10d9cc9d1a20d9051d7ef95ded7d14cea0585a0d::a3db8d3f789859a096fed08cf1bf2a57987f4bc0::26ea51e007a9908188f5379a7beab5179888ceff::e8a07c95592a7d993890255d0da1312efb5dab78::
https://api.github.com/repos/magento/magento2,18882,2.2-develop-PR-port-18792::2.2-develop,0,closed,Component: User::Release Line: 2.2::,"### ORiginal PR #18792 <!--- Thank you for contributing to Magento. To help us process this pull request we recommend that you add the following information: - Summary of the pull request, - Issue(s) related to the changes made, - Manual testing scenarios Fields marked with (*) are required. Please don't remove the template. --> <!--- Please provide a general summary of the Pull Request in the Title above --> ### Description (*) <!--- Please provide a description of the changes proposed in the pull request. Letting us know what has changed and why it needed changing will help us validate this pull request. --> Hello, In my opinion, else conditional statements are not required. because use ""return"" in the if statement. So, delete else statements. What do you think of it? Thanks. ### Fixed Issues (if relevant) <!--- If relevant, please provide a list of fixed issues in the format magento/magento2#<issue_number>. There could be 1 or more issues linked here and it will help us find some more information about the reasoning behind this change. --> N/A ### Manual testing scenarios (*) <!--- Please provide a set of unambiguous steps to test the proposed code change. Giving us manual testing scenarios will help with the processing and validation process. --> N/A ### Contribution checklist (*) - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",c7c681f4908af56e129b0be57f4e94643b615821::
https://api.github.com/repos/magento/magento2,17057,BP-PR-16579::2.1-develop,0,merged,Area: Lib/Frontend::Cleanup::Progress: accept::Release Line: 2.1::,Backport of PR https://github.com/magento/magento2/pull/16579 ### Description As gallery.less is not part of default styles-l and styles-m files and gallery.less is not using any breakpoints there is no need to import _responsive.less ### Fixed Issues (if relevant) none ### Manual testing scenarios ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),7b17bb15b5a9296429c4ece92e382f420c898ea9::
https://api.github.com/repos/magento/magento2,16839,PP-PR-16766::2.1-develop,0,merged,Area: Lib/Frontend::Progress: accept::Release Line: 2.1::,"### Description Backport of PR #16766 Changed focus to hover, because field validation focuses first incorrect field ### Fixed Issues (if relevant) 1. magento/magento2#16764: Rating Star issue on Product detail Page. ### Manual testing scenarios 1.Go to product page 2.submit review without any input Expected result: rating stars show message ""Please select one of each of the ratings above"" Actual result: Shows message ""Please select one of each of the ratings above"" and first star is in focus (shows as filled star) ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",8e4cda67b30cf2f4c276703e6d12a6034fb47d44::
https://api.github.com/repos/magento/magento2,16755,BP-PR-16716::2.1-develop,0,merged,Area: Lib/Frontend::Progress: accept::Release Line: 2.1::,### Description backport of PR #16716 ### Fixed Issues (if relevant) ### Manual testing scenarios look product toolbar pager number css should be: .pages .item { font-size: 1.2rem; ... } is: .pages .item { font-size: 1.2rem; font-size: 12px; ... } ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),f7160a20dd6818ebe70dbe3897ffd3490d080725::
https://api.github.com/repos/magento/magento2,16735,BP-PR-16559::2.1-develop,0,merged,Area: Design/Frontend::Cleanup::Progress: accept::Release Line: 2.1::,### Description Backport of #16559 Changed search icon to use header icons color variables ### Fixed Issues (if relevant) ### Manual testing scenarios ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),818519e6fbcccaa02260de2939589f1b07b5cfbc::c11e32975305efa17accd4e3ef5a9c9bf311b748::59a9f32790d682b8dd93dd2732d70efa58adea08::
https://api.github.com/repos/magento/magento2,15258,backport-fixes-for-instantpurchase::2.2-develop,0,merged,Progress: accept::Release Line: 2.2::,<!--- Provide a general summary of the Pull Request in the Title above --> ### Description Original PR: https://github.com/magento/magento2/pull/15257 The Method `get($type)` in `/Magento/InstantPurchase/Model/ShippingMethodChoose/DeferredShippingMethodChooserPool.php ` throws an Exception without showing the shipping method $type as it was hardcoded as` 'chooser'`. Allowing `null` for properties in `InstantPurchaseOption.php` as they are null in the constructor by default. Fixing PHPDocs as they refer to wrong [Classes](https://github.com/magento/magento2/commit/770d8bae159c7fdfc9a35a17b1b66e988acc9e2f) or have missing type declarations. ### Contribution checklist - [x] Pull request has a meaningful description of its purpose - [x] All commits are accompanied by meaningful commit messages - [x] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green),79887d73c332deac59770bf80671aa811e50c129::
https://api.github.com/repos/magento/magento2,14738,PR-14716-backport::2.1-develop,0,merged,Progress: accept::Release Line: 2.1::,Backport of PR #14716 ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),3cc5b4dbd64c644ec1cd25abf470910080d40b34::59b2f4d15dd4798db9f740ae6a88ca7ac6427099::
https://api.github.com/repos/magento/magento2,14736,PR-14715-backport::2.1-develop,0,merged,Progress: accept::Release Line: 2.1::,Backport of PR #14715 ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),493541e721f256ed20faf676c47311a211320777::
https://api.github.com/repos/magento/magento2,14524,2.1-review-translation::2.1-develop,0,merged,Progress: accept::Release Line: 2.1::,"Original PR https://github.com/magento/magento2/pull/14498 ### Description Added possibility to translate ""stars"" phrase in product reviews ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",c6c4313172e66b914530af18d40c9b6afd910f55::8a4674a121324ce375d4ba0bb09ef05d03cf3314::
https://api.github.com/repos/magento/magento2,14497,2.1-email-button.-fix::2.1-develop,0,merged,Progress: accept::Release Line: 2.1::,Original PR #14455 ### Description On hover button should use @button-primary__hover__color not @button-primary__color ### Fixed Issues (if relevant) ### Manual testing scenarios ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),42a2fe775d44fdc90af2db9e74f7d62038cab971::
https://api.github.com/repos/magento/magento2,13906,BACKPORT-#13567::2.1-develop,0,closed,Progress: needs update::,"### Description Backport of MAGETWO-83560 for 2.1.x projects. Fixes issue with generating 301 redirect when changing product URL key on Storeview level ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#10073: Magento don't create product redirect if URL key on store view level was changed. 2. magento/magento2#13240: Permanent 301 redirect is not generated when product url changes on storeview scope ### Manual testing scenarios 1. ... Change Product url key on storeview level 2. ... Check Url Rewrites table for the correct rewrites ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green) I believe we should remove `$expectedDeleteCount` variable (parameter) from the function as well since it's unused. ::hi @rogyar Thanks for your review, I really appreciate it! 👍 Backporting tests always give me headaches 😄 I hope they run smoothly through travis now::Please, fix the mentioned issue via a new commit. After that the tests will be executed once again.::",db1d207f6fd09f6d6692177e5d9d5d88c9c6c412::3f58052f0f71d0ee0c42de5afa9a1fd1dd031c3a::3700137e9a72ca09109cd7e0760c97a7afb73391::c3888845f282cdc0a36ce344b83be1cde0d02c3b::
https://api.github.com/repos/magento/magento2,13756,bugfix/issue-13704-backport-2.1::2.1-develop,0,merged,Component: Catalog::Progress: accept::Release Line: 2.1::,"The problem is that Magento\Catalog\Model\ResourceModel\Category\Collection::joinUrlRewrite always use the store id from the store manager. I think that it should instead use the storeId set on the actual collection. <!--- Provide a general summary of the Pull Request in the Title above --> ### Description Now joinUrlRewrite uses directly the storeManager, but if a store is set directly on the collection, it should use the store set, and not the default passed by the store manager. The method getStoreId(), if not set, already goes on fallback to the store manager and get the default, so it should be safe to directly use getStoreId(). ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#13704: Category\Collection::joinUrlRewrite should use the store set on the collection ### Manual testing scenarios I already provided an automated unit test. There is an code example in the related issue magento/magento2#13704. It's my first automated test here, so I hope it's ok :) ### Contribution checklist - [x] Pull request has a meaningful description of its purpose - [x] All commits are accompanied by meaningful commit messages - [x] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green)",2239f3d21bb1ce9cee807a28cc4a2861b0361ab7::6f556ff03d8161686e4a49217342756ebd77d6f1::915be6ea120a8e46922250459f63d077ae8675b0::
https://api.github.com/repos/magento/magento2,12173,8022-2.2::2.2-develop,0,merged,Component: Sales::Fixed in 2.2.x::Progress: accept::Release Line: 2.2::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bugfix::,### Description Backport from https://github.com/magento/magento2/pull/11680. Method getTracksCollection() was able to return different types of data: collection or array. Now it will always return tracks collection object. ### Fixed Issues (if relevant) 1. magento/magento2#8022: Uncaught Error: Call to a member function addItem() on array in app/code/Magento/Sales/Model/Order/Shipment.php ### Manual testing scenarios 1. Load or create a Shipment model ``` /*** @var $shipment \Magento\Sales\Model\Order\Shipment **/ $shipmentCollection = $this->_objectManager->get( 'Magento\Sales\Model\ResourceModel\Order\Shipment\CollectionFactory' )->create(); $shipment = $shipmentCollection->getFirstItem(); {code} 2. Make a call `$shipment->getTracks();` 3. Create a Track model and try to add it to the Shipment {code} /*** @var $track \Magento\Sales\Model\Order\Shipment\Track **/ $track = $this->_objectManager->get( 'Magento\Sales\Model\Order\Shipment\TrackFactory' )->create(); $track->setNumber('Test Number') ->setTitle('Test Title') ->setCarrierCode('Test CODE'); $shipment->addTrack($track)->save(); ``` ### Expected result 1. Successfull save ### Actual result You will receive an error **Call to a member function addItem() on array* because the method *getTracksCollection()** in Shipment model will return an array instead of Collection Object. ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),52dff0b47ef921b1f08fda4015bdd042555e4b23::
https://api.github.com/repos/magento/magento2,12171,7691-2.2::2.2-develop,0,merged,Component: Checkout::Component: Customer::Progress: accept::Release Line: 2.2::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bugfix::,"Backport from https://github.com/magento/magento2/pull/11903. If you place an order as a guest and set the save_in_address_book for an address on 0, that address will still be copied to the customer address book when registering as a new customer on the checkout success page. ### Fixed Issues (if relevant) 1. magento/magento2#7691: address with saveInAddressBook 0 are still being added to the address book for new customers. ### Manual testing scenarios 1. Place an order as a guest and set the save_in_address_book for your shipping address to 0 2. Click the register link on the checkout success page 3. Addresses with save_in_address_book set to 0 should not be copied to the new customer address book. ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",b750e583b36d4409dfd2b2b3a82bea06a31b2511::
https://api.github.com/repos/magento/magento2,12170,9990-2.2::2.2-develop,0,closed,Component: ImportExport::Release Line: 2.2::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bugfix::,Backport from https://github.com/magento/magento2/pull/11935. ### Description ### Fixed Issues (if relevant) 1. magento/magento2#9990: Product import doesn't allow empty attribute values for non-static attributes ### Manual testing scenarios 1. Change value to empty for some attribute in csv. 2. Run product import. 3. Check this attribute for value. It should be empty. ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green) @RomaKis I would consider that we could now deprecate this method now if it is not doing anything and also remove the usage of this method from any place we can find.::,dae09208c5cea889027e8d822b4c953913b35c84::
https://api.github.com/repos/magento/magento2,12145,9768-2.0::2.0-develop,0,closed,Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bugfix::,"Admin dashboard Most Viewed Products Tab only gives default attribute set's products. Backport from https://github.com/magento/magento2/pull/11725. ### Fixed Issues (if relevant) 1. magento/magento2#9768: Admin dashboard Most Viewed Products Tab only gives default attribute set's products ### Manual testing scenarios 1. Login to Customer Account 2. Visited Product ""Minerva LumaTech™ V-Tee"" 3. Login to magento admin panel 4. Check magento dashboard ""Most Viewed Product"" grid ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",3e6e82ebca7e95e77a5f9b46a66540d3505dbaed::
https://api.github.com/repos/magento/magento2,12139,9768-2.2::2.2-develop,0,merged,Fixed in 2.2.x::Progress: accept::Release Line: 2.2::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bugfix::,"Admin dashboard Most Viewed Products Tab only gives default attribute set's products. Backport from https://github.com/magento/magento2/pull/11725. ### Fixed Issues (if relevant) 1. magento/magento2#9768: Admin dashboard Most Viewed Products Tab only gives default attribute set's products ### Manual testing scenarios 1. Login to Customer Account 2. Visited Product ""Minerva LumaTech™ V-Tee"" 3. Login to magento admin panel 4. Check magento dashboard ""Most Viewed Product"" grid ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",6a5833961309d1ff854d6b0dd783ac762a9ed8f8::
https://api.github.com/repos/magento/magento2,12137,9768-2.1::2.1-develop,0,merged,Fixed in 2.2.x::Progress: accept::Release Line: 2.1::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bugfix::,"Admin dashboard Most Viewed Products Tab only gives default attribute set's products. Backport from https://github.com/magento/magento2/pull/11725. ### Fixed Issues (if relevant) 1. magento/magento2#9768: Admin dashboard Most Viewed Products Tab only gives default attribute set's products ### Manual testing scenarios 1. Login to Customer Account 2. Visited Product ""Minerva LumaTech™ V-Tee"" 3. Login to magento admin panel 4. Check magento dashboard ""Most Viewed Product"" grid ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",ef6a9a48a2115fbc45004b8595dfa4811fbab29d::
https://api.github.com/repos/magento/magento2,12135,10210-2.1::2.1-develop,0,merged,Component: Payment::Fixed in 2.3.x::Progress: accept::Release Line: 2.1::Reproduced on 2.1.x::Reproduced on 2.2.x::bugfix::,"Backport MAGETWO-69482. ### Fixed Issues (if relevant) 1. magento/magento2#10210: Transport variable can not be altered in email_invoice_set_template_vars_before Event (backport MAGETWO-69482 to 2.1). ### Manual testing scenarios 1. Declare the event ``` <event name=""email_invoice_set_template_vars_before""> <observer name=""mod_mail_variables_of_Invoice"" instance=""Vendor\Module\Observer\ChangePaymentHtml"" /> </event> ``` 2. Alter variable payment_html in Vendor\Module\Observer\ChangePaymentHtml like ``` <?php namespace Venoor\Module\Observer; use Magento\Framework\Event\ObserverInterface; use Magento\Framework\Event\Observer; use Magento\Framework\App\Request\DataPersistorInterface; use Magento\Framework\App\ObjectManager; use Vendor\Module\Helper\Data as PaymentHelper; use Magento\Sales\Model\Order; class ChangePaymentHtml implements ObserverInterface { public function execute(\Magento\Framework\Event\Observer $observer) { $transport = $observer->getEvent()->getData('transportObject'); $transport['payment_html'] = '<div>SOME PAYMENT INFO</div>'; $observer->setData('transportObject', $transport); } } ``` 3. Create order -> create Invoice. 4. Open invoice. 5. Press Send email. 6. Open email. Payment method should be ""SOME PAYMENT INFO"" . ### Expected result 1. Email should be modified and new or changed variables should be output in email. ### Actual result 1. Email is unchanged, and $transport variable seems not to be changed. ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",ffe97c1bae6c4d405124489c11bff8d5d28b2141::
https://api.github.com/repos/magento/magento2,12132,10210::2.2-develop,0,merged,Component: Payment::Fixed in 2.1.x::Fixed in 2.2.x::Fixed in 2.3.x::Progress: accept::Release Line: 2.2::Reproduced on 2.1.x::Reproduced on 2.2.x::bugfix::,"Backport MAGETWO-69482. ### Fixed Issues (if relevant) 1. magento/magento2#10210: Transport variable can not be altered in email_invoice_set_template_vars_before Event (backport MAGETWO-69482 to 2.2). ### Manual testing scenarios 1. Declare the event ``` <event name=""email_invoice_set_template_vars_before""> <observer name=""mod_mail_variables_of_Invoice"" instance=""Vendor\Module\Observer\ChangePaymentHtml"" /> </event> ``` 2. Alter variable payment_html in Vendor\Module\Observer\ChangePaymentHtml like ``` <?php namespace Venoor\Module\Observer; use Magento\Framework\Event\ObserverInterface; use Magento\Framework\Event\Observer; use Magento\Framework\App\Request\DataPersistorInterface; use Magento\Framework\App\ObjectManager; use Vendor\Module\Helper\Data as PaymentHelper; use Magento\Sales\Model\Order; class ChangePaymentHtml implements ObserverInterface { public function execute(\Magento\Framework\Event\Observer $observer) { $transport = $observer->getEvent()->getData('transportObject'); $transport['payment_html'] = '<div>SOME PAYMENT INFO</div>'; $observer->setData('transportObject', $transport); } } ``` 3. Create order -> create Invoice. 4. Open invoice. 5. Press Send email. 6. Open email. Payment method should be ""SOME PAYMENT INFO"" . ### Expected result 1. Email should be modified and new or changed variables should be output in email. ### Actual result 1. Email is unchanged, and $transport variable seems not to be changed. ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green) ### Related Pull Requests https://github.com/magento/magento2/pull/9755",279b0c8e9f3a6ce90a71da3ce2642e122558d1aa::
https://api.github.com/repos/magento/magento2,12092,backport-of-pr-12091::2.1-develop,0,merged,Progress: accept::Release Line: 2.1::,This is a backport of PR #12091 to 2.1,d6c82856bf6823285e8b25c34b18ca3bd0c4b838::
https://api.github.com/repos/magento/magento2,12040,feature/11996-backport21::2.1-develop,0,merged,Progress: accept::Release Line: 2.1::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::,### Description Magento 2 Store Code validation regex: doesn't support uppercase letters in store code ### Fixed Issues (if relevant) 1. magento/magento2#11996: Magento 2 Store Code validation regex: doesn't support uppercase letters in store code ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),767da58f655cc37a5e40ea7013fa612fa90d906c::
https://api.github.com/repos/magento/magento2,12011,feature/11996-backport::2.2-develop,0,merged,Progress: accept::Release Line: 2.2::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::,"### Description Magento 2 Store Code validation regex: doesn't support uppercase letters in store code ### Fixed Issues (if relevant) 1. magento/magento2#11996: Magento 2 Store Code validation regex: doesn't support uppercase letters in store code ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)This expression will not allow code with uppercase letter after number or underscore (e.g. `a1A`). Instead of modifying regexp it's better to apply modifier `i` ([PCRE_CASELESS](http://php.net/manual/en/reference.pcre.pattern.modifiers.php)) to make case-insensitive comparison.::Please do not modify the description as this will break existed translations (will be backward incompatible change). As string does not say ""lowercase letters"" it is also applicable for updated implementation::",e79e0026a047713e25873bf1aac5ede254b92d1c::dbd16d337893cc0e1eaf492a6e32a1fa3f49a730::
https://api.github.com/repos/magento/magento2,11988,10195-2.2::2.2-develop,0,merged,Component: Sales::Fixed in 2.2.x::Progress: accept::Release Line: 2.2::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bug report::bugfix::,"Order relation child is not set during edit operation. ### This is backport https://github.com/magento/magento2/pull/11909 ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#10195:  Order relation child is not set during edit operation. ### Manual testing scenarios ### Steps to reproduce 1. Create an order 2. Edit the order through admin panel 3. Check `relation_child_id`and `relation_child_real_id` fields of the **old** order. It should be filled. ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",7c753ac73d6ae9fcb666264514ce9ca94480c7e3::
https://api.github.com/repos/magento/magento2,11958,11197::2.2-develop,0,merged,Area: Frontend::Component: Checkout::Fixed in 2.3.x::Progress: accept::Release Line: 2.2::Reproduced on 2.1.x::Reproduced on 2.2.x::,### Description Blank page at the checkout 'shipping' step[backport]. ### Fixed Issues (if relevant) 1. magento/magento2#11197: Blank page at the checkout 'shipping' step ### Manual testing scenarios <!--- Provide a set of unambiguous steps to test the proposed code change --> 1. Add any product to the cart as a guest user 2. Proceed to the checkout 3. Fill address and customer data 4. Proceed to the payment step 5. Click 'Shipping' in the progress bar to return to the shipping step 6. Click next and proceed again to the payment step 7. Click 'back' button in the browser 8. Check that customer is redirected to shipping step and is able to change address data. ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),f43fbccc450f265fa533f48ee2430f0059b62237::
https://api.github.com/repos/magento/magento2,11890,FR#BackgroundImage21::2.1-develop,0,merged,Progress: accept::Release Line: 2.1::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bug report::,"<!--- Provide a general summary of the Pull Request in the Title above --> Related with the [PR11888](https://github.com/magento/magento2/pull/11888) ### Description <!--- Provide a description of the changes proposed in the pull request --> If you updated the background color for image of product, this color always was black and it never was the color indicated in your configuration. ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#[8799](https://github.com/magento/magento2/issues/8799): Image brackground ### Steps to reproduce <!--- Provide a set of unambiguous steps to test the proposed code change --> 1. Edit view.xml file `ex: theme-frontend-luma/etc/view.xml` 2. Add background color attribute to an image ``` <image id=""related_products_list"" type=""small_image""> <width>152</width> <height>230</height> <background>[250,247,247]</background> </image> ``` 3. Clear cache and reload images. ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [x] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green)",c9786df7fa52ae92a07da17c56278ac6a910de4b::ea1fcf129134e82f7ff3395c8e0dccc8ed943c82::d133c1dea71ea7e499fabf271497d2d9bed8ef0b::
https://api.github.com/repos/magento/magento2,11889,FR#BackgroundImage22::2.2-develop,0,merged,Progress: accept::Release Line: 2.2::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bug report::,"<!--- Provide a general summary of the Pull Request in the Title above --> Related with the [PR11888](https://github.com/magento/magento2/pull/11888) ### Description <!--- Provide a description of the changes proposed in the pull request --> If you updated the background color for image of product, this color always was black and it never was the color indicated in your configuration. ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#[8799](https://github.com/magento/magento2/issues/8799): Image brackground ### Steps to reproduce <!--- Provide a set of unambiguous steps to test the proposed code change --> 1. Edit view.xml file `ex: theme-frontend-luma/etc/view.xml` 2. Add background color attribute to an image ``` <image id=""related_products_list"" type=""small_image""> <width>152</width> <height>230</height> <background>[250,247,247]</background> </image> ``` 3. Clear cache and reload images. ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [x] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green)",ab2c4d1f66dd0b16c4f8168b361cdde12abdcfb4::2849a2cc64d8b26dacdfa2185f07bcbddb9570dd::fe3fb1ef16965353b071f759156e1f119c1a5160::
https://api.github.com/repos/magento/magento2,11844,FR#Save0PriceType21::2.1-develop,0,merged,Component: Catalog::Progress: accept::Release Line: 2.1::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bug report::,"<!--- Provide a general summary of the Pull Request in the Title above --> Related with the [PR11842](https://github.com/magento/magento2/pull/11842) ### Description <!--- Provide a description of the changes proposed in the pull request --> Possibility to save the price in custom options with value 0 or empty ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#<[4808](https://github.com/magento/magento2/issues/4808)>: The price of product custom option can't be set to 0 ### Steps to reproduce 1. Add an product custom option (Select Type) 2. Add new row and set price greater than 0. 3. Save product. 4. Change the row price to 0 or empty. 5. Save product. ### Expected result 1. The row price becomes 0. ### Actual result 1. The row price doesn't becomes 0. ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",ccf496261ba45e1768731f0ce3451034fbc70a67::b4b7635d299b0e5b6d3c670124e054d368315e2c::
https://api.github.com/repos/magento/magento2,11843,FR#Save0PriceType22::2.2-develop,0,merged,Component: Catalog::Progress: accept::Release Line: 2.2::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bug report::,"<!--- Provide a general summary of the Pull Request in the Title above --> Related with the [PR11842](https://github.com/magento/magento2/pull/11842) ### Description <!--- Provide a description of the changes proposed in the pull request --> Possibility to save the price in custom options with value 0 or empty ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#<[4808](https://github.com/magento/magento2/issues/4808)>: The price of product custom option can't be set to 0 ### Steps to reproduce 1. Add an product custom option (Select Type) 2. Add new row and set price greater than 0. 3. Save product. 4. Change the row price to 0 or empty. 5. Save product. ### Expected result 1. The row price becomes 0. ### Actual result 1. The row price doesn't becomes 0. ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",dc8043291c1abfa96238ad45e04d0369f3b0c914::ef464bd4c68c4ba8d1b36685c07643d01ca60a7e::
https://api.github.com/repos/magento/magento2,11811,feature/11341_backpot23::2.3-develop,0,closed,Fixed in 2.2.x::Progress: reject::Release Line: 2.3::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::,### Description <!--- Provide a description of the changes proposed in the pull request --> Attribute category_ids issue ### Fixed Issues 1. magento/magento2#11341: Attribute category_ids issue 2. Backport from: https://github.com/magento/magento2/pull/11389 ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),f77b1438db9762d2ca004c315ac929ae3f9d3958::
https://api.github.com/repos/magento/magento2,11807,feature/11341_backport::2.1-develop,0,merged,Fixed in 2.2.x::Progress: accept::Release Line: 2.1::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::,### Description <!--- Provide a description of the changes proposed in the pull request --> Attribute category_ids issue ### Fixed Issues 1. magento/magento2#11341: Attribute category_ids issue 2. Backport from: https://github.com/magento/magento2/pull/11389 ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green),4e24f7324a4e46e629b08275e613b08135061f68::
https://api.github.com/repos/magento/magento2,11694,8820_23::2.3-develop,0,closed,Component: Framework/Webapi::Progress: on hold::Release Line: 2.3::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bugfix::,"… #8820 #8171 When saving a product, check typeId control. If it's value isn't one of available, set the default one before saving. ### Description Set the default product type before saving it on repository, for prevent error on create stockitem and the undesired attributes deleting on \Magento\Catalog\Model\Product\Type\AbstractType::_removeNotApplicableAttributes() ### Fixed Issues 1. magento/magento2#8820: WEBAPI: Unable to save Product when typeId and status is missing 2. magento/magento2#8171 Price not saved when creating product via REST API ### Manual testing scenarios Same testing described at issues #8820 and #8171. Save product via API. ### Contribution checklist - [x] Pull request has a meaningful description of its purpose - [x] All commits are accompanied by meaningful commit messages - [x] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green)",ffa703ea6fc1e2f34878f10984ab398237aaa3be::3ccea976c26e0d7a2a93366fe222924bdc1b28bc::
https://api.github.com/repos/magento/magento2,11645,8820_22::2.2-develop,0,closed,Component: Framework/Webapi::Progress: needs update::Release Line: 2.2::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bugfix::,"… #8820 #8171 When saving a product, check typeId control. If it's value isn't one of available, set the default one before saving. ### Description Set the default product type before saving it on repository, for prevent error on create stockitem and the undesired attributes deleting on \Magento\Catalog\Model\Product\Type\AbstractType::_removeNotApplicableAttributes() ### Fixed Issues 1. magento/magento2#8820: WEBAPI: Unable to save Product when typeId and status is missing 2. magento/magento2#8171 Price not saved when creating product via REST API ### Manual testing scenarios Same testing described at issues #8820 and #8171. Save product via API. ### Contribution checklist - [x] Pull request has a meaningful description of its purpose - [x] All commits are accompanied by meaningful commit messages - [x] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green) Hi @gomencal, So, we don't have any kind of schema validation for WebAPI, right? Like a way to forbid empty type_id. Where exactly error occurs in case of empty type_id? Maybe it's better to put such assignment there instead of repository?::",2168bc825f9fd6f13e02d23a9c47f4eefb12b370::a01b0f0eb81107ddca94a71b56a18022677b9195::d688d6fc67d70f7af9410c4f860651371e88f5c3::
https://api.github.com/repos/magento/magento2,11643,2.2-fix-checkout-field-config-reader-from-layout-xml::2.2-develop,0,merged,Component: Config::Release Line: 2.2::,"- This PR cherry-picked from [MAGETWO-81310](https://github.com/magento/magento2/commit/3f0a090093c972855551d90034c269eff1f1f097). - Original [PR](https://github.com/magento/magento2/pull/11302). ### Description Config array is hardcoded to read three settings only. The patch allows reading all settings from `config`. Example: ```xml <item name=""postcode"" xsi:type=""array""> <item name=""config"" xsi:type=""array""> <item name=""label"" xsi:type=""string"">Another Label</item> <item name=""placeholder"" xsi:type=""string"">Field Placeholder</item> </item> </item> ``` ### Manual testing scenarios 1. Open `Magento/Checkout/view/frontend/layout/checkout_index_index.xml` and find postcode settings 2. Change its settings as follows: ```xml <item name=""postcode"" xsi:type=""array""> <!-- post-code field has custom UI component --> <item name=""component"" xsi:type=""string"">Magento_Ui/js/form/element/post-code</item> <item name=""validation"" xsi:type=""array""> <item name=""required-entry"" xsi:type=""string"">true</item> </item> <item name=""config"" xsi:type=""array""> <item name=""label"" xsi:type=""string"">test label</item> <item name=""placeholder"" xsi:type=""string"">test placeholder</item> </item> </item> ``` 3. Navigate to checkout and you'll see that settings are not working. 4. Apply the patch and settings will start working. ### Contribution checklist - [x] Pull request has a meaningful description of its purpose - [x] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",29ce8bec8fc5bf58e19e9c1d7a894e5c7387d6ed::
https://api.github.com/repos/magento/magento2,11622,FR#CheckAttributeUniqueEE::2.3-develop,0,merged,Progress: accept::Release Line: 2.3::,"<!--- Provide a general summary of the Pull Request in the Title above --> Related with the [PR11620](https://github.com/magento/magento2/pull/11620) ### Description <!--- Provide a description of the changes proposed in the pull request --> Check attribute unique in Magento Commerce (EE) correctly ### Steps to reproduce <!--- Provide a set of unambiguous steps to test the proposed code change --> In Magento Commerce (EE). 1. Create a custom attribute unique and add it to the attribute set. 2. Create a new value for this attribute in a product and save it. 3. Save the product again.* ***If for any reason, the value row_id is different and entity_id. The check return how if the product to validate are different.** ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green)",737a76b7653b7972874e842affe10acb47b984d3::
https://api.github.com/repos/magento/magento2,11621,FR#CheckAttributeUniqueEE21::2.1-develop,0,merged,Progress: accept::Release Line: 2.1::,"<!--- Provide a general summary of the Pull Request in the Title above --> Related with the [PR11620](https://github.com/magento/magento2/pull/11620) ### Description <!--- Provide a description of the changes proposed in the pull request --> Check attribute unique in Magento Commerce (EE) correctly ### Steps to reproduce <!--- Provide a set of unambiguous steps to test the proposed code change --> In Magento Commerce (EE). 1. Create a custom attribute unique and add it to the attribute set. 2. Create a new value for this attribute in a product and save it. 3. Save the product again.* ***If for any reason, the value row_id is different and entity_id. The check return how if the product to validate are different.** ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green)",6cc7f89ee18e71504f66ca2a4fddca2e2c1bf7b2::5d44be96f15026b12f03a51e47c8e3f896ebdd4a::
https://api.github.com/repos/magento/magento2,11619,FR#ReSavingProductAttribute::2.3-develop,0,merged,Component: Catalog::Fixed in 2.2.x::Fixed in 2.3.x::Progress: accept::Release Line: 2.3::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bugfix::,"<!--- Provide a general summary of the Pull Request in the Title above --> Realed with the [PR11617](https://github.com/magento/magento2/pull/11617) ### Description <!--- Provide a description of the changes proposed in the pull request --> To re save product attribute, the attribute code is not retrieve correctly. ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#[6770](https://github.com/magento/magento2/issues/6770): M2.1.1 : Re-saving a product attribute with a different name than it's code results in an error",3fb4c82a908245b45d5f56d06f460300fb1edf59::
https://api.github.com/repos/magento/magento2,11618,FR#ReSavingProductAttribute21::2.1-develop,0,merged,Component: Catalog::Fixed in 2.2.x::Fixed in 2.3.x::Progress: accept::Release Line: 2.1::Reproduced on 2.1.x::Reproduced on 2.2.x::Reproduced on 2.3.x::bugfix::,"<!--- Provide a general summary of the Pull Request in the Title above --> Realed with the [PR11617](https://github.com/magento/magento2/pull/11617) ### Description <!--- Provide a description of the changes proposed in the pull request --> To re save product attribute, the attribute code is not retrieve correctly. ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#[6770](https://github.com/magento/magento2/issues/6770): M2.1.1 : Re-saving a product attribute with a different name than it's code results in an error",68a3ed6a2955d85db8c8e07cf08747938e5d54ec::
https://api.github.com/repos/magento/magento2,11471,FR#10231_20::develop,0,merged,Component: CatalogUrlRewrite::Fixed in 2.2.x::Progress: accept::bug report::,Magento custom url rewrites functionality is not working when adding a redirection of magento controllers. For example a custom redirection from /customer/account/create to another page. ### Description This commit modifies the order that magento loads the routerList pushing **urlrewrite** router before magento base router. Thats the same order that Magento 1 uses in the function **dispatch()** on **web/app/code/core/Mage/Core/Controller/Varien/Front.php** controller. ### Related PRs: #11469 #11470 ### Fixed Issues (if relevant) 1. magento/magento2#10231: Custom URL Rewrite Not working ### Manual testing scenarios 1. Add New Custom URL Rewrite 2. Set Request Path customer/account/create and Target Path  customer/account/login 3. It should redirect customer/account/create page To customer/account/login page same like Magento 1.x When adding this modification the expected result is accomplish ### Contribution checklist - [x] Pull request has a meaningful description of its purpose - [x] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green),30752679e1590895860d2f8fb3fe0118ee60f176::
https://api.github.com/repos/magento/magento2,11470,FR#10231_22::2.2-develop,0,merged,Component: CatalogUrlRewrite::Progress: accept::Release Line: 2.2::bug report::,Magento custom url rewrites functionality is not working when adding a redirection of magento controllers. For example a custom redirection from /customer/account/create to another page. ### Description This commit modifies the order that magento loads the routerList pushing **urlrewrite** router before magento base router. Thats the same order that Magento 1 uses in the function **dispatch()** on **web/app/code/core/Mage/Core/Controller/Varien/Front.php** controller. ### Related PRs: #11469 #11471 ### Fixed Issues (if relevant) 1. magento/magento2#10231: Custom URL Rewrite Not working ### Manual testing scenarios 1. Add New Custom URL Rewrite 2. Set Request Path customer/account/create and Target Path  customer/account/login 3. It should redirect customer/account/create page To customer/account/login page same like Magento 1.x When adding this modification the expected result is accomplish ### Contribution checklist - [x] Pull request has a meaningful description of its purpose - [x] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green),a688b66caf37cf160df810deb88accc38fabc5ec::
https://api.github.com/repos/magento/magento2,11456,fix-for-issue-10795-2.1::2.1-develop,0,merged,Progress: accept::Release Line: 2.1::,"Added carrier code to ID to distinguish shipping methods with the same method name but differing carrier code <!--- Provide a general summary of the Pull Request in the Title above --> Shipping method radios have duplicate element IDs on cart page, which makes it impossible to select the second method. ### Description Make the element ID unique by adding in the carrier code into the ID. ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#10795: Shipping method radios have duplicate IDs on cart page ### Manual testing scenarios <!--- Provide a set of unambiguous steps to test the proposed code change --> 1. Create a shipping method with a unique carrier name but a method name that is in use, such as 'freeshipping' (make sure to of course enable the freeshipping option and have it appear in the checklist). ### Contribution checklist - [X] Pull request has a meaningful description of its purpose - [X] All commits are accompanied by meaningful commit messages - [X] All new or changed code is covered with unit/integration tests (if applicable) - [x] All automated tests passed successfully (all builds on Travis CI are green)",3e4f1a4efd82853ea48c419b699a74082c3ece3b::
https://api.github.com/repos/magento/magento2,11448,FR#ProductAlertAdminProduct21::2.1-develop,0,merged,Component: Catalog::Progress: accept::Release Line: 2.1::,"<!--- Provide a general summary of the Pull Request in the Title above --> ### Related PRs: #11445 #11449 ### Description <!--- Provide a description of the changes proposed in the pull request --> Show the product alerts in the admin panel when a customer is subscribed to the stock or price of a product ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#[10007](https://github.com/magento/magento2/issues/10007): ProductAlert: Product alerts not showing in admin side product edit page ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",a481c65eaded9dc0cbab74404c8d45506e7fca1d::b91aab19daabfa88cc4ffc20bdc71919d2075874::
https://api.github.com/repos/magento/magento2,11445,FR#ProductAlertAdminProduct22::2.2-develop,0,merged,Component: Catalog::Progress: accept::Release Line: 2.2::,"<!--- Provide a general summary of the Pull Request in the Title above --> ### Related PRs: #11448 #11449 ### Description <!--- Provide a description of the changes proposed in the pull request --> Show the product alerts in the admin panel when a customer is subscribed to the stock or price of a product ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#[10007](https://github.com/magento/magento2/issues/10007): ProductAlert: Product alerts not showing in admin side product edit page ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",69bb06b5b4daec0e95031ba0d0b6dbf83605f629::168d8cb87ef550a89d9cb2ad6ed57efbe38718cc::
https://api.github.com/repos/magento/magento2,11378,FR#StateNotDisplayedSalesAdminAddressDevelop21::2.1-develop,0,merged,Fixed in 2.2.x::Release Line: 2.1::Reproduced on 2.1.x::Reproduced on 2.2.x::bug report::,"<!--- Provide a general summary of the Pull Request in the Title above --> Related with [PR#11381](https://github.com/magento/magento2/pull/11381) ### Description <!--- Provide a description of the changes proposed in the pull request --> Save region correctly to save sales address from admin ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#10441: State/Province Not displayed after edit Billing Address on Sales Orders - Backend Admin. ### Steps to reproduce 1. Go to the backend -> Sales -> Orders -> View any order. 2. Select the section -> Information -> Address Information 3. Edit Billing Address, for example the street address. 4. Save Order Address. **Note:** The same issue happen with the Shipping Address. ### Manual testing scenarios ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",adebfa2a935d12f411db2c5e75a12d1f4f06b6cd::774bd14f31331cfeb9dac275f465cf0abbaab1a3::66337a9a838b93bf66a897046c5631b4f9f6cca5::
https://api.github.com/repos/magento/magento2,11377,FR#StateNotDisplayedSalesAdminAddressDevelop21::2.1-develop,0,closed,,"<!--- Provide a general summary of the Pull Request in the Title above --> ### Description <!--- Provide a description of the changes proposed in the pull request --> Save region correctly to save sales address from admin ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#10441: State/Province Not displayed after edit Billing Address on Sales Orders - Backend Admin. ### Steps to reproduce 1. Go to the backend -> Sales -> Orders -> View any order. 2. Select the section -> Information -> Address Information 3. Edit Billing Address, for example the street address. 4. Save Order Address. **Note:** The same issue happen with the Shipping Address. ### Manual testing scenarios ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",15312658f116eff48bdef4e4239695eee80b4331::
https://api.github.com/repos/magento/magento2,11319,2.1-develop::2.1-develop,0,closed,Component: Config::Progress: accept::Progress: needs update::Release Line: 2.1::,"### Description The frontend datepicker control for the DOB field is not localized: month names, day names and week start date are all using en_US. This pull request fixes this using the first day of the week set in the back office (core_config_data) Backport for https://github.com/magento/magento2/pull/11057 ### Fixed Issues (if relevant) 1. https://github.com/magento/magento2/issues/6350 ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",d470f83dfe0761e9f65bbeaaf1b44fd8fee506b9::
https://api.github.com/repos/magento/magento2,11234,FR#StateNotDisplayedSalesAdminAddress::develop,0,merged,Progress: accept::,"<!--- Provide a general summary of the Pull Request in the Title above --> Related with [PR#11381](https://github.com/magento/magento2/pull/11381) ### Description <!--- Provide a description of the changes proposed in the pull request --> Save region correctly to save sales address from admin ### Fixed Issues (if relevant) <!--- Provide a list of fixed issues in the format magento/magento2#<issue_number>, if relevant  --> 1. magento/magento2#10441: State/Province Not displayed after edit Billing Address on Sales Orders - Backend Admin. ### Steps to reproduce 1. Go to the backend -> Sales -> Orders -> View any order. 2. Select the section -> Information -> Address Information 3. Edit Billing Address, for example the street address. 4. Save Order Address. **Note:** The same issue happen with the Shipping Address. ### Manual testing scenarios ### Contribution checklist - [ ] Pull request has a meaningful description of its purpose - [ ] All commits are accompanied by meaningful commit messages - [ ] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green) `@SuppressWarnings(PHPMD.ExcessiveParameterList)` should be used for the constructor.::Please use approach for extending constructor arguments in [backward compatible way](http://devdocs.magento.com/guides/v2.2/contributor-guide/backward-compatible-development/#adding-a-constructor-parameter)::Passing arguments by reference is not recommended. Return modified data instead (possible memory usage optimization is not so important here).::Why this method protected? Is it referenced from the children classes?::@vrann this function is only used in this class. I have updated the visibility to private.::",23efa6014ea60cc6ebab11532a84eca26fe9917b::9e7d3f469c73572a403c6d71b0db49ebaf93421e::8038e91493389916c632453c9163e2f644345713::ee56c700446e346cc5fec6ab28e92a30c84374d4::08ffd20e3eccf3d66f3ade3787d70feb85b99b7d::f524e64ec9ca04c4b38b0251ea63bb05c0e2ae95::7d2cfcd585f517e748c2c79eb1197b143a9961b4::900b05f3706b3e79ae79aa6c15749f95c79f08c0::ab90b21d8efa87d9d866eae5e6ffdc2fffa9b325::d5cd66f3012d6accea5e30ca4ac39f723505a6db::
https://api.github.com/repos/magento/magento2,10164,patch-8::2.1-develop,0,merged,Progress: accept::Release Line: 2.1::,"My pull request https://github.com/magento/magento2/pull/10043 has been merged to develop branch. This PR adds the same changes to 2.1-develop branch ### Description Admin user configured two URL rewrites in Admin UI. Frontend user may request the page with or without trailing slash. In some case Magento will return 404 page. We would like to avoid content duplication for the requests with and without trailing slash. If request path has configured url_rewrite (w/ or w/o  trailing slash) redirect to this page automatically. If requested path matches configuration, just follow redirect rules. ### Fixed Issues (if relevant) 1. https://github.com/magento/magento2/issues/4876 Product URL Suffix ""/"" results in 404 error 2. https://github.com/magento/magento2/issues/3872 Slash as category URL suffix gives 404 error on all category pages 3. https://github.com/magento/magento2/issues/4660 Multiple URLs causes duplicated content 4. https://github.com/magento/magento2/issues/8264 Custom URL Rewrite where the request path ends with a forward slash is not matched ### Related pull requests 1. https://github.com/magento/magento2/pull/7041 Fix trailing slash used a product URL suffix 2. https://github.com/magento/magento2/pull/8319 Fixes problem with url rewrites not being matched when the request path has a trailing forward slash ### Contribution checklist - [x] Pull request has a meaningful description of its purpose - [x] All commits are accompanied by meaningful commit messages - [x] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",c021b6f3ac641527260957369d075b9b17138923::f1e80e9cf29ea7fc883e5dfc1d3c34281e984464::0e9575dbabe4154d5fbd3f8470c4283c639d63c4::86a32273169e9bfe34c256c57ff5d93401d32fb5::7d88a9bc3bdc31c6616dc02fe43182de876613bd::d1a0703e84c6aa831dc0fda93b72c6ab5f3d77ae::8ced0dabda244f2a9c3992acfd71962cc03078ec::d950a824774ebd7edeb0f8ce971c6b99d49e7e09::82a7dcec25bf84e48b9122998057e574cefad50c::ad3f2137bc6f8b926310f4aa3f66a96b07611683::4df2dcb7e157fa897569d38682dcf0d1bd63ae74::
https://api.github.com/repos/magento/magento2,10050,patch-7::2.1-develop,0,merged,Release Line: 2.1::,"### Description If you disable full page cache (tested with built-in) - after login ### Preconditions 1. Magento 2.1.1 2. Full page cache is in ""Disabled"" state (via php bin/magento cache:disable full_page) 3. Google Chrome latest ### Steps to reproduce 1. Go to magento website 2. Try to login 3. See welcome message ### Expected result 1. Welcome message should be ""Welcome, <username>!"" 2. Customer data should contains customer information ### Actual result 1. Welcome message is ""Default welcome msg!"" ![image](https://cloud.githubusercontent.com/assets/1873745/18205339/28af2f5c-712a-11e6-80ec-b8402356fa34.png) 2. Customer data isn't contains customer information ### Fixed Issues (if relevant) 1. https://github.com/magento/magento2/issues/4170 : Magento2 Mini Cart Items Issue 2. https://github.com/magento/magento2/issues/6882 : Minicart empty if FPC disabled in Magneto 2.1.1 3. https://github.com/magento/magento2/issues/5377: ""No items"" in minicart in 2.1 4. https://github.com/magento/magento2/pull/6473 : Customer-data is not updates after login when full page cache disabled **These changes were already applied in develop branch, so this PR will fix this issue for 2.1.x.** ### Contribution checklist - [x] Pull request has a meaningful description of its purpose - [x] All commits are accompanied by meaningful commit messages - [x] All new or changed code is covered with unit/integration tests (if applicable) - [ ] All automated tests passed successfully (all builds on Travis CI are green)",770413f870b40b7beceaa5aee71b9524d8efa7a7::f49e9375120bfc2e132e51f181889b3623940697::
https://api.github.com/repos/magento/magento2,9662,patch-10::2.1-develop,0,merged,Release Line: 2.1::,Backport for #7307 -- Fix #5401,8774d3c79660038b1051f6586729728db3981754::
https://api.github.com/repos/magento/magento2,9661,patch-9::2.1-develop,0,merged,Release Line: 2.1::,Backport for #7506 -- `change_email_template` and `change_email_and_password_template` have no configurations under Stores > Configuration.,a19ea13b27f472f683fd8c156df363ed6c89e9e9::
https://api.github.com/repos/magento/magento2,9660,patch-8::2.1-develop,0,merged,Release Line: 2.1::,Backport for #9210 -- ### Description `setup:di:compile` failes when you have `magento/data-migration-tool` as a regular dependency and you haven't installed the dev dependencies with composer (--no-dev). ### Manual testing scenarios 1. Install dependencies using `composer install --no-dev` 2. `composer require magento/data-migration-tool:2.1.4` and enable the module 3. `php bin/magento setup:di:compile` ### Current result PHP Fatal error:  Class 'PHPUnit_Framework_TestCase' not found in /var/www/html/vendor/magento/data-migration-tool/tests/static/testsuite/Migration/Php/LiveCodeTest.php on line 19 ### Expected result `setup:di:compile` runs without failures.,7b2647ce96b2ad9c8a4d974420a2824d1f131dba::
https://api.github.com/repos/magento/magento2,9653,patch-7::2.1-develop,0,merged,Release Line: 2.1::,"Backport of #8409 -- PR #1546 was closed because CLA issues, thus I'm resubmitting the changes. ### Preconditions 1. HAProxy/Nginx offloading SSL and sending traffic to Varnish; 2. Varnish in front of Apache/Nginx. ### Steps to reproduce 1. Place an order according to the preconditions. ### Expected result 1. Current customer IP address stored into quote and order tables. ### Actual result 1. Stored IP is Varnish/HAProxy IP address relative to the webserver (usually 127.0.0.1 or some internal IP, depends on network structure);",536209cdfdbdb60abdc01f10d97f2d555151bf80::
https://api.github.com/repos/magento/magento2,9601,patch-6::2.1-develop,0,merged,Progress: accept::Release Line: 2.1::,"Backport for #9600 -- When creating a new relation type, it is not possible to save it from the product edit form on admin, since `Magento\Catalog\Controller\Adminhtml\Product\Initialization\Helper` only iterates over the original link types (`related`, `crosssell`, `upsell`) because they are hardcoded.",8911278f1f33f8979cea7193d5b60a17a03f70c6::5abfefefd99867d3d05476c82e10695e6ef6aaa8::e04ade5098b03f685b04df6e672a706d3a380914::86d0f13ea46745f54fd16f5190517dd890279f1f::39959ae702c0933aa33716328af7f1a969dfd315::0a391166a1ec60324a080661517d7868807cc56f::e835ff3ef7632fa0844079cf003d26202e18f300::3347ede04e61d9999b5e1b1392e1853415ea17eb::eccf87bd7f2f0e8f2375df4d9e68107a26f2bdf1::98319722031a6db1ab148caf0dae270798cee475::
https://api.github.com/repos/magento/magento2,9396,patch-4::2.1-develop,0,merged,Release Line: 2.1::,My [pull request](https://github.com/magento/magento2/pull/6452) was already merged to develop branch. This pull request fixes issue https://github.com/magento/magento2/issues/6451 for Magento 2.1.x,b0f056289872563105bf85e43b4baebab7f97b95::bf4613ff96227878957a2da7f3d56d9208a18f61::6ea33d9a4f25e8d55d46aa3911a7944760501d43::
