https://api.github.com/repos/elastic/kibana,98828,ml-remove-version-check::master,0,merged,:ml::Feature:Data Frame Analytics::release_note:skip::test_ui_functional::v7.13.0::v7.14.0::,"## Summary This PR fixes failing tests in [7.x](https://github.com/elastic/kibana/pull/98795) and [7.13](https://github.com/elastic/kibana/pull/98794) backports for Analytics list row expansion content functional tests introduced in https://github.com/elastic/kibana/pull/98678 As the version can be different on different branch/config, this PR removes the property check altogethe. ::",ab580001f1455232b07d269f33d551ca9c891a85::0b81ce236bc59125ec477e10529b012fe1cdb77f::
https://api.github.com/repos/elastic/kibana,97222,migration-id-gen::master,0,merged,release_note:skip::v7.14.0::v8.0.0::,"## Summary Implementation is based on algorithm changes described in https://github.com/elastic/kibana/pull/93002 TLDR: Kibana doesn't reindex SO in ES, but instead loads them from Elasticsearch server, transforms, rewrites `id` for SO registered with `namespace: multiple` and `namespace: multiple-isolated`, writes SO back to Elasticsearch server. ### Performance concerns. Tested on the migration of 100 000 SavedObjects https://github.com/elastic/kibana/blob/6712bc07279c9582094d31eb22ebf72bdfaba2f7/src/core/server/saved_objects/migrationsv2/integration_tests/migration_7.7.2_xpack_100k.test.ts Performance seems to be better in the worst-case scenario when we have a lot of outdated documents, as `readWithPit` seems to be more performant than `searchForOutdatedDocuments`. See logs: #### Master batchSize `1_000`: `154sec` [migration_test_kibana.log](https://github.com/elastic/kibana/files/6343182/migration_test_kibana.log) batchSize `10_000`: `104sec` #### Branch batchSize `1_000`:  `97sec` [migration_test_kibana.log](https://github.com/elastic/kibana/files/6343271/migration_test_kibana.log) batchSize `10_000`: `105sec` ### Checklist Delete any items that are not applicable to this PR. - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios - [x] This was checked for breaking API changes and was [labeled appropriately](https://www.elastic.co/guide/en/kibana/master/contributing.html#kibana-release-notes-process) ::the implementation is tested in the integration tests::I'd move to named arguments instead, but let's do it in a separate PR for all the actions at once::TODO: remove::From the docs it seems like sorting with `{""_shard_doc"": ""desc""}` will give the best performance, but it also sounds like if you don't specify any sort this will automatically be applied. Also sounds like for best performance we should switch off tracking total hits with `""track_total_hits"": false` (maybe doesn't make a huge difference for our scale, but we're not using it anyway so might as well disable)::nit: it makes sense to keep the stack of the original error, but maybe it's simpler to override `e.message` instead of constructing a new error?::I'm not sure where's the best place to put such a comment, probably in the README and somewhere in the code. Since we're not waiting for a refresh anymore, it's quite important that _something_ waits for a refresh before we get to `OUTDATED_DOCUMENTS_SEARCH`. `UPDATE_TARGET_MAPPINGS`/`pickupUpdatedMappings` forces a refresh so that will ensure that everything works, but it could be easy to introduce a bug later if we decide to remove this step. Maybe we actually need an end-to-end integration test for this scenario.::> ""track_total_hits"": false Actually, it might be useful to log `migrated X docs from total Y`. WDYT? >  but it also sounds like if you don't specify any sort this will automatically be applied. JFYI: No, the server stuck in an infinity loop as sorting is non-deterministic. ::no changes in the file, a simple cleanup ::unused argument::Inspired by https://github.com/elastic/kibana/blob/238791b9421cda571011fd416ae0ffd090b1e94d/test/api_integration/apis/saved_objects/migrations.ts ::IMO it's a bit more clear when you search by an error message.::> Maybe we actually need an end-to-end integration test for this scenario. @rudolf Isn't it covered by existing migration integration tests?::invalid type that used to fail migration.::added `""track_total_hits"": false`::> Actually, it might be useful to log migrated X docs from total Y. WDYT? Yeah it would be really useful to get a better idea of progress, otherwise it's very hard to predict how much more time it might take. In the future it would be useful to display this information in status API, but having it in the logs would be a valuable quick win.::Actually thinking through it again I realise the risk isn't that high. If we don't refresh then `OUTDATED_DOCUMENTS_SEARCH` will return one batch of results (even though all documents were already up to date), but after waiting for that batch to be written we will have waited for the refresh to finish. So worst case we introduce one unnecessary OUTDATED_DOCUMENTS_SEARCH/WRITE step. We won't pick up this case in the integration test, since it will succeed, just be slightly slower, but since this is very low impact I don't think it's worth testing for it anymore. ::FWIW, This is where the [major change](https://github.com/elastic/kibana/pull/96986/files#diff-d900f155ce96b3a353753d1ecdcee0537c42d8e45d238cfd1d3d6dc34bee49dfR93) for handling https://github.com/elastic/kibana/issues/90279 is. There are other changes to the model too, where we're splitting up `OUTDATED_DOCUMENTS_TRANSFORM` step into 2 steps: the first one handles the actual document transforms then hands those off to the [next step](https://github.com/elastic/kibana/pull/96986/files#diff-9ee8edf8b1c5b2e5fd0b59597fafcbace91cd5164d8f9e2e2ae84b1d7704c0a7R642): `TRANSFORMED_CODUMENTS_BULK_INDEX` if there [weren't any failures](https://github.com/elastic/kibana/pull/96986/files#diff-9ee8edf8b1c5b2e5fd0b59597fafcbace91cd5164d8f9e2e2ae84b1d7704c0a7R639).::we can add it in a follow-up::Do you want me to revert this change? ::Can we add a bit more to the comment saying how we decided on a 10m `keep_alive` value please? I assume (maybe incorrectly 🤔 ) that the `keep_alive` value is configurable too.::Nice tweak!::Is there any reason other than making the response type more explicit (and easier to handle) for the case of not getting any hits vs getting hits? I get that `lastHitSortValue` is either a number or undefined, even though the response type is the same for `outdatedDocuments`.  ::_(me thinking aloud here)_ Are there any potential non-obvious issues with splitting `transformDocs` into two separate actions: - Transform the docs (`transformRawDocs`), then in a separate action if we have a success response, - Index the transformed docs into the temp index (`bulkOverwriteTransformedDocuments`)? I've [done that](https://github.com/elastic/kibana/pull/96986/files#diff-21294d43c3f26d9f80368e326b6cec4050c90f4d71c9d6a61a46141ddd441d56R97-R100) to skip indexing if there are any transformation errors and don't throw exceptions on the first failure. Looking at the `left` [response handling](https://github.com/elastic/kibana/pull/97222/files#diff-9ee8edf8b1c5b2e5fd0b59597fafcbace91cd5164d8f9e2e2ae84b1d7704c0a7R526-R529) though, I think it should be ok because we feed straight back into `REINDEX_SOURCE_TO_TEMP_READ` for known `left` conditions. We also have the `lastHitSortValue` from the previous action that read docs from the source index and can continue reading and trying to index more docs. ::Why are we transforming documents twice? We run through the transforms when we're reindexing the docs batch by batch from the source index to the temp index and then again in the [temp index](https://github.com/elastic/kibana/pull/97222/files?file-filters%5B%5D=.json&file-filters%5B%5D=.ts#diff-21294d43c3f26d9f80368e326b6cec4050c90f4d71c9d6a61a46141ddd441d56R107). The difference is that when we run through the transforms for docs in the temp index, we're not using a `PIT` search. The comment there mentions we should consider doing so.::Not necessarily, I can rework it too as long as I don't break anything you've implemented 😉 ::Hum that seems very right. We are transforming documents in `REINDEX_SOURCE_TO_TEMP_INDEX`, during the `source`->`temp` PIT-based copy and then later once the docs are in the `target` index, in `OUTDATED_DOCUMENTS_TRANSFORM` (which, if my understanding is correct, will just be a no-op as the document were already migrated in the previous operation?) I understand we had to switch from a plain `reindex` of the `source` -> `temp` indexes because of this ID rewriting, but then (once again, if my understanding is correct) we are effectively migrating the documents (like all the documents, not only the outdated ones) during the `REINDEX_SOURCE_TO_TEMP_INDEX` operation. I also think that version-based migration are a no-op if a document is already at the latest version, so having all documents passing though `transformDocs` during `REINDEX_SOURCE_TO_TEMP_INDEX` is probably alright. If that's correct, I guess the outdated documents are effectively migrated before the `CLONE_TEMP_TO_TARGET` operation, right? Would the solution be to just remove the `OUTDATED_DOCUMENTS_SEARCH` and `OUTDATED_DOCUMENTS_TRANSFORM` operations then? ::++ to the follow-up. In that follow-up, do you think it's worth running an `agg` query to list the number of docs per type and trigger 1 migration _thread_ per type? Would that help with performance at all or, since Node.js is single-threaded, it would only cause more event-loop blockages?::Looking at [this comment](https://github.com/elastic/kibana/pull/93002/files#r588269456), it seems the `OUTDATED_DOCUMENTS_SEARCH` is still necessary. However I'm not sure to understand why. > On this step, we transform outdated docs that haven't been processed on REINDEX_SOURCE_TO_TEMP_INDEX How can documents not be processed in `REINDEX_SOURCE_TO_TEMP_INDEX`? Aren't we processing all documents in that step?::Ok, I need to just read the documentation I guess > If another instance has a disabled plugin it will reindex that plugin's documents without transforming them. Because this instance doesn't know which plugins were disabled by the instance that performed the `REINDEX_SOURCE_TO_TEMP_INDEX` step, we need to search for outdated documents and transform them to ensure that everything is up to date.::@pgayvallet pointed out at an edge case in `OUTDATED_DOCUMENTS_SEARCH` step: as Kibana migrates docs in a single index, the index still keeps the old documents after migration, which may cause data loss during the next migration due to an old object rewriting an already migrated document. looking at the problem. ::To avoid that we can add a cleanup step for `OUTDATED_DOCUMENTS_SEARCH` phase to remove documents migrated during `OUTDATED_DOCUMENTS_SEARCH` step. iterate over an array of `outdatedDocs` passed to `OUTDATED_DOCUMENTS_TRANSFORM` step, if an object with a given id doesn't exist in `output` array, add it to the list of objects for delition. ```js // OUTDATED_DOCUMENTS_TRANSFORM: (input) => output const elementsToDelete = input.filter((input_element) => output.every((output_element) => output_element.id !== input_element.id)); await es.delete(elementsToDelete); ``` can be done as follow-up::> we can add a cleanup step for OUTDATED_DOCUMENTS_SEARCH phase to remove documents migrated during OUTDATED_DOCUMENTS_SEARCH step. @mshustov that might help. I think we do, however, need a guarantee that we don't end up trying to transform docs that _failed_ the transform step in a previous batch returned from `search` by using the same pitSearch you've used previously. I know that at the moment, we fail immediately on a transformation error but the [follow up](https://github.com/elastic/kibana/pull/96986) to that is to not fail immediately and rather build up a list of all the docs that failed first. We're going to end up in a loop of trying to transform docs that we already couldn't. Neither @pgayvallet nor I know if that should be handled in this PR or in the [follow up](https://github.com/elastic/kibana/pull/96986).::@TinaHeiligers, let me clarify: we need to modify the `OUTDATED_DOCUMENTS_SEARCH` step to use PIT in `search` to make Kibana doesn't try to migrate the same SO indefinitely. Does it sound correct to you? If so, I don't think it's related to the current PR because we have to address the same problem for the `master` version as well. I can help you with it in a follow-up PR.::> we need to modify the OUTDATED_DOCUMENTS_SEARCH step to use PIT in search to make Kibana doesn't try to migrate the same SO indefinitely That's correct > If so, I don't think it's related to the current PR because we have to address the same problem for the master Doesn't seems necessary for current PR, but is for https://github.com/elastic/kibana/pull/96986, so it probably make sense to have it done in https://github.com/elastic/kibana/pull/96986 directly, wdyt @TinaHeiligers ? ::created https://github.com/elastic/kibana/issues/97956::When I tested performance impact, migration of `1000` of SO took ~1sec (on MacBook Pro). Considering that we allow users to specify `batchSize` and they can run Kibana on slower hardware, I picked something that definitely would enough for a single batch of transformation. I would not make it a configurable value to avoid bloating the Kibana public contract.::`lastHitSortValue` is deliberately set to `undefined` to cleanup the value after the last batch. > Is there any reason other than making the response type more explicit (and easier to handle) for the case of not getting any hits vs getting hits? What alternative would you suggest? ::> Are there any potential non-obvious issues with splitting transformDocs into two separate actions: No issues, but no value in doing so at the moment. There is always a trade-off between clarity and verbosity. `REINDEX_SOURCE_TO_TEMP_INDEX` step consists of `transformRawDocs` (that in theory, doesn't have any side-effects) and `bulkOverwriteTransformedDocuments`(that has got side-effects). Extracting `transformRawDocs` to a separate step adds another transition in FSA, without bringing any benefits.::created https://github.com/elastic/kibana/issues/97965. we can add PIT there or in #96986. @TinaHeiligers ::incorrect typings. `getClients` already returns the new ES client. https://github.com/elastic/kibana/blob/dd10c8b5f2197c936a2efbc45feed7fbb88ebe08/packages/kbn-test/src/legacy_es/legacy_es_test_cluster.js#L105::not really happy to put cleanup logic here, but it seems to be the only option considering `migrationStateActionMachine` throws exceptions as well   ::It's the only information ES client provides at the moment. created https://github.com/elastic/kibana/issues/97970::It's a sort of `whitebox` test, but I don't see any other way to test this logic.::@pgayvallet @mshustov I'll add it to https://github.com/elastic/kibana/pull/96986 if it hasn't been done in https://github.com/elastic/kibana/issues/97965. Technically, it's a requirement for the implementation in https://github.com/elastic/kibana/pull/96986 and makes sense to do it there. To prevent duplicating work, I might wait for this PR to be merged and take it from there. @mshustov I am hoping to reuse the `Actions.openPit(...)` and `Actions.readWithPit(...)`. Would that make sense? ::@TinaHeiligers I don't see why it wouldn't work.::I'm fine with the implementation, no issues there. I wanted to know if there were other benefits to the way this is being handled, that's all.::I'll get to a detailed review later today but definitely tomorrow before going on PTO.::Is this a copy-paste oversight or do we need to keep this commented out?::nit: The `pitKeepAlive` constant would be easier to find if it was grouped with the other constants at the top of the file. ::Having gone through this again a lot more carefully, it makes sense now.::nit: Can we add a remark that 'refresh' is explicitly false during a pit search? It's a very subtle setting/arg but could have a huge effect later on when we continue the search!::nit: Can we please add a code comment/remark explicitly stating that `refresh` is `false` during a pit search? It's a subtle difference code-wise but could have major consequences.::Thank you for cleaning this up.::nit: can we move the inline async anon function out to a named function please? ::Did you mean to delete this?::this gets complicated fast!::Optional, I added it for the next reader to understand the input of the test case. I can remove it if it's unnecessary. ::AFAIK we don't have such a requirement (any requirement must be enforced by an eslint rule). I know it's opinionated, but I prefer to collocate the related code together.::https://github.com/elastic/kibana/pull/97222#discussion_r618999167::done::added::added::Mostly thinking out loud here, as I don't see any real scenario where this would fail without having ES returning a real response error: May we want to continue the migration is the PIT closing failed (`response.body.succeeded=false`), as it's not really blocking/impacting any of the next steps?::Unless we modify `migrationStateActionMachine` to return the execution stack at the end instead of logging and throwing directly internally, I don't think there is any.::![](https://media1.giphy.com/media/XWwIzh5GIWWf6/200.gif)::Do you know why we are we using `Option.Some<string>` in some states, and plain `string` in others?::NIT `it excludes documents not matching the provided 'unusedTypesQuery'`::typo: `crete` -> `create`::Seems fine. Adding an additional `CLEANUP` step to put before/after `FATAL` would be a pain, and as you said, we would still need to perform cleanup in the `catch` block. I wonder if we could change the behavior of `stateActionMachine` to transition to `FATAL` when an error occurs instead of throwing though. That would avoid this duplication between the `finalState.controlState === 'FATAL'` and `catch` blocks. We could do the opposite by executing an action that would throw when the current states becomes `FATAL` instead of stopping the state machine. https://github.com/elastic/kibana/blob/f988f236e14ed8a8876cb10e203b8539470f4059/src/core/server/saved_objects/migrationsv2/next.ts#L149-L151 That way a `FATAL` state would just be handled in the `catch` block as unhandled errors. Outside of the scope of the PR either way. ::We're not removing `sourceIndexPitId` from the state after transitioning await from `REINDEX_SOURCE_TO_TEMP_CLOSE_PIT` (right?), meaning that if a migration failure occurs after this stage, we will still try to close the pit during cleanup, fail doing so (which is normal as already correctly closed) and still log a cleanup message in the logs. Not really significant though (and maybe that was even intended?)::TIL using the `||` operator to chain comparators with priority.::What is this timeout for?::I think it helps a lot for readability. Avoid having to extract the data archive locally to understand the test.::I think the test will fail when backporting to `7.x` as the type will not be converted given that `8.0.0` > `7.13.0`::Is it worth internally exporting `deterministicallyRegenerateObjectId` from `src/core/server/saved_objects/migrations/core/document_migrator.ts` to be sure to use the actual implementation?::without this change , `logstash*` would be selected, and the test would fail::Let's leave it there.::@kertal I took lots of time, but it seems I found the reason. In https://github.com/elastic/kibana/pull/89264 you added https://github.com/elastic/kibana/blob/2ecbca0d8d7569d3cddf8e7e29646425c2b5f16b/test/functional/apps/context/_context_navigation.js#L36 which removes a value set in `index.js` file https://github.com/elastic/kibana/blob/4584a8b570402aa07832cf3e5b520e5d2cfa7166/test/functional/apps/context/index.js#L22 So, `defaultIndex` setting is `undefined`. Data plugin needs it, so it loads all the known `index-pattern`s and set the very first (which is `logstash*`) as `defaultPattern` https://github.com/elastic/kibana/blob/4584a8b570402aa07832cf3e5b520e5d2cfa7166/src/plugins/data/common/index_patterns/index_patterns/ensure_default_index_pattern.ts#L24 Why does it not fail on the master branch? All the SO docs have the same score. In this case, Elasticsearch sort by internal document Id (according to https://discuss.elastic.co/t/default-sort-for-same-score-documents/15107). In the current PR, Kibana migrates documents, which might cause internal document Id regeneration. @mattkime Is it something that might affect the end-users? What do you want to achieve by using the head element of the `pattern` array in https://github.com/elastic/kibana/blob/4584a8b570402aa07832cf3e5b520e5d2cfa7166/src/plugins/data/common/index_patterns/index_patterns/ensure_default_index_pattern.ts#L40? Do you need *any* pattern? The eldest known pattern? The latest known pattern? This comment doesn't explain much https://github.com/elastic/kibana/blob/4584a8b570402aa07832cf3e5b520e5d2cfa7166/src/plugins/data/common/index_patterns/index_patterns/ensure_default_index_pattern.ts#L38::I added the `string` type in https://github.com/elastic/kibana/pull/96788 I don't see we use any benefits of `Optional<>` in `WAIT_FOR_YELLOW_SOURCE` step, but we can unify them for consistency. ::yeah, it's better to delete::no idea tbh, I copied it from the existing test file. I defer to fix it later, the migrations tests stuck with `Jest did not exit one second after the test run has completed.` anyway::ok, I will change it to `7.13.0`, but then we will have to update the default https://github.com/elastic/kibana/blob/dc475c9cf2a7f42c6b7df921a6dc8613765c80d7/src/core/server/saved_objects/migrations/core/document_migrator.ts#L70 @jportner FYI::> I wonder if we could change the behavior of stateActionMachine to transition to FATAL Agree, I also expect the exception to transition FSA into `FATAL` state. But it's definitely out of the scope of the current PR.  Not sure we need to refactor it right now, but we can create an issue to pay the tech debt off later.::Thanks for the ping. We **don't** want to change `DEFAULT_MINIMUM_CONVERT_VERSION`; that's specifically in set to ensure we _don't_ allow consumers to convert any existing objects before 8.0, because conversion (regenerating object IDs) is considered to be a major breaking change. This is one thing that @rudolf asked me to add during my initial implementation. This constraint is configurable for integration tests by using the `minimumConvertVersion` parameter when creating the `DocumentMigrator`. Instead of changing this deafult, can you update `rewriting_id.test.ts` to use `minimumConvertVersion`?::See https://github.com/elastic/kibana/pull/97222#discussion_r619870721, just commenting here too so it doesn't accidentally get overlooked-- I think we need to change this back ```suggestion const DEFAULT_MINIMUM_CONVERT_VERSION = '8.0.0'; ```::AFAIK we can't, as it's an integration and not a unit test. Not sure which option remains except skipping the test on branches lower than master.::@mattkime confirmed it should return any `index-pattern`. Then we are good to go with the current solution. ::Ah, I was using this in an integration test (`test/api_integration/apis/saved_objects/migrations.ts`), but that test was creating a `DocumentMigrator` and `IndexMigrator` instance directly. Looking at it again, `rewriting_id.test.ts` goes about this differently and it would be difficult to change. I think skipping the test in the 7.x branch as mentioned in https://github.com/elastic/kibana/pull/97222#issuecomment-826572126 is fine, though.::@mshustov great detective work! 🕵️ ::I will remove it in a follow-up.::",19b94c8b9a02892d537654d2dfbbaa1cebb8a288::59a3fedbe6648af2f76aff5cbb8e2948c00d7cbe::8c54a03e065cb6209b1771258615c55bc49c0a08::2cf6d41c867ef90bac2a1dafc67db7b4c515cb9a::4afb2854d33be26be24b0d77bbda4ccb839b1d21::68416681fb37f26c2af002d41b37dfd90c013a33::f988f236e14ed8a8876cb10e203b8539470f4059::10fdb61f7db2c1748a1b2fc553fee2951a88c046::d3a2dd12838c4bedb1f4f2e818d96a027f58c602::be9438e2832539428deb6f0614e03165e3749a3f::4ebf73b269f11702169cb2c146ff7e5893a2c94a::89834036766a17550651c2fa42e2b8d8b0122cf1::fdd18e497c2554a358db5c583950d2b8dd9c1126::e40c82400eb12c98e3f74679e52c066279903b0a::8c03eafca8ffb6c190463751630540d733401c04::dfdb8e889c8c8caf0e29e330ec1e6dee2de0589a::61ef354f96f8c67a1d7bc6388d226a89d1b171ff::2fa72b98f93ffa7dba3fa5778f4a3c5c267ae6b3::e522a4b01b1aba7a99b881ef84bc5100b8a39fcd::ea3a1c42d294e84d34e36017e90c87182515ecb5::3aab1165de7dca265966e0758012b31bedc85e9d::01266161a0888b45c162f20fe1ccc75c7ec9eab7::aeb35cbc572dba4c1d6c2a2ae773d6145db06d25::9c768a90b15acdf77fece06e8e0f52881e172a6b::8e331ce45e5ab97e5e5e5edc74c839cca9ae4b1c::5a5c309cbea04c14679fa3f64dbdb935120de6a8::2b26a4e1edabe6bd80ce5e8ba9336cbbf286d4a6::d2dfc355d8082d2b730cf2bd5b8abf875964c22e::5a2c5fe8469addb480223f461aadb44edb4febf3::8d17ce0719ca487d519a94bef603b54a049fff90::abe3fffaab658caef98b70254bb1086c12cef732::1332961a649feeb63daa3d37ccdecab1506ca54d::a128d7b7c03493a06d76662902877e535a424b9a::585bdd9a3c94a84b25810d4aefecf04a5c52c445::145244a66b7eb704fd51c97056463dceb1a7cc39::44f797477ad0155f9689dbe3e260133653563f12::97315b6dc2bc133bdb55a523cacd35f162eac53b::f7b4d7df87c96e5159931b0637bec9334b3cbad7::c6ff34bd0e68529a85592ccc8a5f585983cbd624::94ea2cd2d5ff956c1bc4dd96cd45a94ea868b86c::
https://api.github.com/repos/elastic/kibana,97053,6.8SavedObjects7.12::7.12,0,merged,Feature:Saved Objects::Team:QA::release_note:skip::v7.12.1::,This is a backport of import saved objects from 6.8.x to 7.x  https://github.com/elastic/kibana/pull/96869 for testing the imports between 6.8.x to 7.12.0::,06b072931c2fa9f991dae7ed1548450fe532cb88::
https://api.github.com/repos/elastic/kibana,96157,docs__fix-docker-command::master,0,merged,Team:Docs::release_note:skip::v7.10.3::v7.11.3::v7.12.1::v7.13.0::v7.2.3::v7.3.3::v7.4.3::v7.5.2::v7.6.3::v7.7.2::v7.8.2::v7.9.4::v8.0.0::,"## Summary The current docker run code snippet is malformed and renders incorrectly. <img width=""761"" alt=""Screen Shot 2021-04-02 at 2 29 13 PM"" src=""https://user-images.githubusercontent.com/40268737/113443361-d36b6700-93bf-11eb-86ab-dd42fc2ba785.PNG""> This fixes the rendering. <img width=""768"" alt=""Screen Shot 2021-04-02 at 2 26 08 PM"" src=""https://user-images.githubusercontent.com/40268737/113443375-d9614800-93bf-11eb-99c9-8a2efe862323.PNG""> ## Testing To test, you'll need to add `:release-state: released` to the file above the code snippet. Otherwise, the snippet will not display as v8.0 is unreleased. ## Backports This issue goes back to 7.2. I plan to backport to there and all branches between.::",1e12bdcf27a9784cf07816f9c1f32700a0584c4f::
https://api.github.com/repos/elastic/kibana,95629,lens/docs_quality_fix::master,0,merged,Feature:Lens::Team:KibanaApp::release_note:skip::v7.12.0::v7.13.0::v8.0.0::,"## Summary Some images in this [tutorial](https://www.elastic.co/guide/en/kibana/7.12/create-a-dashboard-of-panels-with-ecommerce-data.html) for some reason were submitted with a really low quality. Not sure if that should be backported to 7.12, let me know @KOTungseth! <img width=""695"" alt=""Screenshot 2021-03-29 at 10 14 03"" src=""https://user-images.githubusercontent.com/4283304/112806811-7eee8180-9077-11eb-9b8a-a34964dccbde.png""> <img width=""661"" alt=""Screenshot 2021-03-29 at 10 14 15"" src=""https://user-images.githubusercontent.com/4283304/112806853-857cf900-9077-11eb-957a-3cffa996bea3.png""> <img width=""655"" alt=""Screenshot 2021-03-29 at 10 13 39"" src=""https://user-images.githubusercontent.com/4283304/112806766-7007cf00-9077-11eb-87fc-5570b75398a7.png""> ::",04f286a2237e104d3460deae793cd091d974210b::8f00ec9b527b5c38eab5777bb4c885a8c220683c::
https://api.github.com/repos/elastic/kibana,95466,ignore-github::7.x,0,merged,chore::release_note:skip::v7.13.0::v8.0.0::,## Summary As discussed with @spalger we don't have valid reasons to keep the folder on 7.x branch:- - templates are used from the master branch only - CODEOWNERS are already ignored to avoid pings when backporting PRs::,55d3a0273ea5d40c3c14b4fc15e543acf58ff8f0::d5e2a705dac8566b089a944d583396927b3a73b8::
https://api.github.com/repos/elastic/kibana,94420,es-archiver-inject-kibana-version::master,0,merged,Team:Core::project:ResilientSavedObjectMigrations::release_note:skip::v7.12.0::v7.13.0::v8.0.0::,"## Summary In https://github.com/elastic/kibana/pull/91829 we changed the spaces esarchiver fixtures so that v2 migrations would have to do less work thereby speeding up the spaces tests. However, v2 migrations use the kibana version in the index name and in that PR we hardcoded this value making it hard to maintain as we bump Kibana version numbers on 7.x. This PR adds a special `$KIBANA_PACKAGE_VERSION` variable to esarchiver archives that will be replaced by the Kibana version from the `package.json`. This way we can speed up tests and backport it to 7.x without causing issues when bumping Kibana's version. ### Checklist Delete any items that are not applicable to this PR. - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://www.elastic.co/guide/en/kibana/master/development-documentation.html) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios - [ ] Any UI touched in this PR is usable by keyboard only (learn more about [keyboard accessibility](https://webaim.org/techniques/keyboard/)) - [ ] Any UI touched in this PR does not create any new axe failures (run axe in browser: [FF](https://addons.mozilla.org/en-US/firefox/addon/axe-devtools/), [Chrome](https://chrome.google.com/webstore/detail/axe-web-accessibility-tes/lhdoppojpmngadmnindnejefpokejbdd?hl=en-US)) - [ ] If a plugin configuration key changed, check if it needs to be allowlisted in the [cloud](https://github.com/elastic/cloud) and added to the [docker list](https://github.com/elastic/kibana/blob/c29adfef29e921cc447d2a5ed06ac2047ceab552/src/dev/build/tasks/os_packages/docker_generator/resources/bin/kibana-docker) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server)) - [ ] This was checked for [cross-browser compatibility](https://www.elastic.co/support/matrix#matrix_browsers) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://www.elastic.co/guide/en/kibana/master/contributing.html#kibana-release-notes-process) ::Can we split this chunk up so that `$KIBANA_PACKAGE_VERSION` is actually split up between two chunks by make sure that still works?::",c79a5089bc7e1e573f686c20a32f79ab832c490f::063ac5d85939857fec8058df48a029b5920bde49::ce1402343019cae59513763672d95b523eb7444b::a7bc7025baaecdfcfd92b186129400be5f26426a::
https://api.github.com/repos/elastic/kibana,94371,fix-7.11-embedding-docs::7.11,1,merged,release_note:skip::v7.11.0::,"See https://github.com/elastic/kibana/pull/90409#issuecomment-796161088: > It looks like we backported these docs to 7.11, even though the Public URL switch (from the linked PR) is only available in 7.12+ 🙈 > > I'll push a PR to update the 7.11 docs accordingly. Docs preview: https://kibana_94371.docs-preview.app.elstc.co/guide/en/kibana/7.11/kibana-authentication.html::This basically duplicates the content that the aforementioned PR moved to the linked `embedding` page. Alternatively, we could change this to just say: > `If you have multiple authentication providers enabled, and you want to automatically log in anonymous users when embedding, then you will need to manually modify the {kib} URL in the iframe code. For more information, refer to <<embedding, Embed {kib} content in a web page>>.` ::I prefer the shorter version.::",35ca02d34226b2fcc1374b62ff7dbc6a6630a420::bca0a7305275c57ffba82cd81252087f17184d65::
https://api.github.com/repos/elastic/kibana,94177,bump-dependencies-6.8::6.8,0,merged,release_note:skip::v6.8.15::,"Manual backport of #94175 with some extra goodies::__optional nit:__ it seems you can merge this new `enhanced-resolve@^4.1.1` declaration with the existing `enhanced-resolve@^4.1.0, enhanced-resolve@^4.1.1`? ``` enhanced-resolve@^4.0.0, enhanced-resolve@^4.1.0, enhanced-resolve@^4.1.1: version ""4.5.0"" ```::Oops I missed that, I'll do it now thx::",e2dc98ad917ff3806fd8bd2f5c12dc6eab5f5681::0e2634f9757c32e7082eb52f145c0d66b7f21f33::5296fac1f86cf0e0885702e984b06f8344ee753c::ce3ecd9b748f157dff028f2bb4aa01b4c8421a30::e046445b910228d0bbe02bb6f8f5a9043746f9c4::
https://api.github.com/repos/elastic/kibana,93344,discover/guarantee-field-order::master,0,merged,Feature:Discover::NeededFor:KibanaApp::Team:AppServices::release_note:skip::v7.12.0::v7.13.0::v8.0.0::,"Index patterns will now guarantee that the `flattenHits` function returns an object with sorted keys. The sort order is 1. All fields, regardless of their origin, in alphabetical order 2. All meta fields in alphabetical order This looks as expected in Discover: <img width=""1098"" alt=""Screen Shot 2021-03-02 at 6 04 28 PM"" src=""https://user-images.githubusercontent.com/666475/109727159-d6d1bf80-7b81-11eb-9bab-092f499e155f.png""> Fixes https://github.com/elastic/kibana/issues/93312 I've used a [Proxy](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy) object to guarantee the sort order, which lets us apply a sort order that is _not_ the insertion order of the keys. cc @timroes should we backport this to 7.12? The issue was introduced in 7.12 ### Checklist - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios ::",64624d932993a5bdd82387f36e6b4f96547bbaa6::d8b663fe0e1bbfc218648a2d4a22232eb5310254::589048f942413894b64d0a20645a5f6d5ededde0::3be979f6340616185fa736a19658035d06148438::d5ceca85c511fd1403c993365d4daa0f3dd05fb2::
https://api.github.com/repos/elastic/kibana,93303,removeCommentSkippedTestBackport::master,0,merged,Feature:Saved Objects::Team:QA::release_note:skip::v8.0.0::,This is a silly PR to remove linked commented issue in https://github.com/elastic/kibana/pull/90714 which closed (https://github.com/elastic/kibana/issues/89478) I unskipped the test ran it successfully everywhere but forgot to backport it to 7.12 ::,6f767629922428152887af52e22a47693f4b64fc::
https://api.github.com/repos/elastic/kibana,93198,92814-fix-agent-telemetry::master,0,merged,Feature:Fleet::Team:Fleet::release_note:skip::v7.12.0::v7.13.0::v8.0.0::,"## Summary Fixes https://github.com/elastic/kibana/issues/92814 This fixes a bug where agent telemetry was only being collected when fleet server was correctly set up. In the case where fleet server wasn't enabled at all, no agent telemetry was returned. This fix is actually only needed for 7.12, because in 7.13 the feature flag for fleet server will no longer be there. This means this needs to be merged and backported to 7.12 and 7.x before https://github.com/elastic/kibana/pull/92422 is merged, and probably will cause conflicts in https://github.com/elastic/kibana/pull/92422 cc @nchaulet for awareness. ### How to test this * enroll an agent * observe the agent is listed on the Fleet overview page and in Agents * look at the telemetry output either by calling http://localhost:5601/BASEPATH/api/stats?extended=true or by going to Stack Management -> Advanced Settings -> Usage Data (scroll all the way down) and clicking on ""See examples of the cluster data we collect"" * search for the last occurrence of `fleet` in the telemetry output and verify that you see the same numbers under `agents` as on the Fleet overview page in the UI::",8c9c0a37aa619129f247e77a2596cc1264c5ea97::
https://api.github.com/repos/elastic/kibana,92915,console/update_component_templates::master,0,merged,Feature:Console::Team:Elasticsearch UI::release_note:skip::v7.13.0::v8.0.0::,"Follow-up to https://github.com/elastic/kibana/pull/91180. After opening the backport PR for the above code change, I realized that there was already autocomplete definitions for the component templates API on 7.x and the current changes in master were incomplete. This aligns the branches. ::",32e59ece858edd1e4512ed47b7786c4b103ddc7f::c79bacb66797aacf7d8aab009a15d7487407dbb6::00cd3b48e50e6ce331a054af29cb40d5add5be88::f2e06c830fdcf7cc4ebaf214823f608e5853cc70::5a45e09e1e3203931f747f49cd3c6883867e90e3::
https://api.github.com/repos/elastic/kibana,92882,revert_cypres_name_change::7.12,0,merged,Team:Detections and Resp::bug::release_note:skip::v7.12.0::,"## Summary Reverts the security solution cypress name change https://github.com/elastic/kibana/pull/92516 that was backported to 7.12. Originally seemed that update to cypress tests where they were split into chrome and firefox was backported to 7.12, but they weren't. The subsequent PR to disable firefox tests was bacported to 7.12 and this created the issue as it was now looking for a non-existent chrome specific config. ::",3e64c1a1acfdb8a210b7b36c9d41f4eb236bf105::46c8b46680fe087de2e1e5c9d6f5c0dbc5fd6a10::e504875ea2164bf0774b7a88e5a79b0dbe63f7e3::029f2438479d9169b6d04de554484e3403f8580d::012b7860621467f2470979fdead9f29b918b893b::
https://api.github.com/repos/elastic/kibana,92357,update-mock-index::master,0,merged,Team: SecuritySolution::Team:Threat Hunting::release_note:skip::v7.12.0::v8.0.0::,"## Summary This is a fix up for https://github.com/elastic/kibana/pull/89592, and its backport: https://github.com/elastic/kibana/pull/92284 https://github.com/elastic/kibana/pull/92283 - [x] Remove the unused mock data: x-pack/test/security_solution_cypress/es_archives/auditbeat/data.json - [x] Align the mock data of users and uncommon_processes to backport https://github.com/elastic/kibana/pull/92284 and https://github.com/elastic/kibana/pull/92283 ::",9c60ef466955d6265349d9b8f3b149c2a11d687a::656a12a384caa97384190d21db1275dedb7884d3::14d535f15ec98d7e968406ba813531ff536123b7::e889f3085927de020d017ffeb08a067c2ad4cb4f::1c9ff9df04689f30758ce47adc4b7893713253e0::3df614921cf1fdd17974590a423455d94bebfe31::16d710f5e9a1a40fbcad6f4bd026d4a00f3ce6a5::d01deab2f8d1fcbbe251396ee9711635c68e4d99::d2d770b5b83b138599002f0d65d8b843189a24af::6b353b603a70a6f786449af910da436e399d3d16::
https://api.github.com/repos/elastic/kibana,91862,ua/align_branches::master,0,merged,Feature:Upgrade Assistant::Team:Elasticsearch UI::chore::release_note:skip::v7.13.0::v8.0.0::,"This PR attempts to align the Upgrade Assistant code between `master` and `7.x` to improve DX and the backporting process. Related to https://github.com/elastic/kibana/issues/78923. ### How to review It may be helpful to review the changes incrementally by commit. The steps I took: 1. Merged all `7.x` code into `master`. (https://github.com/elastic/kibana/commit/2e4163dd46c2cc0e32795b4b15f51aaf11edb7e3) 2. Removed code that is no longer applicable. These changes were largely concentrated around APM-related code that was specific to the 6-7 upgrade. The APM team confirmed this is no longer applicable, although there will likely need to be new APM-specific logic in UA for the 7-8 upgrade (TBD). I also removed index setting fixes to beats indices, which is also specific to the 6-7 upgrade. (https://github.com/elastic/kibana/commit/2e2e92f835c62f976cd9adf80b87e7313815f8d4) 3. Added conditional logic for any code remaining that is still pertinent to the 7-8 upgrade, but will be obsolete for the 8-9 upgrade. This includes conditional logic for the tests as well. (https://github.com/elastic/kibana/pull/91862/commits/bc7ec3b0d40f2e571e4d8c73f5fe0e97f2b37393) There's not a great way to manually test this on master, as most of the new logic is behind the v7 flag. I plan to do more thorough testing on the backport PR. For the review, I'm mainly looking for feedback on the implementation and verification (to the best of your ability) that nothing was removed inadvertently that would still be applicable for the 8.0 upgrade. ::It's not clear to me why this was removed on `master`, but it seems like it is a valid check.::Does this help with bundle size? Just curious ☺️::Is this new copy? If it is, it looks good to me, but it could be worth pulling in someone from esdocs@ too!::Not sure how the test harness is being set up, but it could be a better pattern to create a nested `describe` blocks for the 7 cases and 8 cases with their own test setups. WDYT?::Hmm, good point! It may have been removed in error.::It's slightly modified from 7.x 😄. I'm going to hold off on a copy review for now, as I think this UI will change as part of the redesign.::Good question! I think I copied this from elsewhere in Kibana 😅 . I'd have to go back and compare to see how it affects the bundle size.::",2e4163dd46c2cc0e32795b4b15f51aaf11edb7e3::2e2e92f835c62f976cd9adf80b87e7313815f8d4::bc7ec3b0d40f2e571e4d8c73f5fe0e97f2b37393::4556e743b3f9477452718ce21b46701482681172::bde335f5dc50b22d5d075744a07f020cd048078e::ccecb3668b3ded043fb0f694dee99e5351ee7256::04ce802c06394aefad5073bfe714617b52f1bb46::eac1feb28ce403f255c3ce71d11205820f2b4978::b948291c2f42ae739ac543a5b29201bf12e199b0::
https://api.github.com/repos/elastic/kibana,91553,rules/7.11.2::master,0,merged,Feature:Detection Rules::Team:Detections and Resp::release_note:skip::v7.11.2::v7.12.0::v8.0.0::,"## Summary Rule updates from https://github.com/elastic/detection-rules/tree/7.11 The only update here is adding the `timestamp_override` field to many of the rules. Details [here](https://github.com/elastic/detection-rules/pull/948) The existing rules PR #91082, should merge _after_ this is merged and backported ### Checklist - [x] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)::",24c22328e4189eed7c6e9d87240e25a8fdb7b00c::d5e308b003224b9e7187cc85b64db6ce0a7cf7d4::bbccef3f932b2ae218f08f40775780592d2ed923::
https://api.github.com/repos/elastic/kibana,91226,auto-backport-2-changes::auto-backport-2,0,merged,release_note:skip::v7.11.2::v7.12.0::,Test auto backport updates::,9969c090c8cf12cd95bbaf9d1caaf5f68eddf6e3::
https://api.github.com/repos/elastic/kibana,91039,7.11-metrics-recoveryfix::7.11,0,merged,Feature:Metrics UI::Team:logs-metrics-ui::release_note:fix::v7.11.1::,## Summary Manual 7.11 backport of https://github.com/elastic/kibana/pull/91038::,e5e582cd16eae8bcd95fe6155a19bcc74a21da37::f02b0974c33afa2a4cb980049b9f90bfc81fe50f::f799fcbe43ea22226184d0e4226de6b716a85999::
https://api.github.com/repos/elastic/kibana,90084,bump-package-versions-6.8::6.8,0,merged,chore::release_note:skip::v6.8.14::,"This is a follow-on to #90061. That was a backport of changes in `master` and `7.x`. This PR, on the other hand, upgrades dependencies that are only present in the `6.8` branch.::optional follow-up: This can be collapsed into the entry below for `eslint-visitor-keys@^1.1.0`::",ef12000b942d991284c630744e384290d55f247c::4145e129d7a5f1101605239956602979890063f7::39116b1b9fbb3d196342b6dff9b19918afdd1e05::2329d916510e3ff042a7e5d928cee2a97293e94b::3976bd05469dc8240ea0886063446a0eca042b02::9c2bfdce69e539d6b122b95b0caa5d42df654e97::b96558a15b4a5eea169c9a42f7057367975dbdc5::eef23ed4adcd297ecf5c10a1274bce5ec1545a54::d81ba0d15e0fb3abd27aaea8e6c6d3021ff79757::f56a02a546cf3fb02180b4bad6ac3a60d88ebfc6::4c41674a61621b78c15c9fd13863b6a94d039bff::b7f6ace037799d7f4709aa01859429a0a73a3061::b4a5ecda78af0f053a1d56096487df6037d8c81b::2934babfd840dab21da43e90b092c7ea18e4317e::
https://api.github.com/repos/elastic/kibana,90066,fix-perf-issue-agent-status::master,0,merged,Feature:Fleet::Team:Fleet::release_note:skip::v7.11.0::v7.12.0::v8.0.0::,"## Summary The agent status endpoint used to populate the status bar in the agent list is extremely slow, because it's using a large KQL kuery that PR try to fix that. Expected to address https://github.com/elastic/kibana/issues/86742 ## Apache benchmark ### Before <img width=""970"" alt=""Screen Shot 2021-02-02 at 1 38 27 PM"" src=""https://user-images.githubusercontent.com/1336873/106646773-1776f280-655c-11eb-9e8f-90e353b8bfc0.png""> ### After <img width=""903"" alt=""Screen Shot 2021-02-02 at 1 34 43 PM"" src=""https://user-images.githubusercontent.com/1336873/106646765-1645c580-655c-11eb-8bdf-9145e2e6ffb8.png""> I suspect this endpoint to be responsible of the `socket hang up` errors we regularly see in Fleet in cloud, Should we backport this to 7.11? ::",3ad25deb01e1dd76c45d3938edae1cb148c6f645::794401d761153d9f6c60e5102dcb85262d66ac2a::
https://api.github.com/repos/elastic/kibana,89916,scottybollinger/ws-backport::7.x,0,merged,Feature:Plugins::release_note:skip::v7.12.0::,"## Summary This PR backports all of the Workplace Search changes to 7.x. ### Checklist - [x] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios::",a01b0913d35b591bd60e9688d24a6751e33a2b1b::6521262299e6f90aaeb16e7491b0c258171cebfd::e7f44f723651e3d87000c292b40e7bc1587b9552::9a9855ccbf753c2709d63ca5a73463687bcc513a::5d02e0138fe667e142fab647d12243d05388311e::feb6cae1458a1412c0f9bcc8a1c8fc635c8ad88a::
https://api.github.com/repos/elastic/kibana,89616,ua/es_client_fix::master,0,merged,Feature:Upgrade Assistant::Team:Elasticsearch UI::release_note:skip::v7.12.0::v8.0.0::,"This fixes a regression of https://github.com/elastic/kibana/pull/89207. I incorrectly migrated: ``` const flatSettings = await callAsUser('transport.request', { path: `/${encodeURIComponent(indexName)}?flat_settings=true`, }); ``` to `await esClient.indices.getSettings()` instead of `await esClient.indices.get()`; `indices.getSettings()` will only return the index settings and not the mappings. This was caught in the backport PR (https://github.com/elastic/kibana/pull/89435), since we are checking for types there. I've updated the tests as part of this PR, however, note that it passed originally since we were mocking the response correctly. ::",24d46c5db4d9114d210284610065b3e5f6274c99::bc3f1797d7b8254a0d02ac9366b6d77849b53a2a::27e0f6da5f776a18315e0d45179005eb4424af87::81695cdc468f50054205cee6982de36394bc8e30::e5c18fc265d75e30bfd9443ad1c3e34b0cf3e9da::8ef4bb504c0cd2ad78e24be4345843f573e2f333::
https://api.github.com/repos/elastic/kibana,88539,6.8-fix-es-build::6.8,0,merged,Feature:CI::Team:Operations::release_note:skip::v6.8.13::,I somehow screwed up my backport here and some code got deleted: https://github.com/elastic/kibana/pull/88364::,40627b14a47736b19f9fe8e75846416c51233de0::eb75258885f713eb6685ad1fd2ea8408c9a3b81c::
https://api.github.com/repos/elastic/kibana,88320,snyk-fix-3de851d868c5e7ac12d7e08cf3c33d96::6.8,1,closed,Team:Security::💝community::,"<h3>Snyk has created this PR to fix one or more vulnerable packages in the `yarn` dependencies of this project.</h3> #### Changes included in this PR - Changes to the following files to upgrade the vulnerable dependencies to a fixed version: - package.json <details> <summary>⚠️ <b>Warning</b></summary> ``` Failed to update the yarn.lock, please update manually before merging. ``` </details> #### Vulnerabilities that will be fixed ##### With an upgrade: Severity                   | Priority Score (*)                   | Issue                   | Breaking Change                   | Exploit Maturity :-------------------------:|-------------------------|:-------------------------|:-------------------------|:------------------------- ![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png ""medium severity"")  |  **616/1000**  <br/> **Why?** Proof of Concept exploit, Has a fix available, CVSS 5.9  | Server-Side Request Forgery (SSRF) <br/>[SNYK-JS-AXIOS-1038255](https://snyk.io/vuln/SNYK-JS-AXIOS-1038255) |  Yes  | Proof of Concept (*) Note that the real score may have changed since the PR was raised. Check the changes in this PR to ensure they won't cause issues with your project. ------------ **Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.* For more information:  <img src=""https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiI5NGM4YTEzYS1hODZmLTRhYTEtOWNkNi1lOGMyNTIwMmQ3YjkiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6Ijk0YzhhMTNhLWE4NmYtNGFhMS05Y2Q2LWU4YzI1MjAyZDdiOSJ9fQ=="" width=""0"" height=""0""/> 🧐 [View latest project report](https://app.snyk.io/org/kibana/project/1d5370fe-c98b-429e-80e8-1923ce554360) 🛠 [Adjust project settings](https://app.snyk.io/org/kibana/project/1d5370fe-c98b-429e-80e8-1923ce554360/settings) 📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities) [//]: # (snyk:metadata:{""prId"":""94c8a13a-a86f-4aa1-9cd6-e8c25202d7b9"",""dependencies"":[{""name"":""backport"",""from"":""4.4.1"",""to"":""5.6.1""},{""name"":""chromedriver"",""from"":""87.0.0"",""to"":""87.0.3""}],""packageManager"":""yarn"",""projectPublicId"":""1d5370fe-c98b-429e-80e8-1923ce554360"",""projectUrl"":""https://app.snyk.io/org/kibana/project/1d5370fe-c98b-429e-80e8-1923ce554360?utm_source=github&utm_medium=fix-pr"",""type"":""user-initiated"",""patch"":[],""vulns"":[""SNYK-JS-AXIOS-1038255""],""upgrade"":[""SNYK-JS-AXIOS-1038255""],""isBreakingChange"":true,""env"":""prod"",""prType"":""fix"",""templateVariants"":[""pr-warning-shown"",""priorityScore""],""priorityScoreList"":[616]}) ::",25edbafab65410fccf626710a3432f45c0ee0ba8::
https://api.github.com/repos/elastic/kibana,87780,bug/license-erased-on-initialize::master,0,merged,Team:Onboarding and Lifecycle Mgt::release_note:skip::v7.11.0::v7.12.0::v8.0.0::,"## Summary closes https://github.com/elastic/kibana/issues/87826 This PR ensures that when we navigate to the Policy details page in the Security app from any other page, we don't re-initialize the license that is fetched on app load. It fixes a bug where the license would be `undefined` when navigating from the Endpoint list page to the Policy details page since the license is fetched at initialization time. ![image](https://user-images.githubusercontent.com/56395104/104057425-25855d80-51c0-11eb-9139-d5871e978163.png) ### Checklist Delete any items that are not applicable to this PR. - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios ::this JSDoc comment does not look right for this selector.::Ahh . Ok. I see now. I was a bit confused as to what the issue was, but I see it now. When NOT on the policy details page, we reset state, but preserve both location ++ license data. Was this problem also seen when viewing/editing the policy from Fleet?::@paul-tavares no, I tested that case::Is this intentional change? Does it affect something?::it's intentional, when initializing, we shouldn't attempt to clear out any previously loading license information.  I think this should be refactored so that we have license info elsewhere in state and not associated with a particular page/feature store.  However, I wanted to make the change small since this needs to be backported in 7.11. ::corrected::",d28547a0407dd4752b4e4311a5e12985be11f047::d1cc1ca45c9fc55c852a33293991d281b9139868::4ccc233f10ecc9a2c63e542bfea3e28ceed0ff48::83ab22ceb9e6c760d68f03281604152fd80f2a16::915bfa106afc62cf30531aa83144692edcef6001::2e9a7217d3704d8bdfe9d4185b97f98f1b8c7f74::
https://api.github.com/repos/elastic/kibana,87116,84666::master,0,merged,Feature:Index Patterns::Team:KibanaApp::release_note:skip::v7.12.0::v8.0.0::,"Closes: #84666 ## Summary [Data plugin] Wrong caching for Index pattern fields. Index pattern cache should be local instance, not global ::@mattkime @ppisljar it looks like an issue while unifying client/server code. This approach unacceptable for server side code. `indexPatternCache` variable should not declared as instance variable. ::also I think it should be backported into `7.10`, `7.11` as a security issue. ::have no idea how it worked before but if I'm not wrong users should not be able to change field `name/type`. ::",67298aa05b4fe1eab9951f0307dfb263032b7aee::086f421829eb794fca33439d7ec3de659fd205c2::60543b19de916f13f30164a0903eccd4f1de07ba::b9e43767b1894db439d3cb3254d47aee58735dd9::
https://api.github.com/repos/elastic/kibana,86835,cypress_documentation_updates::master,0,merged,Team: SecuritySolution::Team:Detections and Resp::release_note:skip::v7.12.0::v8.0.0::,"## Summary * Updates Cypress README with latest/greatest * Adds link to said README in x-pack/README.md ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://www.elastic.co/guide/en/kibana/master/contributing.html#kibana-release-notes-process) ::@tylersmalley I added this link here since this file was [linked from the current docs](https://www.elastic.co/guide/en/kibana/current/development-tests.html), but it looks like that reference is gone in 7.11. Any preference on where/how to reference this in the [7.11 documentation](https://www.elastic.co/guide/en/kibana/7.11/development-tests.html)? ::remove ""the"" ```suggestion When you run Cypress in interactive mode, an interactive runner is displayed that allows you to see commands as they execute while also viewing the application under test. For more information, please see [cypress documentation](https://docs.cypress.io/guides/core-concepts/test-runner.html#Overview). ``` or add ""tests"" ```suggestion When you run the Cypress tests in interactive mode, an interactive runner is displayed that allows you to see commands as they execute while also viewing the application under test. For more information, please see [cypress documentation](https://docs.cypress.io/guides/core-concepts/test-runner.html#Overview). ```::```suggestion This is the configuration used by CI. It uses the FTR to spawn both a Kibana instance (http://localhost:5620) and an Elasticsearch instance (http://localhost:9220) with a preloaded minimum set of data (see preceding ""Test data"" section), and then executes cypress against this stack. You can find this configuration in `x-pack/test/security_solution_cypress` ```::Nit: `Each file inside the tasks folder` - typo: screens folder::I think it's fine only backporting to 7.x/7.12.::",9ed8d2147fa338aa87b02ee48b5a79a58d360155::fdcad8d8df5d233be1155541eafe7c3ba5f8beae::9e3a51dc302ca8b0cdc36bf1df09b08f5b43c7f2::5fbf43d0af12bab31815355cebc07f55299a86e6::468d2c0852c86d0e00849096711d014758558806::0154de6770f6901be3f5063466b073ecb751aa94::78e29eb31dc6a829b03c72e8af2d03b4263aa70f::ecc6e8d0ec9b6b54c70f093de216999cb9d54803::bbfe381fae991df061f69304cbcaee3f43e040bb::
https://api.github.com/repos/elastic/kibana,86806,support-0::master,0,merged,release_note:skip::v7.12.0::v8.0.0::,"Support for this was lost in #85406. Fixes #86716 ::@watson We should probably follow up in all the places where we use this for testing, replace it with `0.0.0.0` and then remove it from 0? Thanks for the fix BTW::I think it's best to support this in 7.x and then wait till 8.0.0 to remove it::Agree. But the 8.0.0 removal could already happen now. An email could be sent to the teams to give a heads up that it will be removed in `x` weeks with the fix that needs to happen.::Fine with me 😃 I just wasn't sure what our policy on diverging the branches was. I've heard some say that we want to keep `master` and `7.x` in sync as much as possible to ease backporting. I presume that would mean that we hold off diverging the branches until closer to the `8.0.0` release (hence why we have the big todo-list of things we want to break). On the other and, it's easier to get it in now when it's all fresh in our heads. I'm personally leaning towards the latter, so I'll create a PR to remove this in `master` and then people can object if they want in the PR.::No strong opinion, I let the KB team comment ;-)::I've created #87114 - You mentioned that the docs use `0` as the hostname. Where is that?::I did mention docs? :-)::Strike that... It was @graphaelli ::",1059d8013fb8038c63038d73f6f7f68831621cd2::
https://api.github.com/repos/elastic/kibana,86343,audit/spaces::master,0,merged,Feature:Security/Audit::Team:Security::release_note:enhancement::v7.12.0::v8.0.0::,"## Summary Adds audit events for spaces CRUD operations. ### Checklist Delete any items that are not applicable to this PR. - [x] [Documentation](https://www.elastic.co/guide/en/kibana/master/development-documentation.html) was added for features that require explanation or tutorials - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios ::Not really part of this PR but decided to fix the docs for these since we went with ""alert_*"" rather than ""alert_rule_*"" in the end::Calling this change out explicitly since it is different than the previous behaviour. I believe that we should log success scenarios here even if RBAC is disabled since we are now logging the fact that a CRUD operation took place rather than a pure authorisation check. Appreciate this scenario might never happen in real life (I am guessing the only way to disable RBAC is to disable security in which case audit logging would also be disabled) but the audit logger itself should be responsible for controlling when it logs events and when it doesn't. Authorisation failures obviously cannot happen when RBAC is disabled. ::Just a passing thought - out of scope for this PR. At some point, we may want to invert the control here (and elsewhere where we follow this same pattern). We end up performing a lot of unnecessary work when audit logging is disabled. If we allowed `this.auditLogger.log` to accept an ""event generator"" of sorts, then the audit logger could choose whether it should go through the effort of creating all of these events. _Very_ rough psuedo code: ```ts this.auditLogger.log((logFn) => { authorizedSpaces.forEach(({ id }) => { logFn(spaceAuditEvent({ action: SpaceAuditAction.FIND, savedObject: { type: 'space', id }, })) }) }); /// class AuditLogger { public log(logFactory) { if (this.isAuditLoggingEnabled()) { logFactory((event) => this.writeToAuditLog(event)) } } } ```::We unfortunately can't backport this PR to 7.11, so we'll need another PR to update the 7.11 version of the docs for alerts::Yeh, that's a good point. I'll make a note of that. ::",74d0d20d2282d83ce37a27bf4cdd38983125d852::2d571c30abfae3f807c29a5fee06f647424c5205::
https://api.github.com/repos/elastic/kibana,86231,field-mappings-move-tests-more::master,0,merged,Feature:Cases::Team: SecuritySolution::Team:Threat Hunting::release_note:skip::v7.11.0::v7.12.0::v8.0.0::,"## Summary Added jest tests for the untested changes made in `plugins/case/server` in #84587 (big ol field mappings move PR) I also removed a few files related to a `getFields` call I was using while working in a demo UI for the dynamic fields. As that is out of scope, I removed the UI but left my API calls in for the future. However, now in hindsight I realize that we will not call `getFields` from the front-end and instead call `getMappings` I want to backport this to `7.11`, what do you think? ### Checklist Delete any items that are not applicable to this PR. - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios ::This call was used in the flyout I had while I was working on my demo UI (did not get merged since dynamic was out of scope for the PR), but I am actually not going to expose the fields and instead have a call for the mappings. we do not need this::I used this hook in the flyout I had while I was working on my demo UI, but I am actually not going to expose the fields and instead have a call for the mappings. we will not need this hook::I exposed this call in the flyout I had while I was working on my demo UI, but I am actually not going to expose the fields and instead have a call for the mappings. we have the get fields call in the caseClient call, so we do not need it here::",709690afbbcd3b6f2814a45b443346635cd4de36::22b09c6d0a1bb93db0bb6ef1ea9d1f0245fd4c0b::6af5d93817c5bf876dddc9380d970ca7d026205f::07e2470e16db5f358e4866a6a461b259a9031cdd::3f68f5365b15678e55c7b73d633527ea31c3f390::c9ab4415afd07282f1e2efaad6e7b8dda5901b8c::
https://api.github.com/repos/elastic/kibana,86182,ml-fix-zoom-not-working::master,0,merged,:ml::Feature:Anomaly Detection::bug::release_note:fix::v7.10.2::v7.11.0::v8.0.0::,"## Summary This PR fixes https://github.com/elastic/kibana/issues/86141 where the zoom time range set is missing when navigating from the Anomaly Explorer to the Single Metric Viewer. It also fixes not being able to ctrl+click/right click to open in new tab previously. ### Checklist - [x] This was checked for [cross-browser compatibility](https://www.elastic.co/support/matrix#matrix_browsers) ::not sure if opening in a new tab should be enforced 🤔 cc @peteharverson ::I've seen this pattern multiple times, so for consistency, it's worth creating a custom hook, `useSafeAsyncState` maybe? ::Not related to the changes in this PR, but looks like the link added to the recently accessed list is wrong. For me it adds a link to (note `vlq/app/ml` is duplicated) e.g. ``` http://localhost:5601/vlq/app/ml/vlq/app/ml/timeseriesexplorer?_g=(ml%3A(jobIds%3A!(gallery_mean_bytes_15m))%2CrefreshInterval%3A(display%3AOff%2Cpause%3A!t%2Cvalue%3A0)%2Ctime%3A(from%3A%272019-08-01T00%3A03%3A40.000Z%27%2Cmode%3Aabsolute%2Cto%3A%272020-12-16T11%3A33%3A45.000Z%27))&_a=(timeseriesexplorer%3A(mlTimeSeriesExplorer%3A(detectorIndex%3A0%2Centities%3A(method%3APOST))%2Cquery%3A(query_string%3A(query_string%3A(analyze_wildcard%3A!t%2Cquery%3A%27*%27))))) ``` ::Now that ctrl+click/right click to open in new tab works, let's default to opening in the same tab.::Updated here [`7f82298` (#86182)](https://github.com/elastic/kibana/pull/86182/commits/7f82298865461e3195c50e2d7cc7ac7fb1b1ce69)::Fixed here 7f82298 (#86182). Seems like this is also an issue on 7.10.2 so I'll be making a backport to 7.10 as well.::I'll make a follow up for this in 7.12 to consolidate all the places that are currently using this pattern. Since this is a bug fix, I'll keep this here for now.::Retesting this, I am finding sometimes the zoom isn't set correctly in the Single Metric Viewer. Could there be a race condition? ![view_series_time_range_bug2](https://user-images.githubusercontent.com/7405507/102609626-b7e79380-4123-11eb-96e2-009251f9ccd0.gif) ::Thanks Pete. Seems like this is because the true `plotEarliest` and `plotLatest` can be updated  after the series are called. Fixed here  https://github.com/elastic/kibana/pull/86182/commits/c09e6f2734fbb23681550506937709c9a776d9a5.::Tested latest edits in https://github.com/elastic/kibana/commit/c09e6f2734fbb23681550506937709c9a776d9a5 and the zoom is now set correctly for me every time :tada:::",adc327928130e6ede2299c3fe6b2044cdfd6c488::da278e1c0a44260307ee1211b78a6e6fd6b33ec8::b09a639f497d7f085251bade54b45f78b0e5b906::7f3ec3c129d532b86c695efb7ed2978acf61eddf::7f82298865461e3195c50e2d7cc7ac7fb1b1ce69::eb7ca5b81752906f74312ce1b8142a311cedab19::23f6ecf1c8705a0f001e8d82d776ffa7c110e00a::c09e6f2734fbb23681550506937709c9a776d9a5::1332841e576dafce66ab26ef7b53fe514b4cb9e4::
https://api.github.com/repos/elastic/kibana,86138,revert-85820-app-search-7.11::master,1,merged,Feature:Plugins::release_note:skip::v7.12.0::,## Summary This PR reverts https://github.com/elastic/kibana/pull/85820 and re-enables our layout/sidebar/engine links for development work. This **should not** be backported to the 7.11 branch. ### Checklist - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios ::,35a3ed528c218dec598a86e956386d4a2d409c59::2074eef5a8e5e54ce51179af09d0bd7c5cdf45e5::
https://api.github.com/repos/elastic/kibana,85926,frconil-patch-2::7.x,1,merged,Team:Docs::release_note:skip::v7.0.0::v7.1.0::v7.10.0::v7.11.0::v7.2.0::v7.3.0::v7.4.0::v7.5.0::v7.6.0::v7.7.0::v7.8.0::v7.9.0::,## Summary Both the documentation and the code (including tests) mention this should be a POST request. Proposing the same changes that were proposed in https://github.com/elastic/kibana/pull/85790 for backports to 7.x releases. ::,1aa79cf0dbbd9b7ee1b8a7e313f43202782fdecd::
https://api.github.com/repos/elastic/kibana,85332,runtime-fields-helptext-7.x::7.x,0,merged,Feature:Index Management::Feature:Mappings Editor::Team:Elasticsearch UI::release_note:skip::v7.11.0::,7.x backport for #85204 ::,4c9733af51cc362d3f6e14b96ef46eaba29a9ab3::
https://api.github.com/repos/elastic/kibana,84870,fix/ilm-delete-phase-serialization::master,0,merged,Feature:ILM::Team:Elasticsearch UI::release_note:skip::v7.11.0::v8.0.0::,## Summary Fix https://github.com/elastic/kibana/issues/84830 Fix for 7.11 https://github.com/elastic/kibana/issues/84442 👆🏻we will need a separate fix to backport this to 7.10.x ### Checklist - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios::,f4b446ab9a9ab3fe53bb835eafd4ba72523d42d6::dc9d5a596d07d0f7d016ce68bf6cbaa47de45938::512304444ef0ce49fdaad410d85e38b368b6f54c::702e0ce621c52773a8d762f0ea9e841fe3e33d4d::
https://api.github.com/repos/elastic/kibana,84497,kbn-xxx-update-legacy-logging-listener-2::master,0,merged,Team:Core::release_note:skip::v7.11.0::v8.0.0::,## Summary Increase the max listener count for stdout to avoid the ``` node:77321) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 26 finish listeners added to [WriteStream]. Use emitter.setMaxListeners() to increase limit server   error  [13:32:17.435] [warning][process] MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 26 finish listeners added to [WriteStream]. Use emitter.setMaxListeners() to increase limit at _addListener (events.js:389:17) at WriteStream.addListener (events.js:405:10) at WriteStream.Readable.on (_stream_readable.js:874:35) at WriteStream.once (events.js:436:8) at KbnLoggerStringFormat.Readable.pipe (_stream_readable.js:772:8) ``` errors ::Mind these changes when backporting::,1c3163b73888dcacd87ac0c738727e6b09fbf1c6::f838d6bbf5d9a52f63e6fa527ffb6404635a8dbe::
https://api.github.com/repos/elastic/kibana,84233,skip-yarn-local-mirror-7.10::7.10,0,merged,Team:Operations::chore::release_note:skip::v7.10.1::,We are going to merge https://github.com/elastic/kibana/pull/84124 but we won't backport it to `7.10` so we need that change to avoid adding the yarn local mirror folder into `7.10` branch accidentally.::,939fd21120f7e0d8c23e2ebd3190fa10891356cd::
https://api.github.com/repos/elastic/kibana,83846,docs/drilldown-redirects::master,0,merged,Team:Docs::release_note:skip::v7.10.0::v7.11.0::,## Summary Closes #83268 ### Checklist - [x] [Documentation](https://www.elastic.co/guide/en/kibana/master/development-documentation.html) was added for features that require explanation or tutorials::This change means we also have to change: https://github.com/elastic/kibana/blob/master/src/core/public/doc_links/doc_links_service.ts#L42 I think it is fine to fix `docsLinks` in separate follow up pr to make current pr move faster through backports (to no trigger whole CI because of code changes) as it's anyway won't hurt 7.10 where we want to fix different problem. Leaving this up to you if you'd like to make this change in current pr::This change means we also have to change: https://github.com/elastic/kibana/blob/master/src/core/public/doc_links/doc_links_service.ts#L44 I think it is fine to fix `docsLinks` in separate follow up pr to make current pr move faster through backports (to no trigger whole CI because of code changes) as it's anyway won't hurt 7.10 where we want to fix different problem. Leaving this up to you if you'd like to make this change in current pr::,d9cc9a3a7ee9e031a250df62598c9ae9afdabac8::583172d2d45a8333afd0290e1761bcc8b05ea5ab::c0d546273bfb9fab9ab3f0236fec03148bc225e6::15fc55b22ddc938b639132f11c6515511e0f3b69::d6a9f870bea5484149cdd3b1d0d91685cdd6ce0c::6036bd3098d7ff6301a599033bdb27f4f882da56::50491e17fa5ae6125950c7aa37c9da56ba8271b2::caad05cb291a507511801b44a8be69208248b999::
https://api.github.com/repos/elastic/kibana,83729,ignore-snapshot-js-file-7.10::7.10,0,merged,Team:Operations::chore::release_note:skip::v7.10.1::,On https://github.com/elastic/kibana/pull/80015 we move into a single package.json and as a result of it the `cypress/snapshot` which is used by apm has started creating a `snapshots.js` file in the root of the repo instead of creating it under the apm plugin (closing to the previous child package.json where the npm dep was declared). We have gitignored it both on `master` and `7.x` but as the mentioned PR was not backported to `7.10` we haven't done it on that branch. As 7.10 will still be maintained and we will be switching a couple of times between that branch and the other mentioned ones we can be adding `snapshots.js` to the repo by mistake. That PR intends to prevent it by adding that change into the gitignore file.::,a432fa6999926ec4b4cc616bd5650534c7152587::
https://api.github.com/repos/elastic/kibana,83504,engine-overview::master,0,merged,Feature:Plugins::release_note:skip::reverted::v7.11.0::,"## Summary This PR stubs out the Engine Overview layout. It is still currently missing the following components, which will be added next: - CodeExample - DocumentCreationButtons & DocumentCreationModal - Analytics chart (high lift) - API Logs Table (this will likely be done significantly later / we migrate the API table view, although I also might give this a shot over the quieter December holidays, we'll see) ## Screencaps ### Populated Engine Metrics <img width=""1172"" alt="""" src=""https://user-images.githubusercontent.com/549407/99318775-3a2b2200-281d-11eb-8908-6dcd907fd735.png""> ### Empty Engine <img width=""1179"" alt="""" src=""https://user-images.githubusercontent.com/549407/99319718-e7eb0080-281e-11eb-9344-69c529dcb847.png""> ### Engine data unavailable/still indexing (not sure I've ever seen this personally) <img width=""500"" alt="""" src=""https://user-images.githubusercontent.com/549407/99318811-4dd68880-281d-11eb-9be5-43dd3166fedf.png""> ### Checklist - [x] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios - [x] Any UI touched in this PR is usable by keyboard only (learn more about [keyboard accessibility](https://webaim.org/techniques/keyboard/)) - [x] Any UI touched in this PR does not create any new axe failures (run axe in browser: [FF](https://addons.mozilla.org/en-US/firefox/addon/axe-devtools/), [Chrome](https://chrome.google.com/webstore/detail/axe-web-accessibility-tes/lhdoppojpmngadmnindnejefpokejbdd?hl=en-US)) - [x] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server)) - [x] This was checked for [cross-browser compatibility](https://www.elastic.co/support/matrix#matrix_browsers)::These constants are also used in the Analytics view so I figured I'd do myself a favor and start a constants file early.::See above, this title is also used in the API Logs view::I went back and forth a little on whether I should split out the metrics view into sub-components, and I'm very happy I did in the end. The code feels much easier to test and reason about in smaller bite-sized files. I left the empty engine view as one piece/component but definitely open to splitting that up as well if folks think that will help readability.::To be clear I'm not 100% on if this will translate perfectly to EuiChart as I haven't spiked that out much, I'm just leaving this in as reference from our old code::I've never actually seen this prompt before, so this was my best guesstimate on migrating a STUI icon to EUI::FYI: I renamed `canAddDocuments` from `canViewEngineSetup` in our source code. `canViewEngineSetup` was really confusing to me until I realized what it meant - if a user can't actually add documents privilege-wise, there's no point in showing them the documents setup CTA::Similar to the sub-components remark above, I think splitting up the two distinct 'views'/modes helps a lot w/ readability - hopefully it looks good to everyone else as well::I left `engineHasDocuments` and `showEngineOverview` as-is from the original code but happy to rename to a more traditional bool format (`hasDocuments`? `shouldShowEngineOverview`?) if folks think that's worth doing::In hindsight I'm not 100% sure this was a good idea or worth writing a regex for lol, I guess I could do this instead? ```js import { CURRENT_MAJOR } from '../../../../common/version'; // ... expect(wrapper.find(EuiButton).prop('href')).toEqual( `https://www.elastic.co/guide/en/app-search/${CURRENT_MAJOR}/index.html` ); ``` 🤷 what do people prefer? ::Ideally I would have loved to leave in, e.g., the `'8.0'` number statically but that would have crashed on the 7.x backport and we'd have to manually update it for 9.0.::I just discovered this (and the API indexing title/description) is reused word for word in the Index Documents modal, so I pulled it out to a constants file: <img width=""738"" alt="""" src=""https://user-images.githubusercontent.com/549407/99342966-d9621080-2841-11eb-9c36-dc0e9070d0d3.png""> It makes the page a tad hard to ""read"" without looking at the actual compiled app, but what can you do 🤷 ::Nice use of FormattedMessage 👍 ::When I first saw this it took me a moment to figure out which section of the page this actually corresponds with. I think it's because it's missing the ""API"" keyword. I think I would have called this ""RecentAPILogs"" or ""RecentAPIEvents"".::Semantically, are pages meant to have multiple EuiPageContent in EUI? Or is there some other tag available for page sections? ::Just looking at the EUI docs, I don't see a ""to"" property mentioned 🤔 https://elastic.github.io/eui/#/navigation/button::Update: I see it now in react_router_helpers. I think I'm generally not a fan of this pattern. It seems to be more confusing than helpful. It also makes any sort of find and replace harder when we're using two different components with the same name.::```suggestion defaultMessage: 'Dashboard metrics are currently unavailable.', ```::```suggestion defaultMessage: 'Please try again in a few minutes.', ```::```suggestion it('renders a loading component if async data is still loading', () => { ```::Oh that's interesting. So what does it show in this case ... just 0 documents?::Do we need to stop polling when this is unmounted?::I think it's fine.::Me too::Per the Kibana writing guidelines, I *think* stuff like this should not be Title Cased. I'm actually unsure of this one. ```suggestion defaultMessage: 'Engine setup', ```::Ditto for this, probably better to not title case here ```suggestion { defaultMessage: 'View documentation' } ```::I prefer the later. ::👍 Will make the change!::👍 For sure, happy to make that change!::Semantically I don't see a reason why not as they're not using `<main>` components under the hood (which is what we're using for `EuiPageBody`) - they're just plain `<div>`s which carry no extra meaning to web crawlers or screen readers.::👍 For a lot of these casing comments, I was copying these over from ent-search as-is, but I think it makes a lot of sense to update them as we migrate. Will do so going forward!::@chriscressman Do you mind weighing in on this here? Should we be updating various headings and buttons to use sentence case over title case as we migrate to Kibana?::🦅 Thanks for the awesome catch!::Yup, I think it just shows the overview metrics with 0 documents.::We should be doing so in the beforeMount Kea event for `EngineOverviewLogic` - we cancel the timeout for `pollForOverviewMetrics` there.::Gotcha, I get that confusion - it should hopefully not be overly magical since the import source is right there at the top of the file, but I definitely get it - the find & replace point is a good one. The thing I was struggling with originally was what to name it that wouldn't look or read super weird while parsing through JSX - usage wise, my intention was ""It's the exact EUI same component, but react routing is taken care of for you"". Naming wise everything I came up with felt super awkward (`<EuiReactRouterButton>`? `<EuiRRButton>`?) but if we can come up with something that flows well I'd be down to change it. Just throwing some options out there: 1. ``` <EuiButtonTo /> <EuiLinkTo /> <EuiPanelTo /> ``` 2. ``` <EuiRouterButton /> or <EuiRoutedButton />? <EuiRouterLink /> <EuiRouterPanel /> ``` Thoughts? Suggestions?::Yes, we should consistently use sentence case in all our UIs. This is a company-wide style rule. The Kibana migration is a great opportunity to align. Thanks for checking!::Also @JasonStoltz - should `Engine overview` also be sentence cased vs title cased in that case? 🤔 ::What are your thoughts on the ""View Analytics"" and ""View API Logs"" buttons? (see screenshot) <img width=""589"" alt=""Screen Shot 2020-11-18 at 10 31 36 AM"" src=""https://user-images.githubusercontent.com/549407/99572284-47651f80-2989-11eb-9739-ecf8e3809fe2.png""> This is _partially_ why I left copy as-is haha, it felt like a can of worms I didn't have the expertise to go into 💦 ::@chriscressman can I get your expert opinion on this one as well? Should it be ""View Analytics"" since Analytics is a feature title? I'm guessing yes? Also if it's easier for you to hop in a zoom call and quickly point out copy issues to me and have me fix them on the go, please do let me know! 🙏 ::Yes, I think ideally we would change all heading and button text within these screens to use sentence case. @gchaps is the expert on Kibana (and Elastic) UI text. Can you confirm Gail?::Thanks Chris! I think my confusion is what's considered a ""Feature Title"" vs not. ""Overview"" is technically the title of the page and is capitalized in the navigation, does that make it a feature that should remain capitalized?::I went back and looked at some of EuiEmptyPrompt examples and I think the headings are actually not supposed to have punctuation: https://elastic.github.io/eui/#/display/empty-prompt and <img width=""400"" alt=""Screen Shot 2020-11-18 at 10 55 35 AM"" src=""https://user-images.githubusercontent.com/549407/99574732-9c566500-298c-11eb-86c5-9d74cce42d8d.png""> So going to leave this one as-is 🤷::https://github.com/elastic/kibana/pull/83504/commits/5e945c372d784a1c9ed5bd88fea7abbf176e284f::https://github.com/elastic/kibana/pull/83504/commits/4d4747c9deab84d05bb06c74d7373777a5640f72::https://github.com/elastic/kibana/pull/83504/commits/7c6c8c8d3937c6c081603976781e6a5d7d07c2fa::https://github.com/elastic/kibana/pull/83504/commits/7c6c8c8d3937c6c081603976781e6a5d7d07c2fa::https://github.com/elastic/kibana/pull/83504/commits/7c6c8c8d3937c6c081603976781e6a5d7d07c2fa::They're named the following at the source, why not just keep them as is? EuiReactRouterLink, etc. ``` export { EuiReactRouterLink as EuiLink, EuiReactRouterButton as EuiButton, EuiReactRouterPanel as EuiPanel, } from './eui_link'; ```::Makes sense 👍 ::Sorry for opening this can of worms 😬 ::Haha because I hated how long and wordy those names were. Especially for how often we use links/buttons etc., I want something that's easy to read and doesn't add a ton of characters (which could trigger multilines, etc.). Sounds like this is a naming thing at this point though, so let me put this to a vote w/ the rest of the frontend team!::PR follow up to this conversation: https://github.com/elastic/kibana/pull/83718::",fa9d12c07550047b1e64a9bd669d607c355da222::7ac0e3b78fb0e6544409fdd3dc1372e245bf31c7::0d71c73fae1e099320c5d4c91cd4f4fe2ab32630::1097787f6d767091a495cead437c9bf712e4e667::2be4c35dcab743632aae8aa0ee83899db92526bd::2fca0860c627566f7273fcda64f24dd80b782720::4cd44f94c62d9e27339f01ad0c706a1e70a38709::5e945c372d784a1c9ed5bd88fea7abbf176e284f::4d4747c9deab84d05bb06c74d7373777a5640f72::9bc3780a1837c40d7fbb50b53547ac09da9fa025::cc01d6be5db45b636720263e13531aea6e40e24e::
https://api.github.com/repos/elastic/kibana,83083,update-kbn-plugin-helpers-readme::master,0,merged,Team:Operations::chore::docs::release_note:skip::v7.10.1::v7.11.0::v8.0.0::,"@restrry realised our `README` file is not in sync with the current `plugin-helpers` features. I did a whole pass to the file and I hope it is now update so we can backport that info far as 7.10 branch.::```suggestion You don't actually need to install the plugin helpers, they are automatically inherited from the Kibana project by building your plugin within the Kibana repo. To use the plugin helpers just create the needed npm scripts on your plugin's `package.json` (as exemplified below) which ```::```suggestion This will make it easier to execute the `plugin-helpers` script from within your plugin repository. ```::👍 ::",102b101b69251d0417eaf535c0f450438488cd73::d8ecd1eacbd2d1dd953b274c553d14d9ef36485c::b50da661be18f816577b40e15bf34776d5028f36::
https://api.github.com/repos/elastic/kibana,83081,nls/es-typings::master,0,merged,Team:apm::release_note:skip::v7.11.0::v8.0.0::,"...and into x-pack. Also remove `PromiseReturnType` from APM and use the copy in observability everywhere. All of the additional changes to APM imports are just automatic sorting. This makes doing #77720 a little easier and removes some implicit circular dependencies for #80508. ::Didn't we previously have an eslint rule that'd strictly order the imports alphabetically? Then we'd avoid this kind of diff. I use that for backport: https://github.com/sqren/backport/blob/9c41c5bcd559f1b1b7a782a940143d28d1027c79/.eslintrc.js#L25::I don't know, but once they are ordered properly this kind of diff doesn't need to happen again. ::The ordering I'm doing here is with VSCode's options-shift-o, which invokes TypeScript's [organize imports](https://devblogs.microsoft.com/typescript/announcing-typescript-2-8-2/#organize-imports) feature. We have some ordering rules in ESLint, but it doesn't fully check for TypeScript's suggested ordering. There's an open issue (typescript-eslint/typescript-eslint#113) to get it implemented in the ESLint TypeScript plugin that's not yet completed.::FWIW, it's a little harder to review this PR because of the import changes. I would prefer to have something that is enforced & automatic, or to not do this at all. I do agree that there is value in sorting the imports.::Agree, there is value in sorting imports and it should be enforced and automatic. For backport unsorted imports make the eslint check fail: ![image](https://user-images.githubusercontent.com/209966/98798760-88e84e80-240e-11eb-958a-c1ea2fa738bd.png) ![image](https://user-images.githubusercontent.com/209966/98798749-8685f480-240e-11eb-92cf-b5d52460e847.png) I would be surprised if we can't have the same behaviour in Kibana.::",feffa04e18e50fc642f7d4d52b56c729c6ec0a52::5d388baf6e8f0fa74230b27286c9ca6fed35a9ee::e5b21b6ac8ea4d65718693af02e50988f578f1ea::
https://api.github.com/repos/elastic/kibana,83047,ignore-code-owners-on-non-master-branches::7.x,0,merged,Team:Operations::chore::release_note:skip::v7.10.1::v7.11.0::,`CODEOWNERS` github file has been added to non master branches a couple of times. We don't want those files there as it would cause pings for teams on backports. I will ignore the file on `.gitignore` from now on.::,2b437ddffe3fc4580967eca6997ca6786a365318::be6df32c95bcd99453dc81ce04af9c135d143006::
https://api.github.com/repos/elastic/kibana,82937,remove-CODEOWNERS-from-7.x-branch::7.x,1,merged,chore::release_note:skip::v7.11.0::,to avoid notifications on backport ::,ec509820db8e1c459c37f9b8185297c066e2d9e8::
https://api.github.com/repos/elastic/kibana,82672,fix-ingest-reinstall-race-master::master,0,merged,Team:Fleet::release_note:skip::v7.11.0::v8.0.0::,"This is to address this issue: #82614 Related fix for 7.10: https://github.com/elastic/kibana/pull/82664 (was merged directly to 7.10) There is a potential for a race condition during the /setup API call if one of the required packages is in the installing state. A required package can get in this state if a failure occurred to install/upgrade that package and we were unable to rollback the package for some reason. Upon the next call to /setup, if the package can be upgraded, the upgrade code will be initiated in addition to attempting to reinstall the failed package version because both the ensureInstalledDefaultPackages and the ensurePackagesCompletedInstall calls happen in parallel in the Promise.all. This PR tries to mitigate that by moving the reinstall functionality outside of the Promise.all so that it is done after the upgrade attempt. This PR fixes the issue in master and will be backported to 7.x as well.::",d46f8547a28fec9cddea30d7f54869a09ca86c0d::
https://api.github.com/repos/elastic/kibana,82381,fix-nav-order::7.x,0,merged,REASSIGN from Team:Core UI::Team:KibanaApp::release_note:skip::v7.10.0::,"Fixes https://github.com/elastic/kibana/issues/82311 Following @kobelb's [advice](https://github.com/elastic/kibana/pull/82377#issuecomment-720744360), will backport to 7.10 after this gets approved hopefully fixing this once and for all... <img width=""306"" alt=""Screen Shot 2020-11-02 at 16 14 14"" src=""https://user-images.githubusercontent.com/4188087/97919847-1dbbbf80-1d1e-11eb-80f6-d22794e20cf1.png"">::",5c15936f5d227521e5f72bd2e1224cad2d7755d6::b23b6a01541e3b3732392832cd2317d2f2017893::
https://api.github.com/repos/elastic/kibana,82185,fix-example::master,0,merged,Feature:Alerting::Team:Alerting Services::docs::release_note:skip::v7.10.0::v7.9.0::v8.0.0::,"It looks like this example was not updated since 7.0, so this docs fix should get backported to all minors between 7.0 and 8.0.::",5746826f108e5a5e3599abbc4359ed5cd9dd7310::
https://api.github.com/repos/elastic/kibana,81858,enterprise-search-telemetry::master,0,merged,Feature:Plugins::bug::release_note:skip::v7.10.0::v7.11.0::,"## Summary I was doing some telemetry work and realized we had missed capturing the following telemetry for the new Enterprise Search Overview plugin: - The Setup Guide was registering a ""viewed"" telemetry action but hadn't actually set up a collector for it - We should be collecting data for how often users encounter the error connecting view @elastic/telemetry - I'm hoping to backport this in before BC5 so would super appreciate a quick look 🙏 Thanks so much, apologies for the rush! ## QA - Checkout branch, and go to http://localhost:5601/api/stats?extended=true (must be logged in as `elastic`) - Look for `enterprise_search` (3rd result on page) - [x] Confirm that the nested `ui_viewed.setup_guide` metric is present - [x] Confirm the nested `ui_error.cannot_connect` metric is present - Go to http://localhost:5601/app/enterprise_search/overview/setup_guide - [x] Go back to the api stats endpoint and confirm `ui_viewed.setup_guide` has incremented by one - Stop your Enterprise Search instance if running and go to http://localhost:5601/app/enterprise_search/overview - [x] Go back to the api stats endpoint and confirm `ui_error.cannot_connect` has incremented by one ### Checklist - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios::",47fb2154437dbe697e064daa228fd9ecba9cb80a::b1d119b91bb2ac71e152cfb4859fe194c981a205::
https://api.github.com/repos/elastic/kibana,81829,enhance-adv-settings::master,0,merged,Feature:Kibana Management::enhancement::release_note:skip::v7.12.0::v8.0.0::,"## Summary Closes #50418 Currently, the advanced settings page uses a route param (`/:query`) to set the search query on the page, however, the search bar does not update the url as the search query changes. https://github.com/elastic/kibana/blob/8b1ff4ca5942034e0f8d96afc877e02b5c6bf9c1/src/plugins/advanced_settings/public/management_app/mount_management_section.tsx#L67-L75 This PR will read the route param `query` and properly parse the `categories` filter. Also, syncs the search input query with the url query search param. ```node // this... app/management/kibana/settings/timezone // become this... app/management/kibana/settings?query=timezone ``` ![Screen Recording 2020-12-14 at 03 26 PM](https://user-images.githubusercontent.com/19007109/102138661-502f0100-3e22-11eb-8c3e-aeb1f9e02ca0.gif) Updates query logic to allow multiple `category` filters with serach terms. ![Screen Recording 2020-12-14 at 03 28 PM](https://user-images.githubusercontent.com/19007109/102138802-8c626180-3e22-11eb-836b-9c2868d96fee.gif) Check query match on mount for telemetry management section. --- ### Note on framents The advanced settings `Form` also currently adds an `id` to each `Field` (i.e. `.mgtAdvancedSettings__field`) appending `""-group""` to the setting `name`. https://github.com/elastic/kibana/blob/8b1ff4ca5942034e0f8d96afc877e02b5c6bf9c1/src/plugins/advanced_settings/public/management_app/components/field/field.tsx#L672-L677 Thus we are able to deep link to any setting via a url fragment, something like... ``` http://localhost:5901/app/management/kibana/settings#dateFormat:scaled-group ``` ![Screen Recording 2020-10-27 at 01 07 PM](https://user-images.githubusercontent.com/19007109/97343336-5d356800-1855-11eb-966e-747921827e41.gif) ### Checklist - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios ::I think we should simplify it and use more official way to do the same 1) pass **history** object from `management_app/mount_management_section.tsx ` 2) ``` const setUrlQuery = useCallback( (q: string = '') => { props.history.push({ pathname: q.toLowerCase(), }); }, [props.history] ); ```::nit: it's not a question to your changes but looks like this wrapper for **AdvancedSettingsComponent** was added just to use **useParams** hook. Honestly I think this wrapper should be removed. we can probably read **queryText** from `props.history.location.pathname` (see my previous comment)::Good point see 336f39e::see 336f39e::nit: I'm not sure that you need to execute `setState` from here.  You already added listener on `url change`. The same comment valid for `clearQuery -> setState` too. ::I recommend you to use **url.encodeUriQuery()** from `import { url } from '../../../kibana_utils/public/';` instead of **URLSearchParams** which we use across the whole kibana. This utility make our URL's a little bit more user friendly. Please compare: URLSearchParams:  `settings?query=category%3A%28discover+or+notifications%29` url.encodeUriQuery: `settings?query=category:(discover or notifications)`::I'm not sure what you mean here. I don't see how `url.encodeUriQuery` can replace `URLSearchParams` to parse and extract a search param. `URLSearchParams` is used in 25 places across kibana.::Good point, this is not needed. See a7795bda17c9d1eb4d2c261cc37c076b22d4364f::Maybe I highlighted a wrong line but in URL I expect to see `settings?query=category:(discover or notifications)` instead of `settings?query=category%3A%28discover+or+notifications%29` Please see `src/plugins/kibana_utils/common/url/encode_uri_query.ts` to get more info about which characters we normally don't encode.::Ok see 3f12a65 ![Screen Recording 2020-12-15 at 10 39 AM](https://user-images.githubusercontent.com/19007109/102253114-8f199100-3ecc-11eb-85d9-3f7647dfb4b5.gif) ::What do you mean with this comment?  Moreover, I see that you have labelled this PR with 7.11. Are we going to backport it to 7.11? I would suggest to add it to 7.12 as it is an enhancement. ::Adding to @stratoula comment: what's the alternative?::I think `addQueryParam` would be a better name for this. ::While currently `value` is defined to be a string or undefined in TS, I think that checking explicitly if value is `undefined` is more correct. (for example if a boolean false value is passed in at some point)::This function needs unit tests::Why are we not encoding here actually?::it's ok. For `kibana` urls we encode not all characters to make our url's a little bit more user friendly. In  `src/plugins/kibana_utils/common/url/encode_uri_query.ts` file you can find more detailed description. So, to avoid of double encoding `encode:false` was added ::Yes, I think that is more foolproof. See 5c51a67::5c51a67::Yeah that's a little vague. Currently the settings page looks for a route param (`settings/:query`) to auto populate the search query. This PR changes that to use a _query_ param instead (`settings?query=<query>`). But I figured it would be better to still allow the route param for one minor in case anyone is using it. I moved and rewored this comment to make that more clear. See bff5739b9af93f8dafa391d7c08a98d73447a948 @lizozom does that answer your question too?::I really don't think this use case deserves maintaining backwards compatibility. At most, the user will lose their search param and will re-search on the page itself. I think simplifying the code would be a nicer alternative. What do you think?::",edfb662d4a28e1a1a8e659ed9dcfb4bf436c7e2b::f92ef1754c2b4bb54081cb17a47fb8f0dcbb05b9::ca31968a5363023dc8d4e99488e093448695eb02::c1b47d278cee22962c560b5e427658679f7dc38c::ae59eda441bcdc330ecfae2fd871a207f20beeaf::15420db75be7e0d82658485c0542656b8bdba330::1fe1d877aee34ed60a0934b77341cbff6e5cda7f::336f39e34898fbd3713e314b8b77130b6ad47d80::a6cfd95cbfe6ff14490fd3e25e41cdb3339e024a::c2e03cfe8ddba25173d190fb1358f038dd9fcd1d::782f62eaff73958676f539e6fb8f2211e17bf68d::fcb157844ba32a53a41422847aff125870d6131d::4fd7dfdc73aeae17a2ed370d658b88d6e59f429e::a7795bda17c9d1eb4d2c261cc37c076b22d4364f::d18dee6b233c38ffaec60df3c2c8736e0e918ce3::3f12a65de967951048f4bf3123c556ab46e57aa9::3e21486388f15dca3f44e662b97deacddf7c20d4::c5ccdb93bfdcc499d955f219cd2ee4fc34a6234b::712181509d40665bed3915bf564823f819ec723d::4aa9c27cce556a5471fa97111897e567ed409bb5::a30d244748da9e80e21d3f5691b8084ba2fbdd73::42227cc8f2c8fb168fdc287b170821f268a93044::b58d28221b5165b6499cfc00a9b336f38259f937::519f13d5feecb870b526b30363afb17f564edc20::bff5739b9af93f8dafa391d7c08a98d73447a948::5c51a678f13bbd1934ca37efcfc19f336fecd4c3::b62a639fd2512d65ea74935de7262d650a23ca5b::1ce3a78ed3150f9654d38cd4d5bb75b4374261c0::7cff8955cb1752979383db60ac5bf9d9dbe7c3e4::4000689e70f5c50200e9987014b19777a8b9e814::
https://api.github.com/repos/elastic/kibana,81754,ilm/migrate-cold-phase-to-formlib::master,0,merged,Feature:ILM::Team:Elasticsearch UI::release_note:skip::v7.11.0::v8.0.0::,"## Summary Migrated the warm phase to use the form lib. Continuation of #80012 * Big clean up of duplicated, legacy, unused components = `DataTierAllocation`, `SetInputPriority`, `Forcemerge` * Clean up of cold phase serialization/deserialization from the `services/policies` dir * Fix https://github.com/elastic/kibana/issues/81697 (backport 28dffcf2b70 to 7.10.1) * Fix https://github.com/elastic/kibana/issues/81648 (backport 7fff5a8c13d to 7.10.1) ### How to review * The majority of new code is concerned with tests and `UseField` * A lot of previously duplicated code has been cleaned up (per the points above), no need to do an in-depth review here * Read through the new cold phase tests to make sure they make sense (`__jest__/client_integration`) * Legacy tests have minimal changes just to make them work again (`__jest__/components`) ### How to test Same as https://github.com/elastic/kibana/pull/80012 ### Checklist - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios::",5808f3dfe4dc59d4998ee493046921fb44b89c71::57fddbe91c0149a738fdbf3d70df11208e86a09b::94c1b012527fb9d1c105ac08b2ae474861c52793::1b866fc308c0a502b741f7d5020e1f43561f05ab::73ec1dd917374d79905d1996385282be9f9e542b::f773809d2465f6b75773f7188487699401414bc4::f475d023e0ce1662929daffa9741af0ec7e38b10::28dffcf2b7031d76b8af3fce39368306c3c49878::5f79764a60da7827361e56d836813fc5ac4b9ea5::c7997e94628d9c3a1c76d9a45404a28715b016eb::7fff5a8c13d1f12ab54431ad4e25d5b0bf4868f9::0637d7df5c67de1890e8a098cc3680ed81e1ddc2::f57f0e24509109f1028a76462565f6855dbfdbc8::c6671c6a20b376ae2cff972ddeac1dd04290a3bb::fba588deb99236409a56912fe9341c3b6f2881fe::
https://api.github.com/repos/elastic/kibana,81420,enterprise-search-overview-setup::master,0,merged,Feature:Plugins::release_note:skip::v7.10.0::v7.11.0::,"## Summary I noticed during 7.10 testing that we were missing some setup CTA's when `enterpriseSearch.host` wasn't set in `config.yml`, per Davey's Figma screens for the setup guide. This PR adds a panel CTA link and some misc cleanup to the overview plugin. I'm hoping we still have time to backport this to 7.10, since it's fairly low-risk / low-logic but helps onboard new users to Enterprise Search. @daveyholler, feel free to comment if you see any visual issues! ## Screencaps ![setup](https://user-images.githubusercontent.com/549407/96802650-1eb82d00-13bf-11eb-9b48-14f38206e024.gif) Mobile: <img width=""400"" alt="""" src=""https://user-images.githubusercontent.com/549407/96802588-05af7c00-13bf-11eb-976a-b95fbde8168c.png""> ### Checklist - [x] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios - [x] Any UI touched in this PR is usable by keyboard only (learn more about [keyboard accessibility](https://webaim.org/techniques/keyboard/)) - [x] Any UI touched in this PR does not create any new axe failures (run axe in browser: [FF](https://addons.mozilla.org/en-US/firefox/addon/axe-devtools/), [Chrome](https://chrome.google.com/webstore/detail/axe-web-accessibility-tes/lhdoppojpmngadmnindnejefpokejbdd?hl=en-US)) - [x] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server)) - [x] This was checked for [cross-browser compatibility](https://www.elastic.co/support/matrix#matrix_browsers)::",26a051a02d0e0788038226e575ecae7dfd7073de::dc88ed095289aebbc9e18d2d9a94031c3c43a413::6a84a0c757c525375e9ab1a1c47ba73794e318af::bac45bee942ed4c699f92425411322cafec9021e::
https://api.github.com/repos/elastic/kibana,80742,remove-snapshot-from-kibana-version::master,0,merged,Team:Fleet::bug::release_note:skip::v7.10.0::v7.11.0::v8.0.0::,"Fleet uses the Kibana version to determine which version the agent can upgrade to.  If Kibana is running as a snapshot, the version will have the `-SNAPSHOT` prefix in it.  When comparing versions we should not include the `-SNAPSHOT`.::i'm wondering whether this should be upgradable. e.g you're running snapshot 8.0.0 but want to update to todays snapshot ::are you also checking the option where agent reports ``` version: 7.9.0 upgradeable: true snapshot: true ```::in the UI we only show upgradeable if the version is less than the kibana version, regardless of whether its a snapshot.   Also the agent version should never have the '-SNAPSHOT' suffix in it (it does not currently), I just put it in case that were to change.  It currently only reports the number in the metadata. If we want to make an exception where if an agent is a snapshot that the versions can be equal and still upgradeable, I would need to check the agent local metadata to see whether its a snapshot and consider it upgradeable when versions are the same.  I am fine with doing that, but not sure how common this case would be.  I'd rather add it as an enhancement in the next version.  I am not sure this makes much sense to have at the moment because if we are always using whether or not Kibana is on a snapshot as the version, we shouldn't be checking whether or not the agent is on a snapshot.  For example, agent is a snapshot but kibana is not, we check that Agent is a snapshot and let it upgrade even though its the same version as kibana, then we provide a stable version download url because kibana is not a snapshot, and so they do not even download the snapshot anyway.  Unless we want to do a check that agent and kibana are both snapshots.::Do you mean checking whether or not it is a snapshot?  It does not test for snapshot because it does not matter if its a snapshot whether or not its upgradeable (unless we decide to filter out snapshots).  But I can add the option anyway as part of the tests.  Let me know if I am misunderstanding or mistaken with the logic.::Nice one 👍 ::nitpick: I think this is doing the same not sure which approach we should favorise https://github.com/elastic/kibana/blob/master/x-pack/plugins/ingest_manager/server/services/agents/checkin/state_new_actions.ts/#L127-L137::nitpick the code looks very similar to the one for the bulk, do you think it will make sense to have a function that does that?::@nchaulet  The thing that makes me a bit paranoid is `semver.lt('7.9.0-SNAPSHOT', '7.9.0', { includePrerelease: true });` or `semver.lt('7.9.0-SNAPSHOT', '7.9.0', { includePrerelease: false });` evaluates to being `true`, and in our case because a version is a snapshot, it shouldn't be considered less than when the versions are the same but one is a snapshot.  Is that not the case in your example?::will this test work during backports? I had a [similar issue](https://github.com/elastic/kibana/pull/78798#issuecomment-701158596) where the kibana version returned in CI on 7.10 branch backport is `7.10.0-SNAPSHOT`, so this var will probably become `7.10.0-SNAPSHOT-SNAPSHOT`::",2f1197b84bf4578d2a8b14e8b11bad54ffea5d78::7a7dfb712619e4d8f9776dd5d9a59372346d8b62::e4cf53565a47b2be910a5351124c0a0be5c08f56::6f244ba1816ed3d89defd23ad732765292e950a6::a2fefd39334782917df6be80303801608ab7c625::aaf4e29ddddb05aeca992cb8720208ffd065b262::
https://api.github.com/repos/elastic/kibana,80642,fix_upgrade_bug::master,0,merged,Team: SecuritySolution::Team:SIEM::Team:Threat Hunting::bug::release_note:skip::v7.10.0::v7.11.0::v8.0.0::,"## Summary PR #68464 introduced the `isCaseOwned` configuration attribute to separate action connectors from case connectors. This attributed was added only to ServiceNow connectors. PRs #74357 and #73778 added the same attribute to Jira and IBM resilient. Because #68464 was backported for 7.9 and #74357 and #73778 for 7.10 if a user creates a Jira connector (or IBM Resilient) at 7.9 and then upgrades to 7.10 the Jira connector (or IBM Resilient) will not have the `isCaseOwned` configuration attribute. As a result, the connector will be [filtered out](https://github.com/elastic/kibana/blob/master/x-pack/plugins/case/server/routes/api/cases/configure/get_connectors.ts#L44). This PR fixes this issue. Ref: https://github.com/elastic/kibana/issues/80564 ### Checklist Delete any items that are not applicable to this PR. - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios ### For maintainers - [x] This was checked for breaking API changes and was [labeled appropriately](https://www.elastic.co/guide/en/kibana/master/contributing.html#kibana-release-notes-process) ::Will this work? it seems more readable ``` if ([SERVICENOW_ACTION_TYPE_ID, JIRA_ACTION_TYPE_ID, RESILIENT_ACTION_TYPE_ID].includes( action.actionTypeId ) { if (action.config?.isCaseOwned === true || action.config?.incidentConfiguration?.mapping) { return true; } } return false; ```::",bf8c4998d327c8fbfc2b8d659103fc4adc75b44e::7d0fbcc666bc6ea2a1e4a29c9425dc2547b73743::
https://api.github.com/repos/elastic/kibana,80545,pjhampton/add-version-to-sec-sol-telemetry-header::master,1,merged,Feature:Telemetry::release_note:fix::v7.10.0::,## Summary Related to https://github.com/elastic/kibana/pull/77200 There was a downstream change (infra-web) for the security event telemetry where the stack version number needs to be sent. The `X-Elastic-Telemetry` is no longer required. Can this change be backported into 7.10 even after FF? ### Checklist Delete any items that are not applicable to this PR. - [ ] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://www.elastic.co/guide/en/kibana/master/contributing.html#kibana-release-notes-process) ::,bd72ddd46bd4149940187c92ec213645e43a2f35::
https://api.github.com/repos/elastic/kibana,79702,revert-79506-app-search-7.10::master,1,merged,Feature:Plugins::release_note:skip::v7.11.0::,## Summary Reverts elastic/kibana#79506 - the sidebar layout was temporarily hidden for 7.10 release. We're restoring it for 7.11+ NOTE: This should not be backported to the 7.x branch until **after** the 7.10 branch is cut. ### Checklist - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios::,3a664580749d91cc43dd22dd676b39c169984b5c::cd6d9f1f5f7afe5ac06218f2d1b1693b0c63a786::
https://api.github.com/repos/elastic/kibana,77938,doc-remote-monitoring-realms::master,1,merged,Feature:Stack Monitoring::Team:Docs::docs::release_note:skip::v7.10.0::v7.9.2::v8.0.0::,"## Summary Clarify supported realms when accessing remote monitoring clusters. According to https://github.com/elastic/kibana/issues/21611, any realm which relies on local Elasticsearch tokens cannot be used to authenticate to a remote monitoring cluster from the Kibana production instance. Please let me know if we should review any wording or amend the list of supported realms. ### For maintainers - [ ] This should be backported to 6.x, 7.x, 8.x ### Preview https://kibana_77938.docs-preview.app.elstc.co/guide/en/kibana/master/monitoring-data.html::__note:__ Sorry for not mentioning it earlier, but I think we also want to mention that users will also have to use a dedicated {kib} instance if Kibana is configured to use [Token authentication provider](https://www.elastic.co/guide/en/kibana/current/kibana-authentication.html#token-authentication) (it may rely on {es} Native, Reserved, LDAP, AD or any other custom password-based realm under the hood). This provider isn't widely used right now, but it's the only option if users want to authenticate with LDAP/AD where OTP is a requirement and we eventually want to make it a default provider instead of [Basic](https://www.elastic.co/guide/en/kibana/current/kibana-authentication.html#basic-authentication) as well. Something similar to this, but feel free to rephrase: ```suggestion you log in to {kib} using SAML, Kerberos, PKI, OpenID Connect, or Token authentication provider on your production or ``` --------------------- Some context around ""realm"" vs ""authentication provider"" since it may be a bit confusing: Elasticsearch's ""realms"" map 1-to-1 to Kibana's ""authentication providers"" most of the time, but not always (e.g. Token and Basic providers can rely on either native, or LDAP, or AD ES realms). That's the main reason why we didn't use term ""realms"" in Kibana. ::Thanks for the information!  I've added the suggested text.::",5238e78875f712e056127ef4d67881c27a92ef98::2dca330ca1385a4eef0e9758a0b21afcb6d440b9::dde324b21b3404c21052dc9143d6b8c7d0435d3d::5c2a2fca24cb54648fdbcc79b080c48fc52620e5::20ae5a0361c44adade4f85ecd6f01a51fc7e111a::f5b1f12d6aa01ab5db8aee1dab281c01c538951d::
https://api.github.com/repos/elastic/kibana,77908,bump-package-versions::6.8,0,merged,chore::release_note:skip::v6.8.13::,* Bump node-fetch packages to `2.6.1` * Bump yargs-parser package (multiple versions) * Bump axios `0.18.0` -> `0.18.1`::These changes (588767c) are derived from the [NP upgrade that was never backported to 6.8](https://github.com/elastic/kibana/commit/4473f1e54710b94a3d4099eaf3a252f1524343aa#diff-b91231d41b9f65cb69cbe22f9a344f22) Edit: reverted this change in 32f2bdd because unit tests were failing. ::I would force-upgrade this to `^1.2.5` as well::Done in 51a6711.::,a44e1356cd4fa38e03bcb6433aa968ed05f20d18::08576f9458d30bd6d7831dcf9a366bad4ed2f827::22586d22c45a2b49759e851d0db7b87213ab5cd8::588767c9bdfe485bb6033d461879c4a8542bd518::32f2bdde3616dfc03877226c72bf6acd2a4e14f7::312a31cf78c70ad1a6da61c15e9ac5e85da5e2e7::e10d0480787dbf9a47dad3f67ef8a0c471b40afc::9dbe6cb8e91915bf566b7b76bbc97f3565edafb8::4f1a2320466f7035b625686efb90cac86f95f50b::3c993fdd769691d83c146aafb392a5679968ea7b::51a6711b5e6ab47c36d61bf1258ea63143040465::87e98ed94bf0de13be70e7edb448e5e0b4d5e72d::
https://api.github.com/repos/elastic/kibana,77554,status/api-settings::master,0,merged,Feature:Legacy Removal::Team:Core::release_note:skip::v7.10.0::v8.0.0::,"## Summary Closes #76416 This migrates the `/api/settings` endpoint from the legacy xpack_main plugin to the xpack_legacy plugin. This plugin can be deleted once Beats is no longer using this (in 8.0). Much of this PR is similar to #76054 ### Checklist - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios ::Be careful when backporting this, there is a difference between `master` and `7.x` in the `getEmailValueStructure` implementation (the PR does not impact this so it should be fine, but just saying)::",cc1611fd49e9d4238469b18e298118d8ee92dda0::798059916cdc530de63f9a6152c90b2303f641f7::f6bf2ee1ff89196e733c3d67594b77a7cec73042::
https://api.github.com/repos/elastic/kibana,77239,JasonStoltz/credentials-view::master,0,closed,,"## Summary This PR ports the Credentials view from the stand-alone App Search into the Kibana App Search Plug-in. ![screencapture-localhost-5601-app-enterprise-search-app-search-credentials-2020-09-15-13_49_17](https://user-images.githubusercontent.com/1427475/93246176-66152300-f75a-11ea-84c3-eaae2ea150f6.png) ### Remaining work - [x] Implement main credentials page with credentials list and api endpoint - [x] Create a stub Flyout (used for creating and editing individual credentials) to be further implemented in a follow up PR - [x] Create a **logic only** PR that includes the following: - [x] Logic - [x] API endpoints and tests - [ ] Integrate API Error Handling (https://github.com/elastic/kibana/pull/77258) - [ ] Backport specs for all remaining views and code - [ ] Handle Empty State for list - [ ] Handle Loading State - [ ] Polish UI details (@daveyholler to review) Next PR: - Flyout. - Should be simple, almost all logic is backported and tested - Will need roles to be available in AppLogic ### Changes - Converted from STUI table to EUI table - (More to come) ### Checklist Delete any items that are not applicable to this PR. - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://www.elastic.co/guide/en/kibana/master/development-documentation.html) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for [cross-browser compatibility](https://www.elastic.co/support/matrix#matrix_browsers) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://www.elastic.co/guide/en/kibana/master/contributing.html#kibana-release-notes-process) ::",4ea9903af439461b314ac5f75dc5c844b820f322::b49ed270374edfbc8e54d17dbb1975ed4cfb3479::d0546f728279dc5508cd593a274ede8ad7eec592::9827b2e7226a045bf683b0813d042c351aa15d33::cff7d46bd7bbf430a499d25b1c762ff6aff19b23::a09a8d359c8f7771f7e0962e163f599d5ed2064c::
https://api.github.com/repos/elastic/kibana,77143,apm-api-test-ml-anomalies::master,0,merged,release_note:skip::v7.10.0::,"This backport PR https://github.com/elastic/kibana/pull/76854 is failing because of ES incompatibility versions on `ml-state` index. ``` info [r.suppressed] [Caues-MacBook-Pro.local] path: /.ml-state-000001, params: {include_type_name=true, index=.ml-state-000001} │      java.lang.ClassCastException: class java.lang.Boolean cannot be cast to class java.util.Map (java.lang.Boolean and java.util.Map are in module java.base of loader 'bootstrap') │      	at org.elasticsearch.action.admin.indices.create.CreateIndexRequest.source(CreateIndexRequest.java:406) ~[elasticsearch-7.10.0-SNAPSHOT.jar:7.10.0-SNAPSHOT] ``` Since this is not an important index to test ML anomalies I created a new archive without it.::Why is this test removed?::I want to make my backport PR to pass, and it doesn't have any relation to the issue I was solving there. I will open a new PR adding it back.::Can you clarify? Not sure why we need to remove this. Do you think the new archive breaks on ES 7.9.0?::I added this test on my PR that fixed the error rate, https://github.com/elastic/kibana/pull/75528/files#diff-efea71f9ccdbac05c7ca5d5ac4a993f3R289, I did to make sure that the new `ML_8.0.0` archiver had anomalies. But now that I am going to delete this archive, I'm going to delete also the test, so I can backport the error rate fix to `7.x`.::But, this is a test that checks the service maps for anomaly data. We need it for 7.9 as well right? FWIW, I don't expect the backport from this PR to cause issues, because `.ml-state` should no longer be part of the archive. You should be able to use `apm_8.0.0` instead of `ml_8.0.0`. Am I missing something?::> this is a test that checks the service maps for anomaly data. Yeah, that's correct, but anyway I'll add the test back, change the archive, and fix it.::can you add a check for values actually being populated (ie, non-null/undefined)?::",09ec288c7507296590510f3eea4668523f0d3c40::5f60b9f182cd0f770250a29ea1f7c964b5ef42e7::4afdbd5a9ac6845391d8085592cdfd6a6a76176a::f956173c7e6a5ca4fa0e9903cd53a99da23cde74::30abf624c1cb0b25cd78fe5ea06996b7f9e463e5::4f93f5d97760796cd0a3386898bf1353061596c8::
https://api.github.com/repos/elastic/kibana,77141,reenable_file_data_visualizer_tests::7.x,0,merged,:ml::release_note:skip::test_ui_functional::v7.10.0::,"## Summary This PR re-enables the functional test suite for the file data visualizer tests, that have been temporarily disabled because of a missing ES backport. Note, that this is for 7.x/7.10 only. Closes #77069 ::",91cf1451952ea86ea0e135b26940a4c520bbb200::
https://api.github.com/repos/elastic/kibana,77002,apm-link-fix-template::master,0,merged,Team:apm::release_note:skip::v7.9.0::,"Fixes a docs link for https://github.com/elastic/apm-server/pull/4126. This PR needs to be merged and backported, then replaced after https://github.com/elastic/apm-server/pull/4126 is merged. The final link location will be`{apm-server-ref}/apm-server-template.html`.::",6a2b9d7a4b478758dda03201e9a3aeca3000a036::
https://api.github.com/repos/elastic/kibana,76799,fix-missing-entity-id::7.9,0,merged,Team:Endpoint Data Visibility::release_note:skip::v7.9.2::,"This PR is a simpler version of https://github.com/elastic/kibana/pull/76562. That PR had too many conflicts to backport from master to 7.9. This PR modifies the `entity` route to not use such a strict query. It allows documents to be found even if they don't have the `process.entity_id` field in their mapping. It will filter out the documents in code instead. ## It works <details><summary>Gif</summary> ![resolver_no_entity_id_mapping_smaller](https://user-images.githubusercontent.com/56361221/92267989-997cc580-eeaf-11ea-8bbc-afef7e84a39d.gif) </details> ## Testing To simulate the `.siem-signals` index not having the `process.entity_id` field mapped: 1. Navigate to the detections page to ensure that the index is created 2. Run these commands in the dev console ``` DELETE .siem-signals-default-000001 DELETE _template/.siem-signals-default ``` <details><summary>Create template command</summary> ``` PUT _template/.siem-signals-default { ""order"" : 0, ""version"" : 1, ""index_patterns"" : [ "".siem-signals-default-*"" ], ""settings"" : { ""index"" : { ""mapping"" : { ""total_fields"" : { ""limit"" : ""10000"" } } } }, ""mappings"" : { ""dynamic"" : false, ""properties"" : { ""container"" : { ""properties"" : { ""image"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""tag"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""runtime"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""labels"" : { ""type"" : ""object"" } } }, ""server"" : { ""properties"" : { ""nat"" : { ""properties"" : { ""port"" : { ""type"" : ""long"" }, ""ip"" : { ""type"" : ""ip"" } } }, ""address"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""top_level_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""ip"" : { ""type"" : ""ip"" }, ""mac"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""packets"" : { ""type"" : ""long"" }, ""geo"" : { ""properties"" : { ""continent_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""region_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""city_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""location"" : { ""type"" : ""geo_point"" }, ""region_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""as"" : { ""properties"" : { ""number"" : { ""type"" : ""long"" }, ""organization"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" } } } } }, ""registered_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""port"" : { ""type"" : ""long"" }, ""bytes"" : { ""type"" : ""long"" }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""user"" : { ""properties"" : { ""full_name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""email"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""group"" : { ""properties"" : { ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } } } }, ""agent"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""ephemeral_id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""log"" : { ""properties"" : { ""original"" : { ""ignore_above"" : 1024, ""index"" : false, ""type"" : ""keyword"", ""doc_values"" : false }, ""level"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""logger"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""origin"" : { ""properties"" : { ""file"" : { ""properties"" : { ""line"" : { ""type"" : ""integer"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""function"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""syslog"" : { ""type"" : ""object"", ""properties"" : { ""severity"" : { ""properties"" : { ""code"" : { ""type"" : ""long"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""priority"" : { ""type"" : ""long"" }, ""facility"" : { ""properties"" : { ""code"" : { ""type"" : ""long"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } } } }, ""destination"" : { ""properties"" : { ""nat"" : { ""properties"" : { ""port"" : { ""type"" : ""long"" }, ""ip"" : { ""type"" : ""ip"" } } }, ""address"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""top_level_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""ip"" : { ""type"" : ""ip"" }, ""mac"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""packets"" : { ""type"" : ""long"" }, ""geo"" : { ""properties"" : { ""continent_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""region_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""city_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""location"" : { ""type"" : ""geo_point"" }, ""region_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""as"" : { ""properties"" : { ""number"" : { ""type"" : ""long"" }, ""organization"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" } } } } }, ""registered_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""port"" : { ""type"" : ""long"" }, ""bytes"" : { ""type"" : ""long"" }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""user"" : { ""properties"" : { ""full_name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""email"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""group"" : { ""properties"" : { ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } } } }, ""rule"" : { ""properties"" : { ""reference"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""license"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""author"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""ruleset"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""description"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""category"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""uuid"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""source"" : { ""properties"" : { ""nat"" : { ""properties"" : { ""port"" : { ""type"" : ""long"" }, ""ip"" : { ""type"" : ""ip"" } } }, ""address"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""top_level_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""ip"" : { ""type"" : ""ip"" }, ""mac"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""packets"" : { ""type"" : ""long"" }, ""geo"" : { ""properties"" : { ""continent_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""region_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""city_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""location"" : { ""type"" : ""geo_point"" }, ""region_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""as"" : { ""properties"" : { ""number"" : { ""type"" : ""long"" }, ""organization"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" } } } } }, ""registered_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""port"" : { ""type"" : ""long"" }, ""bytes"" : { ""type"" : ""long"" }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""user"" : { ""properties"" : { ""full_name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""email"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""group"" : { ""properties"" : { ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } } } }, ""error"" : { ""properties"" : { ""code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""stack_trace"" : { ""ignore_above"" : 1024, ""index"" : false, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"", ""doc_values"" : false }, ""message"" : { ""norms"" : false, ""type"" : ""text"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""interface"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""alias"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""network"" : { ""properties"" : { ""transport"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""inner"" : { ""type"" : ""object"", ""properties"" : { ""vlan"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } }, ""packets"" : { ""type"" : ""long"" }, ""community_id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""forwarded_ip"" : { ""type"" : ""ip"" }, ""protocol"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""application"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""vlan"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""bytes"" : { ""type"" : ""long"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""iana_number"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""direction"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""cloud"" : { ""properties"" : { ""availability_zone"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""instance"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""provider"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""machine"" : { ""properties"" : { ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""region"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""account"" : { ""properties"" : { ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } }, ""geo"" : { ""properties"" : { ""continent_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""region_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""city_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""location"" : { ""type"" : ""geo_point"" }, ""region_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""observer"" : { ""properties"" : { ""product"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""os"" : { ""properties"" : { ""kernel"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""family"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""platform"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""full"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" } } }, ""ip"" : { ""type"" : ""ip"" }, ""serial_number"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""mac"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""egress"" : { ""type"" : ""object"", ""properties"" : { ""vlan"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""zone"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""interface"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""alias"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } }, ""geo"" : { ""properties"" : { ""continent_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""region_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""city_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""location"" : { ""type"" : ""geo_point"" }, ""region_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""ingress"" : { ""type"" : ""object"", ""properties"" : { ""vlan"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""zone"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""interface"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""alias"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } }, ""hostname"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""vendor"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""trace"" : { ""properties"" : { ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""file"" : { ""properties"" : { ""owner"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""extension"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""gid"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""drive_letter"" : { ""ignore_above"" : 1, ""type"" : ""keyword"" }, ""created"" : { ""type"" : ""date"" }, ""accessed"" : { ""type"" : ""date"" }, ""mtime"" : { ""type"" : ""date"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""directory"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""target_path"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""inode"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""mode"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""path"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""uid"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""code_signature"" : { ""properties"" : { ""valid"" : { ""type"" : ""boolean"" }, ""trusted"" : { ""type"" : ""boolean"" }, ""subject_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""exists"" : { ""type"" : ""boolean"" }, ""status"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""size"" : { ""type"" : ""long"" }, ""mime_type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""pe"" : { ""properties"" : { ""file_version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""product"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""description"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""company"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""original_file_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""ctime"" : { ""type"" : ""date"" }, ""attributes"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""device"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""properties"" : { ""sha1"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha256"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha512"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""md5"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""group"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""code_signature"" : { ""properties"" : { ""valid"" : { ""type"" : ""boolean"" }, ""trusted"" : { ""type"" : ""boolean"" }, ""subject_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""exists"" : { ""type"" : ""boolean"" }, ""status"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""ecs"" : { ""properties"" : { ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""related"" : { ""properties"" : { ""ip"" : { ""type"" : ""ip"" }, ""user"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""vlan"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""host"" : { ""properties"" : { ""geo"" : { ""properties"" : { ""continent_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""region_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""city_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""location"" : { ""type"" : ""geo_point"" }, ""region_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""hostname"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""os"" : { ""properties"" : { ""kernel"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""family"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""platform"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""full"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" } } }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""ip"" : { ""type"" : ""ip"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""user"" : { ""properties"" : { ""full_name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""email"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""group"" : { ""properties"" : { ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } }, ""mac"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""architecture"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""uptime"" : { ""type"" : ""long"" } } }, ""client"" : { ""properties"" : { ""nat"" : { ""properties"" : { ""port"" : { ""type"" : ""long"" }, ""ip"" : { ""type"" : ""ip"" } } }, ""address"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""top_level_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""ip"" : { ""type"" : ""ip"" }, ""mac"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""packets"" : { ""type"" : ""long"" }, ""geo"" : { ""properties"" : { ""continent_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""region_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""city_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_iso_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""country_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""location"" : { ""type"" : ""geo_point"" }, ""region_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""as"" : { ""properties"" : { ""number"" : { ""type"" : ""long"" }, ""organization"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" } } } } }, ""registered_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""port"" : { ""type"" : ""long"" }, ""bytes"" : { ""type"" : ""long"" }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""user"" : { ""properties"" : { ""full_name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""email"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""group"" : { ""properties"" : { ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } } } }, ""event"" : { ""properties"" : { ""severity"" : { ""type"" : ""long"" }, ""code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""original"" : { ""ignore_above"" : 1024, ""index"" : false, ""type"" : ""keyword"", ""doc_values"" : false }, ""risk_score"" : { ""type"" : ""float"" }, ""created"" : { ""type"" : ""date"" }, ""kind"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""timezone"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""module"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""start"" : { ""type"" : ""date"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""url"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""duration"" : { ""type"" : ""long"" }, ""reference"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sequence"" : { ""type"" : ""long"" }, ""ingested"" : { ""type"" : ""date"" }, ""provider"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""risk_score_norm"" : { ""type"" : ""float"" }, ""action"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""end"" : { ""type"" : ""date"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""category"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""dataset"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""outcome"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""signal"" : { ""properties"" : { ""parent"" : { ""properties"" : { ""depth"" : { ""type"" : ""long"" }, ""rule"" : { ""type"" : ""keyword"" }, ""index"" : { ""type"" : ""keyword"" }, ""id"" : { ""type"" : ""keyword"" }, ""type"" : { ""type"" : ""keyword"" } } }, ""rule"" : { ""properties"" : { ""note"" : { ""type"" : ""text"" }, ""references"" : { ""type"" : ""keyword"" }, ""severity_mapping"" : { ""properties"" : { ""severity"" : { ""type"" : ""keyword"" }, ""field"" : { ""type"" : ""keyword"" }, ""value"" : { ""type"" : ""keyword"" }, ""operator"" : { ""type"" : ""keyword"" } } }, ""description"" : { ""type"" : ""keyword"" }, ""created_at"" : { ""type"" : ""date"" }, ""language"" : { ""type"" : ""keyword"" }, ""threshold"" : { ""properties"" : { ""field"" : { ""type"" : ""keyword"" }, ""value"" : { ""type"" : ""float"" } } }, ""building_block_type"" : { ""type"" : ""keyword"" }, ""output_index"" : { ""type"" : ""keyword"" }, ""type"" : { ""type"" : ""keyword"" }, ""rule_name_override"" : { ""type"" : ""keyword"" }, ""enabled"" : { ""type"" : ""keyword"" }, ""updated_at"" : { ""type"" : ""date"" }, ""timestamp_override"" : { ""type"" : ""keyword"" }, ""from"" : { ""type"" : ""keyword"" }, ""id"" : { ""type"" : ""keyword"" }, ""timeline_id"" : { ""type"" : ""keyword"" }, ""max_signals"" : { ""type"" : ""keyword"" }, ""severity"" : { ""type"" : ""keyword"" }, ""risk_score"" : { ""type"" : ""float"" }, ""risk_score_mapping"" : { ""properties"" : { ""field"" : { ""type"" : ""keyword"" }, ""value"" : { ""type"" : ""keyword"" }, ""operator"" : { ""type"" : ""keyword"" } } }, ""author"" : { ""type"" : ""keyword"" }, ""query"" : { ""type"" : ""keyword"" }, ""index"" : { ""type"" : ""keyword"" }, ""filters"" : { ""type"" : ""object"" }, ""created_by"" : { ""type"" : ""keyword"" }, ""version"" : { ""type"" : ""keyword"" }, ""saved_id"" : { ""type"" : ""keyword"" }, ""tags"" : { ""type"" : ""keyword"" }, ""rule_id"" : { ""type"" : ""keyword"" }, ""license"" : { ""type"" : ""keyword"" }, ""immutable"" : { ""type"" : ""keyword"" }, ""size"" : { ""type"" : ""keyword"" }, ""timeline_title"" : { ""type"" : ""keyword"" }, ""name"" : { ""type"" : ""keyword"" }, ""updated_by"" : { ""type"" : ""keyword"" }, ""interval"" : { ""type"" : ""keyword"" }, ""false_positives"" : { ""type"" : ""keyword"" }, ""threat"" : { ""properties"" : { ""framework"" : { ""type"" : ""keyword"" }, ""technique"" : { ""properties"" : { ""reference"" : { ""type"" : ""keyword"" }, ""name"" : { ""type"" : ""keyword"" }, ""id"" : { ""type"" : ""keyword"" } } }, ""tactic"" : { ""properties"" : { ""reference"" : { ""type"" : ""keyword"" }, ""name"" : { ""type"" : ""keyword"" }, ""id"" : { ""type"" : ""keyword"" } } } } }, ""to"" : { ""type"" : ""keyword"" } } }, ""original_time"" : { ""type"" : ""date"" }, ""ancestors"" : { ""properties"" : { ""depth"" : { ""type"" : ""long"" }, ""rule"" : { ""type"" : ""keyword"" }, ""id"" : { ""type"" : ""keyword"" }, ""type"" : { ""type"" : ""keyword"" } } }, ""original_event"" : { ""properties"" : { ""severity"" : { ""type"" : ""long"" }, ""code"" : { ""type"" : ""keyword"" }, ""original"" : { ""index"" : false, ""type"" : ""keyword"", ""doc_values"" : false }, ""risk_score"" : { ""type"" : ""float"" }, ""created"" : { ""type"" : ""date"" }, ""kind"" : { ""type"" : ""keyword"" }, ""timezone"" : { ""type"" : ""keyword"" }, ""module"" : { ""type"" : ""keyword"" }, ""start"" : { ""type"" : ""date"" }, ""type"" : { ""type"" : ""keyword"" }, ""duration"" : { ""type"" : ""long"" }, ""sequence"" : { ""type"" : ""long"" }, ""provider"" : { ""type"" : ""keyword"" }, ""risk_score_norm"" : { ""type"" : ""float"" }, ""action"" : { ""type"" : ""keyword"" }, ""end"" : { ""type"" : ""date"" }, ""id"" : { ""type"" : ""keyword"" }, ""category"" : { ""type"" : ""keyword"" }, ""dataset"" : { ""type"" : ""keyword"" }, ""hash"" : { ""type"" : ""keyword"" }, ""outcome"" : { ""type"" : ""keyword"" } } }, ""threshold_count"" : { ""type"" : ""float"" }, ""status"" : { ""type"" : ""keyword"" } } }, ""user_agent"" : { ""properties"" : { ""original"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""os"" : { ""properties"" : { ""kernel"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""family"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""platform"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""full"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" } } }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""device"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""group"" : { ""properties"" : { ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""registry"" : { ""properties"" : { ""hive"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""path"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""data"" : { ""properties"" : { ""strings"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""bytes"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""value"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""key"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""process"" : { ""properties"" : { ""parent"" : { ""properties"" : { ""pgid"" : { ""type"" : ""long"" }, ""start"" : { ""type"" : ""date"" }, ""pid"" : { ""type"" : ""long"" }, ""working_directory"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""thread"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""type"" : ""long"" } } }, ""title"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""executable"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""ppid"" : { ""type"" : ""long"" }, ""uptime"" : { ""type"" : ""long"" }, ""args"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""code_signature"" : { ""properties"" : { ""valid"" : { ""type"" : ""boolean"" }, ""trusted"" : { ""type"" : ""boolean"" }, ""subject_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""exists"" : { ""type"" : ""boolean"" }, ""status"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""exit_code"" : { ""type"" : ""long"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""args_count"" : { ""type"" : ""long"" }, ""command_line"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""hash"" : { ""properties"" : { ""sha1"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha256"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha512"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""md5"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } }, ""pgid"" : { ""type"" : ""long"" }, ""start"" : { ""type"" : ""date"" }, ""pid"" : { ""type"" : ""long"" }, ""working_directory"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""thread"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""type"" : ""long"" } } }, ""title"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""executable"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""ppid"" : { ""type"" : ""long"" }, ""uptime"" : { ""type"" : ""long"" }, ""args"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""code_signature"" : { ""properties"" : { ""valid"" : { ""type"" : ""boolean"" }, ""trusted"" : { ""type"" : ""boolean"" }, ""subject_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""exists"" : { ""type"" : ""boolean"" }, ""status"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""pe"" : { ""properties"" : { ""file_version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""product"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""description"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""company"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""original_file_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""exit_code"" : { ""type"" : ""long"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""args_count"" : { ""type"" : ""long"" }, ""command_line"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""hash"" : { ""properties"" : { ""sha1"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha256"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha512"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""md5"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } }, ""package"" : { ""properties"" : { ""installed"" : { ""type"" : ""date"" }, ""build_version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""description"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""reference"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""license"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""path"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""install_scope"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""size"" : { ""type"" : ""long"" }, ""checksum"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""architecture"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""os"" : { ""properties"" : { ""kernel"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""family"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""platform"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""full"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" } } }, ""dll"" : { ""properties"" : { ""path"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""code_signature"" : { ""properties"" : { ""valid"" : { ""type"" : ""boolean"" }, ""trusted"" : { ""type"" : ""boolean"" }, ""subject_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""exists"" : { ""type"" : ""boolean"" }, ""status"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""pe"" : { ""properties"" : { ""file_version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""product"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""description"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""company"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""original_file_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""properties"" : { ""sha1"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha256"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha512"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""md5"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } }, ""dns"" : { ""properties"" : { ""op_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""resolved_ip"" : { ""type"" : ""ip"" }, ""response_code"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""question"" : { ""properties"" : { ""registered_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""top_level_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""subdomain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""class"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""answers"" : { ""type"" : ""object"", ""properties"" : { ""data"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""class"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""ttl"" : { ""type"" : ""long"" } } }, ""header_flags"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""vulnerability"" : { ""properties"" : { ""reference"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""severity"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""score"" : { ""properties"" : { ""environmental"" : { ""type"" : ""float"" }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""temporal"" : { ""type"" : ""float"" }, ""base"" : { ""type"" : ""float"" } } }, ""report_id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""scanner"" : { ""properties"" : { ""vendor"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""description"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""category"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""classification"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""enumeration"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""message"" : { ""norms"" : false, ""type"" : ""text"" }, ""url"" : { ""properties"" : { ""extension"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""original"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""scheme"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""top_level_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""query"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""path"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""fragment"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""password"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""registered_domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""port"" : { ""type"" : ""long"" }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""full"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""username"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""labels"" : { ""type"" : ""object"" }, ""tags"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""as"" : { ""properties"" : { ""number"" : { ""type"" : ""long"" }, ""organization"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" } } } } }, ""@timestamp"" : { ""type"" : ""date"" }, ""pe"" : { ""properties"" : { ""file_version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""product"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""description"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""company"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""original_file_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""service"" : { ""properties"" : { ""node"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""state"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""ephemeral_id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""type"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""organization"" : { ""properties"" : { ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""http"" : { ""properties"" : { ""request"" : { ""properties"" : { ""referrer"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""method"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""bytes"" : { ""type"" : ""long"" }, ""body"" : { ""properties"" : { ""bytes"" : { ""type"" : ""long"" }, ""content"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" } } } } }, ""response"" : { ""properties"" : { ""status_code"" : { ""type"" : ""long"" }, ""bytes"" : { ""type"" : ""long"" }, ""body"" : { ""properties"" : { ""bytes"" : { ""type"" : ""long"" }, ""content"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" } } } } }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""tls"" : { ""properties"" : { ""cipher"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""established"" : { ""type"" : ""boolean"" }, ""server"" : { ""properties"" : { ""not_after"" : { ""type"" : ""date"" }, ""ja3s"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""not_before"" : { ""type"" : ""date"" }, ""subject"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""certificate"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""certificate_chain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""properties"" : { ""sha1"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha256"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""md5"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""issuer"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""curve"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""client"" : { ""properties"" : { ""not_after"" : { ""type"" : ""date"" }, ""server_name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""not_before"" : { ""type"" : ""date"" }, ""subject"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""supported_ciphers"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""certificate"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""ja3"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""certificate_chain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""properties"" : { ""sha1"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha256"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""md5"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""issuer"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""next_protocol"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""resumed"" : { ""type"" : ""boolean"" }, ""version"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""version_protocol"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""threat"" : { ""properties"" : { ""framework"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""technique"" : { ""properties"" : { ""reference"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""tactic"" : { ""properties"" : { ""reference"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } }, ""user"" : { ""properties"" : { ""full_name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""fields"" : { ""text"" : { ""norms"" : false, ""type"" : ""text"" } }, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""email"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""hash"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""group"" : { ""properties"" : { ""domain"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""name"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } }, ""hash"" : { ""properties"" : { ""sha1"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha256"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""sha512"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" }, ""md5"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } }, ""transaction"" : { ""properties"" : { ""id"" : { ""ignore_above"" : 1024, ""type"" : ""keyword"" } } } } }, ""aliases"" : { } } } ``` </details> 3. Navigate back to the detections page to recreate the signals index with the new mapping 4. Ensure that the `.siem-signals-default-000001` index does not have `process.entity_id` in its mapping 5. Create a detections rule for an endpoint alert (e.g. `event.kind:""alert"" and agent.type:""endpoint""`) 6. Generate an endpoint alert 7. Click on the generated signal version of the alert on the signals page and ensure that analyze event renders the tree::",d65f3f6023b40e5a2ec036d35c31e9ddad8da6dc::ccceea4392f197eb28793cbbce9d75f7c1e6e3ab::36df1447a5df48ada4770e9db2fdaa23eff77bfa::
https://api.github.com/repos/elastic/kibana,76492,replace-ts-error-with-ts-expect-error::master,0,merged,Team:apm::release_note:skip::v7.10.0::,I noticed a couple of unnecessary `@ts-ignore` declarations and decided to replace them all with `@ts-expect-error` which uncovered a bunch more that could be removed. The advantage of `@ts-expect-error` is that we'll be forced to remove them as they are no longer relevant. We could also start taking advantage of them in tests. Example: is used `@ts-expect-error` in a test where I wanted to ensure that a property was both undefined from a type perspective and from a runtime value perspective: https://github.com/sqren/backport/blob/acdbebda269bfb472ffc69f4650c036765a694f6/src/options/cliArgs.test.ts#L92-L93::Apparently not anymore :D::,b591f520cd505410d6a48955698010facf5d6c15::1d5ceeea0d221293ecd1948e0a6d4810e9e9dd2a::21863956dc721da2267ecf2b16ef857963236d9d::
https://api.github.com/repos/elastic/kibana,76398,remove-file-validation-import-rule::master,0,closed,Team:SIEM::release_note:fix::review::v7.10.0::v8.0.0::,"## Summary UPDATE: splitting these changes into two PR's. The second bug reported below is only a problem in 7.10.0 which has not been released yet. I will separate out the validation bug from the changes to `readRules` so as to not touch too many things at once since we need the validation bug backported to 7.9.2. Fixes two bugs. 1. ~~io-ts validation on the rule import file object was creating performance issues. We replace this validation with kbn schema.any() since the validation on the rules occurs later in the route handler.~~ This is now fixed in https://github.com/elastic/kibana/pull/77770 2. The second bug was related to performance issues discovered in the find api from the alerts client (https://github.com/elastic/security-team/issues/190, https://github.com/elastic/kibana/issues/76811). The suggested resolution was to pass in many `ruleIds` into the alerts client find api to create a kind of ""bulk find"". This implements that suggestion and creates the necessary changes to the other routes that utilize the readRules function (which uses find under-the-hood.) Without this change I couldn't even run the functional test where we create 1000 rules, as Elasticsearch would throw a timeout error. With the ""batching"" of these ruleIds into a single find call, we can now import 1000 rules in about 11 seconds. ### Checklist Delete any items that are not applicable to this PR. - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://www.elastic.co/guide/en/kibana/master/contributing.html#kibana-release-notes-process) ::Nice tests, we had a few from a while ago I did remove that were testing 10,001 to hit the error that you cannot have 10,001 but it had slowed down so much I removed it. Which in hindsight was probably a mistake on my side. ~I wonder if you went to 10,000 here (since it's not an end to end test) if it will give that error and then we have some coverage again for it (or would it timeout?)~ Edit: I see the test below now, thank you!::This will work, I am going to assume there is no clean way to just tell it validation off but please still give me the body as is. I still approve of this as a valid way of doing this though and appreciate the comment you put in there for future maintainers.::YES THANK YOU! This is what we had before and it croaked and I just removed it. That fault is really on me. I should have investigated it more rather than remove the test. Classic programmer mistake. Trust the tests more than my own thinking kind of thing. ::👍 ::Optionally you can just use defaulted parameters like so here and at the `getSimpleRule` level and it should make things easier: ```ts /** * Given an array of rule_id strings this will return a ndjson buffer which is useful * for testing uploads. * @param ruleIds Array of strings of rule_ids * @param enabled Enables the rule on creation or not. Defaulted to false to enable it on import */ export const getSimpleRuleAsNdjson = (ruleIds: string[], enabled = true): Buffer => { const stringOfRules = ruleIds.map((ruleId) => { const simpleRule = getSimpleRule(ruleId, enabled); return JSON.stringify(simpleRule); }); return Buffer.from(stringOfRules.join('\n')); }; ``` ```ts /** * This is a typical simple rule for testing that is easy for most basic testing * @param ruleId *  @param enabled Enables the rule on creation or not. Defaulted to false to enable it on import */ export const getSimpleRule = (ruleId = 'rule-1', enabled = true): CreateRulesSchema => ({ name: 'Simple Rule Query', description: 'Simple Rule Query', enabled, risk_score: 1, rule_id: ruleId, severity: 'high', index: ['auditbeat-*'], type: 'query', query: 'user.name: root or user.name: admin', }); ```::I will have to drop this down to 50 otherwise with my tests importing those 203 rules, some of the rules fail to import because of timeouts on elasticsearch.::Ok awesome I will update this. Thanks!::adding parenthesis due to `OR` joins in KQL passed to alerts client find here -> https://github.com/elastic/kibana/pull/76398/files#diff-a8b6548cd6fceb9a3bb78453de9e2d17R44-R45::`readRules` currently takes either a single `id` which is used on the alerts client `get` api or an array of `ruleIds` which are used on the find api. I'm wondering if there is impetus for re-working the function to also accept an array of `ids` in addition to this array of `ruleIds`?::I also debated returning an array of found rules or an object of found rules where the keys are the ruleIds. Open to hearing opinions on this too.::Super nit, but I think this length check is unnecessary?::You could get rid of this `let` by doing something like: `const rule = rules?.find((aRule) => aRule.params.ruleId === ruleId);` ::You could also combine these statements to get rid of the `let` ... ::Super duper nit: would `.some()` fit in a bit better here since it explicitly returns a boolean?::Super nit: can the `if` blocks on 142 and 143 be merged?::Do we even need this check here since `.find` will return `undefined` if none found which would match up agains our `== null` or `!= null` checks?::Super nit: seems like theres some repeated logic being used in the routes, is it worth pulling out somewhere? Maybe not since they're small chunks.::That makes sense to me. Has it just not yet been the case to need to pass in an array of `ids`?::Looking through these changes it seems like returning an array makes sense. Seems like we're either a) passing in a bunch of ids and using all the rules returned or b) just accessing the first item in the array on none bulk actions. I could see the object being useful if we were having to constantly loop through the rules to find `x` rule, which I don't think is the case? Just saying that based off this PR not having looked at all the various use cases, so could be totally wrong! What tradeoffs were you considering for each?::We do need the check there since the type would be `RuleAlertType | RuleAlertType[] | null` which would cause the below checks to increase in complexity since we'd have to check if it's an array first before attempting to access etc.. But thanks @madirey for the suggestion! I will combine the two.::yeah I think we could pull out the logic for `rejecting unauthorized modification of an ML rule` into a little function. That's a good idea. Not sure if that refactor would be a good fit for a minor release like this PR but that would clean up the code nicely. I'll take a look.::I'll work on refactoring to take in an array of ids as well. I wasn't sure if that would result in me touching too much stuff in this PR. But I think it'll help to have the same interface between the two parameters.::I was just thinking since we do iterate over the array returned by the `readRules` function pretty heavily it might make things faster if each `.find` was replaced with `foundRuleObject[myruleId]` which would result in faster checking for the existence of the rule returned by this function. I think that would be cleaner.::since the bug was only related to the kql filter in the alerts client `find` api and not their `get` api I don't think it's worth also refactoring the readRules function to accept an array of `ids`. This is probably tech debt now that should be resolved in 7.10.::",4e4f286cef25de039d23b0e76c4b57f340b900ce::c60fa3223f4cf47ff525ce08ef30a50f2ec2384a::5697ee14718a2177366f8005530b890934144212::384848797ef8d870ac2d9217e8182efffb721538::65ee86d2b975eecfea8ea0a931c738548f250327::3e812b11fb01c17e86d5bf4d3a6da6fec0926373::e9c02694c6e8023ddb40a9f7f9add8d28427eae4::645115397925fc7107a96b1aaa7476fb9a16f3a7::2cf549ecebdc94c9fe261c285279b03ce2194c3a::43314716474e033a47b1e42579f5138b72b9ee95::fb3d939629062a90822d5e412fdce0493005dfd5::377b5436dfb99fa9d0cfdad668426ac23206694b::
https://api.github.com/repos/elastic/kibana,76329,issue_76319::7.9,0,merged,Team:Geo::release_note:fix::v7.9.2::,Fixes https://github.com/elastic/kibana/issues/76319 Backport of https://github.com/elastic/kibana/pull/74689 caused this regression. Back ported method used an instance method that had not been backported to 7.9 branch. This fix just uses the correct method.::,33bc593c279a2ff8a28ac96ecc8e7503e3ce8082::
https://api.github.com/repos/elastic/kibana,76063,backport-policy::master,0,merged,release_note:skip::v7.10.0::v8.0.0::,"Updates development documentation to explain our branching strategy and better reflect our backport policy. We have decided this information is best suited for public development docs so that it can be communicated to community contributors and referenced in pull requests. Preview: https://kibana_76063.docs-preview.app.elstc.co/guide/en/kibana/master/development-github.html::Really like the changes you made in this iteration. I have one suggestion, but I'm torn on whether it's an improvement or not. Throwing it out there for other's thoughts. ```suggestion * Features should not be backported to a `<major>.<minor>` branch. * Bugs backported to a `<major>.<minor>` branch must be justified based on the severity of the bug, and the confidence of the change, and the reasoning should be included in the pull request description. ```::I went back and forth and ended up with the general ""changes"" wording as I was thinking about what would not fit within the ""feature"" or ""bug"" category. But, reading through this now, I think it's good to be explicit. It also raised the idea for me; documentation changes can go into any branch at any time. I will push an update for that.::```suggestion At Elastic, all products in the stack, including Kibana, are released at the same time with the same version number. Most of these projects have the following branching strategy: ```::```suggestion As an example, let's assume that the `7.x` branch is currently a not-yet-released `7.6.0`. Once `7.6.0` has reached feature freeze, it will be branched to `7.6` and `7.x` will be updated to reflect `7.7.0`. The release of `7.6.0` and subsequent patch releases will be cut from the `7.6` branch. At any time, you can verify the current version of a branch by inspecting the `version` attribute in the `package.json` file within the Kibana source. ```::👍 - I always struggle with how much internal verbiage to leak, but ""feature freeze"" is generally understood.::I'd suggest re-iterating ""safe and appropriate"" here: ```suggestion * Bugs can be backported to a `<major>.<minor>` branch if the changes are safe and appropriate. This is a judgement call you make based on factors like the bug's severity, test coverage, your confidence in the changes, etc.  Your reasoning should be included in the pull request description. ```::",e7ffe949e881e15c3b9115c86fa360f087cae869::6d41816a7b1b9230a1f983cc4e387bcc97d76c3e::b95075252e169eead3673a7961bd9fa93a8ecb24::26b91c4358495840e7be564c14025971b93f77d3::7a399a221fb99b5eb6c6b723ff34c837b84154d8::649c2460093b1437ea7dc8560c1c9be99498e2c7::d265f488b7520a62e3deac7b95829aa9fdd7a1d0::
https://api.github.com/repos/elastic/kibana,75898,modal_error_state::master,0,merged,Feature:Detection Rules::release_note:enhancement::release_note:fix::reverted::v7.10.0::v7.9.1::v8.0.0::,"## Summary **Current behavior:** - **Scenario 1:** User is in the exceptions viewer flow, they select to edit an exception item, but the list the item is associated with has since been deleted (let's say by another user) - a user is able to open modal to edit exception item and on save, an error toaster shows but no information is given to the user to indicate the issue. - **Scenario 2:** User exports rules from space 'X' and imports into space 'Y'. The exception lists associated with their newly imported rules do not exist in space 'Y' - a user goes to add an exception item and gets a modal with an error, unable to add any exceptions. - **Workaround:** current workaround exists only via API - user would need to remove the exception list from their rule via API **New behavior:** - **Scenario 1:** User is still able to oped edit modal, but on save they see an error explaining that the associated exception list does not exist and prompts them to remove the exception list --> now they're able to add exceptions to their rule ![edit_exception](https://user-images.githubusercontent.com/10927944/91202810-57de6480-e6d0-11ea-8a29-847d23d91015.gif) - **Scenario 2:** User navigates to exceptions after importing their rule, tries to add  exception, modal pops up with error informing them that they need to remove association to missing exception list, button prompts them to do so --> now can continue adding exceptions to rule ![add_exception](https://user-images.githubusercontent.com/10927944/91202834-5f057280-e6d0-11ea-8e21-560d024fb0aa.gif) ### Checklist - [x] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [x] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for [cross-browser compatibility](https://www.elastic.co/support/matrix#matrix_browsers) ::I'm using this here to pull out the exception list details of the issue exception list. The error itself gives an `id` but no other info. Thought of reworking `useFetchOrCreateRuleExceptionList` to pull out the call it makes to the rule, but wanted to minimize changes for backport to 7.9.1.::We may be able to refactor these modals to have a common parent, since they both repeat a good amount of logic, right now just doubling logic in each file.::Ha!::",bfa549646692926a3c8bf1e178a45bfbc938a9bc::
https://api.github.com/repos/elastic/kibana,75577,uptime_fix-monitor-status-alert-filters::master,0,merged,Team:uptime::bug::release_note:fix::v7.10.0::v7.9.2::v8.0.0::,"## Summary Fixes https://github.com/elastic/kibana/issues/74069. There are circumstances where complex filter logic causes `query.bool.filter` clauses to be rendered for ES queries. In these cases, the user-provided `filter` is overwriting filters that we use. It then causes alerts to trigger for monitors that are `up`. I've added test cases to account for arrays and objects in this field. The coded that causes these tests to pass does not break any of the existing tests. EDIT: while this error was discovered in the Monitor Status alert, it will also happen for the Availability query, which is composed in a very similar way. Since it's a small change to fix it, and it will be simpler to track for backporting, we will modify that code in the same patch. ### Checklist Delete any items that are not applicable to this PR. - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://www.elastic.co/guide/en/kibana/master/development-documentation.html) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://www.elastic.co/guide/en/kibana/master/development-tests.html) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for [cross-browser compatibility](https://www.elastic.co/support/matrix#matrix_browsers) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://www.elastic.co/guide/en/kibana/master/contributing.html#kibana-release-notes-process) ::",d7d985be77962fc5e821c82b0966f21fbb0e21f8::f1062c297e417375e964b3f8d61e0ddd1b9a8228::6172d35ae3112094d0fb2cde99fddde088742015::e0098088529029045c3e8721f041adfe7a3f51ff::383e136122086dc6e84361c056a64b298dda6dba::58e627fb0981444d536bf84972f099c1d93fdb92::7e588ed6f6d16f44780b8be46689669806b06922::61e9c945822f9a213b1ed57c052a47ca6bc5af1d::f15b87792ec329edbd655c7c08b819b146013ace::78b031e6a0b48bcbe7499f24edd5f41df1df1a2b::3f9028730fe46e65adaafef0e6cb51719dd96238::3946bf7f0c5b1e050292b178085fbb0183bda95f::5e010f3c90a238075e7da0496097f39d51793657::07e69158397d3b42aa5e44a1e1ae9149bce2cbcf::08262ce8a48cf9a409c9755772d0fbfa586731d9::
https://api.github.com/repos/elastic/kibana,74166,eui-26-3-3-backport::7.9,0,merged,release_note:skip::v7.9.0::,## Summary ## [`26.3.3`](https://github.com/elastic/eui/tree/v26.3.3) **Note: this release is a backport containing changes originally made in `27.3.1`** **Bug fixes** - Fixed bug in `EuiPagination` showing wrong page count when `compressed` prop is true. ([#3827](https://github.com/elastic/eui/pull/3827))::,36510ab3cb5fa1b9fdfaf3964f0a15dd9e59f1c4::
https://api.github.com/repos/elastic/kibana,74145,nav-order::7.9,0,merged,REASSIGN from Team:Core UI::release_note:skip::v7.9.0::,"Fixes https://github.com/elastic/kibana/issues/74112 Not 100% why this was broken in the first place, but something must have gone wrong with a backport somewhere. Only merging into 7.9 because master is fine. Will circle back and [write a test for this](https://github.com/elastic/kibana/issues/74142) another day (to guarantee order of links; all tests right now just guarantee links exist). <img width=""301"" alt=""Screen Shot 2020-08-03 at 14 40 44"" src=""https://user-images.githubusercontent.com/4188087/89215853-fb839b80-d58e-11ea-9bd1-876dacc777e9.png""> ::",36bbd4312723cda9ad6cd1792d08daaeca89ec3a::
https://api.github.com/repos/elastic/kibana,73976,fix-limited-concurrency-helper::master,0,merged,Team:Fleet::release_note:skip::v7.10.0::v7.9.0::v8.0.0::,## Summary https://github.com/elastic/kibana/pull/73898 introduced a `completed$` event that is more relevant than using the `aborted$` one for limiting the concurrency in fleet. This PR change the event we listen to limit the concurrency @jfsiii Do you think we should backport this to 7.9? the `aborted$` observable is now working as we expect (completing when a request finish) so the feature is already working::,e8d428b00e64a6679a163818efdac29a54cfcdb0::
https://api.github.com/repos/elastic/kibana,73900,fix-include-building-block-button::master,0,merged,Team:SIEM::bug::release_note:skip::v7.10.0::v7.9.0::v8.0.0::,"## Summary Blocker fixes ""include building block button"" to operate when there is no data on the table. Before if you had nothing on the table then the button would not operate as it would not cause a re-render: ![button_not_working](https://user-images.githubusercontent.com/1151048/88980376-cde1de00-d280-11ea-98cf-b67ef9fe9f72.gif) After where the button now works: ![button_working](https://user-images.githubusercontent.com/1151048/88980385-d3d7bf00-d280-11ea-89e4-f806e62853ed.gif) This wasn't caught because most people have something already on the table which makes the rendering render and just work. Simple one line low level fix. ### Checklist Delete any items that are not applicable to this PR. - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios No tests for this file at the moment and we need this as a fast backport to make the release cut off. ::",8fe48914d103727e85ef7bb77ca56cf114d49230::53e2bda97f77875414727dd36e1653d6b26f3c7b::2d403f0915d8300506262e462ec1d56c907a8b60::296eaad31fd0c4873a29eaab43d7e149f2710284::442bc18bc11bddb3d10de40fe81827a702d48324::9b25bfc740bad11024ea04b3f4be007919ad9f37::97ed74c3e1b62c9a8a74af565b6c9a2a2d3e8eb5::a6659d9754bf2f836c42bb9d1d1a93cdbcf906f6::4534a5dde76d8bb19ce3e2ff09086c91e99ad13f::
https://api.github.com/repos/elastic/kibana,73808,marius-dr-patch-saml::master,1,merged,Feature:Functional Testing::release_note:skip::test::v7.10.0::v7.8.2::v7.9.0::v8.0.0::,"Changing the env variable used for SAML stack tests, due to change in the VM. Shouldn't impact anything else. Will need backport until 7.8::should we just check if the process.env.VM name includes `oidc` or `saml` ?  That way we could add/remove/change VMs without having to fix this?::",3bd94b3c41967e239963780ab1c0b5634e0b182d::3a2e6c527f1f488b24cead4e1549a59b0581fe40::0e01a1cbd6c91b7f0154b7bac34e5bd7b5183a24::c2db06a060069fe090d1c13fa096df2b9c91eafb::8906c27d7dd05e4777ba7b4c1c992006a44ee426::9bb349e964df5afbee8bd8b3c0c951d08edef7a3::
https://api.github.com/repos/elastic/kibana,73730,core/idle-socket-timeout-2::master,0,merged,enhancement::release_note:plugin_api_changes::v7.10.0::v8.0.0::,"# Summary An attempt to make https://github.com/elastic/kibana/pull/72362 work with https://github.com/elastic/kibana/pull/73103. Route definitions can now specify the `idleSocket` timeout and the `payload` timeout. ~There are still a few ""hazards"" to this interface until https://github.com/hapijs/hapi/pull/4123 merges, which is exercised by the [unit tests](https://github.com/elastic/kibana/blob/2c939ea61d580d23d5df606c8b795f9f91380558/src/core/server/http/http_server.test.ts#L1000).~ This PR works around https://github.com/hapijs/hapi/pull/4123 by specifying a socket timeout in the route definition when the payload timeout is specified, and then uses the `onPreAuth` lifecycle event of the route to set the real timeouts. # Dev Docs Route definitions can now specify the `idleSocket` timeout in addition to the `payload` timeout. Resolves https://github.com/elastic/kibana/issues/73557::It's rather confusing that `socketTimeout` is completely ignored. a couple of options: - use a higher value `Math.max(socketTimeout, payloadTimeout + 1)` - do not rely on Hapi and set `socket.setTimeout(...)` in a request interceptor manually::Let's rename `payload` --> `payloadParsing` maybe?::> It's rather confusing that socketTimeout is completely ignored If the route specifies the `timeout.idleSocket` it will [always be used](https://github.com/elastic/kibana/blob/2c939ea61d580d23d5df606c8b795f9f91380558/src/core/server/http/http_server.test.ts#L1160). Even if it leads to an error being thrown if [it's smaller than the payload timeout](https://github.com/elastic/kibana/blob/2c939ea61d580d23d5df606c8b795f9f91380558/src/core/server/http/http_server.test.ts#L1225)... > use a higher value Math.max(socketTimeout, payloadTimeout + 1) If the route definition tries to explicitly set the idle socket timeout to be smaller than the payload timeout, it feels less surprising to consumers to just throw an explicit error. > do not rely on Hapi and set socket.setTimeout(...) in a request interceptor manually I'm hopeful that this will be a temporary requirement, and https://github.com/hapijs/hapi/pull/4123 will merge shortly. The only route that I'm aware of that will need to set the idle socket timeout is Fleet, which is adjusting the timeout to be super long to support long-polling, so they won't hit us leaking HapiJS constraints.::Do you all think we should have independent tests for the payload timeout's for POST/PUT/DELETE? Or can we rely on the unit tests for this?::Per https://github.com/elastic/kibana/pull/73730#discussion_r465002635, were you suggesting that we rename `payload` to `payloadParsing`? I  don't think just calling this the `payload` timeout is super expressive, but I'm afraid of reusing ""parsing"" here as that might make users think it relates to https://github.com/elastic/kibana/blob/2c939ea61d580d23d5df606c8b795f9f91380558/src/core/server/http/router/route.ts#L110 ::It bootstraps the whole Http Service, so a test for POST request suffices IMO.::Do you know if hapijs/hapi#4123 is going to be backported to Hapi v17? ::> Do you know if hapijs/hapi#4123 is going to be backported to Hapi v17? I don't... I just asked for clarification in https://github.com/hapijs/hapi/pull/4123#issuecomment-669933397. ::Per https://github.com/hapijs/hapi/pull/4123#issuecomment-669935812 > If this lands, it will only be for v20. If you need support for an older version, you'll have to check on a commercial license - #4114.::https://github.com/elastic/kibana/pull/73730/commits/3d8901acab2c24c873b915793c9b4ce2b65bd922 works around the HapiJS constraints by setting a socket timeout on the route definition when a payload timeout is specified, and then uses the `onPreAuth` lifecycle event to set the actual socket timeout... It's not possible to do so in the `onRequest` lifecycle event because the route hasn't been looked up yet per https://hapi.dev/api/?v=19.2.0#request-lifecycle::It bothers me that the socket is undefined, but the types don't reflect that... We end up replication that with `KibanaRequest#socket`. @elastic/kibana-platform, do you all think we should consider making `KibanaRequest#socket` undefined and using that here? We have control over what we want to do when our code is faking the request for Reporting and Alerting, but we don't have control over it when using @hapi/shot, which is what `server.inject` uses....::Or we just get rid of the route info's `timeout` property entirely. It's only being used for unit tests, which give us very little certainty that this is actually working...::I agree, this is not ideal. I had to do something similar in [`9028c0a` (#71019)](https://github.com/elastic/kibana/pull/71019/commits/9028c0a3609fa2bbffd365c2d8ece7f7a09e284f). > do you all think we should consider making `KibanaRequest#socket` undefined and using that here? I'm not sure I love this idea. It will force consumers to handle a situation that is somewhat artificial and should never actually be seen in production. I'd prefer we either remove the `timeout` property or have the default values returned when no real socket is present. The latter option allows us to still have some level of unit testing (even if somewhat superficial) while being able to abstract the socket undefined testing quirk away from consumers.::+1 to `payloadParsing` not being correct and maybe confusing since this timeout does not have to do with parsing. I actually prefer the current naming, though if I had my way, we'd stop using the word `payload` and always use `body` since that is what the HTTP spec calls it.::(slightly out of scope) Do we really need this `.some` check to return `undefined` instead of an object of undefined values? I would expect Hapi is using Joi under the hood to populate the defaults here anyways.::nit: in Hapi v17+, the second argument here is the response toolkit and is usually named `h` instead of `reply`. Example: https://hapi.dev/api?v=17.9.3#-serverextevent-method-options ```suggestion method: (request, h) => { if (timeout?.idleSocket) { request.raw.req.socket.setTimeout(timeout?.idleSocket); } else if (fakeSocketTimeout) { request.raw.req.socket.setTimeout(this.config!.socketTimeout || 0); } return h.continue; ```::It would be helpful for us later if there was a comment explaining how we set the initial socket timeout to be the fake one, then override it here to ensure that it reflects the configuration. At first glance I thought this code was wrong until I really read the details of the Hapi bug. It may also be useful to add a comment that `0` means no timeout. I would also suggest using `??` instead so that we can avoid a bug if `this.config!.socketTimeout` is set to 0 and we change the default to a non-zero. In that case, using `||` would ignore the configured timeout and always use the default. Maybe overly defensive but why not? ```suggestion request.raw.req.socket.setTimeout(this.config!.socketTimeout ?? 0); ```::> have the default values returned when no real socket is present I can do so, but it doesn't feel like it's improving the current situation... The idle socket timeout is currently being returned as part of the ""route info"". Wouldn't it be rather confusing if someone wrote a test which defined a route with an explicit idle socket timeout, and then used `server.inject` as part of their test, to see the route info return the default idle socket timeout for all routes?::> It would be helpful for us later if there was a comment explaining how we set the initial socket timeout to be the fake one, then override it here to ensure that it reflects the configuration. At first glance I thought this code was wrong until I really read the details of the Hapi bug. > It may also be useful to add a comment that 0 means no timeout. :+1: > I would also suggest using ?? instead so that we can avoid a bug if this.config!.socketTimeout is set to 0 and we change the default to a non-zero. In that case, using || would ignore the configured timeout and always use the default. Maybe overly defensive but why not? Good catch! I forgot that TS added this null-ish coalescing... It's truly the future!!! ::It is... per https://github.com/elastic/kibana/pull/50783#discussion_r347274206 HapiJS doesn't let us set the `payload` option for a `GET` or `HEAD` route definition...::",6ce7f1ebae4220ce78cceebe47738791a5a48e77::4e3b566c8286e328a556cdedfd17c701b2f1a092::26541badcc71c0c32e2d16f1754b5e763daccc54::4048150c27619e50e0f939765103d70d0fed102f::8267a2cb67853b58404011529f6fbcffcbfbe047::80e62597625f41b33db09b000a3f795baa4ffce7::66cf715479233822d1842675df5d530d08ca08f8::1a26b103927941e7739a169850f7b2dea6a3979f::c03a0cee97eb6018e9d62211807151f6b40e5c37::b5b702606442e0ecc02a61f8d5d2a7134c4e8588::7429fea28688140330701007ef235e7b4bbbcbf5::4f7e9e1e20e1501d68edfd3337fbc450c05cc043::828eab88a23d76b02357125a4c752e8b0a99a801::c092cbea832ed0efc80fe5b6f0253409908d2bb8::2c939ea61d580d23d5df606c8b795f9f91380558::d300b9f65bb34218fda064b05efb418488188453::84e06fa61da7b2945f9a145003d7fd2ffe29fd41::3d8901acab2c24c873b915793c9b4ce2b65bd922::afbb7e8c3fc939ef7aa803ba5b7d900842d3486b::c4a3e153fb5e8ee72e4a9b76ead0e504c596f7ea::87634fff27a561474d6767dc2beb512bade278f9::20ff93fcc072d379a433f448124c393a9cfb6a96::0e8fd236224406dcffb8004ae18e89a76296fa54::dc430b9e42101f25ec3b88f8cdec7967de7ed8ad::31dd497099615f4529fa6b9e6f42a46443a3d5dc::25b6db0e85cbaec8097b385ffd53dd76d4423458::d4e7d2a501fdf2587de52aafa07e893dae234306::286238785e8dff1a22426ef150b29f2afa54185e::4c6a15d8a710c7157d7258eba50bd110b53e6ceb::0b0c488ab43c297a3355da20bb80566ec7ac1d0f::2bd6bb9f0a9280c8575132821dcf5fcd4dd5fb96::44ab6dc38661adfddf934809f5bd32ce9eedd535::
https://api.github.com/repos/elastic/kibana,73645,fix-download-tests::master,0,closed,v8.0.0::,"## Summary This fixes an intermittent test failure caused by a race condition between tests and the global jsdom object. These tests are already skipped on 7.9, so no need to backport there. ### Checklist for features that require explanation or tutorials - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",9e87581a0280d71a8b6352c87b651d53406d4937::
https://api.github.com/repos/elastic/kibana,73643,i18n/sync_7.9.0_translations_to_7.9::7.9,1,closed,,Integrating latest translations extracted from 7.9 branch. Skipping backports from master to target branches since the `i18n_check` might trim unused translations that are still used in different branches. Integration script is ran against each target branch separately.::,e14e6b9eb7cb2db117860907e0544ca15691aa6f::13b3e4ef53da48b8b365b68177c281adfdc8e311::
https://api.github.com/repos/elastic/kibana,73642,i18n/sync_7.9.0_translations_to_7.9::7.9,1,closed,,Integrating latest translations extracted from 7.9 branch. Skipping backports from master to target branches since the `i18n_check` might trim unused translations that are still used in different branches. Integration script is ran against each target branch separately.::,e14e6b9eb7cb2db117860907e0544ca15691aa6f::13b3e4ef53da48b8b365b68177c281adfdc8e311::
https://api.github.com/repos/elastic/kibana,73491,feature-update-fleet-instructions-73135::master,0,merged,Team:Fleet::release_note:skip::v7.10.0::v7.9.0::v8.0.0::,"## Summary Resolve #73135 Update instructions to run agent as a service. This will be backported to 7.9 as it's a prerequisite for the endpoint plugin. @hbharding I updated the instructions on windows to click on services as the script is doing it automatically. ## UI Change <img width=""874"" alt=""Screen Shot 2020-07-28 at 3 48 03 PM"" src=""https://user-images.githubusercontent.com/1336873/88713729-bf14f300-d0e9-11ea-876f-94c1067901a5.png""> ::```suggestion const macOsLinuxTarCommand = `./elastic-agent enroll ${enrollArgs} ./elastic-agent run`; const linuxDebRpmCommand = `./elastic-agent enroll ${enrollArgs} systemctl enable elastic-agent systemctl start elastic-agent`; const windowsCommand = `./elastic-agent enroll ${enrollArgs} ./install-service-elastic-agent.ps1`; ```::`macLinuxTarInstructions` <- is having to run this command after reboot specifc to mac/linux? if not, let's rename this key: ```suggestion id=""xpack.ingestManager.enrollmentInstructions.rebootInstructions"" ```::I feel that we don't need to call the release version here. @dedemorton can you suggest better text for this?::```suggestion <EuiCodeBlock fontSize=""m"" whiteSpace=""pre"" isCopyable={true} paddingSize=""m""> {windowsCommand} </EuiCodeBlock> ```::```suggestion <EuiCodeBlock fontSize=""m"" whiteSpace=""pre"" isCopyable={true} paddingSize=""m""> {linuxDebRpmCommand} </EuiCodeBlock> ```::```suggestion <EuiCodeBlock fontSize=""m"" whiteSpace=""pre"" isCopyable={true} paddingSize=""m""> {macOsLinuxTarCommand} </EuiCodeBlock> ```::yes - its specific to any of the .tar.gz usage which do not currently support persistent Agent installs.::@jen-huang I tried the whiteSpace pr and the result is not great the copy button is over the command to copy ::I can't comment to formal style guides, but it feels more readable to me here as committed.::@jen-huang @dedemorton I think it is very helpful to have *some message here about persistence support. However if we wish to change it to say 'current release' instead of '7.9' I won't argue it, except to say it would be good to get this in all the sooner to get the back-port done.  ::thanks @EricDavisX. in that case I would suggest moving this under `macOS/Linux` heading as a small and subdued color subtitle. the current placement made me think this was applicable to all instructions::@nchaulet good point, then let's add a `styled` component instead instead of having inline styles on these `<pre>` elements?::this suggestion doesn't affect how the commands are displayed in the UI. however this suggestion is probably no longer relevant due to https://github.com/elastic/kibana/pull/73491#discussion_r461818718::Sure 👍 ::I also opened an EUI issue to see if they can fix this behavior in a generic way: https://github.com/elastic/eui/issues/3815::@jen-huang Looks like you worked this out? I think it's best to describe what users need to do rather than calling this out as a known limitation in this version. ::",f0a6b02d78022f5e0c4e6baea052d3b01deef52e::357a60ba3ffb094d4ce14eb4992269a6583cd788::00ddb6cda5ca283aade914a5eec26b41f919d293::87c62168881fc70eabd314e686b115ea7b69e199::c3e20dd8b4a6c9ba18ebef06598b27fe398be268::8cd8015ab5b372fe57f439257a8fd6af9427599a::9ea77e6561cded99a8cbaff711f31810226b79aa::13d5fae0cefa90a02ee46ba87ad5b66130e8b993::52e34f8ce16d8ac225287fc771bf21896ee1c419::
https://api.github.com/repos/elastic/kibana,72892,loginPageSaml::master,0,merged,Team:QA::release_note:skip::test-stack-integration::v7.10.0::v7.9.0::v8.0.0::,"## Summary This PR adds code to support logging in to Kibana with SAML via the navigate methods in common_page. This change was part of another PR https://github.com/elastic/kibana/pull/71337 which was previously passing CI, reviewed, merged, but was reverted because it was thought it was the cause of CI breakage (but wasn't). This change wasn't reverted from the branch which is now 7.8 so we don't need to backport it there. The only tests which use the SAML login in this PR are in x-pack/test/stack_functional_integration which don't run in CI.::",45fbe445c5ad6365f5fbadc4c29010dab5725ecf::
https://api.github.com/repos/elastic/kibana,71908,stackIntegrationUpdate::master,0,merged,Team:QA::release_note:skip::v7.10.0::v7.8.1::v7.9.0::v8.0.0::,## Summary 1. in `config.stack_functional_integration_base.js` we need to use the WORKSPACE Jenkins env var in the path. 1. in `x-pack/test/stack_functional_integration/test/functional/apps/sample_data/e_commerce.js` I'm setting the parameters for the navigate method back to those that work in master.  I'll have to test this on each backport branch. ### Checklist Delete any items that are not applicable to this PR. ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::,7f4d9676f133573feabb1ce0df0191afffd72755::030e6e3e87b59ad9da0c721edb5761893d23c6d9::fae4c214935c8cf20f91d6242861e0370c29487b::fe6dd8ec6a28f447b4894021922ba25ebd0f7d42::000b85c245a527abdba2e48f9f1631ac388954b2::39f35fa68c3a07d01eb112868194698d7ce8f0ac::2fadf6161b020336a5a8f3c4ec300fcc5df8d948::462a8b35a78eebde2235d9651969455f13b69de5::d2c9e3a3b7f9895faaedf83fdbfbc03129620361::715e884215145ab252297b1399f4d4d29dce717e::d9d41c082dd6baac38309fdb9de184f67b56a580::71d403b375f0c724f87a02ffff9211d57f191bb7::93414367ff031855ea05ddd61e6d8f89e7e874c8::10883249d907fe721de72a873914fece937a0313::
https://api.github.com/repos/elastic/kibana,71631,2020-07-14-float-to-discrete::master,0,merged,Team:Docs::chore::release_note:skip::review::v7.10.0::v8.0.0::,"- Use same section title level on all source files - Change from float to discrete.::@stacey-gammon It looks like the ""[Plugin feature registration](https://github.com/elastic/kibana/blob/master/docs/developer/architecture/security/feature-registration.asciidoc)"" page is missing in the docs for 7.9. Just noticed it, the file is supposed to be included here in the Architecture » Security page, but it's [not being rendered](https://www.elastic.co/guide/en/kibana/7.9/development-security.html). I traced it back to this PR. Not sure how to fix it though?::This PR only went into 7.x (7.10) and master. Didn't backport to 7.9. Looks like it's showing up appropriately in those branches.::🤦 Sorry, I saw that this one only got backported to 7.10... I thought I checked 7.10 and master in the docs but I guess I got my wires crossed. I think it was because I was searching for ""Plugin feature registration"" and it didn't show any results for 7.x or master, but it looks like that's intentional.::",112c276df855b12b68d0df9c73e0cf80c0aee3c8::c368893e14843cf8926e579510fde88ea49b8386::43f1e1fb52a8cc8e079b6c3ffc43baf0ca9e13c3::39c39d4b760e1e99ee53555eff6c35e88c8a606a::
https://api.github.com/repos/elastic/kibana,71215,kbn-35508-new-es-client-version-checl::master,0,merged,Team:Core::release_note:skip::v7.10.0::v8.0.0::,"## Summary Part of https://github.com/elastic/kibana/issues/35508 Migrate the ES version check to use the new ES client instead of the legacy one. Note: this is targeting `7.10` and should not be merged / backported to `7.9` ### Checklist - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ::Will this problem be solved when we switch to a client generated for Kibana?https://github.com/elastic/elasticsearch-js/pull/1239::Unfortunately no, this is the 'cannot use promises with marble scheduler' issue where we return an observable or a plain value instead of a promise to be used with `rx.of`. We just did not have the TS error with the legacy client because the mock was not correctly typed.::",4fa2137438fc3d1ee3e32236f25d4966cede5202::f347e1d1f2375ce13903b3ca26377181ec1ab672::e8536843d31964231a79b68abe4e2826ce038cf2::
https://api.github.com/repos/elastic/kibana,71168,fix/use-field-mapping::master,0,merged,Feature:Aggregations::Team:AppServices::bug::release_note:skip::review::v7.9.0::v8.0.0::,"Closes https://github.com/elastic/kibana/issues/47727 Closes https://github.com/elastic/kibana/issues/64734 Closes https://github.com/elastic/kibana/issues/68883 ## Summary In https://github.com/elastic/kibana/pull/22771 we added a `format` parameter to docvalues fields in top hits aggs so that we could explicitly override `date` fields formats. For non-date fields we used `use_field_mapping` as a fallback, which ES introduced in `6.x` to ease the transition to `7.0`. In `7.0`, ES began formatting docvalues fields using the field's mapping definition by default, and added a deprecation warning for `use_field_mapping` as explained in https://github.com/elastic/kibana/issues/47727. As of `8.0`, the `use_field_mapping` option for docvalues fields [has been removed altogether](https://github.com/elastic/elasticsearch/blob/6cb17a3a71a8a9b097382b394f672aea1b8e70dc/docs/reference/migration/migrate_8_0/search.asciidoc#removal-of-use_field_mapping-for-docvalues-fields), which has been [causing errors](https://github.com/elastic/kibana/issues/68883) on `master`. This PR removes `use_field_mapping` from the top hits agg docvalues fields, which should resolve https://github.com/elastic/kibana/issues/68883. It also re-enables a skipped functional test as explained in https://github.com/elastic/kibana/issues/64734. I'll also backport this so that the [deprecation warning](https://github.com/elastic/kibana/issues/47727) can be removed as of `7.9`. This should have no effect on saved visualizations as that parameter was added to the DSL on-the-fly when the query was generated, but was never stored in saved objects. ::",f5faaf56c5b452f6dd8f880d96c385e2ac07e745::b89c67f9e5863a11994d4441dbd29a975bf17dd1::93582de334636b3561614d4f0d0883cdf53685a2::
https://api.github.com/repos/elastic/kibana,71039,revert-70423::master,0,closed,release_note:skip::v8.0.0::,That PR is an attempt to revert https://github.com/elastic/kibana/pull/70423 @XavierM reported the mentioned PR broke the translations for security solutions. As the original PR was not backported yet I believe we will be better by just revert it for now. @Bamieh @afharo could you please verify if it reverts everything as expected?::,99a27e79f374ad3139ae7ed4875d96730a04a79c::
https://api.github.com/repos/elastic/kibana,70904,stack-integration-attempt-2::master,1,merged,Team:QA::release_note:skip::test-stack-integration::v7.8.2::v7.9.0::v8.0.0::,"## Summary Migrate tests from integration-test repo. The integration-test repo's purpose is to smoke test the build artifacts of all the main products in the stack (the .deb, .rpm, .tar.gz, .zip files). Currently Vagrant and VirtualBox are used to create VMs of the OSs appropriate for installing those build artifacts.  These scripts are in the integration-test repo. After the VMs are installed and running the stack, a small number of UI tests are run against Kibana to verify we have beats data, logstash data, etc. Kibana-QA team also uses the various VMs for manual testing since manually setting up security across the full stack can be time consuming. The new tests in this PR under x-pack/test/stack_functional_integration/ are NOT executed as part of Kibana CI process.  They run from other periodic Jenkins jobs.::This really isn't a monitoring method.  It was originally put here because it showed up on the Monitoring page a long time ago.  It's really part of telemetry but since telemetry is mostly behind the scenes code I don't think there's a page object for it.::If we can, we should pull the apps in from test/functional/config.js and x-pack/test/functional/config.js otherwise backporting is going to be a pain.::This whole file should just extend the base config file with the couple of changes needed for IE. the `browser` and the `security` config parts at least.::Should we move it?::+1, this file has just 2 different lines from base config::",6153b8b0b9ed7e9d86e514824d575eeef97fce1a::931c031e3b4c6aebfa5356b0bab80622a06a23f1::4b1cff1c2fb7f6448ef61b1d706b884d4d897e64::13e627b6234a42c016095087c1e9556db595c5a6::b862d2040218d604354c200e9a3359ff55dc05b3::f095928a7815911bec944556dc63a29d87a47289::dae375121bacfd58accc7136171778867dd2725d::8d1f027249b4dd359ba89d7ccb587498cc45bcc3::9b4629f21b1bcd93d467bfba3d90a73980552ee4::
https://api.github.com/repos/elastic/kibana,70672,68492-threshold-query-optimize::master,0,merged,Feature:Alerting::Feature:Metrics UI::Team:logs-metrics-ui::release_note:fix::v7.8.2::v7.9.0::v8.0.0::,"## Summary Possible resolution to #68492 Some leftover stuff that wasn't taken out in https://github.com/elastic/kibana/pull/64937 led to the Metric Threshold alert creating filter queries that were, at best, unoptimized, and at worst, overrode the `range` and `exists` filters so that the alert would query way too much data and trigger a bucket limit. This fixes that bug, and also adds tests ensuring that the metric threshold alert will always have `range` and metric field `exists` filters. Might be worthy of backporting to a 7.8 patch release? ### Checklist - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ::",9d654f7b2ee405f6bf11cca10ac59786f24ef22a::d76559d761426726ef5697a9cd627702f786b3ee::9444b296591015168e83dde0d0f58c7f0d692d8a::
https://api.github.com/repos/elastic/kibana,69905,kbn-35508-add-new-es-client::master,0,merged,Feature:New Platform::Feature:elasticsearch::Team:Core::Team:Fleet::release_note:skip::v7.9.0::v8.0.0::,"## Summary Part of https://github.com/elastic/kibana/issues/35508 Add a new ES client wrapper based on `@elastic/elasticsearch`. - add the new `ClusterClient` and underlying classes. - add the client to the `es` service internal contract Note that the new client is currently unused in any way (even within `core`), and is not exposed on `core`'s public API. See https://github.com/elastic/kibana/issues/35508 for tasks order. Thanks to @delvedor for the help and support to our team on this one. ### Checklist - [x] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ::This is a pretty straightforward adaptation of `src/core/server/elasticsearch/elasticsearch_client_config.ts`. Notable changes: - `apiVersion` `keepAlive` `log` and `plugins` options are no longer used and were deleted from `ElasticsearchClientConfig` - `config.customHeaders` are now injected on the root of the client options instead of in each `host`/`node` - I removed the `ElasticsearchClientConfigOverrides` options in favor of a single `scoped` boolean, as this object was only used to override behavior for scoped clients.::This is the successor of `APICaller` (only added 3 methods here for the POC. I gonna have fun later copying/adapting the 2000 lines of signatures from `node_modules/@elastic/elasticsearch/index.d.ts`) Most important question is: Do we want to expose the `options?: TransportRequestOptions` to our consumers, should we only expose a subset of the possible transport options, or should our facade simply not expose this second parameter as all. As a reminder, `options` is only to override transport related options: ```ts export interface TransportRequestOptions { ignore?: number[]; requestTimeout?: number | string; maxRetries?: number; asStream?: boolean; headers?: Record<string, any>; querystring?: Record<string, any>; compression?: 'gzip'; id?: any; context?: any; warnings?: string[]; opaqueId?: string; } ``` I don't think I have enough knowledge of our usages of the ES client to decide on this one. @rudolf maybe?::Self explanatory comment: Do we want to reproduce the behavior of https://github.com/elastic/kibana/blob/bf04235dae35452061cc7ea3d86d96c19a58206c/src/core/server/elasticsearch/scoped_cluster_client.ts#L82-L97 ? Note that this depends on whether we will expose the `TransportRequestOptions` options in our `ClientFacade`::I started by creating a `class ClientWrapper implements ClientFacade`. However - You can't define nested properties in a class definition, meaning that I would have to create subtypes / subclasses for all nested call structures such as `asyncSearch` here. - Implementing the methods on a class forces to have an explicit signatures and parameter types, which is not the case when just returning an inline object. This is a **huge** difference in term of size and readability.::Doing the same thing as in the legacy client by keeping a single reference of a scoped client to avoid parsing the config on each call of `asScoped`. https://github.com/elastic/kibana/blob/56041f03ada9730e701508dbc10032b69de9f218/src/core/server/elasticsearch/cluster_client.ts#L197-L211::Replacement of what was done here https://github.com/elastic/kibana/blob/719ff259fcfc21e0b13d908227cd016157aeb19b/src/core/server/elasticsearch/elasticsearch_client_config.ts#L189-L197 Question: now that the consumer got access to `response.warnings`, Do we still want to log warnings from here as it's done in the legacy client, or not?::The `ScopedClusterClient` now have even less logic that the legacy class, and is just a container for the internal and (preconfigured with headers) scoped clients.::Another 'detail' regarding this typed/structured replacement of `APICaller` is that it may be a little difficult to migrate the `retryCall` methods used by the SO client https://github.com/elastic/kibana/blob/bf04235dae35452061cc7ea3d86d96c19a58206c/src/core/server/elasticsearch/retry_call_cluster.ts#L89-L107 Previously `APICaller` was just a method, so wrapping it to retry was rather trivial.  This this new typed interface, I'm unsure what would be the correct solution to achieve the same thing. Maybe someone have an idea? ::> only added 3 methods here for the POC. I gonna have fun later copying/adapting the 2000 lines of signatures from IIRC ll the types are auto-generated. It's error-prone to update them manually every time we bump the library version. Can we just re-use the same typings? >  Do we want to expose the options?: TransportRequestOptions I don't see why we shouldn't. We already provide `maxRetries` & `requestTimeout` in legacy client. `asStream` is not possible to implement without low level support at all.::> IIRC ll the types are auto-generated. It's error-prone to update them manually every time we bump the library version. Can we just re-use the same typings? The generated types are a mess (take a look at https://github.com/elastic/elasticsearch-js/blob/master/index.d.ts) I would love to avoid replicating what we did with `APICaller` by having an exhaustive list on our side, unfortunately (at least imho) we can't (**please, prove me wrong here**). The strongest argument would be that they define multiple signature for every methods, and we only want one (and AFAIK you can't `Pick` a single signature of a multi-sign method with TS). Else the `ClientWrapper` implementation is going to be a nightmare. If we go in that direction, we should probably just expose a (concrete) preconfigured client instead (but there are some things we definitely don't want to open to consumers I think, such as `close`, `transport` and things like that). I.E These are the signatures for `asyncSearch.delete`. We only want the first one here ```ts delete<TResponse = Record<string, any>, TContext = unknown>(params?: RequestParams.AsyncSearchDelete, options?: TransportRequestOptions): TransportRequestPromise<ApiResponse<TResponse, TContext>> delete<TResponse = Record<string, any>, TContext = unknown>(callback: callbackFn<TResponse, TContext>): TransportRequestCallback delete<TResponse = Record<string, any>, TContext = unknown>(params: RequestParams.AsyncSearchDelete, callback: callbackFn<TResponse, TContext>): TransportRequestCallback delete<TResponse = Record<string, any>, TContext = unknown>(params: RequestParams.AsyncSearchDelete, options: TransportRequestOptions, callback: callbackFn<TResponse, TContext>): TransportRequestCallback ``` Second point, if we use the client's signatures instead of replicating them, we would never be able to introduce higher level options that are consumed by our wrapper (as that was done with `CallAPIOptions` in the legacy client). I don't have any example of why we could want that, but using the lib's types directly would just close this door. Other (minor) point, all the apis are available both in camel and snake case. It would be great to avoid such pollution, and that would also avoid having to grep for two things when searching for usages (this one could be resolved with a `Pick` based type) ```ts delete_autoscaling_policy<TResponse = Record<string, any>, TContext = unknown>(params?: RequestParams.AutoscalingDeleteAutoscalingPolicy, options?: TransportRequestOptions): TransportRequestPromise<ApiResponse<TResponse, TContext>> delete_autoscaling_policy<TResponse = Record<string, any>, TContext = unknown>(callback: callbackFn<TResponse, TContext>): TransportRequestCallback delete_autoscaling_policy<TResponse = Record<string, any>, TContext = unknown>(params: RequestParams.AutoscalingDeleteAutoscalingPolicy, callback: callbackFn<TResponse, TContext>): TransportRequestCallback delete_autoscaling_policy<TResponse = Record<string, any>, TContext = unknown>(params: RequestParams.AutoscalingDeleteAutoscalingPolicy, options: TransportRequestOptions, callback: callbackFn<TResponse, TContext>): TransportRequestCallback deleteAutoscalingPolicy<TResponse = Record<string, any>, TContext = unknown>(params?: RequestParams.AutoscalingDeleteAutoscalingPolicy, options?: TransportRequestOptions): TransportRequestPromise<ApiResponse<TResponse, TContext>> deleteAutoscalingPolicy<TResponse = Record<string, any>, TContext = unknown>(callback: callbackFn<TResponse, TContext>): TransportRequestCallback deleteAutoscalingPolicy<TResponse = Record<string, any>, TContext = unknown>(params: RequestParams.AutoscalingDeleteAutoscalingPolicy, callback: callbackFn<TResponse, TContext>): TransportRequestCallback deleteAutoscalingPolicy<TResponse = Record<string, any>, TContext = unknown>(params: RequestParams.AutoscalingDeleteAutoscalingPolicy, options: TransportRequestOptions, callback: callbackFn<TResponse, TContext>): TransportRequestCallback ``` Third point, in my opinion again, in term of Dev experience, A `Pick` based type is way worse than a 'plain' explicit interface when searching for s specific thing.::> The strongest argument would be that they define multiple signature for every methods, and we only want one (and AFAIK you can't Pick a single signature of a multi-sign method with TS). > Other (minor) point, all the apis are available both in camel and snake case. It would be great to avoid such pollution, and that would also avoid having to grep for two things when searching for usages (this one could be resolved with a Pick based type That's true, the client supports all possible use-cases which we don't want to. I'm still skeptical about manual work required on every update... That's not ideal, but we can adjust [type generator](https://github.com/elastic/elasticsearch-js/blob/728254b3cedf00777c6a36a9167eba3c81b1df1f/scripts/utils/generateRequestTypes.js) script in `elasticsearch-js` to run it for our use-case.  ::hm...but the current version does this work on *every instantiation*. Doesn't it? we need to move https://github.com/elastic/kibana/pull/69905/files/175e0cb902b6235476f7d178a01d021960503a68#diff-735c304f3a374c21bed52dedab88917aR49 to this method. if we move it we can configure headers during instantiation and get rid of https://github.com/elastic/kibana/pull/69905/files/175e0cb902b6235476f7d178a01d021960503a68#diff-3e77e64e7eded50c05d8fafa865f2bd0R26 as well ::let's stick to a common naming: wrapper or client::I don't think we need this logic. It was an ad-hoc solution introduced in https://github.com/elastic/kibana/pull/34610#discussion_r272610055 And btw it's opposite to the logic in `elasticsearch-js`. I also feel it's more natural when a value from a more specific context (method call in this case) take precedence.::we can change signature to accept a function: ```typescript export function retryCallCluster(fn: () => Promise<T>): Promise<T> { return defer(fn()) .pipe( retryWhen((errors) => errors.pipe( concatMap((error, i) => iif( () => error instanceof legacyElasticsearch.errors.NoConnections, timer(1000), throwError(error) ) ) ) ) ) .toPromise(); }; } ```::that's the case when it's easier to infer type manually. as you did here or via `const wrapper: ClientFacade = { ...`::What type of `warnings`  passed via `response.warnings`? If warnings aren't request-specific we need to handle them in a centralized way. Otherwise, all consumers have to duplicate the same logic to deal with warnings.::> hm...but the current version does this work on every instantiation. Doesn't it? No it doesn't: - The scoped `Client` is created once during the `ClusterClient` construction. - The scoped `ClientWrapper` using the scoped client is instanciated once during each call to `asScoped(request)`, but uses the unique instance of the scoped `Client` (parsing the config is done during client, not wrapper, construction)::I think warnings are per-request, not something global. @rudolf can you confirm (or infirm) that?::Yea, that's the 'easier' solution I see. However multiple endpoint/API calls are used in the SO client. wrapping the whole APICaller with that allowed to be sure every call was going to be wrapper with the retry logic. If we wrap each individual methods, we would need to adapt all calls in the SO repository that were based on this retry logic. Not really seeing another option atm though.::Yes, this is a little unclear, but these are not the same type (related to https://github.com/elastic/kibana/pull/69905#discussion_r445523588) - `internalWrapper` is the actual `ClientWrapper` instance - `scopedClient` is the unique scoped client that will be used for every `scopedWrapper` in `asScoped` Not sure I did the best approach addressing the 'avoid to parse the config multiple times' though, so maybe there is an alternative to that?::> That's not ideal, but we can adjust type generator script in elasticsearch-js to run it for our use-case. Automated generation could definitely be an option if we are afraid of manual maintenance when we bump the library. So we would use (and maintain) an edited version of their script to generate our (currently named) `ClientFacade` type, to only have the camelCase and promise-based version of the APIs? And we will regenerate the type using our script every time we bump the library? I can give this a try if we want to.::> That's not ideal, but we can adjust type generator script in elasticsearch-js to run it for our use-case. Just saw that the `script` folder of `@lastic/elasticsearch` is not shipped in the npm module (neither are the source), which mean we can't use the script without checkout-ing the whole module manually. Maybe AST parsing of `node_modules/@elastic/elasticsearch/index.d.ts` is a better option then? It would at least allow to generate our type directly from the kibana checkout/repo::So, after ~~3~~ 5 hours trying both approaches of using AST (with `ts` and `ts-morph`) and hacking the library generation scripts, I kinda gave up. - hacking their scripts does not seems a viable option. That requires a local `@elastic/elasticsearch-js` checkout, which also itself has to perform a checkout of `@elastic/elastic` to build their generated API and documentation. Don't really see how we plug that easily into our repo - using TS AST is a pain, but the most problematic thing here is the overloaded signatures the `Client` API is defining. I did not found any way to properly extract a specific overload from the definition list. Also converting the concrete `class` definition to an interface is quite tedious, even using `ts-morph`. So, instead, I moved on using a (way less sexy but yet effective for our needs) plain regexp-based parsing of their `.d.ts` file in https://github.com/elastic/kibana/pull/69905/commits/24ac36b17a8bf53b299a1195f210066b3aa57ecf. The script generates both the `ClientFacade` API and its wrapper implementation. I feel like this could do the trick, wdyt?::Hello! Just a nit, `keepAlive`, `keepAliveInterval`, `keepAliveMaxFreeSockets`, and `keepAliveFreeSocketTimeout` have been removed (I'll update the breaking changes doc), now you can configure the keep-alive agent with the [`agent`](https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/client-configuration.html) option, which accepts the same parameters as the Node.js core one.::> So, after 3 5 hours trying 😅  On the whole I'm okay even to have a manual process. > So, instead, I moved on using a (way less sexy but yet effective for our needs) plain regexp-based parsing of their .d.ts file Ok, as long as it works. I didn't review the whole file. I thought that we could extend the script right in `elasticsearch-js` repo to generate a separate file for Kibana. ::The `response.warnings` is the parsed `response.headers.warnings` value, so it is request specific.::Oh thanks, totally missed the `ClientOptions.agent.keepAlive`! Will add the option back to our wrapper.::Can we emphasise it in code ? : ```js const internalClient = configureClient(config, { logger }); this.scopedClient = configureClient(config, { logger, scoped: true }); this.internalWrapper = getClientFacade(internalClient); ```::The client follows the stack versioning, meaning that using the client `7.x` in kibana `master` will cause issues. You should use the client `master` branch. Currently, we are not publishing any `8.x` version on npm, but we could do it if it does help you. [Here](https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/introduction.html#_compatibility) you can find the compatibility table of the client. If you want to install the master branch of the client: ``` npm install elastic/elasticsearch-js#master ```::Is the client released separately for **every** Stack release? Should it be another place to sync across the Stack when bumping a Kibana version? ::Yes, we do a release for every `major.minor` of the stack, patches are released as soon as it's needed.::Hum, this may be quite problematic AFAIK, as kibana master is targeting 8.0, but the current branch (7.9 atm for example) is targeting 7.X That means that we would need to have different versions (with potential differences in APIs) between our kibana master branch and our next-release branch? This feels like it could become a backport nightmare, doesn't it?::@delvedor Can you elaborate on the typical changes between versions? If newer versions only change to support or remove new or deprecated ES functionality then this shouldn't cause any problems for us that aren't already caused by ES. But if elasticsearch-js plans to make breaking changes to it's API signatures this adds an additional maintenance burden and we will have to migrate all code within the release timeframe.::The client follows semantic versioning, so there will never be a breaking change between minor or patch releases, but there might be between majors. Minor releases are always additive, in a generic minor release you will find new ES endpoints and some additional features of the client, for example, in the last 2/3 minors, client helpers have been added. If the client needs to do a breaking change, which can be dropping the support for a specific version of Node, remove/change a configuration option, or drop an API, that will happen in a major release. The only parts of the client that could have a breaking change between minors are the helpers and the type definitions, which are still experimental (even if they are stable and not expected to change unless there is a very good reason).::The client does prereleases as soon as there is a feature freeze, if you take a look at the [published versions](https://www.npmjs.com/package/@elastic/elasticsearch) on npm you will see few rcs.::TIL:  the `elastic/elasticsearch-js` package was already used in dev. As I bumped the version, I had to fix a few usages.::A downside of using this extended `TransportRequestPromise` version of promise is that you can't just use `jest.fn().mockResolvedValue`, as there is a signature mismatch between `Promise` and `TransportRequestPromise`. I was kinda forced to introduce these utility methods and to use them as `jest.fn().mockReturnValue(createApiResponse(...))` instead. (see `ensure_es_version.test.ts`) ::should it log failed requests? ::Optional: each option deserves a separate test case. Now it fails on after the first failed assertion.::`LegacyRequest` support is not needed. Or it's required anywhere? ::nit: can we use a built-in node.js method https://nodejs.org/api/querystring.html#querystring_querystring_stringify_obj_sep_eq_options? I'm not sure whether we should escape the value if a user wants to copy it.::why it's a method not a static property? ::optional: Since it will be a type passed around in the plugin code, we might need to name it accordingly: `ElasticsearchClient` or something along with it. Also, I'm not sure that implementation detail (`Facade`) should leak outside of the core.::Is it necessary to create it during `setup`? It won't be used until after `start` anyway.::I used the same signature than the legacy client. My thinking was that as it seems realistic that legacy platform is going to be removed before the legacy es client, we would just remove `LegacyRequest` from `ScopeableRequest` during the cleanup. otoh it makes sense than only the legacy cluster client can handle legacy requests, so can remove now, as you wish.::No strong technical reasons. I kept that for consistency with `IClusterClient`. Regarding `IClusterClient`I felt like is was more natural to have the same access type between `asInternalUser` and `asScoped` ```ts export interface IClusterClient { asInternalUser: ClientFacade; asScoped: (request: ScopeableRequest) => IScopedClusterClient; } clusterClient.asInternalUser.doSomething() clusterClient.asScoped(req).doSomething() // vs export interface IClusterClient { asInternalUser: () => ClientFacade; asScoped: (request: ScopeableRequest) => IScopedClusterClient; } clusterClient.asInternalUser().doSomething() clusterClient.asScoped(req).doSomething() ``` I'm fine move to readonly props instead, but we might want to change the name of the props then?::I'm not really sure of what is passed to the `response` event handler in case of failed requests and/or errors tbh @delvedor maybe you can help us here? https://github.com/elastic/kibana/blob/b265759a323a945f1d633e7b4b9d7baaf1971f8e/src/core/server/elasticsearch/client/configure_client.ts#L37-L42 are there some cases where the handler will receive both the `error` and `event` parameters? What is the correct way to log failed requests while still properly logging other kind of errors (other than `ResponseError` that are the one 'returned' for a failed request I guess)::sorry for the ping security team. File was modified then reverted, but until https://github.com/elastic/kibana/pull/70474 is merged, I can't revert this change.::Would it be simpler to change the script in the `@elastic/elasticsearch` repo to generate a separate type that only includes the Promise-based, camelCase API? Seems like it would be useful for other consumers of this npm package than just us. @delvedor wdyt?::@joshdover sorry, you were not included in the slack discussion between delvedor, restry and myself. A brief summary: Delvedor did that for us (`--kibana` flag - https://github.com/elastic/elasticsearch-js/pull/1239). However: - to avoid polluting the distributable, the script must be manually launched (the kibana version is not in the distributable), meaning that we need to have a local checkout of the library. If not blocker when developing locally, it could be for https://github.com/elastic/kibana/issues/70431 depending on the chosen solution. - it's still a type, not an interface. meaning that if we want to use methods such as `close` ONLY from within core, we still need to have an interface/facade OR expose a proxy of the Client to block access to the 'private' fields/methods - We still need to generate the mocked version of the client for our mocks. A `https://github.com/elastic/elasticsearch-js-mock` lib does exists, but it's more an integration test mock (allow to mock responses for specific endpoints) than a jest-based mock. The divergence from our other testing mocks made me go the generation way (prefer one way to do thing) Overall, imho, these generation scripts 'just works (tm)' for our need, at least for now. As it's just an implementation detail (it shouldnt impact core' public API), I'd say we could probably go with it on the initial implementation, and eventually change the approach later. ::Any error (Response, Connection, Timeout, Deserialization...) will be passed in the error argument. The `event` value will always be populated, but in case of error you can find the same information in the error object, for example: ```js client.on('response', (err, event) => { if (err) { console.error(err) console.error(err.meta) // same content as event } else { console.log(event) } }) ``` Be aware that not all errors have the same keys, as you can see [here](https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/client-usage.html#_error_handling).::super nit: no needs to store in an instance ::ok, let's not diverge the API::> Regarding IClusterClientI felt like is was more natural to have the same access type between asInternalUser and asScoped but `asScoped` requires accessing `asInternalUser` / `asCurrentUser` anyway. ```js await clusterClient.asInternalUser().ilm.deleteLifecycle(); await clusterClient.asScoped(request).asInternalUser().ilm.deleteLifecycle(); // vs await clusterClient.asInternalUser.ilm.deleteLifecycle(); await clusterClient.asScoped(request).asInternalUser.ilm.deleteLifecycle(); ```::And most likely it should be `jest.fn()` as well if plugins want to test cancellation logic. ::are we okay not to log `warnings` anymore? https://github.com/elastic/kibana/blob/0a09aee0a519f8daf42f4d27f0aa776a9e4b3051/src/core/server/elasticsearch/legacy/elasticsearch_client_config.ts#L195::Yea, as I said, no strong technical reasons. I don't mind switching to property access on this one::Flagging as resolved as it's likely the facade will just disappear. ::I took https://github.com/elastic/kibana/pull/69905#discussion_r445524499 as a 'yes', as warning are per-request and can now be handled by the consumers. but we can decide to log them on our own. I don't really have an opinion on that one.::I’m wondering if the client should log warnings more aggressively, maybe via `process.emitWarning`. This is because I think users will never proactively go and read the `warnings` key. What do you think?::`process.emitWarning` seems way too aggressive imho. Being able to get them using the event emitter API is fine.::The `client.close` method returns a promise, if you are not interested in waiting for its resolution I would at least add a `catch` handler *(even if we don't expect errors here)* to avoid unhandled rejections :)::addressed in https://github.com/elastic/kibana/pull/69905/commits/83b72462453d2dada9425ce8cb460da5282cc059::missed that it was async. Will address.::https://github.com/elastic/kibana/pull/69905/commits/a764b10db4343b0ac799eb4260aa7dd4baccf390::nit: we could extract it in a separate test case: do not filter `customHeaders`::```suggestion export class ClusterClient implements ICustomClusterClient { ```::the first test for mock 😅 ::optional: could you add a test case that query string is properly encoded? ```js querystring: { city: 'Münich' }, ```::Any reason for this capitalization? I don't believe we capitalize Elasticsearch that way elsewhere.::It's covered in the `includes the customHeaders from the config when creating the child client` test. Will rename for something more explicit::Renamed to `ElasticsearchClient`::",10f0846c225c6403b1737815fd94dff9c6ca0bba::e923ce5e6b66ac3d0b9c2d698213ce457920bc19::175e0cb902b6235476f7d178a01d021960503a68::f56a506d84f1b201f6df1a4a50da7c08e3c88346::24ac36b17a8bf53b299a1195f210066b3aa57ecf::024f3dfd3d719f0692da260ab9c63298e8df871c::cfa547a9c38205204bb1cf7c79f94d2f935e278c::eecd780a3acd05b6cac0baa66b32390c2e266ef7::8c6c9fc93898b168dcc574f9689f5c66d4246dee::c7a2cf11496ef87a577768973969f9147647af2e::193fecc80d51e917c8cedb163d09e307e14ed5ad::b8935d7c0929e7c0f489ab26a649c1ad71b68ece::f268e63bb741f00348ae6aad549a40cde4fdef05::73f68b8f1ff65e57aab5310148e6d18054350d77::2c5a48910d5b3b22185ce9d78832c4625aace79e::c7ae6aad658db4e3760a1bd0942a7dc6598000d2::93d05ee8b356c57540ea5657677c9821ee8abb27::41564116b7b82dada0db378ec30638c5afbe44d7::5a3fd9cea180519bff3b082743fc5602c8895a5d::71a27bb8864428e652537fe48d58fe36540577ed::e48f3ad6a485e4315ae5b00da1e88b20068e278c::bdacda34f840757fa4da6b8663a0b83b20464acd::152b6dcea3752f7161e618c06a9bc8989b64f96c::b265759a323a945f1d633e7b4b9d7baaf1971f8e::9e356e8e8a4ad7066d3e0704a948b4942cd036ec::353253fa54e75ab91e2f035650d58da892b8ad7a::7e49f650668f3bc55ffbcf390baa69bdf1bcab11::bda204eef929700d5307283f64f1d1f284c85ffa::28b8cfc3c687cf883620b2bc85273e4b18849d31::8cd1ed2269fafb6f68036d10675dcb40747d06d5::205c10050db6edf2cd3d5ad12d784ea38a1c78e1::7819166c1007eb33ffd45abd8ee5ab70605a589c::d1cdb0a5980da8c59753e9a78a2fcabd46745ff8::80bfc97920d9627aaace3bbf8479d690f3da60a7::bf18e61b219e4ceeaec1600ac09c0ad89479ecd9::6c4ff93aa5440207dfde47b41314114be55c7185::8a397d006ef462238792071c1d555566ce39ecd1::533212b8ca5232e23e12756e52c577c0482e9fee::0a09aee0a519f8daf42f4d27f0aa776a9e4b3051::1a68ea19d8b719760ec721003b64bfc7b1259a7a::f956fb4450fdcb914d67d7976c67b5eb1fcfd500::56db6c43c7105078491240171438a1c707c4d732::d6f1c9dcdb63b50842072df070fbd525aa3d42c7::83b72462453d2dada9425ce8cb460da5282cc059::a764b10db4343b0ac799eb4260aa7dd4baccf390::9d272baa0fd3b3d86c6d9865ef667a3ea3d6af16::3f1d9bdfa1792792a19ed3843ae60990ea5a5733::88ae35020d33c6eeb04951877678a472340d2716::cb242e7af9a007748dbf02210a7477bfe2044a87::413a97d222b6a4a0c85d66ad2edb3c113cb920fd::c0d7f3a331bff91d94089485393e75bbc82a7843::022e4a28a86f631156616b614e469771bb8d97c3::0dc69b4d4c2c5996d968940371ce712bc12329b6::5acfe964ec4a909acffb29618b066f8991ae6fd8::f05996429184f2e2d2f3de442a4552bd7687e305::
https://api.github.com/repos/elastic/kibana,69505,do-not-await-in-im-setup::master,0,merged,Team:Fleet::release_note:skip::v7.9.0::v8.0.0::,"Picking up https://github.com/elastic/kibana/pull/69089 ## Problem The Ingest Manager public `start` method is causing timeout errors for people not even directly using the plugin https://github.com/elastic/kibana/issues/66125 ## Root cause Doing an `await` in the `start` lifecycle method blocks all of Kibana from progressing until it's complete ## Proposed solution 1. Do not `await` in the public `start` lifecycle method. Fixes https://github.com/elastic/kibana/issues/66125 PR based on https://github.com/elastic/kibana/issues/66125#issuecomment-640790837 & https://github.com/elastic/kibana/issues/66125#issuecomment-642218799 2. Change `success` to be Promise ```diff -  success: boolean; -  error?: { -    message: string; -  }; +  success: Promise<boolean>; ``` ## Why this way re (1): while great gains were made in setup time, error reports are still coming. Dropping the `await` prevents the possibility of any timeout errors. It's also the Platform team's preference. re (2): the Ingest Manager plugin currently returns 1. one property to express if the plugin successfully initialized `success: boolean` 1. one property which gives details if an error occurred `error?` We can avoid defining our own by using things already available on the `Promise` interface 1. `.then` for the success case 1. `.catch` for the error case which includes and an `Error` instance I think we should limit the scope of the changes we make in the PRs backported to 7.8. This PR gives the most impact (makes it _impossible_ to block/fail Kibana if the setup takes too long) with the least change. The change to the return value is technically a breaking change for our consumers but any client side code that depended on setup completing, can now `await` and still get that guarantee. I believe this is the change required: ```diff -    if (!ingestManager.success) { -      if (ingestManager.error) { -        displayToastWithModal(ingestManager.error.message); -      } else { -        displayToast(); -      } -    } +    ingestManager.success +      .catch((error: Error) => displayToastWithModal(error.message)); ``` ## This is only client-side, what about the server Any [server side timing issues](https://github.com/elastic/kibana/issues/66125#issuecomment-642218799) are present in master already and should be discussed and addressed in follow up PRs. I did some exploration of that in https://github.com/elastic/kibana/pull/68631 ### Checklist Delete any items that are not applicable to this PR. - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::@jonathan-buttner re: https://github.com/elastic/kibana/pull/69089#issuecomment-644769499::I found the naming a little confusing, what do you thing to have something like `initializationPromise` ? ::```suggestion throw new Error(permissionsResponse?.error || 'Unknown permissions error'); ```::Thanks for the reminder. I agree that the name could be improved. Perhaps we could use the `isInitialized` or `isReady` names we use in the setup responses[1]? I was initially trying to make smallest external change but we already made it a breaking change by making it a promise so I guess we might as well name it what we want. [1] I should file a ticket to make these consistent::We can actually remove this because we already doing it here: https://github.com/elastic/kibana/blob/master/x-pack/test/api_integration/apis/endpoint/index.ts#L16 before any of the tests run.::Thanks!::👍  nice::Good catch. Pretty sure this is left over from me hacking around. I'll remove it::```suggestion expect(body.policy_response.endpoint.policy).to.not.be(undefined); ```::",e30cfb254281648a13a7bcec1e823d35e6fd99a1::911ded95d515481c696e516cd1f03ec6bca67af6::8e8f42f84bb5248016d99332ed68fa172a1cfd7a::afe7767813c715539bf222baec923f3099021181::f594be3e128f9b6126a7b10fe51372139fbb59e4::2c29cd76fa97d71716621b89d60c77a06bdc4ab1::e61e7ecd23400adadd2b6cbb478ace497c362680::ab0217ed51abc0b7011db04f23578567e93ef908::e10df84f2e905de37423c8f803b0abcf697a9d56::214ef3dc0f03034b55a5e6d00782eadb51128238::b47c3b7c42a87c875226985aba8933eb887c1f20::87e293c5a0c65025cc89f168ee5b396229aaf845::e2d705c96e32ae78a6dbc5f7560a3b8c75cbd999::a80d63d567f56119e784afc9c23ed6c2cd0727a3::a23d5ca671ada852de3bf26b182c025452e27b9e::8da8797b0adacd3ddb5c3e3e520d2eca75d0a9bc::a26c8cfa8b22392814399346bd66ba786e5797c3::608f97e30a7305539151d8d3a2ecae149ead0de4::
https://api.github.com/repos/elastic/kibana,69464,fix-backwards-compatible-data-bug::master,0,merged,Team:SIEM::release_note:fix::v7.9.0::v8.0.0::,"## Summary * https://github.com/elastic/kibana/issues/69463 * See here for manual backport to 7.8: https://github.com/elastic/kibana/pull/69434 This fixes a bug where if you import rules and set your overwrite to `true` multiple times in a row within 7.7 you can end up with a lists array. When upgrading to 7.8, we change the name of `lists` to `exceptions_lists` and suddenly when you enable/disable a rule you can get the following error below: ![image](https://user-images.githubusercontent.com/1151048/84945824-fa60e280-b0a4-11ea-8e05-bffdec2e4765.png) The fix is to allow the lists array still if it is present within saved objects to avoid seeing this error screen and being tolerant. We also fix the area of code that is causing the data bug so it cannot happen again with `exceptions_list` which is what the name of lists was renamed to causing this problem. Note that this has unit tests and I also manually tested this by intentionally injecting a `lists` and `exceptions_lists` and using the UI to verify there wasn't another validation spot that needed to be relaxed to allow for the data. ### Checklist - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ::NOTE: Ensure that this is exactly the same as here from 7.7 to be tolerant of the bug. https://github.com/elastic/kibana/blob/7.7/x-pack/legacy/plugins/siem/server/lib/detection_engine/signals/signal_params_schema.ts#L42::NOTE: Ensure that this is exactly the same as here from 7.8 to be tolerant of the bug when we move forward to 7.9. https://github.com/elastic/kibana/blob/7.8/x-pack/plugins/siem/server/lib/detection_engine/signals/signal_params_schema.ts#L42::Is this now a value we'll need to support indefinitely? Or a workaround until lists are in prod?::It is a value we need to support until we write migration hooks within the saved objects (which we haven't done just yet).::",4dec9ec4d905e797536299916ea9bed57920fbd2::df18965b0774394d268734520d7c329384296f3e::9e58a65a778a03c5ccb09401220d2c652ea27c7b::
https://api.github.com/repos/elastic/kibana,69306,move-usage-collection-to-core::master,0,closed,Feature:Telemetry::Team:Core::Team:KibanaTelemetry::v8.0.0::,"## Summary Related to #70779. This is WIP to move the current UsageCollection plugin and convert it into a Core service. ### TODOs: - [x] Server side - [X] Most codebase moved (see public side question) - [X] Keep plugin as a wrapper so we don't need to migrate all plugins at once. - [x] Be more explicit with exported APIs and typings - [x] Documentation - [ ] Public side - [ ] Is it OK to move `ui_metric` and `application_usage` logics to core? There is a tight dependency to the `@kbn/analytics` reporter. We might want to revisit it to keep it split in the plugins 👀 - [ ] Change CODEOWNERS file (on a separate PR to make backports easier) - [ ] Add more tests (can be done on a separate PR for progress). ### Checklist Delete any items that are not applicable to this PR. - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::Renaming all interfaces when exposing them publicly to match the prefix-pattern in core.::Doing this because the config `""usageCollection""` is already registered by core. We are extending only the config re `uiMetric` for the public-end code::There is the risk that disabling `uiMetric`, we'll disable this entire plugin (the core service would still be there though)?::Using `UsageCollectionPluginSetup` because it has the `@deprecated` flag, encouraging to move to the core service.::",46f799dbaff765c5d25bd50a1b4f2b7bc1ca1a14::a0f4a60d1f67a7fe4aeca5cb40dee30357ceba0a::3a1952526204f00c442c50a7a9a307653c569394::08dd2677b9a8b6033a23f030b2212bcf12b3c067::82d0fdb3c79909b83d6d73322c26938ed4e4b572::99966252f1e4d3129dd46091ff8b001b2e5342a1::bb7449823b423bf9a7aedf9af9526a97a3bf343a::af9ed68efafbdd4bc92442cf5f436dca9def5b73::15ec4a99207036d8232cb84d8a22223ba2af9c2d::
https://api.github.com/repos/elastic/kibana,69303,7.8-fix-sn-and-jira::7.8,0,merged,Feature:Alerting::Team:Alerting Services::release_note:fix::v7.8.1::,"⚠️ This is a special PR that merges into `7.8` ONLY ⚠️ This PR is a ""backport"" of a small portion of #65060. Since the code doesn't need to change in `master` nor `7.x` branches, I need to move [some of that code](https://github.com/elastic/kibana/pull/65060/files#diff-2a49703eafd83510d6b807a4cfac9575) within `7.8` in order to hide ServiceNow and Jira from the create alert flyout.::",d9c22b9440f7fcd9443d9e06d2a8f110d299245c::
https://api.github.com/repos/elastic/kibana,69241,fix/bundle-refs/resolve-file-imports-too::master,0,merged,Team:Operations::release_note:skip::v7.9.0::v8.0.0::,"In #68986 I added a custom webpack plugin to the `@kbn/optimizer` that pre-resolves the imports in files to determine if they're pointing to a file in another plugin. When I implemented the lightweight resolution logic used in that plugin I didn't take imports pointing directly to files into account... This is mostly because cross plugin imports by and large only point to directories (in master only one import points _directly_ to a file in a different plugin) and there wasn't any obvious need to implement file resolution so I overlooked it. This is not the case in 7.x and 7.8 where a handful of plugins are importing specific files from other plugins, so when preparing backports of #68986 it became more obvious that this is necessary. I've also added a filter that skips the work BundleRefPlugin does whenever a relative import is determined to be inside of the context dir of the bundle being built. Finally, this PR clears the resolve cache every time webpack starts a compilation.::",e0f26bb9f27e9339a5ea4e3c1a3aa272f5113b61::40ad2525c4df8bb3c6ba5cd0dc3a8cec0a441fa5::dc3df6b4d6f6bc157220d52f0e03314b972cd6b9::345724f728674813d2cca30c3df0006ea815888b::25c85486156a2b6176f4956798fde08d5954b236::
https://api.github.com/repos/elastic/kibana,69089,no-await-setup-return-promise::master,0,closed,Team:Fleet::release_note:skip::v7.9.0::v8.0.0::,"## ⚠️ Sorry for the notification spam ⚠️ Moved to https://github.com/elastic/kibana/pull/69505 ## Problem The Ingest Manager public `start` method is causing timeout errors for people not even directly using the plugin https://github.com/elastic/kibana/issues/66125 ## Root cause Doing an `await` in the `start` lifecycle method blocks all of Kibana from progressing until it's complete ## Proposed solution 1. Do not `await` in the public `start` lifecycle method. Fixes https://github.com/elastic/kibana/issues/66125 PR based on https://github.com/elastic/kibana/issues/66125#issuecomment-640790837 & https://github.com/elastic/kibana/issues/66125#issuecomment-642218799 2. Change `success` to be Promise ```diff -  success: boolean; -  error?: { -    message: string; -  }; +  success: Promise<boolean>; ``` ## Why this way re (1): while great gains were made in setup time, error reports are still coming. Dropping the `await` prevents the possibility of any timeout errors. It's also the Platform team's preference. re (2): the Ingest Manager plugin currently returns 1. one property to express if the plugin successfully initialized `success: boolean` 1. one property which gives details if an error occurred `error?` We can avoid defining our own by using things already available on the `Promise` interface 1. `.then` for the success case 1. `.catch` for the error case which includes and an `Error` instance I think we should limit the scope of the changes we make in the PRs backported to 7.8. This PR gives the most impact (makes it _impossible_ to block/fail Kibana if the setup takes too long) with the least change. The change to the return value is technically a breaking change for our consumers but any client side code that depended on setup completing, can now `await` and still get that guarantee. I believe this is the change required: ```diff -    if (!ingestManager.success) { -      if (ingestManager.error) { -        displayToastWithModal(ingestManager.error.message); -      } else { -        displayToast(); -      } -    } +    ingestManager.success +      .catch((error: Error) => displayToastWithModal(error.message)); ``` ## This is only client-side, what about the server Any [server side timing issues](https://github.com/elastic/kibana/issues/66125#issuecomment-642218799) are present in master already and should be discussed and addressed in follow up PRs. I did some exploration of that in https://github.com/elastic/kibana/pull/68631 ### Checklist Delete any items that are not applicable to this PR. - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::@rudolf Since this no longer `await`s, would it be ok to move it to `setup`? Any reason from a Platform POV not t start the async/http work as early as possible if it doesn't block?::is this `.catch()` needed? Does not seem to really do anything other than to re-rewrap the error in a reject::This does not look right given the prior implementation. Success should do nothing - so no `.then()` block. Only the `.catch()` should process the error, and based on the new implementation where I think we always get an `Error` object, I think that perhaps the `displayToast()` callback is no longer needed.::Yes, I see the flaw now. Thanks for the :eyes:::",e30cfb254281648a13a7bcec1e823d35e6fd99a1::911ded95d515481c696e516cd1f03ec6bca67af6::8e8f42f84bb5248016d99332ed68fa172a1cfd7a::4ce3702a8477efb1dff5e7e3748fe5b46ecdc36b::437f9f6041e067ecdc77f3f6cd622f52ef51a719::efe6ba49033615e83966ed08d5a7199953d08d42::0c34bd7e67454b4fa577da63f87b456b1188470d::afe7767813c715539bf222baec923f3099021181::533046fd9ce73cddd1677a5179d1b325b9e15a09::99a868a1259239896bfa0b9b5e16188bf36f0929::4e864268ce7fb6feda1e9f0cae88597b7b75efc8::46ed40ec075e397a0600d735e114c56c298093d4::2a9fc236738bd50fe82f9f3a875929b25e13c1fb::80ab0d9792fecb775a93b319a15c12a663134e50::3d0552e03ce1ff2112a7ca50555575c2cd828c1b::fcfc0b105070cebe90c1e78639fa403e6e70ac06::e6cf4b36d3870b4b289e6ab0eb64650950b8b15d::eef8dc76534eaaa6239b6fdfacaee646ebf3fefa::52c8e9628090c47e29622a096a069065770e1542::570be32b14c979dacc079e4c0526a5c334343089::1b9ba5d0b0cf97bd5e129f4eaeb3f3622913a26b::c09b2287cc040d1f98ba5da215b87a4693c89da8::169cc248e8c2a3cdc9a2ea09c1157b8c842cc351::b57149ccb2dd724cbfd08914378a16ac74f80b75::9ddaebc3710c13cbf282a6d72fdd79709da9d995::0ce29706b2ba10151be17ee4c9edeb14f3c45d8c::e3ba5e5e1f25b4392a7bf1337d74445bccd7bf55::dc5f448076fe542e9e54fe48a530f034d507f758::4d02eab0f3b42cc15e30fe09a9d2f83918fa11a4::a7900d0e994611ca751e2e60bd5708ffc5b04e34::07241d1af80cceef8647f87828e7a06ec51f1bce::b540ada03670adfc6c0f49b96e2d2659513df1ca::ecd3c9b517c0e8db69c9199f160ae52fb8a9f0f0::4f5e279d75bfa04aed56f5870094bb8293c82e64::646a212b7bf550d2a557dc7c3f74e6cc0c46d559::f7398f086b354e509998eabdb5468f15ec2b67ab::41e801f830f4ad7776d9e42187e514194c381ae5::7e2ab7fb823577fa05e6ae27fda7a2c4cb00c26f::cc1758dd96c0152ecaf7bb2a8cd690536e34f6cf::d110e65624605cba404b4365df602693025b32b6::7e328417ab891cce72df2b25bfa56b4119a2de3f::88eed9819c9888986f148d742377a8a92ecefd8e::833ce082591f99baf740292edb298598130100a7::721125772f32d4780409000516e5eddbf856069d::c98845c7c78965edc882d60292e61f89f8ff95c2::d12208c7ea9513529ea1aff42d154db89e3573ff::83370a17b95c61c5c7212c980f000975619d73a5::63506834f287c39a36413dfcf544d5222735b5e4::7a60f18ef9375206e0bb24ddeb43a23cdd8be4d7::dd1f64df55b5c92f65f54cdc58415f9f87a55e13::7511a6eeb66391aec36dcdfd004c8b058270357e::2ebe35ff15e9eebd4bbd7e3d82c99fa95db7749d::798c520985a0521575dff1679f70ef4872c3184b::7beabd2bef309098279492a584098e0160e6ac40::461d44d8a49dcc5f1e7453d57555432b5bc8481e::b42defa37e5d1292fa067f80fceadb298c2d8bae::f43d51d41bd9cf347db8064297b9fe7ebd347801::a9d73e868395c7d29ee5b96a38756b758ae6e802::9c881447270926c5fb63153c392871cd22eb908a::fb97d91789faf2c7fe9771a832876e4c38020492::62f25506d384fc0c430486fa97c9a5c98e597264::3de93501c6df2007312e22dc872135e039f1ff0d::d5785a0d6d91f6dd110ea2d2cb69e6c3bfded427::9f7620b84dd0707666b6c2d20e3c98b1d0d8eb03::efbb4ccc31f314f51b2f10663a5635cbed78e148::db1df7bed03f624dca78630830b9bb0395666b20::ade4c8dded247e4d29b9eb5b9baa934e214aa676::5c327a12ddce4d902a583e21fc1d40f411e64641::885a42ca15f0ac954d2d5fef749892939c5894e6::beb0da1d58c609c86565ff23e8e541a056c39eb9::8b0efca3b20810085e02059d8b7a1c03df0386c5::8bc8837e347c7db923b0d442dda220ae412c670a::5c87a27c4dfda3a214e4f76c941d218475f08255::e03f2428b1914634774c34e683205b5ef3fb891b::ca9a1626a280f5e0ee783a3c92983d31b288a2b0::a34a3a7e090b371e625a64e2d533d3c4dc8f38fc::effd504d0b807f1579fcf7547832edd58a282fd6::3ee0bf21324841a80e09cb3606b8f9f4887b550d::8a6aab33bd2aa7fed4ebfbe8806a00ef8eb8af19::ab1270e566f878dfc5e9ae226fe42cccb1ff92d6::47e50f81029bf66d26b7976e331cc2dab3396efc::3ea717a7b32b38f10e8a701d99100e1e3a7bbf26::55260dde18c84808a769ec068cf07cea04dfcf74::f8ba9290dd5aa9dbf7b981204b8b6966b6085989::f9f1158e1f4dec2b125e936b61704a2dee122f78::208b580061e511e914866c1f26566197e80155c1::e04624ace097d35e08fcf2a3d0ca5a5d627b35ed::abdc0f17a9c81de4b346c13eecce4167d1140587::0ed75978222aa63f5761db53cc57fd5a8a2f7372::b8e6b54428f479b2630faf00641827c9604af07a::1cef65e56fd37452b4ab729d21bfac6779f6daca::a077fdea32ee63668ac545e28ad8db1fef587308::bb03b75416bb04900b64d6e1d4da321fb410e7d0::052dfe9f9a7132a9a13b709e862435065a44420e::1dd5db2cf09c91a9888b8364bc35285e21085986::f594be3e128f9b6126a7b10fe51372139fbb59e4::2c29cd76fa97d71716621b89d60c77a06bdc4ab1::e61e7ecd23400adadd2b6cbb478ace497c362680::ab0217ed51abc0b7011db04f23578567e93ef908::e10df84f2e905de37423c8f803b0abcf697a9d56::
https://api.github.com/repos/elastic/kibana,69033,move-metrics-app-content::master,0,merged,release_note:skip::v7.8.0::,## Summary This PR is to move the Metrics app content from the [Kibana reference doc](https://www.elastic.co/guide/en/kibana/master/xpack-infra.html) to the [Metrics monitoring guide](https://www.elastic.co/guide/en/metrics/guide/master/index.html). ### Preview Coming soon. ### Related PR https://github.com/elastic/stack-docs/pull/1161 ::These aren't needed since we're not backporting these changes to current... But you can feel free to merge this as-is and remove them after the release.::,c04199809dc20c9aab07e1039af8b632e722ca77::3a3c9e790f0a59a835a614c44ff82b923b6909ae::
https://api.github.com/repos/elastic/kibana,69008,disable-endpoint-tests::7.8,0,merged,Feature:Endpoint::release_note:skip::v7.8.0::v7.8.1::,Endpoint's tests are failing because ES backported a validation change for data streams. More info here: https://github.com/elastic/kibana/issues/68596 I'm proposing we disable all our tests for 7.8 since we did not release. This will avoid future backport failures and any intermittent package registry issues and ease some of the maintenance burden. Another option is we could delete them all 🤷‍♂️ ::,31e517d2a9022a683d47cc1c38dfa35540563c37::
https://api.github.com/repos/elastic/kibana,68645,uptime_disable-lazy-for-7.8::7.8,0,merged,Team:uptime::bug::release_note:skip::v7.8.0::,"## Summary Resolves https://github.com/elastic/kibana/issues/68566 As a part of https://github.com/elastic/kibana/pull/66829 we backported lazy loading to 7.8, which is not supported. This patch will undo that backport. ## Testing **Note:** you don't need to run Heartbeat to test this patch 1. Navigate to the Uptime plugin 2. Open the Monitor Status and TLS alerts, ensure they don't display errors or log them to the console. ### Checklist Delete any items that are not applicable to this PR. - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",f5c763373e427d50d47001609e95aaf30aa44b54::
https://api.github.com/repos/elastic/kibana,68396,6.8-bump-pdfmake-package-to-0.1.65::6.8,0,merged,chore::release_note:skip::v6.8.11::,"Several prior PRs have bumped the pdfmake package's patch version in Kibana's `master` and `7.x` branches, but they were never backported to the `6.8` branch. In this PR, I removed the package and added it again. This ensures that transitive dependencies are updated accordingly. Now, the pdfmake package and its transitive dependencies will be equivalent to the `master` and `7.x` branches. Companion PR for `master` and `7.x`: #68395::",88392ea04972e01567f39a169b30f5fb5a0e65a7::
https://api.github.com/repos/elastic/kibana,68108,issue-60522-same-site-cookie::master,0,merged,Feature:Security/Authentication::Team:Core::Team:Security::release_note:enhancement::v6.8.11::v7.8.1::v7.9.0::v8.0.0::,"## Summary Closes: https://github.com/elastic/kibana/issues/60522 Adds support for `SameSite` attribute with patching Hapi Statehood library. Another option would be to fork both `Statehood` & `hapi-auth-cookie` libs to extend `SameSite` validation with `None` value, but I decided that will require even more work. @elastic/kibana-security How are we going to document this change? Should we mark the changes as `breaking`? After Chrome resumes SameSite changes in July, customers using Kibana in **iframe** must: - configure `SameSite` attribute in **kibana.yml**: ```yml xpack.security.sameSiteCookies: None ``` - setup secure connection in **kibana.yml**, since [Cookies with SameSite=None must also specify Secure, meaning they require a secure context](https://web.dev/samesite-cookies-explained/#changes-to-the-default-behavior-without-samesite). Customers might need to tweak their setup to https://www.elastic.co/guide/en/kibana/current/configuring-tls.html#configuring-tls-browser-kib ```yml server.ssl: enabled: true key: .... certificate: ... certificateAuthorities: ... clientAuthentication: ... ``` #### How to test locally - Enable new logic for SameSite attribute - Chrome: https://www.chromium.org/updates/same-site/test-debug - Firefox:  [open about:config and set network.cookie.sameSite.laxByDefault](https://web.dev/samesite-cookies-explained/#changes-to-the-default-behavior-without-samesite) - configure kibana.yml. you can generate certs or run Kibana with test ones: ```yml xpack.security.sameSiteCookies: None xpack.security.secureCookies: true server.ssl: enabled: true key: packages/kbn-dev-utils/certs/kibana.key certificate: packages/kbn-dev-utils/certs/kibana.crt certificateAuthorities: packages/kbn-dev-utils/certs/ca.crt clientAuthentication: optional ``` @kobelb How deep should we backport this? ### Checklist Delete any items that are not applicable to this PR. - [x] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ### For maintainers - [x] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::We might move this validation into the Security plugin to fail fast. However, this logic doesn't belong to the plugin. @elastic/kibana-security should I move it into the plugin?::I follow the same name convention as `secureCookies` does. Let me know if we want to rename it or group cookie-related settings under a namespace (can be done separately).::Not documented even it's a public method. Stringifies and encodes a cookie: https://github.com/hapijs/statehood/blob/v6/lib/index.js#L415 ::Note: `None ` should work  for all evergreen browsers according to https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite We are dropping IE11 support in v7.9. ~It requires additional `UserAgent` checks when backporting to the older branches!~ We can keep the current logic since users have to opt-in for `None`, which they won't do in the case of IE11.::`Statehood.prepareValue` is monkey patched every time the `createCookieSessionStorageFactory` is called, meaning that it could be possible to have multiple wrappers nested if calling the function multiple times. Also due to the `if (cookieOptions.sameSite === 'None')` patching condition, if two calls were to be made to `createCookieSessionStorageFactory` with distinct `cookieOptions.sameSite` values, they would both be affected by the patch. Note that `httpSetup.createCookieSessionStorageFactory` is only called once in `x-pack/plugins/security/server/authentication/index.ts`, so it effectively probably have no functional impact. ::Do we need `false` if it's optional?::> be made to createCookieSessionStorageFactory with distinct cookieOptions.sameSite values, they would both be affected by the patch. Will they? There is a guard by cookie name. ```js if (name === cookieOptions.name) { options.isSameSite = cookieOptions.sameSite; } ```::Probably not close to a real scenario, and probably doesn't make any sense, but: ```ts cookieOptionsA = { name: 'foo', sameSite:'None', } cookieOptionsB = { name: 'foo', sameSite:'Lax', } const fac1 = createCookieSessionStorageFactory(any, any, cookieOptionsA, any); const fac2= createCookieSessionStorageFactory(any, any, cookieOptionsB, any); ``` But it seems like the patch would still work with values others than `None` anyway. So the only (minor) concern is that the patch may be applied multiple times, which is still acceptable as `patch(patch(x)) === patch(x)`::This is fine for now. I created https://github.com/elastic/kibana/issues/68237 for us to introduce a grouping::> So the only (minor) concern is that the patch may be applied multiple times, which is still acceptable as patch(patch(x)) === patch(x) yeah, that was my reasoning ::super nit: I _think_ you can do this instead: ```suggestion for (const sameSite of ['Strict', 'Lax', 'None'] as const) { ```::```suggestion | Sets the `SameSite` attribute of `Set-Cookie` HTTP header. It allows you to declare whether your cookie should be restricted to a first-party or same-site context. This is *not set* by default, which modern browsers will treat as `Lax`. If you use Kibana embedded in an iframe in modern browsers, you might need to set it to `None`. Note, that `None` usage requires Secure context `xpack.security.secureCookies: true`. Some old versions of IE11 do not support `SameSite: None`, so you shouldn't specify `xpack.security.sameSiteCookies` at all. ``` Should we remove the IE11 part on master and only add on 7.8 and 6.8 branches? Do we have a convention for listing the possible options? It would be nice to show what this can be set to.::updated::I think this makes sense as part of the security plugin's config validation. We can't use `@kbn/config-schema` on its own though, since we need to know if TLS is enabled. Luckily(?), the security plugin already has this information as part of its [`createConfig` function](https://github.com/elastic/kibana/blob/72aec6228c7e3baacc988048a8ab4f3aa5002e92/x-pack/plugins/security/server/config.ts#L197), so I think it'd make sense to consolidate the cookie logic there.::@gchaps I could use your help phrasing this 🙏 ```suggestion | Sets the `SameSite` attribute of the session cookie. This allows you to declare whether your cookie should be restricted to a first-party or same-site context. Valid values are `Strict`, `Lax`, `None`. This is *not set* by default, which modern browsers will treat as `Lax`. If you use Kibana embedded in an iframe in modern browsers, you might need to set it to `None`. Setting this value to `None` requires cookies to be sent over a secure connection by setting `xpack.security.secureCookies: true`. ```::If you didn't want to dynamically patch this, an alternative is to use the patching mechanism that @watson introduced, which allows us to patch modules a single time on startup. It's currently packaged as a ""hardening"" initiative, but we could probably reuse this for Statehood: https://github.com/elastic/kibana/blob/bf04235dae35452061cc7ea3d86d96c19a58206c/src/setup_node_env/harden.js. I'll leave that up to you, just pointing out another option if you wanted to extract this patch out of core.::`createConfig` is called in plugin setup https://github.com/elastic/kibana/blob/72aec6228c7e3baacc988048a8ab4f3aa5002e92/x-pack/plugins/security/server/plugin.ts#L102 so it's no different from the current implementation. I think we are fine to keep it in the core, since not to limit `cookie_session_storage` use case to security plugin only and this is the http-layer logic eventually ::Goo to know! I'd rather keep it in the explicit form. Hopefully, we can get rid of the patch soon.::updated ::@legrego How about breaking into two paragraphs: Sets the `SameSite` attribute of the session cookie. This enables you to declare whether to restrict the cookie to a first-party or same-site context. By default, this value is **not set**, and modern browsers treat it as `Lax`.  If you are using a modern browser, and Kibana is embedded in an iframe, you might need to set this value to `None`.  When using `None`, you must also set `xpack.security.secureCookies` to `true` to send cookies over a secure connection.::Thanks, Gail! @restrry can you use gchap's suggested text above for the setting description?::That makes sense to me, I'm fine to leave in core::",4e8189e6a3ef8d1ed026d4a9191cfd6dd8c55808::4efcf5293f572f56ed4dc7ae88e55ccaea0bcc27::72aec6228c7e3baacc988048a8ab4f3aa5002e92::3aeb3970b1383d690aa9227dee6b15e4ec20d786::6d2bcd89c599f249ae10bba2ae7f33acd67a75a0::7ea94a304c7fd60d44f511d3c9cc411736ccf92e::3a350a8c554b5bf218f7165edae18e05daf348c4::56d0ff39dc04d85bfa09f33a06e51b919dff0177::8ea2628bf03f428f3924c9f0dd22ff12b712049f::3a393363362cb62f349cb461244d97aca69e56c6::9c9ca17dd2048903992c03713ca658f93980dfb1::df18efb33fedfe65434a4ad294362e0434313033::3ae12c005d9957569ccef5a52096add7528056f4::8afc9de4390611f7ed84041d3fc22594e6db5c98::
https://api.github.com/repos/elastic/kibana,68047,feature/support-searchable-snapshots-ilm-api::master,0,merged,Feature:ILM::Team:Elasticsearch UI::enhancement::release_note:skip::v7.9.0::v8.0.0::,"CC @jasontedor This PR ensures that the ILM API doesn't reject a policy that's saved with the `searchable_snapshot` ([docs](https://www.elastic.co/guide/en/elasticsearch/reference/master/ilm-searchable-snapshot.html)) and `delete_searchable_snapshot` ([docs](https://www.elastic.co/guide/en/elasticsearch/reference/master/ilm-delete.html)) options. ## Testing To test, create a policy configured with these options: ``` PUT _ilm/policy/my_policy { ""policy"": { ""phases"": { ""cold"": { ""actions"": { ""searchable_snapshot"" : { ""snapshot_repository"" : ""backing_repo"" } } }, ""delete"": { ""actions"": { ""delete"" : { ""delete_searchable_snapshot"": true } } } } } } ``` Then edit the policy in the ILM UI. Notice that the request preview will show you the presence of these options even thought they aren't surfaced in the form. ![image](https://user-images.githubusercontent.com/1238659/83596107-a5f02b80-a518-11ea-8f4a-00dfe149f8a0.png) Saving this policy should preserve these options even if the other options for the cold and delete phases are changed. Without the change in this PR, this request to save the policy would be rejected by the schema. ## Additional improvements and fixes At Seb's prompting, I updated the API integration tests and in the process made a few improvements. ### Re-enabled skipped test I re-enabled a skipped test, which fixes https://github.com/elastic/kibana/issues/62778. ### Refactored getPolicyPayload I refactored this factory method to require an explicit name be passed to it, to make its operation a little less magical, since it was depending on random strings to avoid naming collisions. This way it's also a little easier to identify any policies that have been created by previous tests. I also updated the fixture returned by this factory with all of the possible configuration options. This way, if we accidentally remove any of these options from the API, we'll see a failure. ### Fixed bug with readonly option typo This change uncovered a bug, in that the `readonly` option was incorrectly defined as `read_only` when I introduced the schema in [#61915](https://github.com/elastic/kibana/pull/61915/files#diff-f8960c3d619d4f88455906612d8c7204R70). This change was introduced in 7.8, so I'll backport the fix in a custom PR (https://github.com/elastic/kibana/pull/68199). This bug is manifested as a failure to save any policy that has this option configured. ![image](https://user-images.githubusercontent.com/1238659/83699624-60d00600-a5b9-11ea-930c-ff4fcb06235a.png) ::",e6471f78b4f7b9e1cb3ad4b9af4dfb7e29ef3fc0::67617382b0355ef1ba637eaa8b5432946b1e30f7::1cc05c81aa9dd7108578c026210b8d42023afe4a::62e0080541cb3725b68013b0a1b39c5580296f6a::e2d396394872ffd68de180263a0354387fdac4e0::
https://api.github.com/repos/elastic/kibana,67899,issue-67776::master,0,merged,Feature:New Platform::Team:Core::release_note:skip::v7.9.0::,"## Summary Fixes #67776 This moves the previously Angular-only URL overflow handling to Core's global router and adds a new ""error"" application that will be displayed when a user encounters a very long URL. The UI has been mostly unchanged, but it could really benefit from: - [x] A copy update - [x] A design pass - [ ] Functional tests added However, I'm keen on getting this in for the next (last?) 7.8 BC and will iterate on this as a follow up. #### Screenshot ![image](https://user-images.githubusercontent.com/1813008/84069571-f4be1b00-a987-11ea-96be-0db5a2d119a3.png) ### Checklist Delete any items that are not applicable to this PR. - [x] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::This will need to be changed when backporting to 7.8 branch::This will need to be changed when backporting to 7.8::Where did 25000 come from? Maybe this can be imported?::Centered bullets are really hard to read, and really any long-ish content is hard to read when it's centered. You can keep the above paragraph inheriting the center alignment but from here down you'll need to wrap with a new `EuiText textAlign=""left""` ```suggestion </EuiText> <EuiHorizontalRule size=""half"" /> <EuiText textAlign=""left""> <h3> ```::Is this type of messaging necessary? @gchaps thoughts on things like this?::NIT: even if only used there and not exported for now, I would extract a `createHistoryMock` function outside of `createInternalStartContractMock`::Use async import for `renderApp` maybe ?::`AppError` + `ErrorApp` 😄 ::You should return an unregister/cleanup handler from `useLayoutEffect` to avoid possibly having multiple listeners hooked to the history. Also why `useLayoutEffect` instead of a plain `useEffect` here? It doesn't seems like it's DOM related?::`URLSearchParams` is not compatible with IE11: https://caniuse.com/#search=URLSearchParams (unless we have a shim?) Maybe use the 'query-string' module instead? ::This really was the title used by the legacy page  😮 ?::Definitely not 😄 I just left it as-is, but I'm happy to remove this.::Ah yes forgot to follow up on that TODO.::I thought about it, but since this is an error page that could be used for other things (for instance, when a app fails to mount), I don't want an networking problem from preventing this page displaying. Also it's extremely tiny. I'll add a comment explaining that rationale.::> You should return an unregister/cleanup handler from useLayoutEffect to avoid possibly having multiple listeners hooked to the history. `history.listen` returns a unregister callback, but I can see how it's not obvious looking at this code. I'll go ahead and `{ return ... }` to make it more clear. > Also why `useLayoutEffect` instead of a plain `useEffect` here? It doesn't seems like it's DOM related? React hook execution order is hard for me to understand, but essentially what I found in testing is that `useEffect` was executing after the component was mounted and after the first history update was dispatched. `useLayoutEffect` does not have this problem since it fires immediately after the component is mounted, thus not losing any history updates. (Though I suspect it could miss an update in Concurrent mode, depending on the implementation?). The docs explain this: > useEffect fires after layout and paint, during a deferred event > However, not all effects can be deferred...For these types of effects, React provides one additional Hook called useLayoutEffect. > The signature is identical to useEffect, but it fires synchronously after all DOM mutations. Updates scheduled inside useLayoutEffect will be flushed synchronously, before the browser has a chance to paint. IMO the name of `useLayoutEffect` is too specific to the expected usage of this API.::There is a core-js polyfill, but I will double check it works in IE 👍 ::Renamed `AppError` to `ErrorPage`::Removed::> history.listen returns a unregister callback, but I can see how it's not obvious looking at this code Oh right, my bad. > React hook execution order is hard for me to understand, but essentially what I found in testing is that useEffect was executing after the component was mounted and after the first history update was dispatched Yea, took me a while to understand the exact difference between these two. They are fired 'virtually' at the same time, after each component update, the difference being that `useEffect` is triggered asynchronously (setImmediate or nextTick I don't remember), where `useLayoutEffect` is synchronous, therefor effectively executed before repaint. > thus not losing any history updates it's fine keeping `useLayoutEffect` anyway, but just to try to understand: I'm surprised you had an issue using `useEffect`, as the current location is initialized in your `useState` hook using `const [currentLocation, setCurrentLocation] = useState(history.location);`. Only missable location change would therefor be between the initial mounting, and the end of the initial rendering. Even there, the difference between the two hooks should be minimal, as the only time-gap difference is the browser repaint period. The issues you encountered were in `enzyme`-based tests, right? ::> Only missable location change would therefor be between the initial mounting, and the end of the initial rendering. Even there, the difference between the two hooks should be minimal, as the only time-gap difference is the browser repaint period. The issues you encountered were in `enzyme`-based tests, right? Correct, it is probably a nearly impossible case to emulate in the actual application. But it seemed safer to use `useLayoutEffect` just to be safe. They are executed at virtually the same time, the difference being that `useEffect` yields to the event loop first whereas `useLayoutEffect` will execute immediately.::TBH I'm encountering a lot of trouble when testing FC with effects using enzyme, even when the library is supposed to now be 100% working with FCs...::I changed the defaultMessage of these strings significantly, so I figured I should delete the old translations so they get updated. Is that the right process @Bamieh ?::Nit: This error message can also occur in other cases (e.g. when editing a vega visualization). It's not dashboard specific .::Fixed::",9b6a31f6148006ea126b34638915e219033ec288::6e391c93aa4dad8ecf680398adb3417f329557dd::f7c6fa93e70cbccf7be1b7c48bc167e84e882db9::a46af84181f5697f712313b93257005410858828::3e2024280e033e6d3a5018d86bf9691406e4a7c6::f989d800f1e7a4fca6b001e1dc61f690bf850515::93d9f93c52896f8d5ccf7c35c3c4c2d68ccad317::178136d5304102c98826b6136b8447d4a98f6de8::30469852ea5533f4793496ab372f0b8f3e29fae4::
https://api.github.com/repos/elastic/kibana,67799,fix-column-re-ordering::master,0,merged,Team:SIEM::release_note:skip::v7.8.0::v7.9.0::v8.0.0::,"## Summary Fixes a bug in timeline-based views, (e.g. the Host Events table), where a column would revert back to it's original position after being dragged and dropped to a new position. Only timeline-based views were effected, not the timeline itself. To reproduce: 1) On the SIEM Overview page, click the `View events` button 2) Drag and drop any column in the Events table to a new position **Expected Result** - The column is relocated to the position where it was dropped **Actual Result** - The column reverts to it's original position ## Testing - This PR adds a Cypress test for this scenario - The new test was successfully run (at least) 10 times via `node x-pack/plugins/siem/scripts/loop_cypress_tests.js` - This fix was desk tested in: - Chrome `83.0.4103.61` - Firefox `76.0.1` - Safari `13.1` ::I think `reArrangeProviders` needs also the timelineId to be dynamic. I tested locally and the reordering of the columns does not work as expected. I added this line to `reArrangeProviders` and it worked. I am wondering if I am doing something wrong as your cypress test passes. What do you think?::I am wondering if it is best to move those declarations to `timeline.ts` as it is the same for all timeline pages. I had this dilemma for myself when I started writing the cypress test for my [PR](https://github.com/elastic/kibana/pull/67156/commits/7e397a75f280c54dd28492cf5068b3fe3838ea2c). What do you think is best to do?::My mistake! I had a caching issue. I cleared my cache and it worked as expected. Sorry for that.::I agree @cnasikas , and moved the definition of `DRAGGABLE_HEADER` from `events.ts` to `timeline.ts` as suggested, because this constant is also applicable to timelines too (not just the Events view). With that same commit, I also added a `.skip` to the `Events columns` test for now, because although it passed CI on Friday, I ran `pack/plugins/siem/scripts/loop_cypress_tests.js` over the weekend and observed a few failures. Other Cypress tests that are currently passing CI are also failing locally, suggesting the failure _may_ be a local environment issue, but I don't want to risk destabilizing CI, and this PR must be backported soon to `7.8` for the next BC. @MadameSheema, if you're willing, perhaps we can pair on re-enabling it in a separate PR?::",8d35234ca556f213468e493560f0358c029f4f47::1670c5352abf77d0579af9a6660bab5f21bd5353::a31b7090e6c1f6fa20271805306c507e219a2c69::
https://api.github.com/repos/elastic/kibana,67742,doc-csv-reporting-settings::master,1,merged,Feature:Reporting::docs::release_note:skip::v7.3.0::v7.4.0::v7.5.0::v7.6.0::v7.7.0::v7.8.0::v7.9.0::v8.0.0::,"## Summary We have some undocumented CSV reporting settings. Those should be backported to 7.3+ probably. We should review the messages. ### Checklist - [x] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials::```suggestion | Number of documents retrieved from {es} for each scroll iteration during a CSV ```::```suggestion export. ```::```suggestion | Amount of time allowed before {kib} cleans the scroll context during a CSV export. ```::```suggestion | Enables a check that warns you when there's a potential formula involved in the output (=, -, +, and @ chars). ```::```suggestion | Enables CSV export from a saved search on a dashboard. This action becomes available in the dashboard *Add panels* flyout ```::```suggestion for the saved search. ```::> Number of documents being retrieved from Elasticsearch for each scroll iteration when a CSV export. Is it correct? Maybe: > Number of documents being retrieved from Elasticsearch for each scroll iteration when generating a CSV.::The export is available in the following menu (not when adding): ![image](https://user-images.githubusercontent.com/87379/83278037-3f46d700-a1d3-11ea-8f2f-454d125150d8.png) ::Hello @KOTungseth - I'm not sure on this one, please let me know.::Hello @KOTungseth - I'm not sure on this one, please let me know.::@lucabelluccini it looks correct as you have it.::",52c23de6072801d694c9c3cb7925ccaa3beeae34::1dc370df7a877c989fb4bd8ad407f7e2c6e7e165::db2f65466cffb1d58ee36d2f1f6eeceb6be46c82::4c6f460ff6e8da04e11c35ac46c81753fa2ffeda::a1867f1073b2ad5d312196e30a563d9f1062a59a::
https://api.github.com/repos/elastic/kibana,67377,64325::master,0,merged,Team:Docs::release_note:skip::v7.0.0::v7.1.0::v7.2.0::v7.3.0::v7.4.0::v7.5.0::v7.6.0::v7.7.0::v7.8.0::v7.9.0::,"Closes #64325 [skip-ci] Added steps to create rollup index pattern. Fixed link to adding sample data. Added screenshot for creating the visualization. Preview [http://kibana_67377.docs-preview.app.elstc.co/diff](http://kibana_67377.docs-preview.app.elstc.co/diff)::In the **Create index pattern** dropdown list, select **Rollup index pattern**.::this could also be a step.::Suggest making this a step.::Move this image under step 1.::Not sure how this image relates to the text above.::It's not related to this change, but I just noticed it says here TSVB doesn't support rolled up data - that's not true, you can query rolled up index patterns as well. I can create a separate issue for it or we can just fix it together with the rest.::@flash1293 as the support for TSVB began in 7.2, we'll fix this in a separate PR.::@flash1293 I added this change. @gchaps will keep an eye on the backports to 7.0 & 7.1. ::",971cab0a03af428050e4a70969c62cbbec67cc7c::f4af730a0dc54f4d8f50ecf2a3d5a531d45c2d8f::
https://api.github.com/repos/elastic/kibana,67262,revert-pr-67059-7.x::7.x,0,merged,Team:Operations::chore::release_note:skip::v7.9.0::,For the reverts we mentioned here (https://github.com/elastic/kibana/pull/67240) we forgot to backport the revert into 7.x branch::,b85b4d57fbb7dcf1f001e84b438fbc8188ddc981::081ecadf97c4c7f348c4ab6823468bd63ee5df0c::
https://api.github.com/repos/elastic/kibana,67208,fix-packer-cache::master,0,merged,Feature:CI::Team:Operations::release_note:skip::reverted::v6.8.10::v7.7.1::v7.8.1::v7.9.0::v8.0.0::,"Our packer cache jobs have been failing for about a month because of missing node_modules directories. This PR removes the hard-coded list of node_modules directories, and instead automatically finds them all and adds them to the archive. This shouldn't be merged/backported until after #67182 or we will begin having Chrome/Chromedriver issues when the new packer images are built and picked up. [See test code output here](https://kibana-ci.elastic.co/job/elastic+kibana+pipeline-pull-request/49401/execution/node/46/log/?consoleFull) (extracting the archive, listing the contents, checking some node_modules for correctness). [Test code here](https://github.com/elastic/kibana/blob/8158ea071b8194c11cc99c222c7f21fce1104e79/Jenkinsfile)::",32b17a84d0fde1ffe4d47fe406bf956f7dcbe651::8ec3193f023b8ec3cf030d171055455f6033fed5::b74832fe1045812768c5dc87607e68ea4725bd13::8158ea071b8194c11cc99c222c7f21fce1104e79::82c9908670663ea600ad81a402b2b5c2fe3f4403::335d8614e5dab79aad165f2c6e05051d8c233f07::
https://api.github.com/repos/elastic/kibana,67036,6.8-bump-jquery::6.8,0,merged,release_note:skip::v6.8.10::,"This is a second attempt at the original backport in #65336. jQuery 3.5.0 introduced a breaking change to its `htmlPrefilter` sanitization method so it is more strict. Self-closing tags with no content are now stripped out of the DOM. Self-closing tags should only be used by elements defined in the HTML Standard, such as `<br />`, `<hr />`, etc. This backport includes the update to jQuery 3.5.0, and also refactors Angular templates that previously (mis-)used self-closing tags. The original backport broke ML by preventing page loads. This was triaged in #66170, and the root cause was determined to be additional Angular templates that were defined programmatically via string literals. I missed those templates during that backport process. We wound up reverting that backport with the aim to revisit this upgrade, which I am doing in this PR. This time, I manually reviewed all Angular template entry-points (usage of the `ui/routes` module) to determine if we missed any other programmatically-defined Angular templates. I found one last instance in the Upgrade Assistant and updated it too (in 808cd21).::",86cab2c4e59e73a16279195ef838631453e7b869::d3ed3abfd4b24cf6c5af63f7146952395ce42a1f::808cd2149c41f608307048a80ab37f5fb65b8f1d::08a82497736bb027c055a4526dc07a8a9923226e::
https://api.github.com/repos/elastic/kibana,66979,bug/missing-index-pattern-filter::master,0,merged,bug::release_note:fix::v7.9.0::v8.0.0::,"## Summary Note: Commented out maps test - fix in https://github.com/elastic/kibana/issues/64861 See https://github.com/elastic/kibana/issues/67177 for full explanation. ## Release Notes This PR adds **error** and **warning** statuses to `FilterBar` filters, according to the following scenarios: - If a filter's index pattern is **missing** the filter will show in an **error** state and disable itself. - If a filter's index pattern field is **missing** the filter will show in an **error** state and disable itself. - If a filter's uses an unrelated index pattern and the field in that filter does not exist in any of the index patterns used by the app - the filter will show in a **warning** state. i.e. Trying to apply a filter for the logs data set file extension field to the ecommerce data set dashboard. The filter will not be automatically disabled. - If a filter's uses an unrelated index pattern but the field in that filter exist in at least one of the index patterns used by the app - the filter will show in a normal state. i.e. Trying to apply a filter for the logs data set ""name"" field to the ecommerce data set dashboard (that also has a name field). If you try to edit this filter, you will still have to re-select the index pattern and re-configure the filter. Error state: ![image](https://user-images.githubusercontent.com/3016806/82576495-7b09ed00-9b92-11ea-8c6e-64c07631b208.png) Warning state: ![image](https://user-images.githubusercontent.com/3016806/82576756-bad0d480-9b92-11ea-8aab-e850b1a01c46.png) ## To reproduce #### Error filter 1. Create an index pattern 2. Go to discover and create a filter for that index pattern 3. Save it as a saved query 4. Delete the index pattern you created 5. Go to another dashboard and load that saved query #### Warning filter 1. Load two data sets (ecommerce and logs for example). 2. Go to one of the dashboards and create a filter 3. Save a Saved Query 4. Go to the other dashboard and try loading the Saved Query. The filter should appear in an error state ### Checklist Delete any items that are not applicable to this PR. - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::Notification was removed as it renders multiple times - showing the error message on the filter is clear enough.::I have no clue why order of parameters changed in the docs There are no API changes in this PR :-(::@mattkime what do you think of this?::Get index patterns once in filter bar and pass them to each `FilterItem`::I broke down the logic in this component to helper functions for easier debugging and reviewing::```suggestion color: makeHighContrastColor($euiColorWarningText, $euiColorLightShade); ```::```suggestion color: makeHighContrastColor($euiColorDangerText, $euiColorLightShade); ```::Not sure about these changes: * Just seems like it isn't right that adding new dashboard to dataset causes so much changes.  🤔  (I understand that all the changes because of data from older kibana version? but is it really fine to update it?) * Also in `data.json.gz` there 8.0.0 version mentions now and I guess it could cause issues with backport I assume that something is not right with used method: (https://github.com/elastic/kibana/pull/66979/files#diff-72924cf33ef20e70416fdfb75f2a6afb) @elastic/kibana-qa could you help 🙏 ? I wonder what is the best way to add a new dashboard to existing data? Or are these changes OK? ::I followed @spalger suggestion on regenerating the mappings I'm definitely open to alternative ways of doing this :)::I tried to do something very similar in this pr and with minimal changes: https://github.com/elastic/kibana/pull/67280 To not touch the mappings and have minimal changes to data, I just added new dashboard in 6.3.0 format (following example of other dashboard). Not sure if this is the best approach, but looks like it works ::I don't want to add it manually in the json, but to use the existing tooling. Lets see what spencer says.::@nreese ::@lizozom Can you please make these changes to the SASS?::So, it looks like this was generated with x-pack enabled rather than using the `node scripts/functional_tests_server` for OSS. That said, this archive is pretty old so I'm not surprised to see some new properties on the archive. The alias stuff shouldn't be a problem since we trigger a migration after importing a .kibana index anyway, but the extra properties in the mappings by could be removed and I wouldn't complain. You might want to consider starting an OSS server, loading the archive into that server, and then archiving it again after it is migrated for OSS?::@spalger this is exactly how I generated this one. Started an OSS tests server, loaded the data and saved it. This is the resulting output.::Sounds good, I don't expect it to cause any issues then::Is this README complete? or should we add info about OSS server?::Why is this removed? 🤔 I see `data.filter.filterBar.labelErrorMessage` still used in `src/plugins/data/public/ui/filter_bar/filter_view/index.tsx`::I think we have a pretty good unit test coverage for this function. Should we for sanity consider also covering this new param? ::Thanks for this comment 👍 nit: fix typos `the index pattern index pattern selector` `thre's`::Running `node scripts/functional_tests_server.js` already starts the server in OSS mode. So I think the steps listed here are correct.::As far as I see, it's not being used anymore::My bad.. mistaken with `'data.filter.filterBar.moreFilterActionsMessage'` ::",666aa4b2447a33ff7dba5bcbc4bdd75c205b79ca::21f662e5ce121a9afa8118695ff1ec987601b948::3e4d0f103671cc6326baa673cc2b5b4bfcb0979b::fceecd152594c6c78a19a96a75159825514fc691::75764a90056433a28a5593b7f0bd0e4901ac50dd::6f9ba3bb82069256654330696a96121b49d6b184::a33a037fe522d6d59860551ec99fb905cfbd0c2a::10187667881291c2dcd9cdbab40f6f8cf80e54ee::45881b74ec6a497de1cb4522cced7f382638b7a3::ed2f9e9154d4d88389f23a24d2cad9dae31279a2::129fc90c53d51bd0093a70ed162814b40269e811::7bf43159d9cf7c977cd341e8e885fc15af81dff0::ceb4fca3b3dbb4c82aa90b4f51adc5dfb2c4b9d5::448539bb6901f5ecb4c620e629e19c3215d0020f::65e05263d59afd316ab61387162188702b330230::ae6735bae5c86e3e36a8e02e3347b9198a935395::4a7322e03d7f8ea5f80e59a0ba9adec44bc9be87::886477f58e3721f5b69d32e60401b90d622c2d52::4af37a8519ff2fcb0999c0f9d6ff697e7b7cbed8::ddaa33851e98bbe57a7b57d0ff6eeec7e1864e4d::e007ac2a12f4fbd477345a2d4936d54f76979afc::fc580709aae590afcbcf969c6e7966b2407a78f4::2d85783cf0e99445a70ab61a95f7129ed79db750::cccae7696538874480c8223c85b8a1aad292895b::7cd51cbc8193287b43c9075a990de6896912e55d::cf9cada8b91d901c317b77b1f8ae62a6c26b9145::84cbd046ff18b2343452a665d6b21c59b63b33c7::61e2eda99fd3c647b39ceb48ff08a552d58ef8d0::27560993709ca527a41f27414624b87834f8737a::67f418a3dacc07bdebfb89fb4bf41691f692e754::0bc2fbd83ed613c3de4af80ed9394561aee86def::10a34413e489686e403b7ff0ea5e13a2a5cc98c1::49605a00a6a51cb64660dc1df3d7968d304ee562::da75691d0bab5767d90e424b6688f9378a56773e::fbd22cececa8cf2b1d58d3010554db163beea21b::f25a7fb28a7c43222843b8042f78e6c458005fb4::
https://api.github.com/repos/elastic/kibana,66828,fix-empty-map-tooltip::master,0,merged,Team:SIEM::release_note:fix::v7.7.1::v7.8.0::v7.9.0::v8.0.0::,"## Summary Resolves https://github.com/elastic/kibana/issues/63474, and expands `ITooltipProperty`'s `rawValue` type to include `string[]` as mentioned [here](https://github.com/elastic/kibana/pull/61264#discussion_r398858559). ![image](https://user-images.githubusercontent.com/2946766/82100568-2c0e1480-96c7-11ea-958e-5b1c6b6a3db9.png) ### Checklist Delete any items that are not applicable to this PR. - [X] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ::@nreese what would be the desired behavior here for array values? Should this join as is, with a `, ` separator,  just show the first value (existing impl), or something else?::Same comment as above @nreese: > what would be the desired behavior here for array values? Should this join as is, with a , separator, just show the first value (existing impl), or something else?::This test is irrelevant since we removed `AddFilterToGlobalSearchBar` and now have a [standardized tooltip](https://github.com/elastic/kibana/pull/61207) for draggables.::`this._field.canValueBeFormatted` will only be false for aggregation values that should not use formatters (like count and carnality), so the if statement should never be triggered when the value is an array. I don't think any check is needed for an array type here.::I think this is fine here since we have no knowledge of the raw value type at this point.::Good to know -- thanks! Since `_.escape` only takes a `string` I'll still need to check for an array, or can short circuit in the above conditional if that's preferred.::optional nit: Is it possible to create a common parameter type for `value` which could be used across the `createTooltipProperty` functions? Just noticing it's changing across all instances of this function and those same instances have the same return type. Just wondering if we could do the same with common type for the param.::Good feedback @dhurley14 -- thanks! I ended up leaving as is since this is within the maps plugin and I didn't want to be changing too much since this has to be backported two versions.::",74cbeffb34b0f260f191ab1426fe77d4e2b3b6fa::cb2e96d3de08e0e08882527db0c9130819e17a36::bc1ce701fc9d6b4d7e603ec9c2197f3c96a004ab::c969ade0263036fac8653460006c9775ea296650::
https://api.github.com/repos/elastic/kibana,66541,64067-robust-package-installation-ctd::master,0,merged,Ingest Management:alpha1::Team:Fleet::release_note:skip::v7.8.0::v7.9.0::v8.0.0::,"## Summary Fixes https://github.com/elastic/kibana/issues/65880 * Improves error handling in the handler for the `/api/ingest_manager/setup` route for * missing package registry * errors during the installation of pre-built index templates * Fixes installation of pre-built index templates, caused by us not waiting for component templates to be installed before attempting to install dependent index templates. The latter was most likely caused by changing behavior of elasticsearch. **Reviewers**: please also comment if you agree that this should be backported to the `7.8` branch as a bugfix or not. ## How to test this ### Missing package registry * in kibana.dev.yml, or on the command line, specify a registry with `xpack.ingestManager.epm.registryUrl: 'http://localhost:8080'` but don't run it * login in to Kibana and watch the network tab in the browser dev console * the call to `/api/ingest_manager/setup` should return a `502` http response * Kibana outside Ingest Manager should be usable * If you navigate to Ingest Manager, the error box should contain an informative error message * the Kibana log should contain the same error message, and no stack trace ### Missing component template This fix contains two parts: how the error was handled, and why the error occurred in the first place. * To test the improved error handling, trigger the original error by commenting out this line: https://github.com/elastic/kibana/pull/66541/files#diff-51e0df792f23fb0552e1902bf96453e4R24 * restart your local elasticsearch, or make sure the index templates and component templates from the `base` package are not installed * login to Kibana * the call to `/api/ingest_manager/setup` should return with a `400` http response containing the elasticsearch error message complaining about missing component templates * To test that the installation of pre-built index templates works, revert the change for the previous test *  restart your local elasticsearch, or make sure the index templates and component templates from the `base` package are not installed * login to Kibana * the call to `/api/ingest_manager/setup` should return with a `200` http response::Can we do this two operation concurently inside a `Promise.all`::Do we want to start to introduce our domain errors and avoid using `Boom` ?::nitpick the await is probably useless here ```suggestion return callCluster('transport.request', callClusterParams); ```::The second depends on the first being completed, so we can't do them concurrently.::I would prefer to start with that in changes that don't go into 7.8 to keep the changes smaller.::@neptunian This gives us a stack trace from the handler that's actually pointing at the real location the error occurred. I only added this here for ""unknown"" errors.::",85398b791e289fcfe8b16e4488674f88bed4151c::3b5926a15359fdb6c236a6b89a0ff46b9a746434::dcf36dc6bad9e4cdeaf1d5925916bc238b622d48::0092b2f652b157a081b9c36c3931098d501d771f::d6b4c49fbdc7f2e493f723f208921ad03400ac50::9ff1e60c5a688eccaabe64f966504438391acf65::
https://api.github.com/repos/elastic/kibana,66512,ie11/death::master,0,merged,REASSIGN from Team:Core UI::Team:Core::release_note:deprecation::v7.8.0::v8.0.0::,"## Summary Adds an additional toast to warn folks on IE11 that deprecation of the service is coming, and to check the support matrix for more information (which is linked). This will backported to 7.8 on approval. cc @VijayDoshi ![image](https://user-images.githubusercontent.com/324519/81884415-b847fc80-954c-11ea-804c-caa8f26b7357.png) ### Checklist Delete any items that are not applicable to this PR. - ~[ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~ - ~[ ][documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials~ - ~[ ][unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios~ - ~[ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~ - [x] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [x] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ::Any reason we're using FormattedMessage here instead of the `i18n.translate` API like before?::It might be safer to use the battle-tested [browserslist-useragent](https://github.com/browserslist/browserslist-useragent) package: ```ts const { matchesUA } = require('browserslist-useragent') const isIE = matchesUA( window.navigator.userAgent, { browsers: ['ie', 'ie_mob'] } ); ```::Since the other one needed to be switched I figured it better to convert this one over to the same format so that we didn't need the extra import?::Excellent. Didn't know that was available. I'll switch it up.::Ah for the link, that's right. Makes sense!::Josh and I did some back and forth over Slack. This lib isn't usable by the browser. We're going to continue with what I had originally since it seems like the best option. I've done testing to make sure it works as you'd expect.::Should this string be translated as well?::Good spot.::Fixed.::",12e3c3514a6201c5f503f98c169c8d9abd59f94e::d277846a3a0c1599bb9149ea58720481803ffb7d::be83382754b8714ae5e1aa6b7252a838cf2a0481::1eac7b1c427b63c0a8f97d856496cc4cb2c7d235::a158b60a5fdba7b2ae2c82dd14a154e4250ae975::fcd168381d0422dc6e375d5c93f52007706da6a6::
https://api.github.com/repos/elastic/kibana,66460,no_count_check::master,0,merged,Team:Geo::release_note:fix::v7.9.0::v8.0.0::,"fixes https://github.com/elastic/kibana/pull/66460 Steps to view bug: 1) install sample web logs and create a Documents layer with clustering enabled. 2) hide layer 3) Change time range 4) Notice how _search request is made for the count of documents. Hidden layers should not make any requests. This PR fixes the issue by consolidating the layer visibility check in map action `syncDataForLayer` that calls syncData::this reoccurs everywhere. e.g.: - all layers, - map_selectors, - toc_entry, What about introducing a new method on ILayer, something like `ILayer.isVisibleAndWithinZoom(zoom: number):boolean` and just reuse?::I would like to avoid large changes since this is getting backported to 7.8.  7.8 and master are not going to have a clean backport because layers folder was renamed to classes. How about keeping this PR to just the fix, then, creating a separate PR that refactors and adds tests.::talked offline, will move visibility check out of syncData and into redux action that call syncData so layers do not need to perform this check and check can be done in a single location.::Removed EMS base map layer from layerList. Tests using these maps look at mapbox style. EMS base map layer bloats mapbox style making the inspector very slow to render. Removing that layer speeds up tests a lot.::thanks for pulling this out here. it really helps when the business-logic is gathered in the actions rather than sprinkled across multiple classes.::thx, good call. Didn't occur to me, but when we moved to vector-tiles, this added a large amount of layers to the mb-map::",6977a161fb08a3c31780dbd19f96a85ed1723c76::29d4efe80432d611a725da0e30d065c4abf5639b::4bd7c9c74f1ea02dac31d8e7b524fbe24ef13556::5dada113da3f4fc512a16d70bef91b76e4cc3787::3f6e75dd048374cc1eacc9bfefe5fbe7954024c9::8dee6ca8b3943cecf604d5bba9091395a1378fa9::af8ff7de0c6173202cb9a3a2fce33b6f83f177e2::382a3ced86184c873a9dba4ebe081dc81d63f96a::7ac07f7552a79d38a9c41c1e7e5375e5279e0341::98bac55619988e2cd81a59163aa132fc42b29dc7::3f1152052f2442e1e0550a5c2bd659cec1b476b3::
https://api.github.com/repos/elastic/kibana,66431,basic_page_navigation_68::6.8,0,merged,:ml::release_note:skip::test_ui_functional::v6.8.10::,## Summary This PR adds basic page navigation tests for the ML app in the 6.8 branch. This is mostly a backport of #39525 with a few additions (`data-test-subj` that existed in 7.3 but not in 6.8) and a few removals (data frame tab was not available in 6.8). ::,ab2e3d0df196a2211b9b4d2d559e56f8bcda43e7::799ade96fbb108aa2712b33d8488ecc02fad8e14::
https://api.github.com/repos/elastic/kibana,66212,6.8-lockfile-symlinks::6.8,0,merged,release_note:skip::v6.8.10::,This is a manual backport of #55440 and #56043. This will allow us to run dependency scanners against the `6.8` branch and ensure accurate resolution for both direct and transitive dependencies.::,25f0bbdfdfa01138602dd81323ed28f53737e57b::1cf8dbcd0d03623c3568cae2c28be877a05404b5::994d4cf7a9213b88af8d856b07601217473b3a30::da581fa5242f029bf662f584b6dea8ba01c7815a::8b2c4fb36da73e0edcc711490976ee3ee8bac96e::
https://api.github.com/repos/elastic/kibana,66211,7.x-lockfile-symlinks::7.x,0,merged,release_note:skip::v7.9.0::,This is a manual backport of #55440 and #56043. This will allow us to run dependency scanners against the `7.x` branch and ensure accurate resolution for both direct and transitive dependencies.::,8752129f1bb07ea29611bd36ed0d7b32a664e52a::c50d682de0e5e5f18437fe55dca09ef845d9329c::b050b2f80bf5778430692be6a3f4c15bbde7f0a8::
https://api.github.com/repos/elastic/kibana,66201,6.8-revert-jquery-update::6.8,0,merged,release_note:skip::v6.8.9::,The jQuery update that was backported to 6.8 in #65336 was preventing ML pages from loading. Suspect it was due to the changes in the new jQuery release (3.5.0) that change HTML sanitization. This was not caught in CI because there are no functional tests for ML pages in 6.8. Any future attempts at backporting this PR will need further triage on the problems it caused for the ML app. Fixes #66170. ::,7618b6d4446ee240346c8177341afa9ed7426925::43e5ca1a844f00ed9a756d79eae211e938a96ac1::
https://api.github.com/repos/elastic/kibana,64998,dev/fix-search-cancelation-race-condition-option-1::7.7,0,closed,Feature:Search::Team:AppServices::bug::release_note:skip::v7.7.0::,"## Summary This fixes: https://github.com/elastic/kibana/issues/64709 by backporting: https://github.com/elastic/kibana/pull/63320 and functional test from: https://github.com/elastic/kibana/pull/64964 [Option 2 fix with less file changes](https://github.com/elastic/kibana/pull/64999) ## Explanation: In `7.7` branch both `courier:enableBatch: true / false` are going through this code path: `https://github.com/elastic/kibana/blob/7.7/src/plugins/data/public/search/fetch/fetch_soon.ts#L64` In case of `courier:enableBatch: false` `ms = 0`. The assumption was that no request grouping could happen, but if requests were fired in scope of one micro task, then we still were batching requests. (delay used setTimeout). This was causing problems in case of request cancelations. If 1 request in group was canceled, we were canceling other requests also. For example. in this dashboard, https://github.com/elastic/kibana/files/4558779/minimal.reproduction.zip, bar chart canceled pie chart's requests. This backport is making `courier:enableBatch: false` search to not get into `fetchSoon` at all. ### Checklist Delete any items that are not applicable to this PR. - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",0b61770d4838cdef473dd4a45cdd9264831d1325::e84ae0b5dc1e2a9f1361308f3746c2988d0d5a0b::a1028fd622125647a44aa8661deb204dee3b12d6::60f120c296cbb92aadebc6c58c3da258fa94ff33::a67b661a86bddf695d1ff67199e237ba68151e9f::125d961ed632f92c2090e45992586a9f06d9dcb4::
https://api.github.com/repos/elastic/kibana,64936,6.8-dependency-updates::6.8,0,merged,chore::release_note:skip::v6.8.9::,"This PR manually backports several dependency updates. See each commit message for details. Additional notes: * aeb4f50 - the `mixin-deep` package update was updated from 1.3.1 to 1.3.2 in Kibana 7.5+ (via #46412). * This commit also caused a few changes to the `packages/kbn-pm/dist/index.js` file (rebuilt using the `yarn kbn run build -i @kbn/pm` command). These changes match those from the original PR. * b4d2194 - the `tar` package was updated from 2.2.0 to 4.4.8 in Kibana 7.2+ (via #35896), but this entailed several additional changes to code that uses this package. Instead, I opted to update this package's patch version to 2.2.2. * cea2dbe - the `tar-fs` package was removed in Kibana 7.2+ (via #35896), but it is still used in Kibana 6.8, so I updated it here. * 930963c - the `set-value` package was updated in the master branch at some point (verified by examining our `yarn.lock` file), but I was not able to easily identify which PR updated this because it is a transitive dependency several layers deep. I updated the resolution to the latest patch version. * This commit also caused several changes to the `packages/kbn-pm/dist/index.js` file (rebuilt using the `yarn kbn run build -i @kbn/pm` command). * 853736d - the `extend` package was updated in the master branch at some point (verified by examining our `yarn.lock` file), but I was not able to easily identify which PR updated this because it is a transitive dependency several layers deep. I updated the resolution to the latest patch version.::",c42d3d1af45348fe36690b1f33c08dc54956e3d9::38807c02728a5878a2187666b48baff790f566eb::b4d2194bee47f1d785a567f1270e3d4678ac9969::cea2dbeab311dfcf1a6fb6515503d708369bb644::8915800b2629459369592b45ba0ae116f1201cac::c191eae212e9e55a0441146be8427fc9045ac6c2::aeb4f50b7c1f953f859635b37b222e596d136d6c::930963c1f57aef642430e5b35035c473c5647276::853736df74f26173f9fec1a85344d495d6857628::f69287a60e5e5acbaaf1770583d0f86813b90450::f2c54bec0c64f410ce02bfd4f87400dee86c4688::6a7e65d72be1cf09c1153c4704571f9c77d519e9::16be1a71999c5adc8943aff29a567138879e8c49::16ab35d72ae02e50ad0ee0840a49bb57a31d0ef5::cd3b11c534a3c7314f32020c7138dec89eb2b72e::e8937b0841d6c6f8f9e82cc5f080c38e8a897421::909d9afef8394a8a7d73c493dd450a80cfc92087::a11a961f7254b7105309f276c7fcf36ee41865d5::1a9ef0dde13d1eacda74ba9a8980562baa5f2719::c88b1a1a238c9572b4ddc03de797ca06ba2c56bc::fae3183e05db4d7c48c5c0f6218feb9411e595c6::8d22bf9ab802384ac9aaa6c71b2f7860c83ae046::eef653feacb5f6a593127903004fde5651ec9ad0::d6b90c813ca9717de2d7afb078ffe210be0c93c0::10b591b920118548f4eb996ba42c8345f5747a6c::
https://api.github.com/repos/elastic/kibana,64424,7.7.ml.rh::7.7,0,merged,:ml::Team:Docs::release_note:skip::v7.7.1::,"## Summary This PR backports the changes of the following PR to the 7.7 branch: [7.x][DOCS] Adds ML related items to release highlights #64299 ### Checklist - [x] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials [skip ci] Preview: http://kibana_64424.docs-preview.app.elstc.co/diff::Oops, this is part of the ""notable release highlights"", so it needs to have external links. ```suggestion For more information about *{data-viz}*, see {kibana-ref}/xpack-ml.html[{ml-cap}]. ```::```suggestion For more information about *{data-viz}*, refer to {kibana-ref}/xpack-ml.html[{ml-cap}]. ```::",153046530d08068f07dfbc8f4cb59e7ea997fdce::3cd5280982a10614f9050a4b97ab8104463294d8::c4ec224a6bffeef7775fe6ba1348177137f143de::
https://api.github.com/repos/elastic/kibana,64398,7.x.ml.ui.rev::7.x,0,merged,:ml::release_note:skip::v7.8.0::,"## Summary This PR backports the following changes to the 7.x branch: [ML] Changes transforms wizard UI text #64150 ### Checklist - [x] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)::",f70829bae37fbde1640db6f12d39205de2debdc9::97010c63031dd969808931807c9edaa1e4e1bbfc::
https://api.github.com/repos/elastic/kibana,64350,rule_actions_mapping::master,0,merged,Team:SIEM::release_note:skip::v7.8.0::v8.0.0::,"## Summary Addresses #64097 for 7.x. The errant mapping is going out with 7.7, so we'll need to backport this to 7.7.1 once 7.7 goes out. Because this one relies on https://github.com/elastic/kibana/pull/64029 the 7.7.1 backport will probably just end up being a separate branch. We ended up not needing a migration because there are no data changes necessary; this just prevents `params` from creating mappings that we don't want/need. ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",9d11b4152fe2f1e41b463b614ae46aaf52ff4011::92c5ebb1d7c9536cb7a37cf9b239d76302852efe::
https://api.github.com/repos/elastic/kibana,64299,7.x.ml.rh::7.x,0,merged,Team:Docs::release_note:skip::v7.8.0::,"## Summary This PR adds a section about the data visualizer to the release highlight. ### Checklist - [x] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials ### Preview http://kibana_64299.docs-preview.app.elstc.co/guide/en/kibana/7.x/release-highlights-7.7.0.html#file-uploader-highlights [skip ci]::AFAIK this is still referred to as the Data Visualizer ```suggestion === {data-viz} now recommends {filebeat} config ```::```suggestion experimental[] If you upload a file to the *{data-viz}*, it now has the ability to recommend a {filebeat} ```::```suggestion configuration. You can then use {filebeat} to add more data of ```::I think it would be helpful to add a link too: ```suggestion For more information about *{data-viz}*, see <<xpack-ml>>. ```::Since the side navigation is constantly changing, we don't include it in our screen captures. ::To meet accessibility requirements, we are no longer using `see` in our documentation. Instead, we are using `refer to`. For example: For more information about *{data-viz}*, refer to <<xpack-ml>>.::Could you tighten up the first sentence a bit? I'm getting stuck on the `it` part. Maybe something like: When you upload a file to *{data-viz}*, a {filebeat} configuration is recommended for you to use. ::Oops, I hadn't heard of that change and reverted it when I fixed a broken link in the backport PR.::",546b28a4a5fbc3f82b2a50d3b9d595a1ef3dfef5::6b78b178549fda18535f4fdd73c84731f9376e2a::1ffcd70e216cf2353ba5709464a954c9b491555b::df13b42f8100e80917c4f08f3dd4506ea900d798::
https://api.github.com/repos/elastic/kibana,63820,revert-63569-backport/7.7/pr-63093::7.7,1,merged,Feature:Alerting::Team:Alerting Services::release_note:skip::v7.7.0::v8.0.0::,"Reverts elastic/kibana#63569 In a moment of confusion this backport, which was supposed to wait for 7.7.1 was merged into 7.7.0 instead of being closed. This reverts that merged backport.::",c670dab2d2ca07c22de65b4fed7be339db6ce564::
https://api.github.com/repos/elastic/kibana,63558,apm-63113-fix-ie-service-maps-render::master,0,merged,apm:test-plan-done::release_note:skip::v7.7.0::v7.8.0::,"Closes #63113 by limiting service maps to only draw certain shapes in IE 11 without icons. Also fixes flex bugs in the popup details. IE11 after fixes: ![Screen Shot 2020-04-15 at 2 00 39 AM](https://user-images.githubusercontent.com/1967266/79325811-ac720780-7ec6-11ea-8e96-182680f30cf1.png) ![Screen Shot 2020-04-15 at 2 39 34 AM](https://user-images.githubusercontent.com/1967266/79325835-b431ac00-7ec6-11ea-92c5-5745e252cec0.png) ::we are using this in public/components/app/ServiceMap/icons.ts as well, should we put it in common and import it from there in both places?::Actually, now that I think about it, the flag in `icons.ts` is now unnecessary since the `iconForNode` function is never called now (from `cytoscapeOptions.ts`. We can address this in another PR since this is already merged and backported now.::",e08fe3d17a41c655bb7aea1fa8744031ea16c574::
https://api.github.com/repos/elastic/kibana,63540,event-log-add-es-functional-tests::master,0,merged,Feature:Alerting::Team:Alerting Services::release_note:skip::v7.8.0::v8.0.0::,"Resolve #55642::We may have to mock package.json like [here](https://github.com/elastic/kibana/blob/master/x-pack/plugins/event_log/server/es/names.test.ts#L9-L11) to avoid breaking tests whenever backporting or bumping versions.::This as well may cause version issues when package.json is upgraded.::Are we able to replace with this a retry.try on the code below to avoid flakiness?::> Are we able to replace with this a retry.try on the code below to avoid flakiness? Same here::we could make use of the logger timing functions here, to make sure the start/stop/duration fields get set - we'd want to insert a delay of maybe 500ms or so between the timer start and stop, and then we can test that the time in the event document is > 500ms and less than some much larger value (10 seconds or so? )::I don't think we need these routes - the start/stop timing methods on the logger are designed to be used to set the relevant timing information in a single event that gets logged.  I think we already have some jest tests for these, that's probably all we really need to test for them, I think.  Or we could have one of the test loggers fixtures write do some more realistic timings - I made a note of that in the `logEventRoute()` ^^^::",2922ab681bf33698b64d98aa01679e3578860030::b733b16e932ea4da68c0644500a2b5b19e90746c::86b17f091f4e61a90fc223ae87bdf78bf1016cdf::bdaa58a333d3d2309b7144d5f3e74aaf1347b3be::31384cec6ed67acf3b95d985576b18cc1eb9f0f5::420253ce78b76c95eefd7d87e928a9705256b1dd::41e96fbb4cbf7f97ae09be40c0e2f08a85cd728a::65b374434d7043ef6e28c68450456c2e92a32e94::2334547a0cd750777ed5c5e40859a1b0df0e7612::5b7b65f56b04ac5996b974aa65c98756be58e96c::a446b64385795245e20adc1977c71eb2c1bfb162::
https://api.github.com/repos/elastic/kibana,63093,alerting/deleted-alert-error::master,0,merged,Feature:Alerting::Team:Alerting Services::release_note:fix::v7.7.1::v7.8.0::v8.0.0::,"## Summary Detects if a task run failed due to the task SO being deleted mid flight and if so writes debug logs instead of warnings. Detects if an Alerting task run failed due to the alert SO being deleted mid flight of the task and if so ensures the task doesn't reschedule itself (as it usually would with other types of tasks). Ensures that the operation of deleting or disabling an Alert won't fail if it fails to delete an already deleted task (a task might preemptively self delete if its underlying alert object was deleted, even if the overall delete operation wasn't deleted). Closes https://github.com/elastic/kibana/issues/42477 ### Checklist Delete any items that are not applicable to this PR. - [ ] ~~Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~~ - [ ] ~~[Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials~~ - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] ~~This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~~ - [ ] ~~This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server)~~ - [ ] ~~This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility)~~ ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::Tested this locally and can confirm the task gets removed (stops running each 5 minutes). Though there is still a log like below that is made. This comes from a line above (~332). As a solution, it could follow task manager's approach and become a debug message in this situation. ``` Executing Alert ""0086e8a2-f588-4cd9-82d4-5978ee33c55a"" has resulted in Error: Saved object [alert/0086e8a2-f588-4cd9-82d4-5978ee33c55a] not found ```::IIRC, we're planning on de-Boom-ifying alerting plugins, so hopefully when that happens we can figure out a better story here.  Worth a comment, I think. One theoretic problem with this today is that pre-registered actions have user-specified ids, so it's possible someone could game the system with a carefully crafted action id.  In practice, I believe the id's here are prefixed with `action:` or such anyway, so I think it's safe, and the worse case is they'd see a message we're trying to hide? ::Was there a separate issue for this - that the task wasn't actually removed in this case and so kept running forever?  I didn't see one in a quick pass of the issues, maybe we never created an issue for it.  ::The issue is fairly new, I figured we'd re-use the original issue to fix the removal of the task as well (https://github.com/elastic/kibana/issues/42477#issuecomment-610460266).::Yeah, this is definitely not going to work once Boom errors are removed. We're kind of counting on the fact that by using SavedObject's helper functions in the tests - it'll force a conversation with Platform when they remove that code, which will trigger us to find another solution. I can also add a comment, but I counted on us using their code to be a more reliable trigger than a comment that will only become relevant when we're trying to figure out what has already broken. :)::I've refactored it a bit - we now use a unit test to ensure that the underlying error created by the Saved Objects helper actually parses as a string format that contains the id correctly. This way, if SO remove Boom errors, this will still work. But if they change the format - it will break on CI and force the conversation. :) ::This feels yucky enough that I feel like we should ask for a better helper - like being able to pass `alertId` into that `isNotFoundError()` function, rather than text searching the error message ourselves.  The `alertId` values are UUIDs today, which seems safe enough to test for, but who knows what tomorrow holds - action id's can now be user-specified via pre-configured actions ...::I like these ""warn or debug"" flows, especially since it feels like we don't have enough debug logging to begin with :-)::Yeah, that's fair, but as there seems to be pressure to get this backported to 7.7, I think we'll have to defer that.::",af4fa926f9bca63e96e46bc84ec7f80a7d477096::2cf87449e378413d76a53090a2cfef16530e3c2f::4d9dbbad860a3c58dddf0b36fece27803674c59d::9353f75b466d71732ac5e9b22c4c34561ffbd16b::876dea5f142e332e4e0ebefe9aba0822ccf135e5::af7f011799af085e8f651284eebeb937832b335d::2eb26397c6000ee7d3b301ad66cd9e03cf0ed5ac::c50ec7d83a9f3c9e069d4260c575fe58095876ea::6813fa9fb313dd2fa15c80a5d2dbabc405c18114::435b4874a880825137c486f139004613ec24b012::636ff99e1df3fb87c44c2fac9372b73e2924b733::522bd13f9b6f2f20fa173631271ffcda71dcc60d::c5cdea9caa0e376c5f0dff7777f17aadb11f74dc::
https://api.github.com/repos/elastic/kibana,62823,test/fix_flaky_discover::7.7,0,merged,release_note:skip::test-failure-flaky::test_ui_functional::v7.7.0::,"## Summary Resolves https://github.com/elastic/kibana/issues/61714 This is almost the same as https://github.com/elastic/kibana/pull/62418, but a css selector was changed in `clickFieldListItemVisualize` : ``` const field = await testSubjects.find(`field-${fieldName}`); ``` because of the discover sidebar was moved to react in 7.x and selectors changed a bit, so the backport was not suitable : https://github.com/elastic/kibana/pull/62547 ### Checklist Delete any items that are not applicable to this PR. - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",ade988a8a3abcc7faae29b9c1edb159b9f719021::
https://api.github.com/repos/elastic/kibana,62720,implement/link-data-plugin::master,0,merged,Feature:Embedding::Team:Operations::release_note:skip::v7.7.0::v7.8.0::v8.0.0::,"In order to deal with the excessive size of Kibana platform plugin bundles, caused by a number of issues (outlined in https://github.com/elastic/kibana/issues/62238), this PR updates the bootstrap logic to load the `kibanaReact`, and `kibanaUtils` plugins before the application/core bundle and rewrites all imports to `plugins/{id}/public` for these two plugins to reference the exports from the plugin bundles directly, without bundling their source directly into the separate plugin bundles. We can merge this into master and backport to 7.7 to keep things consistent, but there are a few plans bouncing around that might make this unnecessary as soon as 7.8.::Typo: kibanaReact -> esUiShared::KibanaReactPlugin -> EsUiSharedPlugin::Why did you decide to exclude it? `watcher` plugin on the current branch is 2.4Mb, on yesterday's version with `data` plugin included in the common bundle it was ~150Kb ![2020-04-08_09-52-09](https://user-images.githubusercontent.com/3198181/78758635-b81d7580-797e-11ea-8fc9-db2ea250fc08.png) ::Are we going to add proper tree shaking in `v7.8` to address the root problem?::Execution order for plugins is not important and the script could be `async=true`. In practice, I don't see any difference even with x4 CPU throttling, though.::If we can get it working then yes::Because it has weird side effects that caused bugs and I spent a bunch of time trying to debug them with @lizozom but we couldn't figure out what was causing the `useKibana()` hook to stop working in plugins like graph. We can always follow up and share the data plugin if we figure out how to make it work.::For plugins? The execution order of the scripts which reference each other via the global `__kbnBundles__` variable definitely matters.::",5fed50477cf560810a8e91a496e40e8dd905d355::3a4d545a2002711901aa2016d4001d94e7cb79b6::916cc3f26cb6c8c777df2a0ee29a7b9ce1d1fa9c::959650ffa7c1558d802ef4152866947eb9abe2ec::aa2c3c257658992ed3ab0ba13ed21758dd3bdc92::70e72eb24893effaa74202c8f45d7dab66117b8f::7c9c51e38eac6420b7f9daca539eaaf5e1073997::dbac5f9673a3ef95d8a7569e1f64b42c8bf806ca::0c94376f3ebd26b651b7a0795149a8204b245b25::3a3fbe73c24678c38da8340338c9ad81b8b0aa24::08d881ff5afcabfe7f5d535c60a125135116d710::a8bac54b9d4666aa2798561d3abf6c3359431b4a::26a99cefdd30c9aef6ba27b117859dd235a444c9::d3ae538d7c1154690abfb898fd3e80fa3ca8f7bf::d77a8923989bf16e9c3bc685d0744c3946bf38a0::312cfd290588223d71bd533f53ae6a9bbd8dd956::eb84a72bbfc32de73b935c3b67cd14717aad2477::1da77f807abcce6d50808c008459b855491f6db3::ade184e6209614b34faf3c2f661e2dceb7bbfa69::9f0c5242acc65f840bd7f39b11f72072c8a87bd2::5eed7a957dd9b1f7789727d0087500b789269033::a64b2a7f647f44f6d1941dba4ba39076ce5d74d9::f14e9ee604ae8f0bb664a04c6966e337254d2659::3a2b7dc9aa9ab60ac75fb668c2759632ef9bd0a3::7f3b8194eb69103d97b8d51c54942f1db98827d5::4d715659db97fe26b30160f9f6785a759399d087::5195a800bfaaf856f4cf98f47c4b154d7b788b6e::2761f4dfcb7ab913d00304daa8734cd050eabbe4::4970b549d5951fd2f0066af5323e0b84c9a99bb5::06f5afbcef2423a004031426fabd127c13a0d8c7::
https://api.github.com/repos/elastic/kibana,62500,reporting/server-config-np-switch::master,0,merged,Feature:NP Migration::release_note:skip::v7.8.0::v8.0.0::,"## Summary Followup of: https://github.com/elastic/kibana/pull/62086 Replaces: #61696 #62086 shimmed the server code with a module that abstracts reading config settings in Reporting. This PR switches the internals of the shim to source the config from NP instead of legacy. ### Checklist Delete any items that are not applicable to this PR. - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [x] Updated docs to reflect latest log messages ### For maintainers - [x] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::`ts-ignore` was hiding this dead code::Config defaults are now being applied in NP code in `createConfig$`::For now, the only role of the Reporting server-side plugin in NP is to expose the config in the plugin contract.::Small nit: comment no longer seems valid...::@joelgriffith I need to hold off on this PR for a little bit. I just realized one thing this piece is missing is the replacement for setting a default for the `xpack.reporting.capture.browser.chromium.disableSandbox` setting. https://www.elastic.co/guide/en/kibana/current/reporting-settings-kb.html#reporting-chromium-settings > Defaults to false for all operating systems except Debian, Red Hat Linux, and CentOS which use true I think that takes care of all the parts we had on config defaults set at run-time.::I think it's just confusing the way Github renders the diff, but the comment is still valid to lines 82 + 84::I don't think this file previously had any purpose...::the `viewport` field was invalid at this level::This didn't need to handle the default for `disableSandbox`, because that default was being set in the Joi declaration of the legacy schema. The `createConfig$` function, in our NP plugin, replaces this function and does handle getting a default for `disableSandbox`::unused file::Oops, forgot to delete the legacy version of this file::Forgot to delete the legacy version of this file::this was a bug with pre-existing type defs::`userDataDir` is actually not in the reporting plugin config::cleaned up unused import::Would a config value of `false` here still disable the sandbox?::maybe good time to switch over to the `schema.duration`? ::ditto above::We can do that for 8.0 only, but not backport it. It would be a breaking change: if a user had this config existing in kibana.yml, it should not break when they do a minor version upgrade.::The config value of `false` **should enable** the sandbox; `true` **should disable** the sandbox I get regularly get confused about it, because the config key refers to a negative. At this point of the code, we check if the key exists in the user's kibana.yml: a non `undefined`/`null` value indicates that it is, so we can return the config as-is in this callback and leave the user's setting untouched. Hope that makes sense! ::Gotcha, makes sense::",886f976a91b52e3a693171c10f851610519eb993::207331161815ef729c3831f3e3811acb51a1bcaa::669a82d907898bcd90bdc5b9bbd4ffd5c280e9a2::cd44aa18f064414c3068c92c34cb269d35adb865::8944f79baeb26d023616629d4f292c86494a1e2f::77a943e12f6e0e28186e8309d7fde00abc12e4fe::f659f0900ae9ee16360f56dff54a065b55768402::bb90123b298bdf3429be4479c3468ef475969ddf::b09ff8aad4056eb522bc1295144ffd5ab4d45b6e::04c30abc748629b454f5dde5522e55ad18888239::0591c0c1c67904e973d10c24e551a7a3c88a2b7f::e423723584c907f286332ca8cd2732ca8189220b::89bdd617aece68b91fca7dcfd0ade8b57f7afb55::3e92310f160d82503a1d8a47b1cea78e3ce1d6d9::31237351bdce2ebb7650f7c1df3fc3c90cd4cd44::96f3a7e34e098fa3621406fd56bbf3860561e251::02b91b8d42e9bbf4dfe8f03e70fe1d5c0c1d29fe::5aab9642800555bfc268124947f15e01b26ca0f0::b0ab462fc20ae9f93b9b0cb2e5259c578af4ce82::1fb5f5f5377deb6a0f01326c2e9651f0d5256d75::619bcb420a38c702ba9e066c3e1bd29d006d95db::1339af9bf6ba3303d434643249bcbbf8148d4b17::e262dec337a01407d4c5bcde0d5e7fddbca2f86e::ccbcc026b40ae0d50e84d31ee894ab7a20fc4f78::7b1f8ec54c1442f90cd78e6d2435fe36f2e587a9::84eccad09786f33a58205645db24b2e888f9e13e::c7cefe942816b7d9726b4f5c78fdb52d9fcd9c3e::611e2aaae943404b02f03c870f412010398ba293::e72852623d3529b43c97049d78fbcca970dfcb30::a0e045b2b9664db2399abe96f775376c6c7df10a::8c19295b4212758ac6a8dd5dadcd9032d8005913::8916d73119419e6fbe60d87aed155dffa5495817::cc92486d4f18214abd3beed82fff6560f2b3a040::
https://api.github.com/repos/elastic/kibana,62229,nls/move-trigger::master,0,closed,release_note:skip::v7.7.0::,This doesn't actually do anything but will allow us to do a backport touching this file to fix #62139. ::,0266e233b2ee41b5cb0b9a6cef6149bc01f9a820::
https://api.github.com/repos/elastic/kibana,61965,task/delete-endpoint-app::7.7,0,closed,Team:Endpoint Data Visibility::Team:Endpoint Response::release_note:skip::v7.7.1::,"## Summary Deletes the Endpoint app from the 7.7 branch since Ingest is also deleting their app from the release.  Ingest PR: https://github.com/elastic/kibana/pull/61911 We'll continue backporting to 7.x, this will only affect this current release. Clicking around, the app still runs fine ![image](https://user-images.githubusercontent.com/56395104/78030584-52067200-7330-11ea-9615-6a6515f73ab3.png) ![image](https://user-images.githubusercontent.com/56395104/78030629-63e81500-7330-11ea-9093-d46a6492f6c5.png) ::",fe330787593a98a79328b9b4e7bc20f9cfde6bf8::
https://api.github.com/repos/elastic/kibana,61753,check_ml_jobs::master,0,closed,Team:SIEM::release_note:skip::v7.7.0::v7.8.0::v8.0.0::,"## Summary This is a simplified version of #61715 for 7.7.  Once this is merged/backported, #61715 will go to 7.8. Copying the relevant description from there: > Checking of ML Jobs during rule execution, and setting of rule status appropriately. Things required to get that to work: > > * Add explicit, optional dependency on ML plugin > * Expose mlClient from ML plugin in order to use e.g. ml.jobsServiceProvider This PR excludes the refactoring done in #61715, and consequently leaves the `eslint-disable complexity` directive in our rule alert executor. ### Checklist - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",54b326522ff8f7811826c6edf6c26afec135343f::42240d07a9826a4b56d4d51ec90836f18f68b6b6::ec5cd887c031b2e1e0d35283e094ee83426542fd::eae7406e8bc0677fd26bb275b1b54721c6a1fc2a::0919dd643b63aa2e7fd97dd3621caf2a588801ab::
https://api.github.com/repos/elastic/kibana,61467,blended_discover::master,0,merged,Team:Geo::release_note:fix::v7.7.0::v7.8.0::v8.0.0::,Updates Discover link to maps to use blended layer when geo field supports aggregations. Question: should this be backported to 7.7?::,b10f07266b7b83f21f4028e8352400c2c4415eac::
https://api.github.com/repos/elastic/kibana,60508,bugfix/7.x/sr::7.x,0,merged,Feature:Snapshot and Restore::Team:Elasticsearch UI::release_note:skip::v7.7.0::,"This PR fixes a regression caused by the 7.x backport PR of SR NP migration: https://github.com/elastic/kibana/pull/59520. There are differences between `master` and `7.x` branches for the snapshot and repository API endpoint handlers due to breaking changes in ES snapshot APIs. More details here: https://github.com/elastic/kibana/pull/39533. ### How to test - Create a policy, and execute it. Verify a snapshot appears under the ""Snapshots"" tab <img width=""1257"" alt=""Screen Shot 2020-03-18 at 9 31 45 AM"" src=""https://user-images.githubusercontent.com/5226211/76965837-63488b00-68fb-11ea-8c17-8e75747cc4fd.png""> - Verify the repository details panel includes the correct snapshot count. <img width=""295"" alt=""Screen Shot 2020-03-18 at 9 31 53 AM"" src=""https://user-images.githubusercontent.com/5226211/76965845-66dc1200-68fb-11ea-8695-016a92f0217c.png""> ::",14616f7a827610cacdcf32cb3d3f3d5e1c430ed7::
https://api.github.com/repos/elastic/kibana,60507,regenerate-core-docs::7.x,0,merged,Feature:New Platform::Team:Core::release_note:skip::v7.6.2::,"## Summary The backport https://github.com/elastic/kibana/pull/59729/files didn't include changes to `src/dev/run_check_published_api_changes.ts` which caused the filenames between master and 7.x to be out of sync since backports with documentation changes would add documents with the updated naming convention. ### Checklist Delete any items that are not applicable to this PR. - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",d424ce6ba96449429d206d9a8d17cefea932925d::
https://api.github.com/repos/elastic/kibana,60246,console/settings-autocomplete::master,0,merged,Feature:Console::Feature:Dev Tools::Team:Elasticsearch UI::release_note:skip::v7.6.2::v7.7.0::v8.0.0::,"## Summary Fix https://github.com/elastic/kibana/issues/60234 (👆🏻can be backported to 7.6.2) Fix https://github.com/elastic/kibana/issues/60245 (👆🏻 Fixed the init bug that caused the x-pack console extensions to be loaded too late) Also included some code clean up: * Removed all traces of ""ES_6_0"" api. This was unused an unnecessary overhead for now. The ES stack should always ship pointing to one version of ES so this was also misleading. * Refactored the settings declarations into JS so that it can be shared between the `PUT {index}/_settings` and `PUT {index}` (create) endpoints ## How to test Test the endpoints in the screenshot below and test that x-pack autocompletions are included in the suggestions (e.g., `_ml`). ## Screenshots <img width=""496"" alt=""Screenshot 2020-03-16 at 12 03 01"" src=""https://user-images.githubusercontent.com/8155004/76750729-07f18e00-677f-11ea-9e8e-d3a1810c515b.png""> ::nit: it is best to leave absolute imports on top and then the relative ones.::",2e95778744daa2427f2118dcf6e4eb6b07ee26d1::26cac606fe3e8aaaf8fb5f3b11e3755ed1d1cf77::6625b09da4bf8448a1df87fed9342d20a115826b::61de292143b73e4683cad9990d39907d8eb2604d::
https://api.github.com/repos/elastic/kibana,60240,6.8-issue-xxx-saml-idp-login::6.8,0,merged,Feature:Security/Authentication::Team:Security::release_note:enhancement::v6.8.8::,"In this PR we allow SAML IdP initiated login even if SAML authentication provider isn't configured as the first one. We achieve this via prioritizing SAML authentication provider during authentication flow if request has `SAMLResponse` parameter in the request body. Additionally PR adds SAML integration tests for the `xpack.security.authProviders: [basic, saml]` scenario (majority of the changes in this PR). __Note to reviewers:__ please ping me to get test instructions if needed (IdP metadata files, ES config etc.). ~~The first commit is coming from the backport that's not in 6.8 branch yet, please ignore it as it won't be included into final PR.~~ ~~__Blocked by:__ https://github.com/elastic/kibana/pull/60233 (backport)~~ ""Release Note: Kibana now allows Identity Provider initiated SAML login even if `saml` authentication provider is not configured as the first one in `xpack.security.authProviders`.""::__note:__ this particular line can be reversed to prefer provider from the session instead that would prevent SAML login if user has an active session already (with basic/token provider) and require user to explcitly log out first. This may remove potential confusion when users semi-silently re-authenticate themselves (may have been solved with `overwritten_session` we have in more recent versions of Kibana). But current solution feels a bit more convenient for the admins that would log in to Kibana from Cloud console and would know what they are doing :man_shrugging: What do you think?::Since this is effectively called on every authenticated route, should we also test the the request's `route` matches the expected `/api/security/v1/saml` endpoint? It might not be problematic in practice, but if a user with a `basic` or `token` initiated session hits an arbitrary endpoint with a `SAMLResponse` entry in the payload, then we will prefer the `saml` provider over the session provider. Alternatively, we could update the `_providerIterator` to prefer the session's provider as you suggested, but that comes with the caveat that existing sessions must be logged out before attempting a SAML login. `_isSAMLRequest` is similarly lacking here, but since that's only called as part of the `deauthenticate` flow, it's not actually problematic. ::I'm leaning towards leaving it the way you have it (but see my other note below)::__note:__ most of this is copy-pasted from the old/existing tests (`../saml_only/saml_login.js`).::__note:__ definitely not the best approach, but we don't have `login` method support in this Kibana version yet. Generalizing `request.loginAttempt` (used only for username/password right now) feels a bit more complex/risky to me.::Yeah, that's a good idea, just to be on the safe side. I'll add check for `/api/security/v1/saml`, thanks!::Good, it turns out we're sharing the same concern, I'll handle it with the additional check for `/api/security/v1/saml` as you suggested below.::Fixed!::",d16c12b3655d7402f9b0ba227297090a9a7e563e::05ed524861ea7623b5a5715a9d8784ce6c79f462::
https://api.github.com/repos/elastic/kibana,59846,application_usage_7_day_fields::master,0,merged,Feature:Telemetry::Team:KibanaTelemetry::release_note:enhancement::v7.7.0::v8.0.0::,"## Summary Adds two more fields for each application that captures the last 7 days, as requested in https://github.com/elastic/kibana/issues/59761. ![Screen Shot 2020-03-10 at 15 15 17](https://user-images.githubusercontent.com/11909450/76365267-23264e80-62e4-11ea-8a66-5961b755b546.png) [note] backport required to 7.x Fixes https://github.com/elastic/kibana/issues/59761 ### Checklist Delete any items that are not applicable to this PR. - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [x] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ### For maintainers - [x] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",d0a1ed3f96af030539eedfe928e47aeb655e75a6::47159dfd033812e57c154bdab9960c37b4374406::e8d2654e5c9b867b9325d0086cf7c11faa5ab33f::
https://api.github.com/repos/elastic/kibana,59096,remove-cors-docs::master,0,merged,Team:Core::Team:Docs::release_note:skip::v7.7.0::,"## Summary Removes documentation for the dev-mode-only settings under `server.cors`. These are not supported in production and are confusing users (see https://github.com/elastic/kibana/issues/16714#issuecomment-590970410). Needs to be backported to 7.x, 7.6, 7.5, 7.4::",82a81c5670664bf67b59e954ddf3fc9cdbc616a4::7d21a7ad6c6e1fce5b6f6d457b25638102468a4d::
https://api.github.com/repos/elastic/kibana,58677,ess-trial-attribute-6.8::6.8,0,merged,Team:Docs::release_note:skip::v6.8.0::,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `yarn test && yarn build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. --> This PR switches trial sign-up links over to the standard attribute we're introducing that should provide some metrics for how effective these links are.﻿ Separate PR for 6.8, as the backporting is merge conflict-ey. ::",74ad2e1837736b0947c3ab10a3a67b512f5e4b2e::898a57998648b54f6f262c5eb86d50d9bcabb2ad::
https://api.github.com/repos/elastic/kibana,58576,logs-metrics-ui-fix-shim-config::7.6,0,merged,Feature:Logs UI::Feature:Metrics UI::Team:logs-metrics-ui::bug::release_note:fix::v7.6.1::,"## Summary This fixes the configuration file schema of the `infra` plugin in the new platform shim. It thereby backports some of the fixes later made during the full migration. ## Testing Prior to this, any setting like `xpack.infra.sources.default.logAlias` would not be applied because the schema was incomplete. `logAlias`, `metricAlias` and the `fields` should now be correctly read from the config file if no source has been configured via the settings UI.::",2878afde7e64886fd2f44232704df4ba65c6f696::
https://api.github.com/repos/elastic/kibana,58274,inc-unit-tests::master,0,merged,Team:SIEM::release_note:skip::v7.6.1::v7.7.0::v8.0.0::,"## Summary Updates unit test coverage to 100% for routes and other files that had pre-existing test files written. Fixes some bugs / removal of dead code. ### Checklist Delete any items that are not applicable to this PR. ~~- [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~~ ~~- [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials~~ - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ~~- [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~~ ~~- [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server)~~ ~~- [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility)~~ ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::I like this. Much cleaner than the way I did it on import_rules_route test 👍 ::See why it would seem this is never hit when running end to end tests since it stops you from creating a request without `rule_id`, but can hit it on unit tests. May be good to keep as it is * possibly * an attainable case.::Thank you!::Good call. I added it back here https://github.com/elastic/kibana/pull/58274/commits/640d0411bcd36db0ba889c37bdde9f8938faacd9 and added an additional unit test to show the validation on the route when ruleId is missing from rules on import.::Thanks for the link and the interesting comment that talks about it. I think that maybe our tests and techniques are growing to such a degree we almost need a bit more stable location for all of our test utils and workaround otherwise I would maybe move this section to a localized `__mocks__/utils.ts` to reduce boilerplate? Optional: this is still fine as is.::As some of these become repeating patterns of: ``` clients.actionsClient.create.mockResolvedValue(createActionResult()); clients.alertsClient.find.mockResolvedValue(getFindResult()); clients.alertsClient.get.mockResolvedValue(getResult()); clients.alertsClient.create.mockResolvedValue(getResult()); clients.savedObjectsClient.find.mockResolvedValue(getFindResultStatus()); ``` I wonder if they could be moved into a test utils or moved into a local function for this file? Optional, just thinking of ways we could reduce boilerplate as we gain collections of tests. Sometimes you can't as each block of code is just so _slightly_ different than the other ones.::Looks like a bug fix we are going to be backporting 👍here found by tests::I see, I see.... This is all wrapped in a try / catch for safety. 👍 This is good.::Looking at the `isRuleStatusFindType(ruleStatus)` you shouldn't have to do a double tap with `ruleStatus?` as that is check should return false and never an undefined or null if `ruleStatus` is null? But it's ok to keep as the line below has it and you're doing a back port. But with all the tests you could push in a null to this test or the `isRuleStatusFindType` and see that it will return a boolean `false` and not a true for `ruleStatus` ::@FrankHassanabad @dhurley14 since this is all changing in #58292 my preference would be to defer any significant refactoring here. To your point, though, my plan is to define a `createMockRequestHandlerContext` helper that's prepopulated with the plugin-defined mocks. As tests need to override these behaviors, they can do so in a similar manner to what we have now: ```ts describe('a test', () => { let context = createMockRequestHandlerContext(); beforeEach(() => { context = createMockRequestHandlerContext(); context.alerting.getAlertsClient.mockReturnValue(myMockAlertsClient); }); it('works', () => { const request = httpServerMock.createKibanaRequest(); const responseSpy = { ok: jest.fn() }; handler(context, request, responseSpy); expect(responseSpy.ok).toHaveBeenCalledWith(...); }); }); ``` While I can't yet speak to the extend of the issue, some cursory investigation showed that some of these mocked values are unnecessary (I commented out a few mocks in a few tests, and most of the tests continued to pass); my hope is that these third-party mocks will cut down significantly on the verbosity of these tests.::You can clean this up where you don't have that return `null` and you're not using an `any`: ```ts export const convertToSnakeCase = <T extends Record<string, unknown>>(obj: T): Partial<T> => { return Object.keys(obj).reduce((acc, item) => { const newKey = snakeCase(item); return { ...acc, [newKey]: obj[item] }; }, {}); }; ``` Worked on my machine at least.::Typescript is the biggest best friends of best friends here. Never ts-ignore your friends. ;-) This looks like what you really intended for was this: ```ts const { alertTypeId, ...rest } = getResult(); alertsClient.get.mockResolvedValue((rest as unknown) as RuleAlertType); ``` or another way that is still type safe would be just a mutatious delete like so: ```ts const alertsClient = alertsClientMock.create(); const result = getResult(); delete result.alertTypeId; alertsClient.get.mockResolvedValue(result); ``` Then you don't have to worry about doing odd casting since delete is a side effect and get no `unknown`. What's tricky is that this test is incredibly easy to have false positives and by deleting this code the test still passes, so buyer beware.::I really would avoid `ts-ignore` at all if possible. It is a really terrible thing to use as only last resort. In this unit test you can either do the `unknown` cast trick or just flush it out normally: ```ts alertsClient.find.mockResolvedValue({ data: [], page: 0, perPage: 1, total: 0 }); ``` I would flush it out normally as a regular test case. Also you can just use the typical find result mock which already returns an empty value: ```ts alertsClient.find.mockResolvedValue(getFindResult()); ``` It's just poorly named as `getFindResult()` when really it returns an empty find.::👍 ::Sounds good @rylnd , totally agree.::Ah yes that is true. I also can probably remove the nullish coalescing and just grab the first object from the saved_objects array. With the `isRuleStatusFindType` I am pretty sure that should remove any need for having the nullish coalescing.::I will revisit this one. I definitely don't want false positives.::Working through this fix I found a pre-existing bug which I will open a fix for in a separate PR.::",b22677efda1a59516143a180ad0c3d72e63bd1f7::37d6f3d9d8228c10cf9262157a1036bf74dd35ab::bea01e001b3d0166d3a43f4e917809a336a07957::cf5e4b5ec92539b85930943b185b2a16000ba10d::27222ae293f764706d49518c2609153e0f5557f1::7a7951063318b671ea13f8ea4dc6785c877cfb21::c46caf6489d20f292d6374e16eeb1a0e03e0df65::8d7cff2716c1cc67e0900b7d25f388cc396632e2::32c6d41aeaf018b15f7568b6c72ab88b312292ca::ff2de4506e0ea185cda51d5f9ad622c28b4ff591::d6f98d35d9b2064d61647524588055a1054a4120::c12ce9e594ec6ff83a406abc73d0612fd3dab39a::3c4ea2a89e05719cb8a5e5f86cd2efcf9ee9b8b4::89a35b2dd2efe092b1063fe9df6143660f8f6557::adc250c56eb8d05a9d80b3835b6a943a57f0487e::db0aaaf7349e0c41c5a84bb05d4906e2f6d80a97::b049a84ee5633b8794f5238de7a32c52e0569a7a::e05ff4d8db17801add91a34ff2bebce4f14684b9::17affb235d2f3900cebcb2c544d36854b44c3f4a::82835b9026de79ecfb4d772acd71a98e91e6f362::640d0411bcd36db0ba889c37bdde9f8938faacd9::
https://api.github.com/repos/elastic/kibana,58034,ua/chore/move-out-of-legacy::master,0,merged,Feature:NP Migration::Feature:Upgrade Assistant::Team:Elasticsearch UI::release_note:skip::v7.7.0::v8.0.0::,"## Summary Move Upgrade Assistant out of legacy folder. This required the following changes: - Updating dependencies in Reindex service and the Reindex worker (functionality should be completely unchanged) - Migrate to using Route handler context for getting the elasticsearch dependency scoped to a request - Replace the dependency on x-pack with a dependency on licensing - Fix all Jest tests ## To do - [x] Test `kibana.yml` config - [x] Run through of reindex worker ## Additional Fix https://github.com/elastic/kibana/issues/51011 Also note that the management section registered under `kibana`. Using the new platform version moved Upgrade Assistant to the Kibana section (see the screenshot). Is this change acceptable? Given that the original code had it as `kibana` but it appeared under the Elasticsearch section: <details> <summary>Screenshot of management section after migration</summary> <img width=""263"" alt=""Screenshot 2020-02-20 at 13 43 18"" src=""https://user-images.githubusercontent.com/8155004/74934884-76913500-53e7-11ea-8db6-9c588b201176.png""> </details> ## Backport This work will need to be backported to 7.x, there is special handling of APM indexes there which will probably lead to merge conflicts that need to be resolved. ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::We might want to keep the alphabetical order here. ::If the @elastic/kibana-core-ui could provide us with an alias to `src/core` it would be awesome 😊 ::Oh but we have an alias to `src/core` can we remove the relative path above?::I am confused with the difference between `src/core` and `kibana/public`. Do we have some info about it?::nit: in the order of import, this one should come last (as a pattern we try to follow) as it is the closest to the current file.::It seems strange that we have a double-check for this, don't you think? If `cloud` is not present, doesn't it mean that it is not enabled? Can `cloud` plugin be present and _not_ enabled?::nit: Maybe here too we could use the alias `src/core`?::nit: same here for the alias path and the order of import. This should come before the previous one `import { getUpgradeAssistantStatus } ...`::Is it a good time to refactor this naming with the `callAsInternalUser` used everywhere? 😄 I had to look at the code to understand what this new `APICaller` was::nit: as my previous comment, absolute import like here and `rxjs` bellow should come at the top of the file.::nit: same note about using `esAPICaller ` vs `callAsCurrentUser` used everywhere::Not sure I understand this logic, could you explain? Why is the license plugin responsible to give back the legacy `xpackInfo.feature()`? I asked the platform team as I had something similar in Snapshot and Restore and they answered that we have to set an optional dependency in `kibana.json` for ""security"" plugin and then check its presence in the `setup()` phase.::nit: absolute path (alias)::By curiosity, what is an `UI Open`?  😊 ::nit: sorry had to add another comment for those super long relative paths! 😄 ::Should this be `uiReindexOptionCounter`? (and below in the `incrementUIReindexOptionCounter()` handler)::So now I am confused about all my comments about using an `alias`. This change is because we don't have an alias setup?::nit: This kind of tests are very obscure, but I know that this PR is not to improve them!::Don't all the routes in upgrade assistant also require license check?::nit: why not directly `const callAsCurrentUser =` ?::Can it ever be a `Boom` error?::Same here about boom error::I think it would be better to have the validation schema outside and then use ```js request.body as TypeOf<typeof bodySchema>; ```::Same here::I don't think there is a difference, but for some reason when I import existing things (not types) from there it doesn't seem to work 🤷‍♂ . Also I believe some of these changes were introduced by my IDE. I will change them all to `src/core/public` so that it is consistent here at least.::Sure! We don't always call as internal user however. For instance in `reindex_indices.ts` on L66 we call as current user. So perhaps we can rename this particular variable to `callAsUser`.::Well spotted! I will have to add a comment here. Considering the broader context that we want to add functionality to Upgrade Assistant for logging Kibana deprecations, other plugins should be able to depend on Upgrade Assistant without Upgrade Assistant depending on them (which would create a circular dependency). Security is a very likely consumer of such planned UA functionality so we don't use it directly. But this deviates from the norm so will add a comment.::🤔that is a good question. We should follow up on this one (it was not there in the original logic).::",b631a40c2a67e87173c8da406bdccc69517a6f84::c1fe10af17ff0eb9fd52897ae573106ce0e269a0::0272a14ed488f3274524f8e63821b73bcfb45a31::e93348e021f8c465c8d399ae95621978abe6ec17::c7691a988730c81428c5699e4226ca5765c36eb2::5938e9197c8a4e77adf448e147f6d0a3368c84d1::64ec947f679e7f546eb405535496cb216771ddd6::e91d2487937dd3609e7c1aa7c3de4071791f6ef2::3362e9488db02b83410330ff88a8e28f55885591::1f646ec056b686a7af0a50479442720d3e8e4e95::b540a6ea573f31ec564c376091db472c0c8a709c::ee141c08fcce4c201798fd3988972951b565e096::a0e1bd2cefcbbee4f98503bcd6f8a59186a95858::db64a1857d972fedb58ff26a071b939ef65a9292::9684204bf56c5819dde16f7c4f536dbae8e0b10d::8d944bad5cb62d57700d7c5db02d5b9ac43f51f9::73c6267750599e5dd714937db83e0112861dc041::c8b2da128cbc001a445fb8ab4780033b39882382::b7d17db21480c385adffb525c1aeb177c616a81c::1d793d76319fc5e00004a8ecf85eafae5b8420d6::e4dba40eabf637fae6fae6e85551a5df78c4a467::5c32021b047407b1182d309790d52a5a838dba45::
https://api.github.com/repos/elastic/kibana,57774,ts-3.8-rc::master,0,closed,chore::release_note:skip::v7.9.0::v8.0.0::,"## Summary This PR starts preparatory work to upgrade to TS `v3.8`. Changes: https://devblogs.microsoft.com/typescript/announcing-typescript-3-8-beta/ #### Blockers External: - https://github.com/typescript-eslint/typescript-eslint/issues/1436 Internal: - [x] update prettier to v2 https://github.com/prettier/prettier/issues/7263 - [x] update babel packages https://github.com/elastic/kibana/pull/61037 - [ ] fix TS errors in `apm` plugin @elastic/apm-ui - [ ] [optional] update `cytoscape` & `@types/cytoscape` @elastic/apm-ui - [ ] fix TS errors in `timelion` plugin @elastic/kibana-app - [x] fix SO type errors @elastic/kibana-platform https://github.com/elastic/kibana/pull/58022 ### For maintainers - [x] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::A hack to mute the error: `Types of property 'data-test-badge-label' are incompatible. Type 'string' is not assignable to type 'undefined'.` We should extend the list of common props in `eui` with the known attributes if I'm not mistaken. @thompsongl @chandlerprall ::@elastic/apm-ui I need your help here to fix `APMRequestHandlerContext` which type is inferred as `any` ![2020-02-17_10-40-24](https://user-images.githubusercontent.com/3198181/74642633-a2a48000-5173-11ea-8a02-ab4b49cb96ea.png) ::@dgieselaar fyi::Looking into it!::@restrry I can't explain this - there's no reason I can see why this fails, and others don't. It feels like a TS bug, but I cannot pinpoint it.::btw - in my case, I don't see `context` as any, but the type for `context.params` is incorrect.::I also don't see `context` as `any` ![image](https://user-images.githubusercontent.com/209966/74743132-2d62a900-5260-11ea-9f23-6c30c4188d1a.png) ::@sqren is `context.params` type correct in your case? ::Hmm. It seems like it's not. On master I get this: ![image](https://user-images.githubusercontent.com/209966/74749036-cea22d00-5269-11ea-864c-3f1075d279e2.png) ::I think it might be related to the fact that `Params` interface contains optional props only. When I remove an empty object default from https://github.com/elastic/kibana/blob/96a0aa0266dfd1a8b83b15dd8ae0efd273520cf1/x-pack/plugins/apm/server/routes/create_route.ts#L12 TS starts inferring context type, but not params ![2020-02-20_11-38-44](https://user-images.githubusercontent.com/3198181/74926693-979d5a00-53d6-11ea-875c-be1ffe99f131.png) ::the file still contains some type errors. @timroes  @sulemanof  could someone take a look and fix the errors, please?::I'm not here until Monday, and my only guess right now is that this is a TS bug (either in resolving or in showing an appropriate error). Can someone flag this with the TS team? If there's not much of a rush I can look into it Monday. ::@dgieselaar take your time, we are blocked by external dependencies as well::I got a bunch of type errors due to `data-testid` not being declared on EUI elements. Our component library shouldn't depend on 3rd party libraries naming conventions, so I reconfigured `@testing-library` to use Kibana specific `data-test-subj` attribute instead.::(Thinking) npm really need a maven-like pinable version management for multi-projects...::Just wondering, as these are JS files: Did you manually grep for `data-testid` to 'fix' that ?::NIT: introduced typo?::To understand, are these added explicits types are a requirement for the bump or only cleanup?::yes::> To understand, are these added explicits types are a requirement for the bump yeah, it started showing error after TS version upgrade  ::This is a bug introduced by the stricter index signature checks introduced in 3.8. https://github.com/microsoft/TypeScript/issues/36935 The resolution was milestoned for 3.9, but there appears to be some interest to include a fix in 3.8::the fix was backported to 3.8. waiting for the next patch release 👍 ::updated to 3.8.3::",3018d18497e1eb8aef2ee53e870eea26b5436b04::4bab0a5276b574f48cdab4b271ee8b1d574d89d5::b9016ffd68e00c30d5c2155726fcac182e76af08::34b069d2de16fa5d5bc1f581f40d193393253d49::c62c8df7d42c0a20b3fe4e0fef6a8225012b9d3d::6c8c24980ab0304d69a7512859d9a5e33ea21c97::f2829928d5bfd045b6b665d695dbde9683dd43a5::647d2b70a36b6c695f6db84200b564dc8148b1ec::c561ee43a6f73158a19d79b27b24936d6cbdb574::82fcfdcbca8688d16e3bac3654dd1c74b942445a::fa4334fbc77c266eddde9382bb4f2f88f8448f69::1ab989437b054dabea66259db342484be9f430b3::1c25e1343bb878eba86af1162144c2363d99804e::3e1e35365c1dd518301897eb8c5c2ce9f1a16388::5fe5d5ce919694c18099a7c9d138840e8008fbd2::9d8c1705b3a417a506e88557fe6dbe0eecb3404e::b3489d96b927b7211cfe110c35bd63cef838fe66::33d3f9381b0eb847e27e7c893be640ddf308b1ce::822b5bd0768400da6ab3f504a4ddfaa3c73be892::9d517883b03bc3d886dae9bbeb4ed6aee9bd2e49::f13a2619a11ee22f2ae4b00d3ea92cfeec5edf9e::
https://api.github.com/repos/elastic/kibana,57614,ml-fix-cat-field-example-api-schema::master,0,merged,:ml::Feature:NP Migration::release_note:skip::v7.7.0::v8.0.0::,"## Summary Updates analyzerSchema to handle `filter` being possibly undefined. Ensures categorization field example endpoint tests pass ## NOTE: This PR updates master to match a schema update that is already in 7.x. This update to the schema was added to the backport for NP migration for job service routes https://github.com/elastic/kibana/pull/57403 to allow CI to pass. Master did not get the change as the original PR passed CI and was able to be merged because it passed before the tests for the api were added (https://github.com/elastic/kibana/pull/57471). The backport for those tests (https://github.com/elastic/kibana/pull/57566) was merged before the backport for the job service route migration. To solve this, I added the schema adjustment directly to the backport (https://github.com/elastic/kibana/pull/57595) so CI could pass and then created this PR to make that same update to master. ### Checklist Delete any items that are not applicable to this PR. - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ::",b956a122e7b1b470c4e06d81c2cf5d37499f158d::
https://api.github.com/repos/elastic/kibana,57584,kpm/new-line-chart::master,0,closed,Feature:NP Migration::Feature:Vislib::technical debt::v7.10.0::v8.0.0::,"## Summary Replace vislib line chart with elastic charts. https://github.com/elastic/elastic-charts/issues/66 ## Remaining tasks - [x] Finish Color picker https://github.com/elastic/elastic-charts/pull/545 - [x] Finish Click/filter handling https://github.com/elastic/elastic-charts/issues/548 - [x] Handle legend filtering https://github.com/elastic/elastic-charts/issues/717 - [x] Implement new stacked offsets - [x] Show values on bar chart - [x] Handle series naming - [x] Current time indicator - [x] Brush selections - [x] Domain margins https://github.com/elastic/elastic-charts/issues/706 - [x] Hidden tick and label https://github.com/elastic/elastic-charts/issues/711 - [x] Setting and getting series colors from visualization state - [x] Partial bucket annotations (aka ""endzones"") - [x] Verify correct minInterval for histogram charts - [x] Correct tooltip formatted values - [x] Match vislib sorting order (i.e. tooltip, legend and chart) https://github.com/elastic/elastic-charts/pull/813 - [x] Sort values by sum https://github.com/elastic/elastic-charts/pull/814 ### Release strategy This PR is near feature parity with existing vislib with the exception of small multiples (https://github.com/elastic/elastic-charts/issues/500) and stack offsets (https://github.com/elastic/elastic-charts/issues/715). The current plan is to merge without waiting for these two features and backport into `7.10`. A separate PR will be used to enable the plugin in `master`. A follow-up PR will add the small multiples and stack offsets features when ready. If all are features are ready by `7.10` and no bugs are outstanding the plugin will be enabled in `7.10` release. ### Checklist Delete any items that are not applicable to this PR. - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) - [ ] This renders correctly on smaller devices using a responsive layout. (You can test this [in your browser](https://www.browserstack.com/guide/responsive-testing-on-local-server) - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",49b95fc8a5233dd61352ca48b6b1f5263d903ed0::ab2dc8464acf15e5516ba7e0537dc5b73dc446dc::72bf93ffeddb2fc346cade54a94db36e9f8cbcd3::1ee0ccdf1133097f6777c4e881d971ff05139e99::81322442bd2b161109459ea9a3af74ec2fd364f5::767067a0592cb2ef2ed9780bb8f62398aef63b75::7440a85bea820799b8311b67561624aa9a5cf225::41723e8bcd0ad212395103a0fd1a6e007c17bbbf::e89596bb7bb52238ac5eb01bf401d59610f1173e::
https://api.github.com/repos/elastic/kibana,57405,dynamic-indexing-take-two::master,0,merged,Team:apm::release_note:skip::v7.7.0::,"Feedback from @sqren for non-indexed fields troubleshooting. Needs to be backported along with https://github.com/elastic/kibana/pull/54948 to `7.x`, `7.6`, `7.5`. [skip-ci]::",12b8d35c6dfe060a986498867f2d63e44b831b50::
https://api.github.com/repos/elastic/kibana,56648,backport/7.6/pr-56441::7.6,0,merged,Feature:Lens::Team:KibanaApp::release_note:fix::v7.6.1::,"This commit started as a backport of [Lens] Fix bugs in Lens filters (#56441), but is no longer a strict backport because `setAppFilters` in the FilterManager code was added in https://github.com/elastic/kibana/pull/55158 which is not going into 7.6::Great as a fix for 7.6.1, but consider using https://github.com/elastic/kibana/pull/56160 for 7.7 to avoid similar issues :pray: ::The fix using that code is already in 7.7, but I couldn't backport it to 7.6::Nitpick: Not sure if it's valuable (treat this comment as learning opportunity for me :D ) but in the query tests below we construct filters using setting Filter Store: ``` const unpinned = esFilters.buildExistsFilter(field, indexPattern); FilterManager.setFiltersStore([unpinned], esFilters.FilterStateStore.APP_STATE); ``` while here you construct the filter object. Maybe it's worth to unify it? ::I looked into this a bit more and specifically the `exists` filter has a different type definition than the other types. This is definitely worth highlighting to so I'm building the filters manually!::",b8c7cc427553de762f7a32a81efb393389f4a695::7af76da0432c88dfce33d521ff35ddc176c21e67::1659294332edbbc9ce4f9c42c086cd1d7ccc3087::c2f072583d95427da4dd13a4d20392cf07d78109::2d7eef3006cb07d6c62710fffddb0af39da27fd9::7011360d5d7e355bbebf443540a55f77872d89dc::4fff8e83fbc51895280f328eb754905c403c3aa4::4880d6bc6cf3748862b0c21703fa4b3c44c2433d::71144c6e839bb575260b73985dfb096df6d315c6::b6f5d4eb02025bd2fa172eb9d264ba68f165198c::3772ea18ee3f1cc4b9eace088332fead33e6aec3::19bd60a3a5e5209d92492c0ecf4e7ea7859a0e97::7870e5b9b09682af68e6efa2719f22dd6ff067a5::424a8b6bba56da1f55a37f99629b68855d5b2147::
https://api.github.com/repos/elastic/kibana,56304,dev/filter-manager/missing-store-fix::master,0,merged,Team:AppServices::bug::release_note:skip::review::v7.6.0::v7.7.0::v8.0.0::,"## Summary Follow up on: https://github.com/elastic/kibana/pull/56213 `AddFilters` method had logic which ensured that `$store` exists in filter object, but `setFilters` was missing that. I am not sure, if there is a way to reproduce the bug from the UI, except already fixed https://github.com/elastic/kibana/pull/56213. So the bug's impact is unknown. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::Remove this comment::small nit, and I don't really know what is happening here, so feel free to ignore, just thought maybe we could have a negative assetion here, too: ```ts expect(filterManager.getGlobalFilters()).toHaveLength(1); expect(filterManager.getAppFilters()).toHaveLength(0); ```::Improved 👍 ::note: FilterManager.setFiltersStore() sets new `store` only if `filter` is missing it::Maybe rename method? ::Agree that we should rename it. But I think we better do it in separate pr to keep this one scoped to filter_manager and just the bugfix which we backport to 7.6::",70174408ac3fbe2a99e95cd82f752c23765fe932::c0b6cbef9084358c49d48b713f44e7c88bf1dce4::068a0fef06cd8fd34b2a8cc92ddb499fce847d8b::d2fba7a0af5e89d39b1c51bcb86fc3aa5650abef::bcb012e4000228fbb58cb98641274af9e5d8445c::7bf3c884d23427fe66158ecdb35014a46a7e18c1::d98d2d70f097e1b3d436a73aba5cf8bad84e5c77::
https://api.github.com/repos/elastic/kibana,55861,fix-54125-3::master,0,merged,Feature:Alerting::Team:Alerting Services::release_note:skip::v7.7.0::v8.0.0::,"Resolves #54125 In this PR, I'm re-enabling the test for unmuting an alert. It was previously skipped here https://github.com/elastic/kibana/issues/54125#issuecomment-577346592 but realized after the actual issue was in 7.6 where https://github.com/elastic/kibana/pull/55095 was not backported to. I have now backported the fix in 7.6 and this test should no longer be flaky.::",c2a89109892950b2c9df3f44abe242809f7a3c15::299e7d415c25e7a7e78617ca3295ebdcf218b259::
https://api.github.com/repos/elastic/kibana,55804,fix/Index-template-editor-should-support-mappings-types::7.x,0,merged,Feature:Index Management::Team:Elasticsearch UI::bug::release_note:fix::v7.6.0::,"This PR adds support for mappings type in the Template UI (create/cone/edit). Through the UI it is not possible to create a new template with a type, but it is possible that a template being edited has a custom `type` attached. Fix https://github.com/elastic/kibana/issues/55645 ## Note for the reviewer Activate the ""Hide whitespace changes"" <img width=""268"" alt=""Screen Shot 2020-01-24 at 13 59 47"" src=""https://user-images.githubusercontent.com/2854616/73055090-fc39c780-3eb1-11ea-8e61-af832362264e.png""> ## How to test - Create a template with a custom type in the dev console ```sh PUT _template/my_index_template?include_type_name { ""index_patterns"": [ ""my_index"" ], ""mappings"": { ""my_custom_type"": { ""properties"": { ""name"": { ""type"": ""keyword"" } } } } } ``` - Then navigate to the Template UI and edit that template. - Got to the ""Mappings"" and add a field - Got to the review tab and make sure that the request still contains the custom type (""my_custom_type"") <img width=""912"" alt=""Screen Shot 2020-01-24 at 13 33 34"" src=""https://user-images.githubusercontent.com/2854616/73054628-ebd51d00-3eb0-11ea-84d2-9f9a45676e70.png""> - Save the template. No error should appear and you should be brought back to the template list - The mappings of the template should have the custom type <img width=""493"" alt=""Screen Shot 2020-01-24 at 13 34 00"" src=""https://user-images.githubusercontent.com/2854616/73054655-fb546600-3eb0-11ea-900f-c336bc45a7c8.png""> ### Indices created with the template Create an index that matches the template ```sh POST my_index/_doc { ""name"": ""a"" } ``` - Go to the Index Management --> Indices tab - Click on the ""my_index"" index - Navigate to the ""Mappings"" tab - The custom type should appear <img width=""599"" alt=""Screen Shot 2020-01-24 at 13 34 17"" src=""https://user-images.githubusercontent.com/2854616/73054616-e24bb500-3eb0-11ea-8f76-b7316f210b9b.png""> ## Note for 7.5 backport As the fix to support types requires the files from the `lib` folder of the mappings editor, we will need to manually cherry-pick on the backport PR the commits that don't modify those files in this PR, and then copy over the needed files manually in a separate commit. ## Release note We fixed a bug introduced in `7.4` when we shipped the index template UI. The template editor did not take into account **custom** type defined for the mappings when **fetching and editing** an index template. The mapping type ended up being converted to the default `_doc` losing the ability to query documents on the custom type. ::Nit: I think the name `doMappingsHaveType` or even `isTypedMappings` would be more grammatically correct.::For sure 😊 ::Minor nit: In the case of `isMultiTypeMappings === true`, then `customType` loses meaning because it's not the only custom type. Maybe we should change the condition to `hasCustomType && !isMultiTypeMappings` so that `customType` is left `undefined` if there are multiple type mappings?::❤️ Great comments!::Can we move this out of comments and into an issue? That will allow for team discussion and prevent this from being lost.::CC @jloleysens curious to hear your thoughts on this too since I believe you introduced io-ts.::Minor nit: `unknownConfigurationParameters.length > 0` evaluates to a boolean too, and I think also more clearly expresses our intention here (similar comment for the condition on line 268).::",0bae3df459e16a759d09975363e44e250af49f90::bfc52268767297052683e2f57195b3de38250fb9::892afa9846d9cec314918de9537da72e9af29a82::7d5def909513b388dbef1cde327c0e0e33efbfb2::92875e49946567ddd64f1a3ba455675b5cb88d4a::de48af419c3b4500d6ff6bb6054150b0905a7397::028bb2868b4c0404718a0d586871bb94c3d4d95c::ba056e16d95b68f94ff16a1f8fe47a6052c5bf46::001442ce5c9ea5239edc98d5fa5b7390f7c7c7fc::a97722ac8b4a66835cad07a47b401f45f11a40a2::b9ad4ac240ef9ba866506ef12364ef78e132d643::1d2a508cb2c26359db65b8851db9638d75280b71::3493e7d9bdacfffbd43188b3c2449e8f8a6cef55::0045d0d9746d70884dae1df1574f0a1e967f37f2::df98c2324650cbfc8e8ecc14ca6cd0ad13727dcf::9f281c20dd1f349c89b3d6b189e56eaf036ac624::0f5e083a8591c13f8b64c6bb09d5ba460f854d80::8fa68b5bc3a3e6ff6ed675e283dda0e76baf16d6::1cbaf4d5876700aa6149de30003b038fdf4aff28::
https://api.github.com/repos/elastic/kibana,55607,maps/use_methods::master,0,merged,Team:Geo::release_note:skip::v7.7.0::v8.0.0::,"Ensures that color-ramp UX shows correctly for fill-color UX when adding a grid-layer (style by points/rectangles). To reproduce: 1. add grid agg layer (e.g. from kibana_sample_logs) 1. open layer settings 1. note that the layer looks correctly on the map. but the fill-color UX shows a color palette iso. a blue ramp. Seems to be introduced with https://github.com/elastic/kibana/pull/55166. This does _not_ need to be backported to 7.6, as it is only present on 7.x and master.::this is not relevant to the bug, but changed this so we're consistently using the styleProperty-methods to derive state.::All of the style property form components are pull field name like `_.get(styleOptions, 'field.name')`? Do you want to change them all in this PR since you changed this one? ``` Users/nathanreese/projects/kibana/x-pack/legacy/plugins/maps/public/layers/styles/vector/components/label/dynamic_label_form.js: 28          <FieldSelect 29            fields={fields} 30:           selectedFieldName={_.get(styleOptions, 'field.name')} 31            onChange={onFieldChange} 32            compressed /Users/nathanreese/projects/kibana/x-pack/legacy/plugins/maps/public/layers/styles/vector/components/orientation/dynamic_orientation_form.js: 31          <FieldSelect 32            fields={fields} 33:           selectedFieldName={_.get(styleOptions, 'field.name')} 34            onChange={onFieldChange} 35            compressed /Users/nathanreese/projects/kibana/x-pack/legacy/plugins/maps/public/layers/styles/vector/components/size/dynamic_size_form.js: 51            <FieldSelect 52              fields={fields} 53:             selectedFieldName={_.get(styleOptions, 'field.name')} 54              onChange={onFieldChange} 55              compressed /Users/nathanreese/projects/kibana/x-pack/legacy/plugins/maps/public/layers/styles/vector/components/symbol/dynamic_icon_form.js: 50            <FieldSelect 51              fields={fields} 52:             selectedFieldName={_.get(styleOptions, 'field.name')} 53              onChange={onFieldChange} 54              compressed ```::",f65d673d54092e7333bef5f9a916ac3d35ff142f::70b9b6555a2d1fa157ad4a90b77131894fd69876::8c2cef411818235b23c899fc346f29ea2fa4eeff::
https://api.github.com/repos/elastic/kibana,55242,np/fix-core-loading::master,0,merged,Feature:New Platform::Team:Core::release_note:skip::v7.6.0::,"## Summary This delays hiding the loading indicator until right before Core renders the basic UI (chrome, notifications, etc.) This change should probably be backported to 7.6, where many of the changes that increased this load time were introduced. This eliminates the problem where a blank screen is shown to the user while Core is running it's startup sequence. Note that I also found other opportunities to improve client-side startup performance here: #55241::AFAIK it does not actually matter that the DOM element passed to Notifications is attached to the root element when `NotificationsService#start` is called, as long as it is attached at some point. In the future, this pattern should probably be replaced by the single React-tree pattern provided by RenderingService that ChromeService and ApplicationService leverage.::",e598e40cc076b02bc48b4c4894880192d92f0d68::577a1163ac6d0fa3442b7aa0a53b2b9989cc8055::
https://api.github.com/repos/elastic/kibana,54309,telemetry/monitoring_bulk_upload_fix::master,0,merged,Feature:Telemetry::Team:KibanaTelemetry::bug::release_note:skip::v7.5.2::v7.6.0::v8.0.0::,"The bulk uploader in monitoring attempts to bulk insert data into Elasticsearch every 10 seconds (defined by the flag xpack.monitoring.kibana.collection.interval). To avoid performance issues, we have throttled fetching telemetry usage data to once every 24 hours in the bulk uploader when monitoring is enabled. The current behavior is to keep fetching and trying to insert usage data until ES succeeds. Once it succeeds we start fetching usage every 24 hours. When monitoring is not enabled, the bulk uploader will keep on retring since ES returns ignored: true (the index does not exist) rendering the operation as unsuccessful, hence fetching usage again. This is happening on all 7.x and master. It was discovered when running a backport against 7.5 branch. (#54055) To improve performance when monitoring is not enabled we can start fetching usage data once the bulk uploader gets a success on the bulk insert from ES. The tiny downside to this approach is that we will not be getting usage data on the first successful insert after enabling monitoring. We will be getting this data on the second tick (in less that 20 seconds). CC @aaronjcaldwell Closes https://github.com/elastic/kibana/issues/54294::nit: typo in comment: `susccessful` should be `successful` ```suggestion // Hold sending and fetching usage until monitoring.bulk is successful. This means that we ```::",72171c235952c89aca192ce4145085635b1b2e10::c899140699bf536a77e324dcb90e90a5766d9394::f09c25bd0af3671c66bb6a129f777181787aa1fc::
https://api.github.com/repos/elastic/kibana,54256,backport-contribution-guide::7.x,0,merged,release_note:skip::v7.6.0::,"## Summary It seems that we had very different ideas about whether changes to the CONTRIBUTION guide needs to be backported to 7.x over the past year, so around only 50% of changes where backported to it. After a quick sync with @stacey-gammon we're the opinion we should handle changes to CONTRIBUTION the same as any other feature and backport to 7.x, unless there is specific reason they would only be valid for `master`. Since it's too many PRs missing I decided to create just one PR that overwrites the 7.x version with the one from master. @elastic/kibana-operations I ask you for a review, since you might know best if any of those changes deliberately don't work on `7.x` ::",ea837d877ac55c33805c80acb18f525165d407aa::
https://api.github.com/repos/elastic/kibana,54107,renovate/eslint::master,1,merged,Team:Operations::release_note:skip::renovate::v7.6.0::v8.0.0::,"This PR contains the following updates: | Package | Type | Update | Change | |---|---|---|---| | [@types/eslint](https://togithub.com/DefinitelyTyped/DefinitelyTyped) | devDependencies | patch | [`^6.1.2` -> `^6.1.3`](https://renovatebot.com/diffs/npm/@types%2feslint/6.1.2/6.1.3) | | [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | peerDependencies | minor | [`6.5.1` -> `6.8.0`](https://renovatebot.com/diffs/npm/eslint/6.5.1/6.8.0) | | [eslint](https://eslint.org) ([source](https://togithub.com/eslint/eslint)) | devDependencies | minor | [`^6.5.1` -> `^6.8.0`](https://renovatebot.com/diffs/npm/eslint/6.5.1/6.8.0) | | [eslint-config-prettier](https://togithub.com/prettier/eslint-config-prettier) | devDependencies | minor | [`^6.4.0` -> `^6.9.0`](https://renovatebot.com/diffs/npm/eslint-config-prettier/6.4.0/6.9.0) | | [eslint-module-utils](https://togithub.com/benmosher/eslint-plugin-import) | dependencies | minor | [`2.4.1` -> `2.5.0`](https://renovatebot.com/diffs/npm/eslint-module-utils/2.4.1/2.5.0) | | [eslint-plugin-ban](https://togithub.com/remithomas/eslint-plugin-ban) | peerDependencies | minor | [`^1.3.0` -> `^1.4.0`](https://renovatebot.com/diffs/npm/eslint-plugin-ban/1.3.0/1.4.0) | | [eslint-plugin-ban](https://togithub.com/remithomas/eslint-plugin-ban) | devDependencies | minor | [`^1.3.0` -> `^1.4.0`](https://renovatebot.com/diffs/npm/eslint-plugin-ban/1.3.0/1.4.0) | | [eslint-plugin-cypress](https://togithub.com/cypress-io/eslint-plugin-cypress) | devDependencies | minor | [`^2.7.0` -> `^2.8.1`](https://renovatebot.com/diffs/npm/eslint-plugin-cypress/2.7.0/2.8.1) | | [eslint-plugin-import](https://togithub.com/benmosher/eslint-plugin-import) | devDependencies | minor | [`^2.18.2` -> `^2.19.1`](https://renovatebot.com/diffs/npm/eslint-plugin-import/2.18.2/2.19.1) | | [eslint-plugin-import](https://togithub.com/benmosher/eslint-plugin-import) | peerDependencies | minor | [`^2.18.2` -> `^2.19.1`](https://renovatebot.com/diffs/npm/eslint-plugin-import/2.18.2/2.19.1) | | [eslint-plugin-node](https://togithub.com/mysticatea/eslint-plugin-node) | devDependencies | major | [`^10.0.0` -> `^11.0.0`](https://renovatebot.com/diffs/npm/eslint-plugin-node/10.0.0/11.0.0) | | [eslint-plugin-prettier](https://togithub.com/prettier/eslint-plugin-prettier) | devDependencies | patch | [`^3.1.1` -> `^3.1.2`](https://renovatebot.com/diffs/npm/eslint-plugin-prettier/3.1.1/3.1.2) | --- ### Release Notes <details> <summary>eslint/eslint</summary> ### [`v6.8.0`](https://togithub.com/eslint/eslint/releases/v6.8.0) [Compare Source](https://togithub.com/eslint/eslint/compare/v6.7.2...v6.8.0) -   [`c5c7086`](https://togithub.com/eslint/eslint/commit/c5c708666b450fb69522a55aa375626f9297dc6f) Fix: ignore aligning single line in key-spacing (fixes [#&#8203;11414](https://togithub.com/eslint/eslint/issues/11414)) ([#&#8203;12652](https://togithub.com/eslint/eslint/issues/12652)) (YeonJuan) -   [`9986d9e`](https://togithub.com/eslint/eslint/commit/9986d9e0baed0d3586bbee472fe2fae2ed625f5d) Chore: add object option test cases in yield-star-spacing ([#&#8203;12679](https://togithub.com/eslint/eslint/issues/12679)) (YeonJuan) -   [`1713d07`](https://togithub.com/eslint/eslint/commit/1713d0758b083f3840d724505f997a7cb20ff384) New: Add no-error-on-unmatched-pattern flag (fixes [#&#8203;10587](https://togithub.com/eslint/eslint/issues/10587)) ([#&#8203;12377](https://togithub.com/eslint/eslint/issues/12377)) (ncraley) -   [`5c25a26`](https://togithub.com/eslint/eslint/commit/5c25a26608fbd9a1d0127c9a3653609aa4b63e86) Update: autofix bug in lines-between-class-members (fixes [#&#8203;12391](https://togithub.com/eslint/eslint/issues/12391)) ([#&#8203;12632](https://togithub.com/eslint/eslint/issues/12632)) (YeonJuan) -   [`4b3cc5c`](https://togithub.com/eslint/eslint/commit/4b3cc5cd2459f04eae149faea0651785d7f9db0b) Chore: enable prefer-regex-literals in eslint codebase ([#&#8203;12268](https://togithub.com/eslint/eslint/issues/12268)) (薛定谔的猫) -   [`05faebb`](https://togithub.com/eslint/eslint/commit/05faebb943456ad2b20117f3c8b3eccbe2e2fb03) Update: improve suggestion testing experience ([#&#8203;12602](https://togithub.com/eslint/eslint/issues/12602)) (Brad Zacher) -   [`05f7dd5`](https://togithub.com/eslint/eslint/commit/05f7dd53ed91a6e3be9eb40825fb6d2207f82209) Update: Add suggestions for no-unsafe-negation (fixes [#&#8203;12591](https://togithub.com/eslint/eslint/issues/12591)) ([#&#8203;12609](https://togithub.com/eslint/eslint/issues/12609)) (Milos Djermanovic) -   [`d3e43f1`](https://togithub.com/eslint/eslint/commit/d3e43f1c10c5e19f40e7b3d3944b87f1b0c9c075) Docs: Update no-multi-assign explanation ([#&#8203;12615](https://togithub.com/eslint/eslint/issues/12615)) (Yuping Zuo) -   [`272e4db`](https://togithub.com/eslint/eslint/commit/272e4db6074283bc01cc6ec72c9e396bb3c110e6) Fix: no-multiple-empty-lines: Adjust reported `loc` ([#&#8203;12594](https://togithub.com/eslint/eslint/issues/12594)) (Tobias Bieniek) -   [`a258039`](https://togithub.com/eslint/eslint/commit/a258039e556075d7d1f955a79d094ea103ec165a) Fix: no-restricted-imports schema allows multiple paths/patterns objects ([#&#8203;12639](https://togithub.com/eslint/eslint/issues/12639)) (Milos Djermanovic) -   [`51f9620`](https://togithub.com/eslint/eslint/commit/51f9620cc55cc091fe38dbe68e4633de06297b8c) Fix: improve report location for array-bracket-spacing ([#&#8203;12653](https://togithub.com/eslint/eslint/issues/12653)) (Milos Djermanovic) -   [`45364af`](https://togithub.com/eslint/eslint/commit/45364afc9c7f0251348cd1a7a13656c3816435d7) Fix: prefer-numeric-literals doesn't check types of literal arguments ([#&#8203;12655](https://togithub.com/eslint/eslint/issues/12655)) (Milos Djermanovic) -   [`e3c570e`](https://togithub.com/eslint/eslint/commit/e3c570eaf3d1d44fb57bf42f1870887856e4c5a0) Docs: Add example for expression option ([#&#8203;12694](https://togithub.com/eslint/eslint/issues/12694)) (Arnaud Barré) -   [`6b774ef`](https://togithub.com/eslint/eslint/commit/6b774ef0d849ccf5c1127b25e1fe7c3e438d586b) Docs: Add spacing in comments for no-console rule ([#&#8203;12696](https://togithub.com/eslint/eslint/issues/12696)) (Nikki Nikkhoui) -   [`7171fca`](https://togithub.com/eslint/eslint/commit/7171fca6ef4e0e8f267658fc7d8f603f00eddd84) Chore: refactor regex in config comment parser ([#&#8203;12662](https://togithub.com/eslint/eslint/issues/12662)) (Milos Djermanovic) -   [`1600648`](https://togithub.com/eslint/eslint/commit/1600648d2880ffb1e9e414b31ff0f66ead7167f9) Update: Allow $schema in config ([#&#8203;12612](https://togithub.com/eslint/eslint/issues/12612)) (Yordis Prieto) -   [`acc0e47`](https://togithub.com/eslint/eslint/commit/acc0e47572a9390292b4e313b4a4bf360d236358) Update: support .eslintrc.cjs (refs [eslint/rfcs#&#8203;43](https://togithub.com/eslint/rfcs/issues/43)) ([#&#8203;12321](https://togithub.com/eslint/eslint/issues/12321)) (Evan Plaice) -   [`49c1658`](https://togithub.com/eslint/eslint/commit/49c1658544ace24b9aaaa301af0fc07a2ef3bf30) Chore: remove bundling of ESLint during release ([#&#8203;12676](https://togithub.com/eslint/eslint/issues/12676)) (Kai Cataldo) -   [`257f3d6`](https://togithub.com/eslint/eslint/commit/257f3d67905a52bf8602a5a5707c893cc90d7ca7) Chore: complete to move to GitHub Actions ([#&#8203;12625](https://togithub.com/eslint/eslint/issues/12625)) (Toru Nagashima) -   [`ab912f0`](https://togithub.com/eslint/eslint/commit/ab912f0ef709a916ab9a27ea09d9d7adf046fb2d) Docs: 1tbs with allowSingleLine edge cases (refs [#&#8203;12284](https://togithub.com/eslint/eslint/issues/12284)) ([#&#8203;12314](https://togithub.com/eslint/eslint/issues/12314)) (Ari Kardasis) -   [`dd1c30e`](https://togithub.com/eslint/eslint/commit/dd1c30e35f05ed332e2abbd3d4d53635efde74b8) Sponsors: Sync README with website (ESLint Jenkins) -   [`a230f84`](https://togithub.com/eslint/eslint/commit/a230f8404e4f2423dd79378b065d24c12776775b) Update: include node version in cache ([#&#8203;12582](https://togithub.com/eslint/eslint/issues/12582)) (Eric Wang) -   [`8b65f17`](https://togithub.com/eslint/eslint/commit/8b65f175dfb4fac11ed7184537be400ed14996fb) Chore: remove references to parser demo ([#&#8203;12644](https://togithub.com/eslint/eslint/issues/12644)) (Kai Cataldo) -   [`e9cef99`](https://togithub.com/eslint/eslint/commit/e9cef99e6ebec1faefdb576ca597e81ae4f04afd) Docs: wrap {{}} in raw liquid tags to prevent interpolation ([#&#8203;12643](https://togithub.com/eslint/eslint/issues/12643)) (Kai Cataldo) -   [`e707453`](https://togithub.com/eslint/eslint/commit/e70745325ff9e085acc6843dd8bfae5550645d4f) Docs: Fix configuration example in no-restricted-imports (fixes [#&#8203;11717](https://togithub.com/eslint/eslint/issues/11717)) ([#&#8203;12638](https://togithub.com/eslint/eslint/issues/12638)) (Milos Djermanovic) -   [`19194ce`](https://togithub.com/eslint/eslint/commit/19194cec724e016df02376bbeae31171be6f0bdf) Chore: Add tests to cover default object options in comma-dangle ([#&#8203;12627](https://togithub.com/eslint/eslint/issues/12627)) (YeonJuan) -   [`6e36d12`](https://togithub.com/eslint/eslint/commit/6e36d12d95e76022172fd0ec8a5e85c22fde6a8a) Update: do not recommend require-atomic-updates (refs [#&#8203;11899](https://togithub.com/eslint/eslint/issues/11899)) ([#&#8203;12599](https://togithub.com/eslint/eslint/issues/12599)) (Kai Cataldo) ### [`v6.7.2`](https://togithub.com/eslint/eslint/releases/v6.7.2) [Compare Source](https://togithub.com/eslint/eslint/compare/v6.7.1...v6.7.2) -   [`bc435a9`](https://togithub.com/eslint/eslint/commit/bc435a93afd6ba4def1b53993ef7cf8220f3f070) Fix: isSpaceBetweenTokens() recognizes spaces in JSXText (fixes [#&#8203;12614](https://togithub.com/eslint/eslint/issues/12614)) ([#&#8203;12616](https://togithub.com/eslint/eslint/issues/12616)) (Toru Nagashima) -   [`4928d51`](https://togithub.com/eslint/eslint/commit/4928d513b4fe716c7ed958c294a10ef8517be25e) Fix: don't ignore the entry directory (fixes [#&#8203;12604](https://togithub.com/eslint/eslint/issues/12604)) ([#&#8203;12607](https://togithub.com/eslint/eslint/issues/12607)) (Toru Nagashima) -   [`b41677a`](https://togithub.com/eslint/eslint/commit/b41677ae2a143790b19b0e70391a46ec6c8f5de1) Docs: Clarify suggestion's data in Working with Rules (refs [#&#8203;12606](https://togithub.com/eslint/eslint/issues/12606)) ([#&#8203;12617](https://togithub.com/eslint/eslint/issues/12617)) (Milos Djermanovic) -   [`ea16de4`](https://togithub.com/eslint/eslint/commit/ea16de4e7c6f661398b0b7843f95e5f307c89551) Fix: Support tagged template literal generics in no-unexpected-multiline ([#&#8203;11698](https://togithub.com/eslint/eslint/issues/11698)) (Brad Zacher) -   [`fa6415d`](https://togithub.com/eslint/eslint/commit/fa6415d5b877370374a6a530a5190ab5a411b4dc) Sponsors: Sync README with website (ESLint Jenkins) -   [`e1e158b`](https://togithub.com/eslint/eslint/commit/e1e158b4d7bd61e812723b378d2c391295da43a5) Sponsors: Sync README with website (ESLint Jenkins) ### [`v6.7.1`](https://togithub.com/eslint/eslint/releases/v6.7.1) [Compare Source](https://togithub.com/eslint/eslint/compare/v6.7.0...v6.7.1) -   [`dd1e9f4`](https://togithub.com/eslint/eslint/commit/dd1e9f4df2103c43509a54b0ad5f9106557997f9) Fix: revert changes to key-spacing due to regression ([#&#8203;12598](https://togithub.com/eslint/eslint/issues/12598)) (Kai Cataldo) -   [`c644b54`](https://togithub.com/eslint/eslint/commit/c644b5429e5bc8a050afd70c99ec82035eb611fa) Docs: Update README team and sponsors (ESLint Jenkins) ### [`v6.7.0`](https://togithub.com/eslint/eslint/releases/v6.7.0) [Compare Source](https://togithub.com/eslint/eslint/compare/v6.6.0...v6.7.0) -   [`312a88f`](https://togithub.com/eslint/eslint/commit/312a88f2230082d898b7d8d82f8af63cb352e55a) New: Add grouped-accessor-pairs rule (fixes [#&#8203;12277](https://togithub.com/eslint/eslint/issues/12277)) ([#&#8203;12331](https://togithub.com/eslint/eslint/issues/12331)) (Milos Djermanovic) -   [`5c68f5f`](https://togithub.com/eslint/eslint/commit/5c68f5feeb4a6c0cb53ff76b2fd255b5bfa69c93) Update: Add 'lexicalBindings' to no-implicit-globals and change messages ([#&#8203;11996](https://togithub.com/eslint/eslint/issues/11996)) (Milos Djermanovic) -   [`6eaad96`](https://togithub.com/eslint/eslint/commit/6eaad964ff159d0a38de96c1104782ffe6858c78) New: Add suggestions API ([#&#8203;12384](https://togithub.com/eslint/eslint/issues/12384)) (Will Douglas) -   [`b336fbe`](https://togithub.com/eslint/eslint/commit/b336fbedecd85731611fdc2dfd8edb635a8b1c39) Fix: indent rule with JSX spread props ([#&#8203;12581](https://togithub.com/eslint/eslint/issues/12581)) (Nathan Woltman) -   [`97c745d`](https://togithub.com/eslint/eslint/commit/97c745dc277febbea82552a4d9186e3df847f860) Update: Report assignment expression location in no-cond-assign ([#&#8203;12465](https://togithub.com/eslint/eslint/issues/12465)) (Milos Djermanovic) -   [`0f01f3d`](https://togithub.com/eslint/eslint/commit/0f01f3d0807c580631c2fdcff29192a64a870637) Update: Check member expressions with `this` in operator-assignment ([#&#8203;12495](https://togithub.com/eslint/eslint/issues/12495)) (Milos Djermanovic) -   [`62c7038`](https://togithub.com/eslint/eslint/commit/62c7038a493d89e4a7b14ac673a063d09d04057b) Fix: invalid token checking in computed-property-spacing (fixes [#&#8203;12198](https://togithub.com/eslint/eslint/issues/12198)) ([#&#8203;12533](https://togithub.com/eslint/eslint/issues/12533)) (YeonJuan) -   [`4f8a1ee`](https://togithub.com/eslint/eslint/commit/4f8a1ee1c26ccb5882e5e83ea7eab2f406c7476b) Update: Add enforceForClassMembers option to no-useless-computed-key ([#&#8203;12110](https://togithub.com/eslint/eslint/issues/12110)) (ark120202) -   [`1a2eb99`](https://togithub.com/eslint/eslint/commit/1a2eb99f11c65813bba11d6576a06cff2b823cc9) New: new rule no-constructor-return (fixes [#&#8203;12481](https://togithub.com/eslint/eslint/issues/12481)) ([#&#8203;12529](https://togithub.com/eslint/eslint/issues/12529)) (Pig Fang) -   [`ca3b2a6`](https://togithub.com/eslint/eslint/commit/ca3b2a62c9e829dc4534bca3643d6bc729b46df0) New: ignorePatterns in config files (refs [eslint/rfcs#&#8203;22](https://togithub.com/eslint/rfcs/issues/22)) ([#&#8203;12274](https://togithub.com/eslint/eslint/issues/12274)) (Toru Nagashima) -   [`60204a3`](https://togithub.com/eslint/eslint/commit/60204a3620e33a078c1c35fa2e5d839a16c627ff) Docs: Added another Textmate 2 bundle. ([#&#8203;12580](https://togithub.com/eslint/eslint/issues/12580)) (Ryan Fitzer) -   [`62623f9`](https://togithub.com/eslint/eslint/commit/62623f9f611a3adb79696304760a2fd14be8afbc) Fix: preserve whitespace in multiline-comment-style (fixes [#&#8203;12312](https://togithub.com/eslint/eslint/issues/12312)) ([#&#8203;12316](https://togithub.com/eslint/eslint/issues/12316)) (Kai Cataldo) -   [`17a8849`](https://togithub.com/eslint/eslint/commit/17a8849491a983f6cb8e98da8c0c9d52ff5f2aa6) New: Add no-dupe-else-if rule (fixes [#&#8203;12469](https://togithub.com/eslint/eslint/issues/12469)) ([#&#8203;12504](https://togithub.com/eslint/eslint/issues/12504)) (Milos Djermanovic) -   [`41a78fd`](https://togithub.com/eslint/eslint/commit/41a78fd7ce245cad8ff6a96c42f5840688849427) Update: improve location for semi and comma-dangle ([#&#8203;12380](https://togithub.com/eslint/eslint/issues/12380)) (Chiawen Chen) -   [`0a480f8`](https://togithub.com/eslint/eslint/commit/0a480f8307a0e438032f484254941e6426748143) Docs: Change ""Code Conventions"" link in pull-requests.md ([#&#8203;12401](https://togithub.com/eslint/eslint/issues/12401)) (Denis Sikuler) -   [`fed20bb`](https://togithub.com/eslint/eslint/commit/fed20bb039cf9f53adfcf93e467f418c5e958f45) Fix: require-await crash on global await ([#&#8203;12571](https://togithub.com/eslint/eslint/issues/12571)) (Brad Zacher) -   [`b8030fc`](https://togithub.com/eslint/eslint/commit/b8030fc23e88f57a04d955b3befd1ab0fc2c5d10) Update: deprecate personal config (fixes [#&#8203;11914](https://togithub.com/eslint/eslint/issues/11914), refs [eslint/rfcs#&#8203;32](https://togithub.com/eslint/rfcs/issues/32)) ([#&#8203;12426](https://togithub.com/eslint/eslint/issues/12426)) (Toru Nagashima) -   [`40c8c32`](https://togithub.com/eslint/eslint/commit/40c8c3264c7c383d98c9faf9c4cb4f8b75aee40f) Fix: improve report location for object-curly-spacing ([#&#8203;12563](https://togithub.com/eslint/eslint/issues/12563)) (Milos Djermanovic) -   [`1110045`](https://togithub.com/eslint/eslint/commit/1110045e0d28a461e75d2f57d5f01533d59ef239) Fix: ignore marker-only comments in spaced-comment (fixes [#&#8203;12036](https://togithub.com/eslint/eslint/issues/12036)) ([#&#8203;12558](https://togithub.com/eslint/eslint/issues/12558)) (Milos Djermanovic) -   [`6503cb8`](https://togithub.com/eslint/eslint/commit/6503cb8d99e549fece53b80b110e890a7978b9fd) Update: Fix uglified object align in key-spacing (fixes [#&#8203;11414](https://togithub.com/eslint/eslint/issues/11414)) ([#&#8203;12472](https://togithub.com/eslint/eslint/issues/12472)) (YeonJuan) -   [`40791af`](https://togithub.com/eslint/eslint/commit/40791af69efde1701690637603ad37d41e15a727) Docs: clarify ignoreDestructuring option in the camelcase rule ([#&#8203;12553](https://togithub.com/eslint/eslint/issues/12553)) (Milos Djermanovic) -   [`07d398d`](https://togithub.com/eslint/eslint/commit/07d398d91d5b6d0247e58b1f8ea64bb5acd570a8) Chore: Add GitHub organization to Sponsor button ([#&#8203;12562](https://togithub.com/eslint/eslint/issues/12562)) (Brandon Mills) -   [`a477707`](https://togithub.com/eslint/eslint/commit/a47770706ac59633dcd73e886d1a7282b324ee06) Chore: Format style guide links so they can be clicked ([#&#8203;12189](https://togithub.com/eslint/eslint/issues/12189)) (Ivan V) -   [`0f7edef`](https://togithub.com/eslint/eslint/commit/0f7edefdc1576d5e3e7ef89083002b0a4a31f039) Update: add react plugin config for eslint init ([#&#8203;12446](https://togithub.com/eslint/eslint/issues/12446)) (Ibrahim Rouis) -   [`448ff1e`](https://togithub.com/eslint/eslint/commit/448ff1e53734c503fb9e7e6802c1c7e441d4c019) Update: Report '\\08' and '\\09' in no-octal-escape (fixes [#&#8203;12080](https://togithub.com/eslint/eslint/issues/12080)) ([#&#8203;12526](https://togithub.com/eslint/eslint/issues/12526)) (Milos Djermanovic) -   [`45aa6a3`](https://togithub.com/eslint/eslint/commit/45aa6a3ba3486f1b116c5daab6432d144e5ea574) New: Add no-setter-return rule (fixes [#&#8203;12285](https://togithub.com/eslint/eslint/issues/12285)) ([#&#8203;12346](https://togithub.com/eslint/eslint/issues/12346)) (Milos Djermanovic) -   [`0afb518`](https://togithub.com/eslint/eslint/commit/0afb518d1f139376245613dddd8eaef32b52d619) Fix: invalid autofix in function-call-argument-newline (fixes [#&#8203;12454](https://togithub.com/eslint/eslint/issues/12454)) ([#&#8203;12539](https://togithub.com/eslint/eslint/issues/12539)) (YeonJuan) -   [`90305e0`](https://togithub.com/eslint/eslint/commit/90305e017c2c5fba0b4b62f41b180910b4baeedb) Update: Depcrecate isSpaceBetweenTokens() ([#&#8203;12519](https://togithub.com/eslint/eslint/issues/12519)) (Kai Cataldo) -   [`41b1e43`](https://togithub.com/eslint/eslint/commit/41b1e4308c1cb01c8b00cc8adc36440e77854117) New: add option for camelcase (fixes [#&#8203;12527](https://togithub.com/eslint/eslint/issues/12527)) ([#&#8203;12528](https://togithub.com/eslint/eslint/issues/12528)) (Pig Fang) -   [`f49f1e0`](https://togithub.com/eslint/eslint/commit/f49f1e0a69afa49f6548af7b2c0e6347e1ea022d) Upgrade: upgrade optionator to avoid license issue (fixes [#&#8203;11536](https://togithub.com/eslint/eslint/issues/11536)) ([#&#8203;12537](https://togithub.com/eslint/eslint/issues/12537)) (Pig Fang) -   [`0286b57`](https://togithub.com/eslint/eslint/commit/0286b5730501b391c74e069db46849f0de0885d2) Docs: Clean up Getting Started Guide ([#&#8203;12544](https://togithub.com/eslint/eslint/issues/12544)) (Nicholas C. Zakas) -   [`575a98d`](https://togithub.com/eslint/eslint/commit/575a98d724b2688f1e9c83744c5dc9ffe9a7bfb4) Chore: Add funding field to package.json ([#&#8203;12543](https://togithub.com/eslint/eslint/issues/12543)) (Nicholas C. Zakas) -   [`9e29e18`](https://togithub.com/eslint/eslint/commit/9e29e189752f06362fd1956659e07834efb746a5) Fix: sourceCode#isSpaceBetweenTokens() checks non-adjacent tokens ([#&#8203;12491](https://togithub.com/eslint/eslint/issues/12491)) (Kai Cataldo) -   [`5868550`](https://togithub.com/eslint/eslint/commit/586855060afb3201f4752be8820dc85703b523a6) Docs: add notice about `function` keyword in keyword-spacing ([#&#8203;12524](https://togithub.com/eslint/eslint/issues/12524)) (Pig Fang) -   [`bb556d5`](https://togithub.com/eslint/eslint/commit/bb556d5fd735ad2dcea322082edcc07a58105ce9) Fix: curly `multi` reports single lexical declarations (fixes [#&#8203;11908](https://togithub.com/eslint/eslint/issues/11908)) ([#&#8203;12513](https://togithub.com/eslint/eslint/issues/12513)) (Milos Djermanovic) -   [`ac60621`](https://togithub.com/eslint/eslint/commit/ac606217d4beebc35b865d14a7f9723fd21faa48) Fix: unexpected autofix in prefer-const (fixes [#&#8203;12514](https://togithub.com/eslint/eslint/issues/12514)) ([#&#8203;12521](https://togithub.com/eslint/eslint/issues/12521)) (YeonJuan) -   [`990065e`](https://togithub.com/eslint/eslint/commit/990065e5f58b6cc6922ab6cee5b97bfc56a6237a) Update: curly multi-or-nest flagging semis on next line (fixes [#&#8203;12370](https://togithub.com/eslint/eslint/issues/12370)) ([#&#8203;12378](https://togithub.com/eslint/eslint/issues/12378)) (cherryblossom000) -   [`084a8a6`](https://togithub.com/eslint/eslint/commit/084a8a63a749232681fefe9bdac6802efdcdc8a8) Fix: no-cond-assign with `always` option reports switch case clauses ([#&#8203;12470](https://togithub.com/eslint/eslint/issues/12470)) (Milos Djermanovic) -   [`7e41355`](https://togithub.com/eslint/eslint/commit/7e41355b19a8ef347620dd7c0dde491c3460937b) Update: improve report location for space-infix-ops ([#&#8203;12324](https://togithub.com/eslint/eslint/issues/12324)) (Chiawen Chen) -   [`94ff921`](https://togithub.com/eslint/eslint/commit/94ff921689115f856578159564ee1968b4b914be) Update: Add capIsConstructor option to no-invalid-this (fixes [#&#8203;12271](https://togithub.com/eslint/eslint/issues/12271)) ([#&#8203;12308](https://togithub.com/eslint/eslint/issues/12308)) (Milos Djermanovic) -   [`de65de6`](https://togithub.com/eslint/eslint/commit/de65de6e488112a602949e6a5d27dd4c754b003c) New: Add prefer-exponentiation-operator rule (fixes [#&#8203;10482](https://togithub.com/eslint/eslint/issues/10482)) ([#&#8203;12360](https://togithub.com/eslint/eslint/issues/12360)) (Milos Djermanovic) -   [`c78f4a7`](https://togithub.com/eslint/eslint/commit/c78f4a73de68f81cd41132b46d4840b91599d599) Update: Allow JSX exception in no-inline-comments (fixes [#&#8203;11270](https://togithub.com/eslint/eslint/issues/11270)) ([#&#8203;12388](https://togithub.com/eslint/eslint/issues/12388)) (Milos Djermanovic) -   [`e17fb90`](https://togithub.com/eslint/eslint/commit/e17fb90f5817d16081e690eb06b7720afcb9fa2a) New: allowAfterThisConstructor for no-underscore-dangle (fixes [#&#8203;11488](https://togithub.com/eslint/eslint/issues/11488)) ([#&#8203;11489](https://togithub.com/eslint/eslint/issues/11489)) (sripberger) -   [`287ca56`](https://togithub.com/eslint/eslint/commit/287ca562811d037bde09a47af7f5b9c7b741e022) Build: update CI for Node.js 13 ([#&#8203;12496](https://togithub.com/eslint/eslint/issues/12496)) (Toru Nagashima) -   [`98e1d50`](https://togithub.com/eslint/eslint/commit/98e1d50273f31c2a7b59772298280ed7305274c8) Upgrade: globals to v12.1.0 ([#&#8203;12296](https://togithub.com/eslint/eslint/issues/12296)) (Tony Brix) -   [`8ac71a3`](https://togithub.com/eslint/eslint/commit/8ac71a3c89a9db13706a44b23d1b509b65185113) Sponsors: Sync README with website (ESLint Jenkins) -   [`4e142ea`](https://togithub.com/eslint/eslint/commit/4e142ea411dfb692b6e2a69cd5f1204ade4dd58a) Docs: Update README team and sponsors (ESLint Jenkins) ### [`v6.6.0`](https://togithub.com/eslint/eslint/releases/v6.6.0) [Compare Source](https://togithub.com/eslint/eslint/compare/v6.5.1...v6.6.0) -   [`39dfe08`](https://togithub.com/eslint/eslint/commit/39dfe0880fa934e287e8ea1f7b56d5cba8d43765) Update: false positives in function-call-argument-newline (fixes [#&#8203;12123](https://togithub.com/eslint/eslint/issues/12123)) ([#&#8203;12280](https://togithub.com/eslint/eslint/issues/12280)) (Scott O'Hara) -   [`4d84210`](https://togithub.com/eslint/eslint/commit/4d842105c9c82026be668d7425213138903d4d41) Update: improve report location for no-trailing-spaces (fixes [#&#8203;12315](https://togithub.com/eslint/eslint/issues/12315)) ([#&#8203;12477](https://togithub.com/eslint/eslint/issues/12477)) (Milos Djermanovic) -   [`c6a7745`](https://togithub.com/eslint/eslint/commit/c6a7745a1371a85932bfae5fec039d1b6fcfc128) Update: no-trailing-spaces false negatives after comments (fixes [#&#8203;12479](https://togithub.com/eslint/eslint/issues/12479)) ([#&#8203;12480](https://togithub.com/eslint/eslint/issues/12480)) (Milos Djermanovic) -   [`0bffe95`](https://togithub.com/eslint/eslint/commit/0bffe953d2752dd2d3045f2f8771c96b6cee8fc4) Fix: no-misleading-character-class crash on invalid regex (fixes [#&#8203;12169](https://togithub.com/eslint/eslint/issues/12169)) ([#&#8203;12347](https://togithub.com/eslint/eslint/issues/12347)) (Milos Djermanovic) -   [`c6a9a3b`](https://togithub.com/eslint/eslint/commit/c6a9a3bc58b69dbf9be9cd09b0283c081ca211e7) Update: Add enforceForIndexOf option to use-isnan (fixes [#&#8203;12207](https://togithub.com/eslint/eslint/issues/12207)) ([#&#8203;12379](https://togithub.com/eslint/eslint/issues/12379)) (Milos Djermanovic) -   [`364877b`](https://togithub.com/eslint/eslint/commit/364877b2504e8f7ece04770b93d517e2f27458d0) Update: measure plugin loading time and output in debug message ([#&#8203;12395](https://togithub.com/eslint/eslint/issues/12395)) (Victor Homyakov) -   [`1744fab`](https://togithub.com/eslint/eslint/commit/1744faba3c93c869f7dbbf0a704d32e2692d6856) Fix: operator-assignment removes and duplicates comments ([#&#8203;12485](https://togithub.com/eslint/eslint/issues/12485)) (Milos Djermanovic) -   [`52ca11a`](https://togithub.com/eslint/eslint/commit/52ca11a66ab6c2fb5a71d8b9869482f14f98cb9d) Fix: operator-assignment invalid autofix with adjacent tokens ([#&#8203;12483](https://togithub.com/eslint/eslint/issues/12483)) (Milos Djermanovic) -   [`0f6d0dc`](https://togithub.com/eslint/eslint/commit/0f6d0dcdf5adc30079a7379bbf605a4ef3887a85) Fix: CLIEngine#addPlugin reset lastConfigArrays (fixes [#&#8203;12425](https://togithub.com/eslint/eslint/issues/12425)) ([#&#8203;12468](https://togithub.com/eslint/eslint/issues/12468)) (Toru Nagashima) -   [`923a8cb`](https://togithub.com/eslint/eslint/commit/923a8cb752b8dee1e622c5fd36f3f53288e30602) Chore: Fix lint failure in JSDoc comment ([#&#8203;12489](https://togithub.com/eslint/eslint/issues/12489)) (Brandon Mills) -   [`aac3be4`](https://togithub.com/eslint/eslint/commit/aac3be435cccc241781150fcac728df04d086fa8) Update: Add ignored prop regex no-param-reassign ([#&#8203;11275](https://togithub.com/eslint/eslint/issues/11275)) (Luke Bennett) -   [`e5382d6`](https://togithub.com/eslint/eslint/commit/e5382d6e4eb1344f537b6f107535269e9939fcb8) Chore: Remove unused parameter in dot-location ([#&#8203;12464](https://togithub.com/eslint/eslint/issues/12464)) (Milos Djermanovic) -   [`49faefb`](https://togithub.com/eslint/eslint/commit/49faefbee3fc7daaf2482d9d7d23513d6ffda9e8) Fix: no-obj-calls false positive (fixes [#&#8203;12437](https://togithub.com/eslint/eslint/issues/12437)) ([#&#8203;12467](https://togithub.com/eslint/eslint/issues/12467)) (Toru Nagashima) -   [`b3dbd96`](https://togithub.com/eslint/eslint/commit/b3dbd9657bbeac6571111a4429b03fc085ba6655) Fix: problematic installation issue (fixes [#&#8203;11018](https://togithub.com/eslint/eslint/issues/11018)) ([#&#8203;12309](https://togithub.com/eslint/eslint/issues/12309)) (Toru Nagashima) -   [`cd7c29b`](https://togithub.com/eslint/eslint/commit/cd7c29b17085c14c9cf6345201c72a192c0d0e0c) Sponsors: Sync README with website (ESLint Jenkins) -   [`8233873`](https://togithub.com/eslint/eslint/commit/8233873b8e5facd80ab7b172bff1e896a9c5fd39) Docs: Add note about Node.js requiring SSL support (fixes [#&#8203;11413](https://togithub.com/eslint/eslint/issues/11413)) ([#&#8203;12475](https://togithub.com/eslint/eslint/issues/12475)) (Nicholas C. Zakas) -   [`89e8aaf`](https://togithub.com/eslint/eslint/commit/89e8aafcc622a4763bed6b9d62f148ef95798f38) Fix: improve report location for no-tabs ([#&#8203;12471](https://togithub.com/eslint/eslint/issues/12471)) (Milos Djermanovic) -   [`7dffe48`](https://togithub.com/eslint/eslint/commit/7dffe482d646d4e5f94fa87a22f3b5b2e0a4b189) Update: Enable function string option in comma-dangle (fixes [#&#8203;12058](https://togithub.com/eslint/eslint/issues/12058)) ([#&#8203;12462](https://togithub.com/eslint/eslint/issues/12462)) (YeonJuan) -   [`e15e1f9`](https://togithub.com/eslint/eslint/commit/e15e1f933f287d274a726e7f0f0a1dd80f0964af) Docs: fix doc for no-unneeded-ternary rule (fixes [#&#8203;12098](https://togithub.com/eslint/eslint/issues/12098)) ([#&#8203;12410](https://togithub.com/eslint/eslint/issues/12410)) (Sam Rae) -   [`b1dc58f`](https://togithub.com/eslint/eslint/commit/b1dc58f0a717cb3d19300c845ca23a21ceb610d3) Sponsors: Sync README with website (ESLint Jenkins) -   [`61749c9`](https://togithub.com/eslint/eslint/commit/61749c94bd8a2ebcdfb89e0cd48c4a029a945079) Chore: Provide debug log for parser errors ([#&#8203;12474](https://togithub.com/eslint/eslint/issues/12474)) (Brad Zacher) -   [`7c8bbe0`](https://togithub.com/eslint/eslint/commit/7c8bbe0391944e1f92e083a04715bf4b3fe6be5d) Update: enforceForOrderingRelations no-unsafe-negation (fixes [#&#8203;12163](https://togithub.com/eslint/eslint/issues/12163)) ([#&#8203;12414](https://togithub.com/eslint/eslint/issues/12414)) (Sam Rae) -   [`349ed67`](https://togithub.com/eslint/eslint/commit/349ed6700e1155384597e1e6035550a96cb8a42d) Update: improve report location for no-mixed-operators ([#&#8203;12328](https://togithub.com/eslint/eslint/issues/12328)) (Chiawen Chen) -   [`a102eaa`](https://togithub.com/eslint/eslint/commit/a102eaa9ac19e1c6d92f79a4033e9048cfb64c0d) Fix: prefer-numeric-literals invalid autofix with adjacent tokens ([#&#8203;12387](https://togithub.com/eslint/eslint/issues/12387)) (Milos Djermanovic) -   [`6e7c18d`](https://togithub.com/eslint/eslint/commit/6e7c18ddb30b32ee5b2e842cc8258aa7aebb7445) Update: enforceForNewInMemberExpressions no-extra-parens (fixes [#&#8203;12428](https://togithub.com/eslint/eslint/issues/12428)) ([#&#8203;12436](https://togithub.com/eslint/eslint/issues/12436)) (Milos Djermanovic) -   [`51fbbd7`](https://togithub.com/eslint/eslint/commit/51fbbd78f98f223d17071650f5117d07f60dadc2) Fix: array-bracket-newline consistent error with comments (fixes [#&#8203;12416](https://togithub.com/eslint/eslint/issues/12416)) ([#&#8203;12441](https://togithub.com/eslint/eslint/issues/12441)) (Milos Djermanovic) -   [`e657d4c`](https://togithub.com/eslint/eslint/commit/e657d4ccb9f3dd5cacceaaa40ffe24ac29a1349a) Fix: report full dot location in dot-location ([#&#8203;12452](https://togithub.com/eslint/eslint/issues/12452)) (Milos Djermanovic) -   [`2d6e345`](https://togithub.com/eslint/eslint/commit/2d6e345e3c2626b0f2252f22cfaffdf53ea0871a) Update: make isSpaceBetweenTokens() ignore newline in comments ([#&#8203;12407](https://togithub.com/eslint/eslint/issues/12407)) (YeonJuan) -   [`84f71de`](https://togithub.com/eslint/eslint/commit/84f71de0e686e0fe37b83d6728ce1825caaa44fb) Update: remove default overrides in keyword-spacing (fixes [#&#8203;12369](https://togithub.com/eslint/eslint/issues/12369)) ([#&#8203;12411](https://togithub.com/eslint/eslint/issues/12411)) (YeonJuan) -   [`18a0b0e`](https://togithub.com/eslint/eslint/commit/18a0b0e3df927428a22b5b5295f9faee4bd57246) Update: improve report location for no-space-in-parens ([#&#8203;12364](https://togithub.com/eslint/eslint/issues/12364)) (Chiawen Chen) -   [`d61c8a5`](https://togithub.com/eslint/eslint/commit/d61c8a5a75447a36276f2d4f84afb3e1129618da) Update: improve report location for no-multi-spaces ([#&#8203;12329](https://togithub.com/eslint/eslint/issues/12329)) (Chiawen Chen) -   [`561093f`](https://togithub.com/eslint/eslint/commit/561093fc4267a4ae317d63bc9f103020fad88802) Upgrade: bump inquirer to ^7.0.0 ([#&#8203;12440](https://togithub.com/eslint/eslint/issues/12440)) (Joe Graham) -   [`fb633b2`](https://togithub.com/eslint/eslint/commit/fb633b2bbd0a390b247047524fdd1f612dbab803) Chore: Add a script for testing with more control ([#&#8203;12444](https://togithub.com/eslint/eslint/issues/12444)) (Eric Wang) -   [`012ec51`](https://togithub.com/eslint/eslint/commit/012ec5151113a2be06fc0e4cd208d714e52dbc57) Sponsors: Sync README with website (ESLint Jenkins) -   [`874fe16`](https://togithub.com/eslint/eslint/commit/874fe1642a10a0fb937ccccdd4d22343b84f80dc) New: pass cwd from cli engine ([#&#8203;12389](https://togithub.com/eslint/eslint/issues/12389)) (Eric Wang) -   [`b962775`](https://togithub.com/eslint/eslint/commit/b962775b8cb7c90985a5ab63e56744bb2ba79644) Update: no-self-assign should detect member expression with this ([#&#8203;12279](https://togithub.com/eslint/eslint/issues/12279)) (Tibor Blenessy) -   [`02977f2`](https://togithub.com/eslint/eslint/commit/02977f25a922dd0b8617c16116bb4364d0f30e94) Docs: Clarify `eslint:recommended` semver policy ([#&#8203;12429](https://togithub.com/eslint/eslint/issues/12429)) (Kevin Partington) -   [`97045ae`](https://togithub.com/eslint/eslint/commit/97045ae0805e6503887eef0b131dcb9e70b6d185) Docs: Fixes object type for `rules` in ""Use a Plugin"" ([#&#8203;12409](https://togithub.com/eslint/eslint/issues/12409)) (Daisy Develops) -   [`24ca088`](https://togithub.com/eslint/eslint/commit/24ca088fdc901feef8f10b050414fbde64b55c7d) Docs: Fix typo in v6 migration guide ([#&#8203;12412](https://togithub.com/eslint/eslint/issues/12412)) (Benjamim Sonntag) -   [`b094008`](https://togithub.com/eslint/eslint/commit/b094008fb196dc1de5b4c27b7dbf0bcbb4b7b352) Chore: update version parameter name ([#&#8203;12402](https://togithub.com/eslint/eslint/issues/12402)) (Toru Nagashima) -   [`e5637ba`](https://togithub.com/eslint/eslint/commit/e5637badd42f087d115f81575b832097fe6fe554) Chore: enable jsdoc/require-description ([#&#8203;12365](https://togithub.com/eslint/eslint/issues/12365)) (Kai Cataldo) -   [`d31f337`](https://togithub.com/eslint/eslint/commit/d31f3370396ec4868722bdc044aa697b135ac183) Sponsors: Sync README with website (ESLint Jenkins) -   [`7ffb22f`](https://togithub.com/eslint/eslint/commit/7ffb22f61cf1622511a7fe42b5ead7c3b216df5e) Chore: Clean up inline directive parsing ([#&#8203;12375](https://togithub.com/eslint/eslint/issues/12375)) (Jordan Eldredge) -   [`84467c0`](https://togithub.com/eslint/eslint/commit/84467c07461cc47ee43807ba9014e13700473c5c) Docs: fix wrong max-depth example (fixes [#&#8203;11991](https://togithub.com/eslint/eslint/issues/11991)) ([#&#8203;12358](https://togithub.com/eslint/eslint/issues/12358)) (Gabriel R Sezefredo) -   [`3642342`](https://togithub.com/eslint/eslint/commit/364234262efabd91fa8bd53161d9d3e1e37e7944) Docs: Fix minor formatting/grammar errors ([#&#8203;12371](https://togithub.com/eslint/eslint/issues/12371)) (cherryblossom000) -   [`c47fa0d`](https://togithub.com/eslint/eslint/commit/c47fa0dfc76211b3b0e5649c63acdd9606ce0eca) Docs: Fix missing word in sentence ([#&#8203;12361](https://togithub.com/eslint/eslint/issues/12361)) (Dan Boulet) -   [`8108f49`](https://togithub.com/eslint/eslint/commit/8108f49f9fa0c2de80b3b66c847551beff585951) Chore: enable additional eslint-plugin-jsdoc rules ([#&#8203;12336](https://togithub.com/eslint/eslint/issues/12336)) (Kai Cataldo) -   [`b718d2e`](https://togithub.com/eslint/eslint/commit/b718d2e6c9fe3fc56aa7cfc68b1a40b5cd8a7c01) Chore: update issue template with --eslint-fix flag ([#&#8203;12352](https://togithub.com/eslint/eslint/issues/12352)) (James George) -   [`20ba14d`](https://togithub.com/eslint/eslint/commit/20ba14dc78fc2654b2920d14877dde21c6c10da4) Sponsors: Sync README with website (ESLint Jenkins) -   [`566a947`](https://togithub.com/eslint/eslint/commit/566a947f67c8038a50e204d68723519778a78a0f) Sponsors: Sync README with website (ESLint Jenkins) -   [`070cbd0`](https://togithub.com/eslint/eslint/commit/070cbd0a2ec07831962a25c4276d08e097302416) Sponsors: Sync README with website (ESLint Jenkins) </details> <details> <summary>prettier/eslint-config-prettier</summary> ### [`v6.9.0`](https://togithub.com/prettier/eslint-config-prettier/blob/master/CHANGELOG.md#Version-690-2019-12-27) [Compare Source](https://togithub.com/prettier/eslint-config-prettier/compare/v6.8.0...v6.9.0) -   Added: [vue/max-len]. Thanks to [@&#8203;xcatliu](https://togithub.com/xcatliu)! ### [`v6.8.0`](https://togithub.com/prettier/eslint-config-prettier/blob/master/CHANGELOG.md#Version-680-2019-12-25) [Compare Source](https://togithub.com/prettier/eslint-config-prettier/compare/dcca556e260af985ece4d9af92531fa649268f80...v6.8.0) -   Added: [@&#8203;typescript-eslint/no-extra-semi]. Thanks to [@&#8203;xcatliu](https://togithub.com/xcatliu)! ### [`v6.7.0`](https://togithub.com/prettier/eslint-config-prettier/blob/master/CHANGELOG.md#Version-670-2019-11-19) [Compare Source](https://togithub.com/prettier/eslint-config-prettier/compare/v6.6.0...dcca556e260af985ece4d9af92531fa649268f80) -   Added: [@&#8203;typescript-eslint/space-before-function-paren]. Thanks to Masafumi Koba ([@&#8203;ybiquitous](https://togithub.com/ybiquitous))! ### [`v6.6.0`](https://togithub.com/prettier/eslint-config-prettier/blob/master/CHANGELOG.md#Version-660-2019-11-17) [Compare Source](https://togithub.com/prettier/eslint-config-prettier/compare/v6.5.0...v6.6.0) -   Added: New [eslint-plugin-vue] rules: [vue/dot-location] and [vue/keyword-spacing]. Thanks to [@&#8203;xcatliu](https://togithub.com/xcatliu)! ### [`v6.5.0`](https://togithub.com/prettier/eslint-config-prettier/blob/master/CHANGELOG.md#Version-650-2019-10-26) [Compare Source](https://togithub.com/prettier/eslint-config-prettier/compare/v6.4.0...v6.5.0) -   Added: Support for [excluding deprecated rules]. Thanks to Alex Ilyaev ([@&#8203;alexilyaev](https://togithub.com/alexilyaev))! </details> <details> <summary>benmosher/eslint-plugin-import</summary> ### [`v2.5.0`](https://togithub.com/benmosher/eslint-plugin-import/blob/master/CHANGELOG.md#&#8203;250---2017-06-22) Re-releasing v[2.4.0] after discovering that the memory leak is isolated to the [`memo-parser`], which is more or less experimental anyway. ##### Added -   Autofixer for newline-after-import. ([#&#8203;686] + [#&#8203;696], thanks [@&#8203;eelyafi]) </details> <details> <summary>remithomas/eslint-plugin-ban</summary> ### [`v1.4.0`](https://togithub.com/remithomas/eslint-plugin-ban/compare/v1.3.0...22cef72c0513c242fc3c8b1917595415cab7d525) [Compare Source](https://togithub.com/remithomas/eslint-plugin-ban/compare/v1.3.0...22cef72c0513c242fc3c8b1917595415cab7d525) </details> <details> <summary>cypress-io/eslint-plugin-cypress</summary> ### [`v2.8.1`](https://togithub.com/cypress-io/eslint-plugin-cypress/releases/v2.8.1) [Compare Source](https://togithub.com/cypress-io/eslint-plugin-cypress/compare/v2.8.0...v2.8.1) ##### Bug Fixes -   Handle cy.wait in a function with a default parameter ([475a26c](https://togithub.com/cypress-io/eslint-plugin-cypress/commit/475a26c)) ### [`v2.8.0`](https://togithub.com/cypress-io/eslint-plugin-cypress/releases/v2.8.0) [Compare Source](https://togithub.com/cypress-io/eslint-plugin-cypress/compare/v2.7.0...v2.8.0) ##### Features -   Add handling for when the wait method is given an Identifier which has a number value ([e66bdfd](https://togithub.com/cypress-io/eslint-plugin-cypress/commit/e66bdfd)) </details> <details> <summary>mysticatea/eslint-plugin-node</summary> ### [`v11.0.0`](https://togithub.com/mysticatea/eslint-plugin-node/releases/v11.0.0) [Compare Source](https://togithub.com/mysticatea/eslint-plugin-node/compare/v10.0.0...v11.0.0) #### 💥 Breaking changes -   [`b6cb9a0`](https://togithub.com/mysticatea/eslint-plugin-node/commit/b6cb9a071a7177ad625cde07541b9d2f31aab35b) updated `node/no-unsupported-features/node-builtins` rule based on Node.js 13.2.0. -   [`fb9ce15`](https://togithub.com/mysticatea/eslint-plugin-node/commit/fb9ce15fb6d465f2cead242a5daae2599ce90142) updated `node/no-unsupported-features/es-syntax` rule to recognize BigInt literal property names. -   [`4295f6a`](https://togithub.com/mysticatea/eslint-plugin-node/commit/4295f6a45635ab61c53a8d51c19e1858a208492d) updated the rules that check global variables to recognize `globalThis.*`. -   [`04051ed`](https://togithub.com/mysticatea/eslint-plugin-node/commit/04051edfe3aa8cdb9f1aa87bbd4130021f767174) updated `node/no-unsupported-features/es-builtins` rule to recognize `globalThis`. #### ✨ Enhancements -   [`276a9ad`](https://togithub.com/mysticatea/eslint-plugin-node/commit/276a9ad0fa8d6db224aae6fe6d35146a3fac9377) updated `node/no-deprecated-api` rule to allow revoked deprecations. -   [`972f828`](https://togithub.com/mysticatea/eslint-plugin-node/commit/972f828d3134a9d3ec426cb11aa1cd9f66b657a2) updated `node/no-unsupported-features/node-builtins` rule to handle backporting properly. #### 🐛 Bug fixes -   [`4f74fbf`](https://togithub.com/mysticatea/eslint-plugin-node/commit/4f74fbf3d674ab9104880954af86f40acd88fb8e) fixed a crash bug around dynamic import syntax. </details> <details> <summary>prettier/eslint-plugin-prettier</summary> ### [`v3.1.2`](https://togithub.com/prettier/eslint-plugin-prettier/blob/master/CHANGELOG.md#v312-2019-12-15) [Compare Source](https://togithub.com/prettier/eslint-plugin-prettier/compare/v3.1.1...v3.1.2) -   Resolve config when getting list of inferred parsers ([1ad45be](git@github.com:prettier/eslint-plugin-prettier/commit/1ad45be48ea1ed16e0eb3ba6247163724b956516)) -   Fix tests now they to stop them inheriting from base prettierrc file ([14840fa](git@github.com:prettier/eslint-plugin-prettier/commit/14840fa4c88c938bf30c1fdf1c26c32b2708a3b6)) -   Move prettier config into dedicated file, so vscode plugins pick it up ([c49334a](git@github.com:prettier/eslint-plugin-prettier/commit/c49334a846afa6f688695a4774f7824ee3a05e1c)) -   build(deps-dev): bump eslint from 6.7.1 to 6.7.2 ([15e6cf9](git@github.com:prettier/eslint-plugin-prettier/commit/15e6cf91509cb5b819d2e1fb19dbe9bc71c87893)) -   build(deps-dev): bump eslint from 6.6.0 to 6.7.1 ([e8ad019](git@github.com:prettier/eslint-plugin-prettier/commit/e8ad0195000af416f3315396e9c02fea261391cc)) -   build(deps-dev): bump eslint-config-prettier from 6.6.0 to 6.7.0 ([44f4bfe](git@github.com:prettier/eslint-plugin-prettier/commit/44f4bfe0b6f63234afeba266928b39b762269282)) -   build(deps-dev): bump eslint-config-prettier from 6.5.0 to 6.6.0 ([46580c5](git@github.com:prettier/eslint-plugin-prettier/commit/46580c55914057dee5089e9c6e525e41996888d1)) -   build(deps-dev): bump prettier from 1.18.2 to 1.19.1 ([10b4676](git@github.com:prettier/eslint-plugin-prettier/commit/10b46763fd007a8f939e43635831aec590717e87)) -   build(deps-dev): bump eslint from 6.5.1 to 6.6.0 ([53eaeae](git@github.com:prettier/eslint-plugin-prettier/commit/53eaeaec91c158b66cc04dbf80f9631bb82285bf)) -   build(deps-dev): bump eslint-config-prettier from 6.4.0 to 6.5.0 ([ad3321c](git@github.com:prettier/eslint-plugin-prettier/commit/ad3321c3ae6e963317fedcdd205ba719bf933d74)) -   build(deps-dev): bump mocha from 6.2.1 to 6.2.2 ([b7280b6](git@github.com:prettier/eslint-plugin-prettier/commit/b7280b68eaae243aa33de364576cddf0844c6848)) -   build(deps-dev): bump eslint-config-prettier from 6.3.0 to 6.4.0 ([4c1d69a](git@github.com:prettier/eslint-plugin-prettier/commit/4c1d69a8022c709cd62e964a82c7dbc7963f0544)) -   build(deps-dev): bump eslint from 6.5.0 to 6.5.1 ([c109a7a](git@github.com:prettier/eslint-plugin-prettier/commit/c109a7a5acca9533feae6258e9ac4934359ed9b3)) -   build(deps-dev): bump mocha from 6.2.0 to 6.2.1 ([3134bea](git@github.com:prettier/eslint-plugin-prettier/commit/3134beab61dee13aa2c73762a55f51f868553e8a)) -   build(deps-dev): bump eslint from 6.4.0 to 6.5.0 ([7c290d7](git@github.com:prettier/eslint-plugin-prettier/commit/7c290d799e319b39519d81a110b62846894bc7ba)) </details> --- ### Renovate configuration :date: **Schedule**: At any time (no schedule defined). :vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied. :recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with ""`rebase!`"". :ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/config-help/issues) if that's undesired. --- - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box --- Newsflash: Renovate has joined WhiteSource, and is now free for all use. [Learn more](https://renovate.whitesourcesoftware.com/blog/renovate-is-now-part-of-whitesource/) or view updated [terms](https://renovate.whitesourcesoftware.com/terms-of-service/) and [privacy](https://renovate.whitesourcesoftware.com/privacy-policy/) policies.::",9d0d12ab1bdf9b31e7eb6a6ae483d69a729d1645::8516a9d869072bd9a0f0ea325695bf18a2402efa::40b71c7751049bf22c34480ab5f7e99736f472bb::
https://api.github.com/repos/elastic/kibana,54100,fix/skip-log-entries-highlight-test::master,0,merged,Feature:Logs UI::Team:logs-metrics-ui::release_note:skip::v7.6.0::,"https://github.com/elastic/kibana/pull/53798 introduced a test that works in master but fails in the 7.x branch (https://github.com/elastic/kibana/pull/54024) This PR skips that test. Once it's merged, we will cherry-pick the commit on top of the backport PR to have it fixed there as well. ::",30acacc7b7258e9c01828f59d4daf58a010d1059::
https://api.github.com/repos/elastic/kibana,53182,renovate/debug-4.x::master,1,closed,Team:Operations::release_note:skip::renovate::renovate:major::v7.6.0::v8.0.0::,"This PR contains the following updates: | Package | Type | Update | Change | |---|---|---|---| | [debug](https://togithub.com/visionmedia/debug) | dependencies | major | [`^2.6.9` -> `^4.1.1`](https://renovatebot.com/diffs/npm/debug/2.6.9/4.1.1) | --- ### Release Notes <details> <summary>visionmedia/debug</summary> ### [`v4.1.1`](https://togithub.com/visionmedia/debug/releases/4.1.1) [Compare Source](https://togithub.com/visionmedia/debug/compare/4.1.0...4.1.1) This  backport fixes a bug in coveralls configuration as well as the `.extend()` function. ### Patches -   test: only run coveralls on travis ([#&#8203;663](https://togithub.com/visionmedia/debug/issues/663), [#&#8203;664](https://togithub.com/visionmedia/debug/issues/664), [`d0e498f`](https://togithub.com/visionmedia/debug/commit/d0e498f159bd425b3403db38c98fe26a345d4dcd)) -   copy custom logger to namespace extension ([#&#8203;646](https://togithub.com/visionmedia/debug/issues/646), [`57ef085`](https://togithub.com/visionmedia/debug/commit/57ef085703a0158679cc4a56a4980653b828ce51)) ### [`v4.1.0`](https://togithub.com/visionmedia/debug/releases/4.1.0) [Compare Source](https://togithub.com/visionmedia/debug/compare/4.0.1...4.1.0) ### Minor Changes -   migrate Makefile to npm scripts ([`4236585`](https://togithub.com/visionmedia/debug/commit/4236585a40787fe60ed625452163299600df2ce6)) -   feat: Return namespaces string when invoking disable() ([`7ef8b41`](https://togithub.com/visionmedia/debug/commit/7ef8b417a86941372074f749019b9f439a1f6ef6)) Massive _thank you_ to [@&#8203;mblarsen](https://togithub.com/mblarsen) and [@&#8203;outsideris](https://togithub.com/outsideris) for knocking out two long-awaited changes. ### [`v4.0.1`](https://togithub.com/visionmedia/debug/releases/4.0.1) [Compare Source](https://togithub.com/visionmedia/debug/compare/4.0.0...4.0.1) This patch restores browserify functionality as well as keeping the intended functionality with Unpkg.com. ##### Patches -   fix browserify and supply alternative unpkg entry point (closes [#&#8203;606](https://togithub.com/visionmedia/debug/issues/606)): [`99c95e3`](https://togithub.com/visionmedia/debug/commit/99c95e3d54b07a918ad65bc148a2930ea8bfdd02) ### [`v4.0.0`](https://togithub.com/visionmedia/debug/releases/4.0.0) [Compare Source](https://togithub.com/visionmedia/debug/compare/3.2.6...4.0.0) A long-awaited release to `debug` is available now: **`4.0.0`**. ##### Due to the delay in release and the number of changes made (including bumping dependencies in order to mitigate vulnerabilities), it is highly recommended maintainers update to the latest package version and _test thoroughly_. ##### This release drops support for Node 4 and 5 in alignment with the [Node.js LTS Release Schedule](https://togithub.com/nodejs/Release). * * * ##### Major Changes -   move to XO (closes [#&#8203;397](https://togithub.com/visionmedia/debug/issues/397)): [`ba8a424`](https://togithub.com/visionmedia/debug/commit/ba8a424d41e9dc6129e081ac3aa9715be6a45fbd) -   add Node.js 10, remove Node.js 4 ([#&#8203;583](https://togithub.com/visionmedia/debug/issues/583)): [`05b0ceb`](https://togithub.com/visionmedia/debug/commit/05b0ceb8856bc7b6bb0f2adc3de5cae3cea9c872) ##### Minor Changes -   bump vulnerable packages: [`853853f`](https://togithub.com/visionmedia/debug/commit/853853f9f588044d76df3daf1959ca56c5f341b7) -   Fix nwjs support ([#&#8203;569](https://togithub.com/visionmedia/debug/issues/569)): [`207a6a2`](https://togithub.com/visionmedia/debug/commit/207a6a2d53507ec9dd57c94c46cc7d3dd272306d) -   add instance extends feature ([#&#8203;524](https://togithub.com/visionmedia/debug/issues/524)): [`e43e5fe`](https://togithub.com/visionmedia/debug/commit/e43e5fed177b8698674748063f4ed1aaba1d59c8) -   Add TVMLKit support ([#&#8203;579](https://togithub.com/visionmedia/debug/issues/579)): [`02b9ea9`](https://togithub.com/visionmedia/debug/commit/02b9ea9fd7ec95c42de47da13b4b6bb8e50025d8) ##### Patches -   clean up builds: [`3ca2331`](https://togithub.com/visionmedia/debug/commit/3ca23316a470f6bc6e0d75d297179cfc19bbc763) -   remove needless command aliases in makefile: [`9f4f8f5`](https://togithub.com/visionmedia/debug/commit/9f4f8f59ba745166b0c014a61c76de5e73d4841a) -   no longer checking for BROWSER=1: [`623c08e`](https://togithub.com/visionmedia/debug/commit/623c08ef73f8211278d5596c88041c65a2a58ee7) -   fix tests: [`57cde56`](https://togithub.com/visionmedia/debug/commit/57cde56e43003f6b404d4b3d9d76b74aafaeeec8) -   clean up makefile: [`62822f1`](https://togithub.com/visionmedia/debug/commit/62822f12668e8a0b1d1a4fd5a1c2fce1d8715da3) -   fix tests: [`833b6f8`](https://togithub.com/visionmedia/debug/commit/833b6f84c8f8dc5b6f13da38ab0ef8a8ff86c0c9) -   add .editorconfig: [`2d2509e`](https://togithub.com/visionmedia/debug/commit/2d2509e26bf6df1e1954267e3b1a1cb83973fb09) -   add yarn-error.log to .gitignore: [`7e1d5d9`](https://togithub.com/visionmedia/debug/commit/7e1d5d94f31b37b460fb8d88000ab7ed0be3597e) -   Improve usability of Windows notes w/ examples for prompts & npm script ([#&#8203;577](https://togithub.com/visionmedia/debug/issues/577)): [`1ad1e4a`](https://togithub.com/visionmedia/debug/commit/1ad1e4a79ff36981c1972bb4e61f93c7d4ade68d) -   Drop usage of `chrome.storage` (or make the storage backend pluggable): [`71d2aa7`](https://togithub.com/visionmedia/debug/commit/71d2aa77ff54c3c95a000bdead6b710b2a762c3f) -   Detect 'process' package: [`225c66f`](https://togithub.com/visionmedia/debug/commit/225c66f7198d2995e8232f9486aa9e087dc2a469) -   Update ms to 2.1.1 ([#&#8203;539](https://togithub.com/visionmedia/debug/issues/539)): [`22f9932`](https://togithub.com/visionmedia/debug/commit/22f993216dcdcee07eb0601ea71a917e4925a30a) -   Update .npmignore ([#&#8203;527](https://togithub.com/visionmedia/debug/issues/527)): [`a5ca7a2`](https://togithub.com/visionmedia/debug/commit/a5ca7a20860e78a4ea47f80770c09c0c663bae1e) -   fix colors with `supports-color@5`: [`285dfe1`](https://togithub.com/visionmedia/debug/commit/285dfe10a5c06d4a86176b54bef2d7591eedaf40) -   Document `enable()` ([#&#8203;517](https://togithub.com/visionmedia/debug/issues/517)): [`ab5083f`](https://togithub.com/visionmedia/debug/commit/ab5083f68a7e4c1ab474ff06cd5995d706abf143) -   refactor to make the common code be a setup function ([#&#8203;507](https://togithub.com/visionmedia/debug/issues/507)): [`7116906`](https://togithub.com/visionmedia/debug/commit/71169065b5262f9858ac78cc0b688c84a438f290) -   Simplify and improve: [`da51af8`](https://togithub.com/visionmedia/debug/commit/da51af8314436ab532c151583f7fd52b2ebf2a3e) -   use babel-ified distributed source for browsers: [`b3f8f8e`](https://togithub.com/visionmedia/debug/commit/b3f8f8e683915ef4fae3a77cbcebc6c410e65a8c) ##### Credits Huge thanks to [@&#8203;DanielRuf](https://togithub.com/DanielRuf), [@&#8203;EirikBirkeland](https://togithub.com/EirikBirkeland), [@&#8203;KyleStay](https://togithub.com/KyleStay), [@&#8203;Qix-](https://togithub.com/Qix-), [@&#8203;abenhamdine](https://togithub.com/abenhamdine), [@&#8203;alexey-pelykh](https://togithub.com/alexey-pelykh), [@&#8203;DiegoRBaquero](https://togithub.com/DiegoRBaquero), [@&#8203;febbraro](https://togithub.com/febbraro), [@&#8203;kwolfy](https://togithub.com/kwolfy), and [@&#8203;TooTallNate](https://togithub.com/TooTallNate) for their help! ### [`v3.2.6`](https://togithub.com/visionmedia/debug/releases/3.2.6) [Compare Source](https://togithub.com/visionmedia/debug/compare/3.2.5...3.2.6) This backport fixes a 4x performance regression when debug is disabled. ### Patches -   fix: performance issue ([`f312a89`](https://togithub.com/visionmedia/debug/commit/f312a8903a3928c43ff1388828d85f4f8407553d)) ([#&#8203;625](https://togithub.com/visionmedia/debug/issues/625)) ### [`v3.2.5`](https://togithub.com/visionmedia/debug/releases/3.2.5) [Compare Source](https://togithub.com/visionmedia/debug/compare/3.2.4...3.2.5) This patch restores browserify functionality as well as keeping the intended functionality with Unpkg.com. It is a backport of the `4.0.1` release. ##### Patches -   fix browserify and supply alternative unpkg entry point (closes [#&#8203;606](https://togithub.com/visionmedia/debug/issues/606)): [`cc5f146`](https://togithub.com/visionmedia/debug/commit/cc5f1463d1c975bcef0b3172b2527ca204ec474d) ### [`v3.2.4`](https://togithub.com/visionmedia/debug/releases/3.2.4) [Compare Source](https://togithub.com/visionmedia/debug/compare/3.2.3...3.2.4) > **3.2.4 is DEPRECATED.** See [#&#8203;603 (comment)](https://togithub.com/visionmedia/debug/issues/603#issuecomment-420237335) for details. This released fixed the missing `files` entry in `package.json`, mitigating the faulty `3.2.3` release. ### [`v3.2.3`](https://togithub.com/visionmedia/debug/releases/3.2.3) [Compare Source](https://togithub.com/visionmedia/debug/compare/3.2.2...3.2.3) > **3.2.3 is DEPRECATED.** See [#&#8203;603 (comment)](https://togithub.com/visionmedia/debug/issues/603#issuecomment-420237335) for details. This release mitigated the breaking changes introduced in `3.2.0` where `./node.js` was removed, breaking a very select few users on older releases of `babel-core`, as well as users that used an undocumented `require('debug/node')`. `./node.js` was temporarily added to the repository at this time; however, this release failed to include `node.js` in the `files` key in `package.json` and thus didn't fix the issue. `3.2.4` rectified this issue. ### [`v3.2.2`](https://togithub.com/visionmedia/debug/releases/3.2.2) [Compare Source](https://togithub.com/visionmedia/debug/compare/3.2.1...3.2.2) > **3.2.2 is DEPRECATED.** See [#&#8203;603 (comment)](https://togithub.com/visionmedia/debug/issues/603#issuecomment-420237335) for details. This release mitigated the breaking changes introduced in `3.2.0` where ES6 features were being used on users of Node 4, causing crashes upon inclusion. It employed a temporary Babel pass on the entire codebase in lieu of a hard reversion (so this version is, effectively, a backport of the fixes and features ultimately introduced in `4.0.0`). ### [`v3.2.1`](https://togithub.com/visionmedia/debug/releases/3.2.1) [Compare Source](https://togithub.com/visionmedia/debug/compare/3.2.0...3.2.1) > **3.2.1 is DEPRECATED.** See [#&#8203;603 (comment)](https://togithub.com/visionmedia/debug/issues/603#issuecomment-420237335) for details. This release, along with `3.2.0`, were subsequently released together as `4.0.0` (a major bump). You can review the complete changes [in that release's details](https://togithub.com/visionmedia/debug/releases/tag/4.0.0). * * * A quick hotfix to address Browser builds - `debug` is now compiled down to IE8-compatible code via Babel upon release. CDNs that honor the `""browser"":` key in `package.json` should now reflect these changes (previously, they would serve the non-bundled ES6 version). ##### Patches -   use babel-ified distributed source for browsers: [`b3f8f8e`](https://togithub.com/visionmedia/debug/commit/b3f8f8e683915ef4fae3a77cbcebc6c410e65a8c) ### [`v3.2.0`](https://togithub.com/visionmedia/debug/releases/3.2.0) [Compare Source](https://togithub.com/visionmedia/debug/compare/3.1.0...3.2.0) > **3.2.0 is DEPRECATED.** See [#&#8203;603 (comment)](https://togithub.com/visionmedia/debug/issues/603#issuecomment-420237335) for details. This release was intended to be the next release of Debug but introduced breaking changes that were overlooked at the time of release. As such it has been deprecated on npm and should not be used. This release, along with `3.2.1`, were subsequently released together as `4.0.0` (a major bump). You can review the included changes [in that release's details](https://togithub.com/visionmedia/debug/releases/tag/4.0.0). ### [`v3.1.0`](https://togithub.com/visionmedia/debug/releases/3.1.0) [Compare Source](https://togithub.com/visionmedia/debug/compare/3.0.1...3.1.0) ##### Minor Changes -   Ignore package-lock.json: [`e7e568a`](https://togithub.com/visionmedia/debug/commit/e7e568a24736486721882282eb21beb31c741647) -   Remove `component.json`: [`47747f3`](https://togithub.com/visionmedia/debug/commit/47747f329fe159e94262318b52b87a48f6c0acd4) -   Remove ""component"" from package.json: [`bdb7e01`](https://togithub.com/visionmedia/debug/commit/bdb7e0137f84dc8bcfc95daede7c694799d38dbf) -   Add `DEBUG_HIDE_DATE` env var: [#&#8203;486](https://togithub.com/visionmedia/debug/issues/486) ##### Patches -   Correct spelling mistake: [`daf1a7c`](https://togithub.com/visionmedia/debug/commit/daf1a7c8c0f62f5dbc8d48158d6748d0527cc551) -   Examples: fix colors printout: [`7cd9e53`](https://togithub.com/visionmedia/debug/commit/7cd9e539ce571fc3314d34d9d1dac3124839dbac) -   Fix browser detection: [`fdfa0f5`](https://togithub.com/visionmedia/debug/commit/fdfa0f5f6cc7e83fd60b6cf1e7b990cbf6388621) -   Remove ReDoS regexp in `%o` formatter: [#&#8203;504](https://togithub.com/visionmedia/debug/issues/504) ##### Credits Huge thanks to [@&#8203;amejiarosario](https://togithub.com/amejiarosario) and [@&#8203;zhuangya](https://togithub.com/zhuangya) for their help! ### [`v3.0.1`](https://togithub.com/visionmedia/debug/compare/3.0.0...3.0.1) [Compare Source](https://togithub.com/visionmedia/debug/compare/3.0.0...3.0.1) ### [`v3.0.0`](https://togithub.com/visionmedia/debug/releases/3.0.0) [Compare Source](https://togithub.com/visionmedia/debug/compare/2.6.9...3.0.0) [Featuring pretty new colors!](https://debug-browser-colors.now.sh/) <img width=""521"" src=""https://user-images.githubusercontent.com/71256/29092181-47f6a9e6-7c3a-11e7-9a14-1928d8a711cd.png""> ##### Major Changes -   Remove `DEBUG_FD`: [#&#8203;406](https://togithub.com/visionmedia/debug/issues/406) -   Make millisecond timer namespace specific and allow 'always enabled' output: [#&#8203;408](https://togithub.com/visionmedia/debug/issues/408) -   Use `Date#toISOString()` instead to `Date#toUTCString()` when output is not a TTY: [#&#8203;418](https://togithub.com/visionmedia/debug/issues/418) -   `enabled()` updates existing debug instances: [#&#8203;440](https://togithub.com/visionmedia/debug/issues/440) ##### Minor Changes -   Add `destroy()` function: [#&#8203;440](https://togithub.com/visionmedia/debug/issues/440) -   Document `enabled` flag: [#&#8203;465](https://togithub.com/visionmedia/debug/issues/465) -   Support 256 colors: [#&#8203;481](https://togithub.com/visionmedia/debug/issues/481) -   Update ""browserify"" to v14.4.0: [`826fd94`](https://togithub.com/visionmedia/debug/commit/826fd94639efeaa3c5701b50d335caead084a5d6) -   Separate Node.js and web browser examples: [`87880f6`](https://togithub.com/visionmedia/debug/commit/87880f6ae1f48b12d9f3346bce564a66cba6b93e) -   Example: use %o formatter: [`31f3343`](https://togithub.com/visionmedia/debug/commit/31f3343de76cb8687041387a1b811745c6e84473) -   More readme screenshots replaced: [`25eb545`](https://togithub.com/visionmedia/debug/commit/25eb545324912dd2863658d0ba35426c0f617619) -   Add Namespace Colors section to readme: [`8b5c438`](https://togithub.com/visionmedia/debug/commit/8b5c438a222167bd0cc66db046bac073f01b3c01) -   Separate the Node and Browser tests in Travis: [`f178d86`](https://togithub.com/visionmedia/debug/commit/f178d861df18abacac6e9e4607c7306a1147bf3d) ##### Patches -   Readme: fix typo: [#&#8203;473](https://togithub.com/visionmedia/debug/issues/473) -   Component: update ""ms"" to v2.0.0: [`d2dd80a`](https://togithub.com/visionmedia/debug/commit/d2dd80aeaf1b037f0b3be21838c4594bbedc4a9c) ##### Credits Huge thanks to [@&#8203;gtjoseph](https://togithub.com/gtjoseph), [@&#8203;timruffles](https://togithub.com/timruffles) and [@&#8203;FantasticFiasco](https://togithub.com/FantasticFiasco) for their help! </details> --- ### Renovate configuration :date: **Schedule**: At any time (no schedule defined). :vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied. :recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with ""`rebase!`"". :no_bell: **Ignore**: Close this PR and you won't be reminded about this update again. --- - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box --- Newsflash: Renovate has joined WhiteSource, and is now free for all use. [Learn more](https://renovate.whitesourcesoftware.com/blog/renovate-is-now-part-of-whitesource/) or view updated [terms](https://renovate.whitesourcesoftware.com/terms-of-service/) and [privacy](https://renovate.whitesourcesoftware.com/privacy-policy/) policies.::",ca4f4c0d6a12276599d1a6783558ef253d00c68b::
https://api.github.com/repos/elastic/kibana,52814,fix/console-load-remote::master,0,merged,Feature:Console::Team:Elasticsearch UI::release_note:fix::v7.5.1::v7.6.0::v8.0.0::,"## Summary Addresses this issue https://github.com/elastic/kibana/issues/52747. Some functionality was erroneously removed from Console here https://github.com/elastic/kibana/pull/52270, but in that PR the functionality was already not being used anywhere - looks like this PR broke it https://github.com/elastic/kibana/pull/45627. - [x] Test on IE11 - [x] Test on FF - [x] Test on Safari - [x] Test on Chrome This will have to be backported to 7.x and 7.5 as a fix release. ## Release note We fixed ""View in Console"" behaviour used when viewing a Console snippet from Elasticsearch docs. ::Can we add a comment along the lines of: ```js // Support loading a Console snippet from code examples in the docs. ```::What use case does this support?::The behavior I'm seeing is that the loaded data overwrites everything in the request panel. Is this intended? Perhaps we should prepend it to the saved requests instead?::This check looks like a duplicate of the check on line 96. Maybe we only need one or the other?::This was copied from the previous behaviour, perhaps there is specific case for loading from github that required an additional header? I thought I would keep the legacy behaviour unchanged until we decide to officially deprecate ""load from"" behaviour or revisit it in future.::It looks like this is consistent with legacy behaviour: Starting here: https://github.com/elastic/kibana/blob/44a4cee0da4def92176a9b5a31ec95a82da28644/src/legacy/core_plugins/console/public/src/app.js#L82 Which would ultimately call: https://github.com/elastic/kibana/blob/44a4cee0da4def92176a9b5a31ec95a82da28644/src/legacy/core_plugins/console/public/src/sense_editor/editor.js#L170 Which sets the value for the entire current buffer. Also checked to on 7.4 branch to make doubly sure 😂 I agree that changing the current behaviour to rather prepend would be better, but I think once we have multiple buffers we can deal with this in a more elegant manner, perhaps with a dedicated ""view in console"" buffer - I wouldn't want to change the legacy behaviour in this fix. Wdyt?::So the two checks are for different points in time: 1. Startup - when we want to figure out should we load from remote or should we load from localStorage 2. Later, when hash changes occur, should we load from remote - we don't want to load from localStorage if not from remote in this case. I guess the alternative could be to set a `Ref` and check if we have done the ""initial load"". But this way can be restructured to only do the check once::Sounds good, thanks for the explanation!::> I wouldn't want to change the legacy behaviour in this fix. I agree!::",8cb1cfc5fb294efc11ebdedd9ab5431afbe69342::c23b3e89e691fe0caf808c2ac88cfedc60789b86::fddaad4914164e9fe938d913e947ffaf9ee8925d::
https://api.github.com/repos/elastic/kibana,52698,feature/np-csp::master,0,merged,Feature:New Platform::Team:Core::release_note:plugin_api_changes::v7.6.0::v8.0.0::,"## Summary Move CSP options from legacy into the new platform. This blocks being able to add the new rendering service in #52161. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [x] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - [ ] ~~Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~~ - [x] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] ~~This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~~ ### For maintainers - [x] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [x] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ### Dev Docs The default options used for managing Kibana's Content Security Policy have been moved into core for the new platform. Relevant items exposed from `src/core/server` include: - `CspConfig`: TypeScript class for generating CSP configuration. Will generate default configuration for any properties not specified in initialization. - `CspConfig.DEFAULT`: Default CSP configuration. - `ICspConfig`: Interface representing CSP configuration.::Should we expose the csp rules in the `SharedGlobalConfig` to allow access to plugins during migration?::How will this be accessible in NP? Should we expose it from the http service setup contract?::This is for usages from the client-side?::Yep!::I don't think that is clear yet, and I think it is going to be solved at least in part via #50644. (Outside of `import { DEFAULT_CSP_OPTIONS } from 'src/core/server';`, that is.)::I think the ideal end-state here is that plugins never need to consume or care CSP headers. The HTML rendering service (https://github.com/elastic/kibana/issues/41964) should add this header under the hood in the future.::Probably we should move this to `server.csp` in the future. Can you add a note to #50644 that we should rename this key using the config deprecations #52251 once it's available?::Will GH ping us on changes? Both teams were owners before https://github.com/elastic/kibana/pull/52698/files#diff-5cfb934ca0ec4c1743905a51dc428b84R83 ::I believe these should be set to `HANDLED_IN_NEW_PLATFORM` similar to other options here.::Maybe this should be `@public` and `@deprecated` for now.::Yep! Platform is already an owner due to L77: https://github.com/elastic/kibana/pull/52698/files/7ab6d996c76884a170ecd3961e458fdd5686a400#diff-5cfb934ca0ec4c1743905a51dc428b84R77::Shouldn't we provide `directives` string as well? So other plugins can start using it without additional `createCspDirectives` call? ::ok. there are 2 problems - `/src/legacy/server/csp/ ` wasn't removed from codeowners - let's check later whether it works because I found ` The last matching pattern has the most precedence.` https://github.blog/2017-07-06-introducing-code-owners/::Definitely! 👍 ::This is a good point. Let me change a few things and get back to you on this.::I'm currently looking into adding support for additional security headers. Whenever we do rename this, how do you both feel about something like `server.securityHeaders.csp`? Then the other headers can use the same prefix, and all related headers will be in one place.::Should it be ""security"" specific? What about just `server.headers.csp`?::I think both make sense, but with my AppSec hat on I lead towards being more specific. Reason being is so these settings stand out when people search for ""security"", since these settings would apply to core, not to the Security plugin. We won't be able to have the ideal defaults set for all of these (e.g., `X-Frame-Options`), so we'll want to ensure that users are aware these exist. Also, I can't think of any other non-security-related HTTP headers that we'd want to have specific config settings for.::> Also, I can't think of any other non-security-related HTTP headers that we'd want to have specific config settings for. CORS? I'm fine if Security team owns it in the future::Why we expose all csp values? As I can see, plugins use only `csp.rules`. Other settings are platform-specific. ::I'm unsure why we're adding a new config option rather than a property that is computed based on the `csp.rules` config. May need to follow the HttpConfig pattern where we take the validated config from ConfigService and map it onto a value class. When we do that we could generate the final rules string.::nit: maybe this should just be called `header`::Will `rules` ever change? Below in HttpService we're already generating a new instance of this class each time the config changes. Seems simpler to just set this property once and make all properties `readonly`::Couldn't these be accessed via `server.newPlatform.setup.core.http.csp.header`?::Couldn't these be accessed via `server.newPlatform.setup.core.http.csp.header`?::oops :)::Can you add a comment explaining this is used to get the default?::Couldn't these be accessed via `server.newPlatform.setup.core.http.csp.header`?::Ugh, yes!::NIT: use `httpConfig.path` and `cspConfig.path` instead::NIT: same here.::Not sure about this one, but: `CspConfig` is actually a concrete class, not a proper type. We might want to hide the actual implementation when exporting (at least in `server/types` as this will be imported by browser, but probably in `index` too for consistency)?::(related to my previous comment, I see why that was needed now): I think I still don't like the plugin having to instanciate CspConfig to get the default value. This is probably a NIT, but maybe having something like `http.defaultCsp` should be better in term of responsibilities? Also would allow to expose an interface instead of the concrete?::👍 on the comment, thanks for adding this.::Should we be heeding this warning? I don't see it anywhere else...::I never would have thought to do this, I like it!::We'll have to be careful when backporting this, as the default in 7.x is `false`::We'll have to be careful when backporting this, as the default in 7.x is `false`::Now that CSP is in the NP, we don't need to have the Security plugin's legacy plugin ""shim"" it into the NP using `__legacyCompat.registerLegacyAPI`. Would you like us to address this in a separate PR? The changes don't look that extensive 🙌 https://github.com/kobelb/kibana/commit/feb29e0204c9352b2466749cbc085b501df14748::I'll go ahead and incorporate since we are changing these anyway. Thank you for doing that!::Regarding renaming the `csp` config key, I will handle this in another PR and make sure we reach consensus between the Platform and Security teams =)::",ce943945564166b1ab64916eaaa9dfc971c7d713::51f2fb111e0f1f2fc595f529c560d5e34c79f7bd::6b1f50f192aac94eb3ce2f6676d539b84d8a4952::6d46ff3df80420acec2d4fd7cec5ff7b66422294::0725c627b5450c97b489cc05a8579b90e1701239::96017492f088a52d0d79a30828067df34c7f5397::eb224e6c8b1a9a5f6086b99631195c2bb99cf9c6::f6339cb533d5d16d02bfa412ac3c7b86695f8a62::fd90dfe5fa49dfe23fbc36b01556b43fd95726dc::b81a6f82f3c7811543c774af1216e1b48d5437e1::b3ebf53cd4708ed4401fb029776ef1606075f59a::451da17dc553ff0740017f090200ac10963e1526::fd01be74896eb5f1e8e09d5a6147e80e4807cf5c::
https://api.github.com/repos/elastic/kibana,52458,re-introduce-docs::master,0,merged,Feature:FieldFormatters::Team:KibanaApp::release_note:skip::v7.5.1::v8.0.0::,"## Summary The docs were accidentally introduced in 7.4 branch only. I reverted the change and issuing another PR to reintroduce them in master and later on backport to 7.x and 7.5. See https://github.com/elastic/kibana/issues/50328 for more info. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. ~~[ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility)~~ ~~[] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~~ - [X] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials ~~[ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios~~ ~~[ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~~ ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",7e40e8632f5661bbce3cc01c440aac1711792389::
https://api.github.com/repos/elastic/kibana,51256,update-apm-index-pattern-master::master,0,merged,release_note:skip::v8.0.0::,"Added fields: {'package.install_scope', 'observer.product', 'package.license', 'url.top_level_domain', 'threat.technique.id', 'log.origin.file.line', 'package.size', 'threat.technique.name', 'package.path', 'destination.user.group.domain', 'package.version', 'url.registered_domain', 'url.extension', 'destination.registered_domain', 'package.description', 'log.syslog.priority', 'observer.name', 'host.user.group.domain', 'log.origin.function', 'log.syslog.facility.name', 'error.stack_trace', 'server.top_level_domain', 'log.syslog.severity.code', 'dns.question.subdomain', 'log.syslog.facility.code', 'log.syslog', 'group.domain', 'threat.technique.reference', 'source.user.group.domain', 'package.architecture', 'server.registered_domain', 'server.user.group.domain', 'destination.top_level_domain', 'threat.tactic.id', 'package.checksum', 'package.installed', 'dns.question.top_level_domain', 'package.name', 'client.registered_domain', 'user.group.domain', 'log.origin.file.name', 'client.user.group.domain', 'threat.framework', 'source.top_level_domain', 'log.syslog.severity.name', 'threat.tactic.reference', 'threat.tactic.name', 'client.top_level_domain', 'source.registered_domain'} ::fyi: we now overwrite this with a constant: https://github.com/elastic/kibana/pull/50127/files#diff-b880f53ef6b8c6aeb6ae5935661929f4R42 Do you see any problems with that? Furthermore: would it be possible to change this from `apm-*` to `apm_static_index_pattern_id`?::so replace the line `""id"": ""apm-*"",` with `""id"": APM_STATIC_INDEX_PATTERN_ID`? i think you can do that, right? - we don't override that.::I thought you replaced the entire file? But you just replace `fields` and `fieldFormatMap`?::ah, yeah. you're right :man_facepalming: i could hard-code that, but it's going to be very brittle (and weird) to hard-code a kibana variable name in apm-server? ie. if you change it later, or you backport to some release branch and we don't; it's going to break, and i'm not sure we will even notice... i understand the itch of having a duped const, but given how unlikely is that we change the `apm-*`, i'd rather not do that, tbh. does that makes sense?::No it's totally fine as it is. We'll just overwrite it. My main concern is that people will think that `apm-*` is the matcher and that it's hardcoded - eg that they can't change their indices to `custom-apm-*`. But no worries. Let's leave it as-is.::",0068d668ca4f92ac2d604d1a20d87e7343185a57::
https://api.github.com/repos/elastic/kibana,50988,apm-7.5-updates::master,0,merged,Team:apm::release_note:skip::v7.5.0::,"Documentation updates for 7.5 APM. Needs backport to `7.x` and `7.5`. • APM UI --> APM app • Adds section on JVM metrics • Adds two new Agent configurations Closes https://github.com/elastic/apm-dev/issues/571. Closes https://github.com/elastic/apm/issues/168. For https://github.com/elastic/apm-dev/issues/567. [skip-ci]::I capitalized these because the original config was capitalized. Should they be lower-cased instead? Does it matter?::@bmorelli25 is there any note about kibana 7.5 not being compatible with apm-server < 7.5 (or viceversa) for this feature? or is that a to-do for release notes? ::@jalvz - I've noted this in three places: * [APM Release notes](https://www.elastic.co/guide/en/apm/get-started/7.5/release-highlights-7.5.0.html) * [Installation and upgrade guide](https://www.elastic.co/guide/en/elastic-stack/7.5/apm-highlights.html) * [APM Server Breaking changes](https://www.elastic.co/guide/en/apm/server/7.5/breaking-changes.html) I think that's sufficient, but if you still have concerns I can take another look at these docs.::BTW, I added it in initially because of your reminder in the release notes PR, so thank you!::more than sufficient, thank you!::",4c18312d4fcee0d6c39ff02868a3b6a6a3a1d847::36d9c62cffbf7e63ad2a5bd7821a30434690709f::81be911c06f266caba490f680aaf27ffec8dd07a::
https://api.github.com/repos/elastic/kibana,50734,feature/clone-with-retry::master,0,merged,Feature:CI::Team:Operations::release_note:skip::v7.4.3::v7.5.0::v7.6.0::v8.0.0::,See here for example with a fake error: https://kibana-ci.elastic.co/job/elastic+kibana+pipeline-pull-request/9915/consoleFull Adding this because we've had a ton of clone failures today Backport after flaky-test-runner changes have been backported::,61097fb23357d84617ba49635a2e3ab15973fc3f::c83a1198ed52373232da6684b223721817465031::35e045af099c06db2319ae4adf85fe5d658540e4::
https://api.github.com/repos/elastic/kibana,50300,ml-fix-chart-tooltip-error::7.5,0,merged,:ml::Feature:Anomaly Detection::bug::regression::release_note:skip::v7.5.0::,"## Summary Fixes #50154. In `7.5` only tooltips for the single metric viewer chart were broken, the first hover would trigger an error, the tooltip would stay and not disappear, a second tooltip would appear when hovering other elements. Turns out the `<ChartTooltip />` component was moved in the JSX structure [in a PR](https://github.com/elastic/kibana/pull/48235) that went only into `7.6`. The [follow up PR](https://github.com/elastic/kibana/pull/49160) for fixing tooltip positioning was backported to `7.5` again. The backport didn't complain but duplicated the `<ChartTooltip />` instead of moving it, resulting in the bug. ::",62d0565add114e1db2c215604f81e18aaa850bc2::7f11d563e5a1073d7747cd95e0280650ed5fb88b::3c44cbb055c25db9f7e7778f27f3dd1a2a845d21::50008550b1fd3d17a3ac3f19faf4def8356e41c9::ca4ae38755bda678289d2ebc0c322e001e748daa::7994ad40f0a2d0e8883ed4ee62826aa5b6f9a69d::7862615522ecee8205035d52f73858b4d4f72a25::e9ca401c5b281c10d7b86bcbb302e81c109d1ec6::b7084a9b2470fc2569d6114fc7c6859f9f4e7d1e::9ae71bb760df32936c90fbe5d9ef4a2b1f513327::cf1eec7a303a03d9d02a0e73a97227a6064863de::
https://api.github.com/repos/elastic/kibana,49182,7.4.data.viz::7.4,0,merged,release_note:skip::v7.4.1::,"## Summary This PR backports the changes of the following commit: [DOCS] Adds list of privileges to file data viz #49156 ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. ~~- [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility)~~ ~~- [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~~ - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials ~~- [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios~~ ~~- [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~~ ### For maintainers ~~- [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ ~~- [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ [skip-ci]::",7fec912851960bf37baed3d35ae2ed1d6ac0d9fb::
https://api.github.com/repos/elastic/kibana,49181,7.5.data.viz::7.5,0,merged,release_note:skip::v7.5.0::,"## Summary This PR backports the changes of the following commit: [DOCS] Adds list of privileges to file data viz #49156 ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. ~~- [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility)~~ ~~- [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~~ - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials ~~- [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios~~ ~~- [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~~ ### For maintainers ~~- [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ ~~- [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ [skip-ci]::",8738d8a804285a64c5db260d3057e3c00196561c::
https://api.github.com/repos/elastic/kibana,49179,7.x.data.viz::7.x,0,merged,release_note:skip::v7.6.0::,"## Summary This PR backports the changes of the following commit: [DOCS] Adds list of privileges to file data viz #49156 ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. ~~- [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility)~~ ~~- [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~~ - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials ~~- [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios~~ ~~- [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~~ ### For maintainers ~~- [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ ~~- [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ [skip-ci]::",a236fb1ee7c095922d3d8963c46a94141cc52b38::
https://api.github.com/repos/elastic/kibana,49091,backport/eui/14.5.1::7.5,0,merged,EUI::release_note:skip::v7.5.0::,"## [`14.5.1`](https://github.com/elastic/eui/tree/v14.5.1) **Note: this release is a backport containing changes originally made in `14.6.0` and `14.7.0`** - Added new updated `infraApp` and `logsApp` icons. ([#2430](https://github.com/elastic/eui/pull/2430)) - Made EuiIcon a PureComponent, to speed up React re-render performance ([#2448](https://github.com/elastic/eui/pull/2448)) **Bug fixes** - Fixed `EuiNavDrawer` collapse/expand button height issue ([#2463](https://github.com/elastic/eui/pull/2463))::",3b32755acdc03e263d386fe0e4c8dc1cddbfa719::9112b1b7c630e4a039bc1711663def446a65f0ec::100790b7c033c0c562c58135fb0dfd6c7f37c02c::
https://api.github.com/repos/elastic/kibana,49000,TSVB_migrate_split_filters_from_7_3::master,0,merged,Feature:TSVB::Team:KibanaApp::release_note:fix::v7.4.2::v7.5.0::v7.6.0::v8.0.0::,"## Summary Fixes https://github.com/elastic/kibana/issues/48710 When migrating to Kibana 7.3, split_filters from the 'Group by' series option were not migrated to query:language objects. After an upgrade to 7.3, visualizations that had split_filters in previous versions don't interpret the filter as a string. For example, if we have a TSVB visualization in Kibana 6.8 with the following configuration: ![TopN_in_6_8_with_filters](https://user-images.githubusercontent.com/11909450/67320674-6746bd00-f4c3-11e9-9f14-873bfd3c5b48.png) After an upgrade to 7.3, the filters appear to have been lost: ![TopN_with_filters_from_6_8_missing_group_by_filter_query](https://user-images.githubusercontent.com/11909450/67320763-804f6e00-f4c3-11e9-91c9-edbe8277c10e.png) However, the filter strings haven't been deleted, they are not interpretable by the code because they are not query:language objects. Inspecting the visState data using the utilities in the Management -> Saved Objects list, we see that the filter strings are still there: ![Screen Shot 2019-10-22 at 12 26 10 PM](https://user-images.githubusercontent.com/11909450/67323487-5dbf5400-f4c7-11e9-9170-e82cd8afbb18.png) Patches are not being backported to 7.3 anymore, so a fix to the original migration can't be applied. A new migration has been added and runs for version 7.5. The migration transforms any remaining split_filters filters that are still strings. The migration will effectively restore the original filters if they have not been deleted. ![migrated_filters_on_import_to_v8](https://user-images.githubusercontent.com/11909450/67336354-0bd3f980-f4da-11e9-9321-ddab51e0fba1.png) Unfortunately, the only way to 'fix' the missing filters in a version between 7.3 and 7.5 is to manually convert the filter string to an object in the visState panel shown when inspecting the saved object as follows: 1. Go to the Management page and select Saved Objects. 2. Find the visualization with 'missing' filters 3. Click on the 'inspect' icon. This will show a series of panels with json in them. 4. Find the panel that shows the `visState` 5. Look for the `split_filters` array and convert each `filter:<string>` into an object containing the original filter string as the value for the `query` key and use `lucene` as the value for the `language` key. 6. Save the object. You should see that the visualization's filters have been restored. The other way to restore the filters after an upgrade to 7.3 is to inspect the saved object and manually reapply the filter as seen in the json under visState -> params -> series -> split_filters -> filter in the visualization itself. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. ~~- [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility)~~ ~~- [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~~ ~~- [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials~~ - [X] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios ~~- [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~~ ### For maintainers ~~- [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ No breaking changes in this PR ~~- [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ ::Typo ```suggestion // Migrate split_filters in TSVB objects that weren't migrated in 7.3 ```::At some point we really should write a utility for that annoying boilerplate code... but def not in this PR :D::Nitpick: could we perhaps `toEqual` the full object here instead of just the keys? Like `toEqual({ query: 'bytes:>1000', language: 'lucene' })`? I think it would just make for a bit safer test. (The same applies for the test below.)::We're not calling the `toHaveProperty` function here actually, so the test case doesn't contain any valid `expect`.::`toHaveProperty` is now called [here](https://github.com/elastic/kibana/pull/49000/files#diff-5afd24840636884e72ed2920f5e67a71R1264)::[done](https://github.com/elastic/kibana/pull/49000/files#diff-5afd24840636884e72ed2920f5e67a71R1217)::",dc4ed92be1a1ccb7c6071ee7b4ca9871074a41ef::d09ed80edf4ed4bf41cc505c3eb7fa2790d28793::05bb4930aba787028b8da817993f1707c3dd9588::30c39deae27b0503f4b5504387cf8d86b3da87c1::23ab008e904bf75880fd598f21b19ed1f8b3e536::924a26fd8e39a1a222727f7cb9e505f6706ba7b9::
https://api.github.com/repos/elastic/kibana,48967,TSVB_migrate_split_filters::master,0,closed,,"## Summary When migrating to Kibana 7.3, split_filters from the 'Group by' series option were not migrated to query:language objects. After an upgrade to 7.3, visualizations that had split_filters in previous versions don't interpret the filter as a string. For example, if we have a TSVB visualization in Kibana 6.8 with the following configuration: ![TopN_in_6_8_with_filters](https://user-images.githubusercontent.com/11909450/67320674-6746bd00-f4c3-11e9-9f14-873bfd3c5b48.png) After an upgrade to 7.3, the filters appear to have been lost: ![TopN_with_filters_from_6_8_missing_group_by_filter_query](https://user-images.githubusercontent.com/11909450/67320763-804f6e00-f4c3-11e9-91c9-edbe8277c10e.png) However, the filter strings haven't been deleted, they are not interpretable by the code because they are not query:language objects. Inspecting the visState data using the utilities in the Management -> Saved Objects list, we see that the filter strings are still there: ![6_8_migration_effect_in_7_3 copy](https://user-images.githubusercontent.com/11909450/67322897-914dae80-f4c6-11e9-8e26-4bbabfa60ef9.png) Patches are not being backported to 7.3 anymore, so a fix to the original migration can't be applied. A new migration has been added to migrate any remaining split_filters filter strings that will effectively restore the original filters if they have not been deleted. The only other way to restore the filters after an upgrade to 7.3 is to inspect the saved object and manually reapply the filter as seen in the json under visState -> params -> series -> split_filters -> filter ![Screen Shot 2019-10-22 at 12 26 10 PM](https://user-images.githubusercontent.com/11909450/67323487-5dbf5400-f4c7-11e9-9170-e82cd8afbb18.png) ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",93b0b05c880e004a4fe6ef2552c1585a94bceaa0::e830d5a8f37568ff448925377a7140802037b6ad::
https://api.github.com/repos/elastic/kibana,48404,remove-type-from-agent-configuration::master,0,merged,Team:apm::release_note:skip::v7.6.0::,`type` was deprecated in 7.0 and will be removed in 8.0. This has starting failing on master (8.0.0) but is not a problem on 7.x so won't be backported to 7.5. @jalvz ::,f6def7cd3d794171702e2bb8a31f23d3d4cdeddf::
https://api.github.com/repos/elastic/kibana,47615,7.3.redirect::7.3,0,merged,release_note:skip::v7.3.3::,"## Summary This PR changes the `job-tips.html` redirect in `redirects.asciidoc` as the URL will change when the following PR will be merged: https://github.com/elastic/stack-docs/pull/592 This PR backports the following commit to 7.3: https://github.com/elastic/kibana/pull/47569 ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - ~~[ ]~~ This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - ~~[ ]~~ Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - ~~[ ]~~ [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - ~~[ ]~~ [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - ~~[ ]~~ This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - ~~[ ]~~ This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - ~~[ ]~~ This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) [skip ci]::",53130e82bfa3b2852f6ea9c2cb9846e0d2e6ad24::
https://api.github.com/repos/elastic/kibana,47613,7.4.redirect::7.4,0,merged,release_note:skip::v7.4.1::,"## Summary This PR changes the `job-tips.html` redirect in `redirects.asciidoc` as the URL will change when the following PR will be merged: https://github.com/elastic/stack-docs/pull/592 This PR backports the following commit to 7.4: https://github.com/elastic/kibana/pull/47569 ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - ~~[ ]~~ This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - ~~[ ]~~ Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - ~~[ ]~~ [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - ~~[ ]~~ [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - ~~[ ]~~ This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - ~~[ ]~~ This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - ~~[ ]~~ This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) [skip ci]::",71d4e15be84fbc4e5660ca0eb8e5b91c51ad9704::
https://api.github.com/repos/elastic/kibana,47610,es_archiver/types::master,0,merged,Team:Elasticsearch UI::Team:Operations::release_note:skip::review::v8.0.0::,"Removes the remaining usage of elasticsearch types from Kibana.  In 7.x types are deprecated, and 8.x they are removed, so this is needed to stay compliant with upcoming changes. Closes https://github.com/elastic/kibana/issues/47217::apologies, had prettier turned on.  i'll revert these::i'm not sure what's happening here, @Kerry350 can you point me where i would need to look for these changes?::More https, please 🔒:)::I'll open a PR upstream - these are generated and it looks like there's a few missing links too::open upstream::https://github.com/elastic/elasticsearch/pull/48479::https://github.com/elastic/elasticsearch/pull/48482::fix upstream @joshdover @delvedor do you know the best approach to this?  does the DefinitelyTyped repo have any correlation with es versioning?  does the new client have types we can use?::Can we return undefined here like we are doing in 7.x to make it easier for backports in the future? https://github.com/elastic/kibana/blob/7.x/packages/kbn-es/src/custom_snapshots.js#L28-L31::There are a few more instances like this in `bulk.json`, `create.json`, `delete.json`, `exists_source.json`, `indices.exists_type.json`, etc.::I don't think this work should block this PR - but we can instead create an issue for Elasticsearch UI team.::@tylersmalley @jbudz Happy to tackle the remaining references in the spec once this is merged :+1: https://github.com/elastic/kibana/issues/49303::Hello! As far as I know, the type definitions present on DefinitelyTyped are not maintained by us and are out of date (cc @sqren). The new client offers out of the box the type definitions for every API, but only for url/query parameters, request body and responses are not present because we can't generate them from the spec. You can see [here](https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/typescript.html) how the TypeScript support works :)::Just to add to this: to work around broken definitely typed definitions in APM we have to overwrite type defs like: https://github.com/elastic/kibana/blob/2ddbc9eef6cff440dfd264c2cf6f6373280fe5bb/x-pack/legacy/plugins/apm/server/lib/helpers/es_client.ts#L23-L24 Not great but does the job. Really looking forward to having the new client in Kibana!::d0ff328 ::cc @elastic/logs-metrics-ui ::We should be returning undefined here.::Let's manually revert this for now to not be blocked on upstream::Same as above, let's manually revert this for now to not be blocked on upstream:: 5b2c3eb :: 5b2c3eb ::The expectation is that this echoes the query from line 104, so it shouldn't change. :thinking: I don't see a connection to doc types.::Maybe https://github.com/elastic/elasticsearch/issues/29561?  I dug into this further, it's somewhere at the query level.  UI is highlighting as expected.  Mappings LGTM with event.dataset as keyword.::@elastic/logs-metrics-ui, any assistance we can get here would be great. There is currently quite a bit blocked by this PR. Thanks!::This returns as expected: ``` GET filebeat-simple-logs/_search { ""query"": { ""multi_match"": { ""query"": ""generate_test_data/simple_logs"", ""type"": ""phrase"" } }, ""highlight"": { ""fields"": { ""event.dataset"": {} } } } ```::Narrowed it down to `fragment_size: 1`::Instead of merging this change with unknown consequences, let's revert it and skip the test, creating a blocker issue for 8.0.::Sorry for the delay. Agreed - we'll look at the highlighting change separately.::",9c52b9a9b911ad5987471b83ae295307fefc954b::d557d9d927892f8ab22196e9fba19f627671f4f4::b1a12c05471d469988b1288b380bf5c392a3480b::30e5e910035367c274d08a9b574761e9a377725d::9904ca971ddb8c0cac636bdecd39942c5eda9508::d0ff328789b61351c8a386eb35689c62b6b7787d::3364e9f53c011ddf5978a30dc295943ce9174d5b::5b2c3eb008c20379d171b7594e51e409a65c94df::0c5f35b250e5785d09140f296a745bfeb009a19b::f36e81ecadcf16fbe96bf67f67bff6cf4166c8f8::4573a27d3022df0bb3cd95f647b4f6f60c34c606::008a4dae41e892b0cebe605371748a7e15643331::f57a14fcef72318cdb9fce9fe05e61e9fd7cc86e::fc05b21f3093f42c9c0ff861e24648cc08f59088::76fd92908955a626f54117a709f8d88c0a837c19::19074db02a85f07394cdd1ecad774a7eead799c3::8d95292af225fc0679efa7068f37c844290cd260::
https://api.github.com/repos/elastic/kibana,47327,7.4::7.4,0,merged,:ml::release_note:skip::test_ui_functional::v7.4.1::,## Summary This PR fixes a timing issue after job creation where the job is still `closing`. ### Details This was already fixed as part of #46894 for 7.5.0 and above. This PR basically backports the commit 8fd57525eba531f0a3c65f054308ef37e9ad5616 plus the `Realtime`->`RealTime` change from c3ef36f3daf60bd0c0bf22a2037757b8b37914cc. Closes #47025::,15f2c5a86b0caddc2d27d56ac38d17a5bb070f5d::f5d770a694472807c48d1d7f57813eb2aa1f98af::
https://api.github.com/repos/elastic/kibana,47298,ls-link-7.3::7.3,0,merged,Team:Docs::release_note:skip::v7.3.0::,## Summary Backport of #47280 Restructuring Monitoring content for Logstash (elastic/logstash#11033) resulted in a broken link in a deprecated topic. This PR corrects the link. NOTE: This PR will fail elasticsearch-ci/doc and cannot be merged until the backport of elastic/logstash#11033 is merged. ### Checklist - [x] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials [skip ci] ::,fbdf84e5bcb07f23d30bd7a2c0f55242b4fc5821::
https://api.github.com/repos/elastic/kibana,47297,ls-link-7.4::7.4,0,merged,Team:Docs::release_note:skip::v7.4.0::,## Summary Backport of #47280 Restructuring Monitoring content for Logstash (elastic/logstash#11033) resulted in a broken link in a deprecated topic. This PR corrects the link. NOTE: This PR will fail elasticsearch-ci/doc and cannot be merged until the backport of elastic/logstash#11033 is merged. ### Checklist - [x] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials [skip ci] ::,820900268ab6d466340d425613b7f02772890d15::
https://api.github.com/repos/elastic/kibana,47057,update-apm-rum-instructions::master,0,merged,Team:apm::release_note:skip::v7.5.0::,"Closes https://github.com/elastic/apm-agent-rum-js/issues/93. Should I backport this? If so, how far? Updated tutorial looks like this. It's not ideal for a number of reasons, but it's the best layout I could come up with based on the structure limitations of tutorials in Kibana. <img width=""938"" alt=""Screen Shot 2019-10-02 at 7 58 11 AM"" src=""https://user-images.githubusercontent.com/5618806/66055460-6f29c780-e4ea-11e9-876f-b71052b2b618.png""> ::Is there any way to make the code highlighting not apply to the `for` and `source` words in this comment? <img width=""490"" alt=""Screen Shot 2019-10-01 at 10 51 58 AM"" src=""https://user-images.githubusercontent.com/5618806/65986829-8492e900-e439-11e9-8cc4-e9a298587ea5.png""> ::The highlighting is wrong. It looks like it's not using the javascript highlighter. I'm not sure this is something you can change from the tutorial. Afair these tutorials will be replaced by something else. Do you know if that's correct? If so I'm not sure it makes sense to spend too much time on. It's currently a bit of a mess and I don't think anyone owns this area, so would take some effort from us to fix.::We have different packages for React and Angular, Should we expand the installation process to include those as well? ::serviceName is a mandatory field, can you change it to `app-name` or something similar. ::I've heard rumors that they're being replaced as well. I don't know what sort of timeline that is on. Ok, let's just keep this as-is for now then. No point in investing time in it.::I see two options: 1. Expanding the installation tutorial and including them here as well. 2. Leaving them in the docs and linking from this tutorial. I'd rather do number two, but if you feel strongly about #\1, we can chat.::I updated the screenshot above. Let me know what you think.::Yeah 2nd option seems good to be, less confusing for new users. ::",0c9b053fe5fc802e9e7182f399f859f7d70b0673::4c8124da529c80e83e922175a3dd2d388156f763::f0d65f5174ae3b3436de88d04cee10d01dfbea5e::
https://api.github.com/repos/elastic/kibana,46680,fix-service-name-import::master,0,merged,apm:test-plan-done::release_note:skip::v7.5.0::,"In #46312, we moved the service name property to the StickySpanProperties component. However, the import of SERVICE_NAME was incorrect, resulting in the tooltip showing the string 'licensing' instead of 'service.name'. The import now correctly points at our elasticsearch field names file. I noticed this when I was backporting - the imported file does not exist in 7.x. I already fixed in the backport PR.::",611ad35b38c33629a98eaac041042f5c3e9337f7::
https://api.github.com/repos/elastic/kibana,46349,7-x-typescript-index-patterns::7.x,0,merged,release_note:skip::v7.5.0::,"backports https://github.com/elastic/kibana/pull/46098 * TypeScriptify errors.js * Fixed type errors in errors.ts * Prettierize resolve_time_pattern.test.js * Prettierize resolve_time_pattern.js * TypeScriptify resolve_time_pattern.js * Prettierize mixin.js * Fixed errors.ts payload error. * TypeScriptify and Prettierize mixin.ts * Prettierize query_params.js * TypeScriptified routes and used core.http features and fixed related tests. * Fixed type errors. * Removed anys * Prettierize params.js * Prettierize response.js * Accepts string array as query param. * Returns 404 when there's no matching pattern for fields_for_wildcard. * Simplified schema. * Fixed types. ## Summary Summarize your PR. If it involves visual changes include a screenshot or gif. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",e5cde446c07c09dd76e738a2774ef77f568181e5::
https://api.github.com/repos/elastic/kibana,46099,upgrades/elasticsearch-js::master,0,merged,Team:Operations::release_note:skip::v7.5.0::v8.0.0::,"Upgrade Elasticsearch client packages to 16.4.0, which includes support for the 7.4 API. 7.4 backport was handled by https://github.com/elastic/kibana/pull/46096::",4f5c3b8975bd1e7e6c6105ba176525bcf4b232ce::
https://api.github.com/repos/elastic/kibana,45401,verify-i18nrc-file::master,1,merged,release_note:skip::v7.5.0::v8.0.0::,"## Summary In [this backport pr](https://github.com/elastic/kibana/pull/45044) we noticed that if the intl file was missing a blank line, [the integration suite failed](https://github.com/elastic/kibana/pull/45044#issuecomment-530092627). This PR fixes that, and verifies it with a test.::Feels like maybe we should be explicitly testing that the last line in this file is empty, maybe something like: ```js const lastLine = readFileSync(intlFile, 'utf8').split('\n').pop() if (lastLine !== '') { throw new Error(`expected last line in ${intlFile} to be empty, received ${JSON.stringify(lastLine)}`); } ```::Cool beans, I'll fixup.  Thanks chief!::@spalger So, I've tried that locally just now and it does not work. Full disclosure, I tried that at first and decided to use a RegEx as I did **not** see the `.split()` being reliable while testing locally. *Tested after manually removing the blank line* <img width=""1426"" alt=""Screen Shot 2019-09-11 at 11 25 34 AM"" src=""https://user-images.githubusercontent.com/4858051/64720133-f4d7cb80-d486-11e9-8ebb-1563bac4a044.png""> ::@spalger you can see in the console that I've manually removed the last line of the file and re-ran the test.  It still passed but should have thrown.::Based on the log output the newline is still there::If the newline wasn't there `# End` would be on the same line as the last `}`::",388231420079ac0b429bc43edb8456a9c360e24f::3d495e44d3b974c5dcb7b24cb6fa7c04e63ad38a::
https://api.github.com/repos/elastic/kibana,45371,eui-tab-ie::master,0,merged,release_note:skip::v7.4.0::,"Closes #45357.::`master` is already eui@13.8.1, `7.x` is on an older version. not sure why, but it should be possible to use EUITab in `master` right now. ::Yeah I noticed they merged it earlier today. I'll merge this fix in, and backport it, then see if we can drop this component completely with the new version of EUI being in master.::Actually, we've made this a bit hard for ourselves because we use components as links, so there's no easy way for us right now to use `href` (or any other string-based approaches). Hmm.. I need to think about it for a bit.::",148ac2a6490ddc1b3c33266ce6a790c0578631da::
https://api.github.com/repos/elastic/kibana,45292,feature/lens-7.x::7.x,0,closed,Feature:Lens::,"This is just a preliminary test of Lens in 7.x, and is a branch that will be discarded when we do the real backport.::",a02630d2d1afd63c53dcd1e39357b56774f5d3e5::
https://api.github.com/repos/elastic/kibana,44887,apm-test-plan-proposal::master,1,merged,Team:apm::release_note:skip::,This is a proposal for a test plan process. It is intended to be as lightweight as possible while still giving us some structure. Interested to hear your feedback::```suggestion - Every pull request that is merged to 7.x (or backported to 7.4 after FF) must be given the label: `v7.4.0`. [These pull requests](https://github.com/elastic/kibana/pulls?utf8=%E2%9C%93&q=is%3Apr+label%3Av7.4.0+label%3ATeam%3Aapm+-label%3Abackport) will provide the basis of our test plan. ```::should the bug have the label applied as well?  The original issue's label should only be added after the bug is resolved.::I think the issue created for the bug should have the version label (in this case `v7.4.0`). But I don't think it makes sense to add `in-test-plan` since that's only for PRs that have already been merged (and can actually be tested)::With regards to the process when a bug is discovered I'm leaning towards still marking the PR as tested with `tested-after-ff`. Since an issue will be created (which should have high priority) it will eventually lead to a new PR which will end up in the test plan. And having duplicate PRs in the test plan is maybe confusing.::,9c655254e244cf23f52f43a23918f81b771b79e6::e62830b85f4ab5ea75e9f23f6ee2528cc5521839::7e330d5c06ec802382ef2cfaf0074088701982a8::
https://api.github.com/repos/elastic/kibana,44793,2019-09-04-dashboard-migration-fix::master,0,merged,bug::release_note:fix::v7.4.0::v7.5.0::v8.0.0::,"## Summary Fixes https://github.com/elastic/kibana/issues/44639. Folks upgrading from very old Kibana instances may actually have panels in panelsJSON that are missing the `panelIndex` property.  This should only be the case when `uiStateJSON` is an empty object, otherwise you need `panelIndex` to map to whatever is stored in there. No one with panels like this will be able to upgrade to 7.3 without this fix, so we can continue to assume that folks who did upgrade to 7.3 or higher have panels in the right shape (e.g. I can keep the type `RawSavedDashboardPanel730ToLatest` the same, just need to change our assumptions on older type panels). We may want to consider backporting to 7.4, though, not too many issues have come in. ::",a547b33dd55c4cbdbcce30284952a90e9c96808f::
https://api.github.com/repos/elastic/kibana,44591,re-activate_tests::master,0,merged,release_note:skip::v8.0.0::,"*History* - The `create single metric job` test has been disabled on master last week: #44337 - The tests failed due to unfortunate timing, but the ML code has been fixed, see #44275 - But before the ML code fix came in, parts of the tests have been disabled, see #44329, which caused a follow-up error - Summary: there's no issue with the tests and they are running fine, now that the PRs are all in - We've decided to not re-enable the tests until 7.4.0 bc1 is done to not cause any last minute PR delays This PR re-activates the `create single metric job` test. It has not been disabled on 7.x, so there's no need to backport. Closes #44337, closes #44310::",1765d7af410a6157207d57c1321613acfceceb02::
https://api.github.com/repos/elastic/kibana,44384,update-apm-index-pattern-7.x::7.x,0,merged,,"ECS 1.1.0 Note: **ensure** to backport this to 7.4 added fields :{'source.nat.port', 'dns.type', 'file.hash.sha256', 'user.domain', 'dns.response_code', 'server.nat.ip', 'event.code', 'destination.nat.port', 'destination.as.number', 'process.uptime', 'dns.answers.class', 'host.user.domain', 'dns.question.class', 'dns.op_code', 'log.logger', 'kubernetes.labels.*', 'destination.user.domain', 'process.hash.sha512', 'file.name', 'file.directory', 'dns.question.name', 'dns.question.type', 'process.hash.sha1', 'file.hash.sha1', 'hash.sha1', 'process.hash.sha256', 'server.as.organization.name', 'event.provider', 'dns.resolved_ip', 'file.accessed', 'client.user.domain', 'client.nat.port', 'file.hash.sha512', 'process.pgid', 'dns.header_flags', 'client.nat.ip', 'dns.id', 'client.as.organization.name', 'server.nat.port', 'hash.sha256', 'server.as.number', 'client.as.number', 'source.as.number', 'source.user.domain', 'hash.sha512', 'as.organization.name', 'source.as.organization.name', 'dns.answers', 'file.hash.md5', 'dns.answers.name', 'source.nat.ip', 'process.hash.md5', 'host.uptime', 'dns.answers.data', 'server.user.domain', 'process.thread.name', 'destination.nat.ip', 'event.sequence', 'hash.md5', 'as.number', 'dns.question.registered_domain', 'dns.answers.ttl', 'tracing.trace.id', 'file.created', 'kubernetes.annotations.*', 'dns.answers.type', 'destination.as.organization.name', 'tracing.transaction.id'} removed fields :{'kubernetes.annotations', 'kubernetes.labels'} ::",9dbed13763927258877b2d84b3d48814e4c52e55::
https://api.github.com/repos/elastic/kibana,44275,fixing-job-type-picker-tests::master,0,merged,:ml::non-issue::release_note:skip::review::test::v8.0.0::,Missing `data-test-subj` in the job type picker html causes test failures. This was originally missed on master by coincidental timing of the tests being enabled with this commit https://github.com/elastic/kibana/issues/43017#issuecomment-521357780 However it caused failures on a 7.x backport which had to be addressed in the backport (https://github.com/elastic/kibana/pull/44254) Therefore this PR does not need to be backported to 7.x. ::,d1ac6794716dbe3e8bc779b4dcd2f2940abdca51::fba341bd2d3b6746859e00e27a4835ee027d3607::
https://api.github.com/repos/elastic/kibana,43427,chore/console_update_json_spec::master,0,merged,Feature:Console::Team:Elasticsearch UI::chore::release_note:skip::v7.4.0::v8.0.0::,## Summary Update the spec_to_console script to continue generating JSON that we can parse after these ES side changes: https://github.com/elastic/elasticsearch/pull/42346 This is intended as a backport/patch of the new format and doesn't take advantage of the new information included in the ES changes yet. ::Shouldn't it be `if (Object.keys(urlComponents).length) {` ?::,3bb9a8fb4057ad92e45de7212f1384d4668f4c1f::aa0ed7d98fb7d548be7a38d989c6f846e62b6154::6d9e14c3cd6cfabd371e21c74621858e7f3b8fb4::98e12c2745a94194ae8933a5def272b2a1c097d8::
https://api.github.com/repos/elastic/kibana,42080,fix/add-pipeline-test::master,0,merged,Team:AppServices::release_note:skip::v7.3.1::v7.4.0::v8.0.0::,"A few unit tests were added in [this patch for a 7.2 bug with significant terms aggs](https://github.com/elastic/kibana/pull/42079). Since `master` and `7.3` already contain the bugfix, but not the added tests, I'm opening this separate PR with only the tests. That way we can backport to 7.3 and ensure we prevent future regressions.::",165ae524ee1d907ded71ab57c0eb25630b55bdde::044acc113fbe68bb3c8f099831b5dd0ca7a522df::9a0dbdd4c89fe1521eb3c056917821c069a6c0f8::
https://api.github.com/repos/elastic/kibana,42079,fix/significant-terms::7.2,0,merged,Feature:Tagcloud::Team:AppServices::bug::regression::release_note:fix::v7.2.2::,"closes #41856 This PR extracts a subset of the changes introduced in #34532, in order to fix #41856 for `7.2.x` The original PR included some widespread changes in other areas, and as a result was not backported to `7.2`. All I have done here is pulled out the relevant changes and added a few tests to prevent further regressions, so that this PR can merge directly into `7.2` ::",4c38a824ba641b56e93f652cbd9c43b6a0b3e37c::bb9273089880ce77a9df31f8ad158b1c99739a8b::
https://api.github.com/repos/elastic/kibana,42016,migrations/obsolete-index-template::master,0,merged,Team:Operations::release_note:fix::v7.4.0::v8.0.0::,"I've noticed my backport PR getting conflicts / race conditions to delete index templates when running migrations. (PR: https://github.com/elastic/kibana/pull/42004, Failure: https://kibana-ci.elastic.co/job/elastic+kibana+pull-request/9392/JOB=x-pack-ciGroup6,node=linux-immutable/console). The PR mentioned above introduces a secondary saved objects index which causes two index migrators to exist. Both are trying to delete any index template following the pattern `'kibana_index_template*'`. This would cause missing index_template errors. What I'm doing to avoid this is to let the default index migrator delete templates following the same pattern and to not provide a `obsoleteIndexTemplatePattern` to all the other index migrators.::nit: can we use something like `kibanaIndexName` instead?::nit: we can avoid the whole mutation thing ``` // Only necessary for the migrator of the kibana index. obsoleteIndexTemplatePattern: index === defaultIndex ? 'kibana_index_template*' : null ```::",cc081c9d3f65d8e51ad7da47f6af14e2ccd956db::1b13b1f328f67b3e5531d52c1cfec5f35b203c8d::d18ae20e4efc7c0f20123c331e3d6852b63910ee::d39e39369af590be6f94e40505c4fe01f21d2980::
https://api.github.com/repos/elastic/kibana,41510,eui/12.2.1::7.3,0,merged,chore::release_note:skip::v7.3.0::,## Summary ## [`12.2.1`](https://github.com/elastic/eui/tree/v12.2.1) **Note: this release is a backport containing changes originally made in `12.4.0`** **Bug fixes** - Fixed a nearly infinite `requestAnimationFrame` loop caused by `focus` state changes in nested `EuiPopover` components ([#2110](https://github.com/elastic/eui/pull/2110)) ::,253e53f31f1be71a534d7423c77f87f0228e8917::
https://api.github.com/repos/elastic/kibana,40566,create-uptime-guide::master,0,merged,Team:Docs::release_note:skip::v7.3.0::,"Adds an Uptime monitoring guide! This needs to be merged and backported to `7.x`, `7.3`, and `7.2` ~while simultaneously~ before merging https://github.com/elastic/docs/pull/972. The new Uptime Monitoring Guide can be previewed on Firebase: https://elastic-obs-docs.firebaseapp.com/uptime-overview.html Changes to the Kibana documentation can be built with: `$GIT_HOME/docs/build_docs --doc $GIT_HOME/kibana/docs/index.asciidoc --chunk 1 --open` **Open questions:** * ~Is ""Uptime monitoring guide"" what we want to call this?~ - Yes **Not addressed in this PR:** * ~There is still a fair bit of duplication between the Uptime UI documentation and these docs. I didn't fully address that in this PR. When the UI docs are moved into this book, we can assess and fix.~ edit: Cleaned up the duplication * Screenshot updates - I think I need help::> you can use field aliases to ensure data is recognized by the UI. It may be beneficial to link to an explanation of how this is done. https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-aliases.html::Kind of nit but don't we link to the same place just above here? Not really a problem it just seemed a little redundant when I was going through.::I'm wondering if there's a way to not hardcode the `7` here. It's not a problem, but it'd be nice to see this number change with majors correctly.::Ha! Nice catch. Got a little link happy.::Good idea!::",d419698429bad126f3d71c1f065dfe57b9fc6aae::cb4dff34af46b76324b10749b04ff19170dc2699::01da214e20239a2a191b857e910621d29030db81::d97308572f7c407df7479b1803610b666d4c0929::3df12e645d6abe3f057e4300fea51cbcec8dba3e::388705fa03844adb75eeecb00cee0becf2972b06::5cb50ad7829c7f35fd2b6b866d76c7e7caf72f2f::e201916a3752a0527540d41b32a69d5f28e012d0::
https://api.github.com/repos/elastic/kibana,40284,bugfix/chromium-user-data-dir-cleanup-ts::master,0,merged,Feature:Reporting::release_note:fix::v7.3.0::v7.4.0::v8.0.0::,"Also moves more modules to TS, cleans up some minor issues as well. Relevant issue: https://github.com/elastic/kibana/issues/38074::Moved this over to the x-pack package.json where it should have been (my own fault)::This didn't do anything.::This is an interesting one. `puppeteer-core` is puppeteer without the chromium version bundled with it. Fantastic! However, I cannot seem to _map_ this module to the `@types/puppeteer` typedef since `@types/puppeteer-core` is waaaay behind. If any of y'all know how to do this I'd be forever grateful.::Source of the fix is here, however this is due for further refactoring. This was beyond the scope of fixing the issue in my opinion, but happy to chat more about it.::I think we can import the definition from `x-pack/legacy/plugins/reporting/types.d.ts`::Aha, so the code was there to do it, but it wasn't working properly::I see this part of the change was not backported to 7.x: https://github.com/elastic/kibana/pull/41066/files - unfortunately I am getting a merge conflict for my prettier changes on this. Thanks for adding this comment: looks to me that it's ok to resolve my conflict by doing the same removal. :) ::",04baf3e78fa74c7b37c13cf8fb12d7299c2b72ac::f5b5fb3f01a74da4b263932fafbebb1c76404633::ee433b9a0ca2f9c96b6f7353f0826695303c0565::7e042703bc3db8b8836d5d268871da06ba7ee91c::d93659f1ba67fe9dae411bfadb0163136fd61eec::a9aab9c5422635bd1a9dc8477a7c47db5fd79ac9::8d6ef4c0971609907e7135defbdac129ac6f6312::aa6ebf1457e35b334e77294e129003e0d61f9917::637d1c20bbc9c6ea79365fd8ce9e7b9eb8a9b231::a697095ed3f87963017a7fae2422a9d7adf54b9c::
https://api.github.com/repos/elastic/kibana,40224,apm-34990-agent-configuration-index-fix::master,0,merged,release_note:skip::,"Addresses #34990. Removes apm agent config index from list of indices that match the apm index patter. Fixes smoke tests that run on the 7.x CI.::changed the default index name while i was here, to match the feature name. I'll change the variable names to match in another PR.::removed cmIndex from list of indices that are exposed to kibana as following the apm index pattern. This was causing failure in smoke tests in the backport CI. Those test failed because the upgrade assistant would list this index as one which requires an upgrade/reindex to be ready for 8.0. This fix removes the association of this new index with the standard apm index pattern.::I don't think anyone outside APM UI will know that ""ac"" means agent configuration - and I'll probably forget in a couple of weeks :D Perhaps we should avoid the abbreviation and write it out in full: `.apm-agent-configuration`?::I also still see the abbreviation CM used in many places: https://github.com/elastic/kibana/search?q=path%3Ax-pack%2Flegacy%2Fplugins%2Fapm+CM&unscoped_q=path%3Ax-pack%2Flegacy%2Fplugins%2Fapm+CM We should update that to the new terminology.::Btw. shouldn't `cmIndex` also be renamed? Eg. `agentConfigurationIndex`?::This PR was just a cherry-pick to get master back in sync with 7.x, since this was commited directly to 7.x to fix the breaking CI tests. Should we keep the scope of this PR down to this, or should we address these renaming issues in the other ticket along with other feedback?::`CMListAPIResponse` ->  `AgentConfigurationListAPIResponse`::`CMServicesAPIResponse` -> `AgentConfigurationServicesAPIResponse`::`CMCreateConfigurationAPIResponse` -> `CreateAgentConfigurationAPIResponse`::`CMEnvironmentsAPIResponse` -> `AgentConfigurationEnvironmentsAPIResponse`::`CMSearchAPIResponse` -> `SearchAgentConfigurationsAPIResponse`::`CMUpdateConfigurationAPIResponse` -> `UpdateAgentConfigurationAPIResponse`::`loadCMEnvironments` -> `loadAgentConfigurationEnvironments`::`updateCMConfiguration` -> `updateAgentConfiguration`::`createCMConfiguration` -> `createAgentConfiguration`::`loadCMList` -> `loadAgentConfigurationList`::this is the only old route i kept due to the dependency from apm-server. we can remove this route once they update their api call.::We should ping apm-server folks to update it before the release so we don't have to support both endpoints for the lifetime of 7.x. cc @jalvz @simitt ::But good idea with the dual-routes for now 👍 ::",5566ca8f0a12bcf9d624354aab0404bb19a39835::35db41d1f3c9dc93014dfde7024bee07f0ae8d97::fe758af16f8fbc8fb4225ec9b2c37569e025c98c::
https://api.github.com/repos/elastic/kibana,40128,i18n/master_sync_from_7.x::master,0,merged,Project:i18n::release_note:skip::,7.3 translations are the latest received from translators. Changes cannot be automatically backported because i18n_check must be ran and often changes the files.::,33e996a4d3c2f17334d2b14646d2cbd3460c9096::d7859fe761ea0874e8f65c68bbf78c493e549ff4::679bd4124c53aaff3385eceb9dadbb28ca566fde::
https://api.github.com/repos/elastic/kibana,40084,apm-agent-config-docs::master,0,merged,Team:apm::release_note:skip::v7.3.0::v7.4.0::,"Docs are live: https://www.elastic.co/guide/en/kibana/master/agent-configuration.html Backports * https://github.com/elastic/kibana/pull/40818 * https://github.com/elastic/kibana/pull/40817 For https://github.com/elastic/apm/issues/86. **Must be merged and backported simultaneously with https://github.com/elastic/apm-server/pull/2366.** To do: * ~Link to the new APM Server docs on the same topic.~ * ~Briefly outline the setup that is required on the server side for this feature to work~ [skip-ci]::I think we changed this to `0.000` because we want users to be able to do 0,1% sampling. I will change the help texts in the UI.::Thanks!::could remind users here that APM Server acts as a proxy between agents and Kibana::should mention (here or somewhere else) that RUM doesn't support this feature. consider also documenting minimum versions for other agents::could mention (if you think is not obvious) that if no environment is set, configuration will only be propagated to agents that do not have environment ::might be relevant to recommend users to watch agent logs to confirm that configuration has been applied, as there is no way in the UI to know that (it might change).::",433a668635213804e969c9bbd74830dc1ff95883::7af6520eaa455b02c62b244af1546f2c4dfea24b::3c495f6f524f7795ad3897be32f5aa69c572c912::24a1ec9c7c9300736aea7c622a99706536275518::4c0be6adfd2af93e3c20ab92141025a5819027de::6b4ea90ef115dc38f5a3225762f9192c04ca94d6::fddbf4850610a95ed201456bb9bedee542ffa5ec::51532f6bf9fb968d5e3e96f5ba4a075a7708b30e::142ad6a995179733664a3da59e37b7c0b760d7ac::
https://api.github.com/repos/elastic/kibana,39822,bugfix/reporting-download-link::master,0,merged,Feature:Reporting::release_note:fix::,Fixes a regression where the download toast didn't point to the right spot in KBN: ![management-fix](https://user-images.githubusercontent.com/1499985/60290438-a5452300-98cd-11e9-8060-b46ab791fde5.gif) Will backport as far as necessary ::,587a054691b4a2986ea4e282477ce5503afe15e4::d69dbadcd57bbea8e2d777af0ddc51ab913063c3::f45ad5fc129dac51df94e4ca47e88f61425eedf8::
https://api.github.com/repos/elastic/kibana,39665,tsvb_dateHistogramInterval::master,0,merged,Feature:TSVB::Team:KibanaApp::release_note:skip::v7.4.0::v8.0.0::,"## Summary Apply the dateHistogramInterval utility for TSVB, which can be used to calculate the correct interval key (calendar_interval or fixed_interval) for a given interval string (like 10s, 1h, etc.). More details you can find here: #39091 ### Checklist - [x] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - [x] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [x] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [x] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::Will you make sure when backporting this, that the `this.dateHistogram.interval` will be added to the backport? Because I think we should prior to 8.0 still check for the interval itself.::@timroes Thanks! Fixed::",4d6bca2d4e2208dcd0c3a8984571f95b9c49d82c::6219cfcdbfe1eeaa2d20fec7e8def899237f4a02::f3ea3ca5088d85acd19f30aaa50147ed72c033eb::f216d6dca63f986bd78e8ef96414071ad8d2ca8c::
https://api.github.com/repos/elastic/kibana,39545,dead-code::master,0,merged,Team:Monitoring::release_note:enhancement::v7.3.0::v8.0.0::,"## Summary Noticed dead code while working on a different issue. Looks like these were all ported to react-component/controllers, but the directives were never removed::These look like additions. Why were they necessary?::Can you move this change to it's own PR? Let's keep the scope of this PR to just removing dead code. Atomic PRs are good for several reasons, including making them easier to review + allowing us to selectively backport certain changes vs. others.::One of the `scss` file that was bundled with the dead code still had classes that were used in a different place: https://github.com/igoristic/kibana/blob/7ac8e4d9ccc2a9e064d8a5621cd62453d1006164/x-pack/legacy/plugins/monitoring/public/components/chart/info_tooltip.js So, I moved them to a more relevant place::Gotcha, makes sense, thanks!::@ycombinator I agree 💯 (and was thinking the same), but if this is moved to a different PR then this PR will fail `node scripts/i18n_check` unless I explicitly remove all `instanceStatusTitle` translations and add them back with the other PR. This becomes more difficult as all i18n translations are subjected to different review/contribution standards Let me know if you still want me to go this direction though::I see. I don't know the codebase too well but that sounds like a lot of work, and this particular bit of extraneous code is not too much. So I'd say keep things as is. Thanks for the explanation!::",3c084a9770330c5aab045dd41b9e1b216d5d6c0c::0e61ffc7626465dc18e8d4b0bac7ee3850c2769c::35e31ded8d90830a387307f34e79d6aa1031e9b3::
https://api.github.com/repos/elastic/kibana,39533,fix/sr-es-8.0::master,0,merged,Feature:Snapshot and Restore::Team:Elasticsearch UI::chore::non-issue::release_note:skip::v8.0.0::,"Adjust snapshot and repositories endpoint to account for changes in the response of ES APIs: https://github.com/elastic/elasticsearch/pull/42090 When running a recent 8.0 snapshot version of ES and Kibana _without_ this PR, parts of SR breaks, most notably the list of snapshots does not load and inaccurately shows a message about errors with repositories. This PR fixes that and other places in SR where snapshot information is retrieved. (cc @cjcenizal since you ran into these issues first!) **Note: The ES API changes are breaking and only target 8.0, so this PR will be the same and will NOT be backported.**::",bfb0a630a7571ba947662d0efa2719385840c742::
https://api.github.com/repos/elastic/kibana,39140,saved_filters::master,1,merged,Feature:Filters::Feature:Query Bar::Team:KibanaApp::release highlight::release_note:enhancement::v7.4.0::v8.0.0::,"## Summary This PR introduces ""saved queries"". Saved queries are a new saved object type similar to saved searches but more limited in scope. They allow users to store the the query string in the query bar and optionally the set of filters and timefilter in order to reload them anywhere a query is expected: Discover, Visualize, Dashboard, anywhere that uses our full SearchBar component. ## TODO - [ ] Add docs about saved queries --- not implementing, decided to keep saved query UI contained in popover ~~- [ ] Support partial matches on saved query names in the autocomplete~~ ~~- [ ] Make a decision on how to handle saved queries where the full search bar is not used~~ ~~- [ ] Accessibility: ensure all functionality inside the autocomplete’s saved query row is mirrored in “manage” popover~~ ~~- [ ] Accessibility: try to make the saved query row in autocomplete tabable~~ ~~- [ ] Implement dirty state indicator and quick save in the right hand side of the query bar input~~ ~~- [ ] Saved queries not loading in filters agg~~ - [x] Update and write new tests - [x] Finish off unit tests for saved query service - [x] General functional tests - [x] Security tests ([example](https://github.com/elastic/kibana/blob/5ae5e3d8c61e81aba6eeca961077b92628fe8b40/x-pack/test/functional/apps/discover/feature_controls/discover_security.ts)) - [x] Finish adding uiCapabilities conditions to Visualize, Dashboard and Discover - [x] Write tests checking for existence of query bar input save UI in discover - [x] Write tests checking for existence of query bar input save UI in other apps - [x] Write tests checking for existence of saved query management popover save UI in all apps - [x] Add some sort of indicator of currently loaded saved query - [x] Make sure all added strings are internationalized - [x] Add confirmation modal when deleting saved queries - [x] Try removing saved query controls from autocomplete - [x] Make sure places like filters agg editor and tsvb are updated if need be - [x] Use saved query title as saved object ID? (so titles are unique) - [x] Update Visualize and Dashboard to use the new saved queries - [x] Remove number from the manage button - [x] Inside manage popover, add paginated list of all saved queries in alphabetical order. Load on click. Add delete button per item. - [x] Make distinction between saved search and saved query more clear * Add nouns to save buttons and descriptions where missing * Add tooltip to save buttons in the top row of apps * Come up with better wording with Gail - [x] Implement ""clear saved query"" button in bottom row ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - [x] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [x] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - [x] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)::@elastic/kibana-platform @skaapgif is there any reason we shouldn't add `undefined` to this type? Some of the fields are optional in our [new SavedQuery type](https://github.com/elastic/kibana/blob/0157959a3c011cb63c0e9a11ee0aa78d28343ece/src/legacy/core_plugins/data/public/search/search_bar/index.tsx#L33-L47) and we'd rather not pass them as null if possible.::👍 `undefined` was also added in https://github.com/elastic/kibana/pull/37042 so it might land in master soon.::Hey @lizozom I'm trying to follow the pattern you established [here](https://github.com/elastic/kibana/pull/38894) but my editor is complaining that the module cannot be found. The file I'm working in seems to be the first Typescript file using this new path. Any idea why I'd get that error?::Should this comment be removed or added back in?::Not sure why this line changed.::Should this be translated? Also, a couple of questions on the copy: - ""this, ""? - ""Saved query for reuse"" never comes up again. I think this is talking about the ""Save"" button. Could be good to extract this into a constant string that can be pulled in instead of having to keep them manually in sync. - Thoughts on adding something to the instructions to the effect of ""come back here to save after entering a query in the search box""::Can we add an `aria-label` to this button? Maybe something like ""See saved queries""::I couldn't find where this is used other than in the modal to create one...::Can we add `ownFocus` here? If there's interactive content inside a popover (buttons) it needs it and if there's any markup inside (headers and such) it should probably have it as well. ::Can we add `aria-labelledby={idOfEuiPopoverTitle}` here? This way, a screen reader will tell you what this list of buttons is all about.::Change to `<EuiScreenReaderOnly>Open saved query</EuiScreenReadOnly> {savedQuery.attributes.title}` (or something along those lines)::Add ```aria-label={`Delete saved query ${savedQuery.attributes.title}`}```::Should this be sentence case?::Can we add `aria-label=""Save as a new saved query""`::Can we add something like ```aria-label={`Save changes to ${theNameOfTheSavedQueryItIsAboutToEdit} saved query`}```::`aria-label=""Delete all saved queries""`::`aria-label=""Save a new saved query`::Are you asking why is it exported here? It is also used in the SearchBar component https://github.com/elastic/kibana/blob/d20c2f85994d52551fabf467d1640597e1436b00/src/legacy/core_plugins/data/public/search/search_bar/components/search_bar.tsx#L212::But then what's done with the `description`? Is that ever displayed to users anywhere or used again for anything?::Don't know if this is some i18n issue or what the deal is but I get an empty button rendered here. Not sure if it should be rendered or not? <img width=""1680"" alt=""Screen Shot 2019-08-08 at 12 39 08"" src=""https://user-images.githubusercontent.com/4188087/62692598-9af06b80-b9d9-11e9-9f4e-bcc33d8b739b.png""> ::Ah good catch, we should have had the conditional one level up around the button instead of just the text. Fixed!::@myasonik we just added this tooltip. I checked it in VoiceOver and it read out the contents, but is there anything else special we should do to make it accessible?::We've added the description to the information tooltip icon alongside the delete icon next to the saved query title in the saved query manager's saved query list. ![Screen Shot 2019-08-09 at 4 55 57 PM](https://user-images.githubusercontent.com/11909450/62814640-ab324480-bac6-11e9-9339-1a5154bce9ae.png) ::// brain-pick Why is this URL directing to `discover`? The feature is relevant for other apps as well, right?::You can use `uiSettings.get('timepicker:timeDefaults')` for the default values::This line uses `this.getDateRange()` and the next one uses the input value `dateRange`. Shouldn't they both use the `dateRange` input argument?::nit: This function won't be called if store was `null`. Maybe use `this.props.store!` for consistency in this file?::The previous logic would have set `isSuggestionsVisible` to false, if the string was empty. Why did this behavior change?::nit: merge with previous import::nit: Use default prop values here, to make the default behavior more explicit. Also you won't have to use `!!showFilterOption` and `!!showTimeFilterOption` below::Product wise, why does `shouldIncludeFilters` default to true and `shouldIncludeTimefilter` default to false? I think this could use a comment.::`RefreshInterval` is currently exported by `ui/timefilter`. Would you please use it? I'm working ATM on refactoring it into the `data` plugin and it would help me. ::Could you use `TimeRange` from `ui/timefilter` for the same reasons as above?::For type imports best to use (like in many other places) ``` import { Query } from 'src/legacy/core_plugins/data/public'; ``` This won't work ATM for classes \ functions though https://github.com/elastic/kibana/issues/40446::The importing on the left side is the updated way to import in NP. https://github.com/elastic/kibana/issues/40446 The plugins / kibana webpack aliases will be deprecated in V8.::@lukeelmers I know you're working on the management specs. Might be relevant to you.::Maps just added filterbar into their top-nav https://github.com/elastic/kibana/pull/42756 You might want to enable saved queries for them too.::// Important! `savedObjectsClient` is already available to be passed in as a dependency from `__LEGACY` You can pass it into `this.search.setup()` and use it anywhere you need it, rather than import `ui/chrome` which we are working on deprecating (as a dependency in `data` plugin) for 7.4. See what was just done with `chrome.getUiSettingsClient()` in https://github.com/elastic/kibana/pull/42159 `::I might be missing something, but isn't this object of type `SerializedSavedQueryAttributes` ?::1.  We're not exporting UI components via the ui service any longer. `SearchBar` is already exported from the top level of the plugin. 2. I think that unless you have any specific reasons not to do so, you could do something similar to what `filter_service` does in setup(): ```TypeScript public setup(savedObjectsClient: SavedObjectClientContract) { return { savedQueryService: new SavedQueryService(savedObjectsClient); } } ```::nit: These are already exported from `index.ts`::nit: You should use `queryFilter.removeAll()`::See my comment about importing types from\in data plugin::// brain pick - this is a harder naming \ architecture question The filter service has `FilterMananger` and `FilterBar`, where the former is a service that can be used independently from the UI component. I wonder if we could stick to this terminology across (data plugin?) services. Would it be a hassle to rename it to `SavedQueryPopup` \ `SavedQueryListView` or any other name you may find suitable? And then rename `savedQueryService` to `savedQueryManager`? Let me know what you think.::// brain-pick Updating filter manager (and very soon timefilter) are copied in each app and they can be done inside the data plugin. Do you think this is possible \ relatively easy to do at the moment? (If it's hard, we can do it later) Because it would pave the way to just doing `data.savedQueryManager.load()` and having it populate itself. ::It's already usable as is so that's awesome. (Thanks EUI!) But, we can make this better by giving it a unique `aria-label` instead of relying on the default ""Info"". ```suggestion <EuiIconTip type=""iInCircle"" content={savedQuery.attributes.description} aria-label=`${savedQuery.attributes.title} description` /> ```::@lizozom we use Discover as the interface to view a saved query from the management saved objects list. That's why the URL navigates to Discover. [Maps](https://github.com/elastic/kibana/blob/master/x-pack/legacy/plugins/maps/index.js#L78) also uses the `getInAppUrl` for saved maps.::I don't think that's true, this conditional https://github.com/elastic/kibana/blob/ae5ecfff026c4f0ae7fafba2de62822fab6f2792/src/legacy/core_plugins/data/public/query/query_bar/components/query_bar.tsx#L288 passes if store is undefined or null and then `onLuceneSyntaxWarningOptOut` will be called. Also, I'm not too familiar with that non-null assertion operation, but it seems to me like it could lead to undetected bugs in the future. Even if that function is not called when store is undefined today, if the code were changed in the future so that it does, typescript would not warn about the issue.::We originally changed this when the saved query UI was in the autocomplete dropdown so that you could access those controls even if the query was blank. We removed the UI but we kept this change because we liked how you could see the autocomplete without having to type anything.::ATM `onLuceneSyntaxWarningOptOut` is being called only from within `handleLuceneSyntaxWarning` that already validates `store`. We just started using it recently. I agree with you, but i usually prefer consistency. But it's a nit. I don't mind.::That's great! I'd love this behavior :)::Seems strange to import from root when the code lives inside the same plugin. Also, quoting from the issue you linked: > Within a package/system/plugin, it's appropriate to use relative imports, though absolute imports are still acceptable when the relative import is still crazy. So it doesn't sound to me like there is a rule that absolute imports must be used for types within a plugin.::Thanks! Looks like this is actually for saved objects management (not management sections in general). But since you've pointed it out, I think there actually is an interface that could be used here: https://github.com/elastic/kibana/blob/4918baa9eed978b8e986b7f70975754fbf059240/src/core/server/saved_objects/management/management.ts#L31-L33 (Haven't used this interface before, but pretty sure that's the right one)::Does the `src` alias exist in 7.4 as well or will we need to change this when backporting?::Cool, we'll add this if we have time but since 7.4 is fast approaching it may have to be an enhancement for 7.5.::I don't think I understand what you're proposing, can you provide more details? The PR you linked to is quite large so if it's along those lines I think that's outside of the scope of this PR.::But `index.ts` is importing these from `search_service.ts`. I'm happy to change it so `index.ts` exports the definitions directly if you think that's better, I think we were just following an existing pattern from one of the other services.::I just saw [this comment](https://github.com/elastic/kibana/pull/39140#discussion_r312737967), is that what you mean?::We tried this but ran into issues importing the new service [in search_bar](https://github.com/elastic/kibana/blob/8c9cc229b14f1a7974476243e17cb36c1fdf613f/src/legacy/core_plugins/data/public/search/search_bar/components/search_bar.tsx#L32). Now that the service requires construction we can't import it directly in the search bar. What is the correct way to import in from the search service?::The way I look at it, the FilterManager is a ""manager"" because it has state and maintains a set of filters. The savedQueryService is a stateless service which is no more than a simple wrapper around the saved objects client. So it would be strange to me to call the savedQueryService a manager. We could change the name of the SavedQueryManager component if there is a better one, but we intentionally avoided words like ""Popup"" or ""Popover"" in case the UI changes.  ListView is not really descriptive enough since you can do much more than view the queries in the popover. IMO the overlap with FilterManager isn't really confusing since one is a React component and one is a JS class.::Given the limited time we have it sounds like something we should do in a separate PR.::👍 4ec7c16::👍 53e07b0::👍 1c01c53::👍 85d8fc3::👍 8a5d176::👍 b04108e::👍 8c9cc22::When we tried using the named interface previously we were getting type check errors for some reason, seemingly related to the optional properties. But we just tried it again and now it seems to be working fine 🎉 ::👍 763f350::👍 ffe3a13::We tried that type but got a ""no imports from restricted zone"" linter error. We noticed a file in the same module is using the same type [with an eslint ignore comment](https://github.com/elastic/kibana/blob/4fa253ab93d2bd4dc588143040cd9660e21ba2c4/src/legacy/plugin_discovery/types.ts#L25-L26), so we decided to follow that precedent. Let us know if either of you know if that's a terrible idea.::https://github.com/elastic/kibana/pull/39140/commits/4478b392254e792f23a958952e562059154e232a::You don't need to import the service, but pass `savedObjectsClient` as a dependency to your functions \ class. If you run into any problems lets jump on a call. ::My best suggestion would be `SavedQueryEditor`. It's just a hunch, that we might change the stateless implementation into a statefull one. SO, nice to have, but not critical.::It seems like `data/index.ts` is importing ``` export { SearchBar, SearchBarProps, SavedQueryAttributes, SavedQuery } from './search'; ``` So it seems to me they are not needed here. ::But how do I access `savedObjectsClient` inside the search_bar component if we're not supposed to get it via `ui/chrome`?::We changed `SavedQueryManager` to `SavedQueryManagementComponent` to make it obvious this is a UI component: f68dcc7 > It's just a hunch, that we might change the stateless implementation into a statefull one. I hope not :)  if we need something akin to the FilterManager for saved queries I think it should probably wrap the service rather than replace it. But filters behave quite differently than saved queries so I don't really see us needing something like that::👍 ba733b2::nit:  Other services pass in objects::Sorry for the inconsistency - things are changing rapidly :) In https://github.com/elastic/kibana/pull/42238, a few weeks ago, we standardized the way `setup` is imported Please use import { setup as data } from '../../../../core_plugins/data/public/legacy';::OK in terms of review, @rudolf will savedObjects client be available only in start? If so, does this mean that TopNavMenu should be rendered only in the start phase?::I had to import from [../../../../../core_plugins/data/public/legacy](https://github.com/elastic/kibana/pull/39140/commits/08a36839093b9d59ba238c824a250428d2fb54e9#diff-db6f4af0165205b24c9cdd101a152ddeR75)::@lizozom Thank you for reviewing again!::Functional tests are run on Firefox (in addition to Chrome) only if `this.tags(['smoke']);` is placed. Putting `skipFirefox` makes sense only if this test is Chrome-specific/ flaky on Firefox Generally, we do not specify any tags, but if you think this test is a must on Firefox - `smoke` tag is your choice::@lizozom are you just saying you'd prefer this: `this.search.setup({ savedObjectsClient })` ?::Just FYI, in case you weren't aware of it so far (if so ignore me): `FunctionComponent` has also a version (like `SFC` beforehand) just called `FC` for people who don't like typing ;-)::Could we use the `SavedQuery` from below?::Same as above.::Let's make this `unknown` instead. This would still not be the full typing that we could provide, but at least it will force anyone to use this later to properly type check that, and not simply allow any operation on it, as `any` does.::Nitpick: `useState<SavedQuery[]>([])` (using explicit template over casting, since it's typesafer, in case something later changes)::@timroes I don't follow, do you mean add the Typescript type or something else?::[Sure](https://github.com/elastic/kibana/pull/39140/commits/458d04338ec8e0828bdf341b6bf69582ff2422ca), we were just following what was done elsewhere. ::Yeah, we have a `SavedQuery` type a bit below that types the saved object for queries, and it feels like the `any` here is actually the `SavedQuery`? But I might be overseeing something.::[fixed](https://github.com/elastic/kibana/pull/39140/commits/ae57041ffa17505961c9edca54fe71a2083f40f8)::[`any` has been changed to `SavedQuery`](https://github.com/elastic/kibana/pull/39140/commits/a922444418ff4d3d24f7f239f0919798b74c499f) as requested.::[`any` has been changed to `SavedQuery`](https://github.com/elastic/kibana/pull/39140/commits/a922444418ff4d3d24f7f239f0919798b74c499f) as requested.::",a3f2ca8878c6888fe577a32136bcff35548f74de::d93476527d5420030ecd7b98969602c94397e837::e76067c792a1d37b861fc9810bb73d02bbeb1b80::188551ed2ea325d94bde8312341231e14f04ae03::aebd5bdb40b1f5f5ab2aae390703f9031b351483::fd297f008431241810949dfe5f6f6354bcc1eb2b::9dfc92c2c4a6f288f747319115d186ddabff9ab9::39ee55e0e2909bfb466a4fc2a106510f728b48b6::e960475ee79d36453a30376e5cbf70b263fd27a2::a08ffec1c974e30d855e4936ea4feaa4067039be::e85211b1c46f8edc8f96d2e5bcac582da23f1074::0fc7a12b0d93cf56f3a9d0295130ddb3a1affa95::239c4461ffefcaa2cb15d9b01690bbc2cf01f358::cab055adcf2ff92ad40d363c0d39f5e235e00763::3f2e95ad127b8ca02fda985ec9d4f3e59485315c::99194ca735e47a783c4ca8badaf9149ca1075ec7::9d1af7f3ca9ed5ddae2ef0ca774269dd4814df86::0fa0a108245a1421f8a40c520f457ece498f2442::334dd10b76f77f0b67c335afa6315d21b7839628::62225dcd655d39bc2b3a63566906cd3c52566cd5::453e8b88ee9b3ce5c9aa56ba66a325ace17af73e::2c399eb2e10e539d8e2a4ec6c8f305233d99e5d3::3ce41d76fab9df92276e4b4fe05ea6b7a4799961::4be53f7f3b612ad4bd9a181c4ad1f79ecb63bb1d::5455272e6bfbaa1d91f321875dca76f51e050398::45e03f83b58b9edfcafab383b7b3d83e2d541a49::75d240ffb2e27a33e9a69b89e0f11b04bf369d01::0dc4d90bba2c0843eaf97d5948e43ceea2ac773f::32f2654d30f5741d9bdc25df81759ca7ea8e1719::0157959a3c011cb63c0e9a11ee0aa78d28343ece::3f9e88f13e87fe1e519ba5f75aaa723a8b94ed24::0f137055987f0d62221981cce46d6209ccec8f4e::841aff0f5a4b39cdac109ab62ecf2075d9acdfbb::f7279a11fffa13d641c05dcc3853bdbc375b254e::afcaa35d168a2b3e8f40275e7c4b7dfbcef401fe::2b566a189364867705515fe3cc7c4392f6ebab19::5f40fbf08e7c82c6d084328ce144f68f576802a0::36d1e2f63066c8a1ef53c4873c96cccc0238247f::103c08232948338b88e56516e4445fe23583ec66::5bb384c3132257c2cb0320b5327aabdd6f5a8141::8b57318d7ce2c83b05aac6af3719424a12c794e7::239f3b478da050cd4eb80fd7f10af3b071300a3a::a8fb548b528bfe38c746ffba1ded7a1c0031c242::2135698d3458251432385371eca24ca8ac45129c::c320f793b5656998cece2f672e0950f2b76bcb15::f819778219b843fb010c8e37c86fb6fac8f5aa4a::f46c70c37c3fcec115391e52d8b59dca5739b170::2af20f670503fbdc37400baaff95b7dc1e152f60::d3cecb349a96dbd458e3493da843af457ad55d53::b786886b4bbaebd6820025d0d1a852f256ec1914::1406c66862431d206414f510bf0b5359d27501a6::21b3d626f8a2d664919f0cf103a411554882d8a1::aef3d4b31a0c3ae9bc9ecc89339bdc2cce252db1::cb433228b6586d98cd0cde730a34636648567350::c3e35045be03aae887e16e40aa699b283951dbff::7fd84531ff9af863ae4a6c5cc980bedcbb5c2d14::86cd42e847103d5222e652f444c61bedeb5749f0::c13f764a3fae4866b52eed9850ab4425b906ecb5::45b1cc7ad2f09056565bb5d574228b510b1b695b::75c000d271f0de3639a9ea04452caa4124ac3a04::22d027387131c8e5e32a3e88541a5348633a2865::c4e87511da9b96ce221d0fcdfcc446e56fdfb2a2::c2bdc0a194bce43270b254e364412dcf64a52633::74aacc8d02ea4ca1930af83a313a480973efe6b0::6b1ba4f46b757c8c8543f46dc58a0326e11d0170::d1d563b53aa9e65c222ef1206d89f35ea3805d47::d2d62eec3d9b8170f71e528c06754c1708474416::3e41043fdc7c9ee774b513f846172efd28846d94::2beb9270a25bbada0d833d445b38ec0222f79d46::1fae81bd1a0ad9c608a569ef0223136ae5a8c504::52a49b746be65104ead4bb1b8cfeac45af3b4dc2::4877f485bc444ef43468033b43d514944fa32a6a::361d1e23f0f26ca545655abd265c9f1984012ffd::d5a152b0b10536c7d3d0dc7b72f342ebf7b5ee53::663586b167ad26d509ef27f671b6928f28d83e32::36b0bd34b157f90f4c34aff4f41a194b32531402::ecb89257c57e0380f929fc4843012a553dc35b25::ad667b31478e93ae5eceb102068c40a8a575ee31::8bd94687689c7c8a3c3fc33b90323b5c406ee60c::f86b201bfba61631ff00b5c082642ac747cea6eb::62da75adbc395d645adcbee14b388f9c8ffddc73::d16da8bcc9cbabe7e290af64268dea843afce9d5::5218ab56d450e2a5bb45a7fed36e028d1ecbe81c::9de64a6b402e02f55acd9d2b055966579123624a::d8ef74344d64c9aa16f818ba27a8264a62017b70::ba78c4be2aba1969e7d81f484e06b689780e403b::448dcfa79f2a3b6f459eef252e13b1dadbf3c9c3::aecfc189cd79a773148732604f0b70ed38840601::6242426001b4e811961a7af54f272c46ad30a297::703c38e8f809d3aae034c5efab57a4783c8f2c51::47cd2f38dc0fc3f6986824161c4973836fadfab3::dedca563acfca28d5d6f03604227d128ce99ae53::6ee50e43de67c1d0d60abc92442a6d0c47fb0933::3486390d4d6781587fbeff01203d36793d9e593f::e1e15a524adea8e5ff1169bfbf9ccba89d7e7330::13e4c6f7d3ee6a3fe8483c1c1ca8bc1eb5d103ab::d954da0329fd8d029eae94572927f2279b5434b3::e60c63fbde93e56f6b3fc7b42c140b57215700cf::f6707e8f5dcf8f67e57c8e2bcaf4c66199d65025::86c8f11ebf3c7a552ebcccd228a99c1a6b800d72::261e107c4d8912549fe3cd226b5c751d1a4714be::361e8af491612758c9192f198e19c4daeb7aab3b::7856d931c7705a6bfbd5651e16c8b4130713ed79::3f170c3923831e256867aa032dfa7ca965a04edb::f65efd9bf60a56fc35a94c990582b1627b8ba993::a3845c6d71b3d9db511644e06fc66b962dc760fd::52dd391c9980bff32be71fc4bfa07afec9ed268e::1eace53c2939907472685337b8b63f80ec709cf2::0fd4309ffab7b5e5abbc6a913a7b0ad0a281c515::ccb0802a2ec9ec38aed88fe1b7ceaef5a33505fd::bf06d9f3e057cb3edc7b41de9c92b2860a847975::db622a99013d2827816019eb957cd5f6afd65ae1::51cf96e88cae6f003f46d0383b1bd3d427b98c8f::e6fc10509a6f4f6c04d143d8f8789e3fe714f811::309b5adb1e3eef9fc64d61399e089ec0619a4e4b::d3353b5e9b686eb35b9e0ff38ab5748e41d5bd76::ae1697a68991dd0b670a8b24c2f3cc1ffc226749::6a5abffdc978d86ea53c42ef065153dcbc095ef5::2e1f903953f2ff667a9866f75fd335b3dd33cc8d::f972fa3215ce97436917a15938c2659bd048bc03::7ae43bb245855245d416cd2c7420a05bb8348deb::564339e7c2c47c9157887a3da57900d65042c13a::de6376503ac3bcaf6f260114580ccae0c167e1c1::c5aaa306cc8dc36d790f949c57bcbdb016ce7ba0::b44c416efce240d1f1218111a23ab1a6c0943e90::bc6a00e84aab3be7d398cb5fddd47fe16d10d4eb::e99bfcf8206df9fb08f27c74efedb62653e4576b::ce480c61f04c9087854995b9f6f0c7709dabe1e1::5856695c193ba281fc1c5e71f6a5e3b8c4342df0::5ed067a16edefb2a190da521b84c0351ca8890e6::968514500f61e7935fc195e052ad22bcd5df56f0::6e9deefaa4181290dd649f4cec25fb10b3a44d03::644c410e73f4ea69ca02828b67d2fde2ed48ffcf::9aba13c34f263627a23403ee39024e88021b1d76::d20c2f85994d52551fabf467d1640597e1436b00::e196c8a5467b261c930f5f1c41e3665d187591de::b8fff3422d33da4f9e20161633c1085bd4e9f7fe::ad610eec0a45a2e3f75b42f4c2fdf5564565e5c3::e41e85f6eb59622fe392c1e752d3ba7089858164::c12d5f79b719a086574895a4021c1bb3cf49c127::99df809bbc39c19932cbac54612f9f93290a2502::00ecc89e78792e116f8ed715acf5f659934b3170::c20f97f5e1f01ebbf2a1ac5b358b9723acfa8178::5f71f651b7783a531feb31ddfa989930432869df::8634211ff2b22349baae0edafa2b5a02ff156f72::77142c6dab7ea4e1da37d1f56e0c2c67fbcef010::a7b4421fa9b2be285574b39b4bcacc602a972e16::d89d75ed2b9f6d3972e79b39fde3d300cf0a3117::1f2d98adaf8e50377843bdaa1b0ea009e8b45999::1785437cb540de3be0ae80b24d7e04ca8b2c647c::dc3c7b6a892c1ce38b962aefc9cb84609933ee80::1916608a7b9d1a91e6843203adadf5ab4f998113::a2a5a14da23b295972d18fcf6479d7a1b78ad70b::dba23c0cacb3d07297b1d45015d63b8952b279e5::9c032e9a2108bacf1ea91dc77681d97383cd6f35::ae5ecfff026c4f0ae7fafba2de62822fab6f2792::9f7c71c2027b5d6b5833ea49ed4402a030893b6b::969a49e3c195c1b8b19cf22e1ac7e0793f57985c::3d178c657fd221bbb8c08371d9a9e7ca529819fe::2e2f74636b33c2bb98bee40e63724df899684218::4ca6e1b016617535c78b40afffef9ee7cdb7842a::fcfbf03cbf6dc44b7b2652f9e8e12f05955ee984::5bc3520084ece104146ddd6d0ab18550fcaaf9c4::0395adb1fc88be7b39d3c0977a75e1bb1421984e::2342dae5e9322c4e1b8a5e88ec2d445ceedf9d99::0e7b2a303f14b2da9597667884a2272ecd36a9c4::72753df15a46c24e1d142e734e4fc7a727941135::95abe156dd2707c71e55940ec746816f8c9602f3::70a078316db4eda398c50020d5ee56889181574e::750aa30c0cd6592894bb084f1b4865c590d8bf9d::b9e7ec00a60f4ee0bc17846194260e6bc7b157d5::9eea8ec474a5bc5ca7504e7f69a6a3bd83aed724::057933cc4b93d4d4ff26414e61a22fcb4cc462c4::4918baa9eed978b8e986b7f70975754fbf059240::2272757cbc18579145d8b32db136480a970f453e::259370e00bebb9c08aee751d4b3646607a533064::4ec7c169d303a8e902d1353a61d42272623d6e91::53e07b05d39eb339f2eb00c485fec1315b9657f2::1c01c53c2061590496f4162588e9344170ab997d::85d8fc320fd5e64ab021eef2f31b1a231b25a85e::8a5d176837295d8cd3a8af1a48f63ba0624ac30e::b04108ea8d419fcfedc22c5de122ff89a6fbafdf::8c9cc229b14f1a7974476243e17cb36c1fdf613f::25cbeeb280ca6dfff64a1f0802b27d67b6f7fbf3::4478b392254e792f23a958952e562059154e232a::8c69437dfcc10dd280a615a298ef7248b86cbd92::c83873db11417e0f569353699b328c61b09a6578::763f350aff15ca22696b5cfd7d6f15c494b37227::1dc9044fe629d9efef02c81662234d9a4a1fa740::ffe3a134ae2efe33e665ea2668cb7fa88b203c28::c605d8a1d158d70b6a6814e388c2559727b90284::ba733b2741aa133110c8c681194f069e4768c08d::f68dcc707665a939740f602d01eb3a61fc854bfa::fc14cca2f588d979a703e0fe4f6d045f0b926d13::ab46fff6e72119a44d974603c1f9269a0d7d6f45::4ce22c7d6a1a76aa0d13fdbea3669536802f60b3::d1b78b359f3fe1ed2ed2a00a2025502718e3665e::8373e0656ae15ccb24335d6a0ca1e3d15581e4d8::2b3103d580bc65eccb74dee1c4eaeaa3aaa1d789::e47633815c220251769cfac4602c1cb93214499e::6bd72b88d1ee1d989394d5323094fc4c1d3ec4a3::b9bfb1877353475000088684a47abf44fabda5f7::a7b50a7e6ed773c4dc93f4f023bdb4020f5cd290::e7b757bc41ff7663d51e0b74f446053c9a0637d7::2ad509980f2b4f8c45cd5810c5e7eede9acc0beb::7c49a60e00869f713c7339ea919e713aef1fdefb::fd487d523e069c104f2a0c0396a7d254bd8f5e6c::3b01d3df0a96a7e487f10fa79f2f858ba13c8f12::2708fadd929d72077cbcc758b2a947540de10cde::2fcc1eb3e30df940e0711c5dcbf094a7c776e062::2cc232beae8029d63da85dc2acf4d55ecf1894d5::d57058af854b89306753ec6d5ac26ad67eddc59d::f411ddf941421050a87d9ae394164c1b232d2694::f80c912977daa32f563b57b680c930c98c1f2595::859dce55f68ea9d5c92c9432fbe5b7f80604efdb::af592796619f5a526aff671c08e3b546588b7a1a::fa2a0b6543cbc30f44f1fff5496af8fb28a1843b::382b20e7a2883659cebd96ed22caa8d02e25a821::1d5a76601125be27950a0dc02e165a622025cebe::08a36839093b9d59ba238c824a250428d2fb54e9::4f40b1efc175d6da8de6cd0888e93849988d653c::cad350f540cd51bb721d3315a81ea2aca2bc6c4b::e609af26f92db2351d4f181f2c44fbfa69d0d603::2cb941691e63a75d074f5c6138b091c5abf2eaef::5f3329b0283d231bbc9ba70e95a5140b1867e7b6::bc3fdf2f3267a356bba0aef96b8d244527b81b7c::4787319272854f176e75b2ef7a8eabefaeffee86::1d0d1f04f971602154fa18c319c66ec5ed209270::7b0e2af081ebf09cc88f1205f6277c57aac5b6fd::f4d861c78be4cf6d41e230fbc9c4d91898bd269e::2f3f47259f77eb184a080594ee3a6b50ba5e4166::458d04338ec8e0828bdf341b6bf69582ff2422ca::ae57041ffa17505961c9edca54fe71a2083f40f8::a922444418ff4d3d24f7f239f0919798b74c499f::f143236dc78f624470495e6b50e0e900c349a1b8::daaabb9875314b0d8eaf9157cca7f348ebe3f097::664804dee04c52dbaaed01f12a9080b8f99966ff::ee2711117a7b8a1b78af36b8043a4ffe91b290f7::
https://api.github.com/repos/elastic/kibana,39072,36738::master,0,merged,Team:Kibana-Design::Team:Monitoring::bug::release_note:fix::v7.2.1::v7.3.0::v7.4.0::v8.0.0::,"## Summary Resolves https://github.com/elastic/kibana/issues/36738 Added zoom-out functionality to all monitoring charts, which is only visible if zoomed-in: ![Screen Shot 2019-06-17 at 9 28 06 AM](https://user-images.githubusercontent.com/27822304/59607919-479d2380-90e2-11e9-9740-5f8afaa19c77.png) TODO: - [x] Confirm UX/UI functionality - [x] Add `FormattedMessage` to support i18n - [x] Add unit tests::What does `40` mean in this context? Why is that significant?::I think `to` and `from` are unix timestamps but in `ms` instead of `s` and I think we might be able to get away with not using `moment` at all here - just doing the same comparison but in `ms`, then the additional below should be fairly straightforward without moment too. WDYT?::Is `10` significant here too?::Is this doing anything? I see it being used in `clearTimeout(deferTimer)` but I never see it set?::I actually meant to leave a comment there with a link: https://github.com/elastic/kibana/issues/36738 (step 4). There is a limit onto how much you can zoom-in until the api will give you network error. From my testing some dataset ranges can be as little as 8 seconds and some can't go pass 30 seconds. I decided to limit it to no less then 40 seconds to be on the safe side. I still don't know the condition or cause, or where/why this limit is implemented::You're right, but I don't think we actually need to send ms precision to the server, since it'll probably still get rounded to seconds somewhere down the line (assuming since we don't collect date at ms intervals (less than one second)). I think it might be a bit faster calc/sending seconds instead. Also, I decided to keep the moment method here since that's what it was originally, even though you're right, it does take in strings according to `/kibana/src/legacy/ui/public/timefilter/time_history.d.ts`. Was just worried it might cause a regression somewhere and it's not really related to the issue. That being said I have no problems applying these changes though, LMK::Triggering a back event and then adding the change state event triggers it immediately. To avoid this I'm differing it 10ms, although, it could technically be 0ms (since I just want to do this on the next code digest)::Good catch! I actually meant to assign the `setTimeout` to it. Will fix it::This behavior is ungated currently though right? Are we stopping users from zooming in too much (without your changes)?::I take it back actually. This is fine. No issue on my side!::Hmm. I'm not sure I'm seeing the same behavior. I tried removing the `setTimeout` and the functionality seems the same. What should I be seeing instead?::Without timeout `popstateHandler` will get triggered by `popstate`, thus changing `zoomInLevel` back to zero. So, you'll never actually get to see the Zoom Out button::We're not, but rather than creating a separate issue and fixing it at a later time I decided to sneak it in with this feature. It's a rather nasty bug, since once you trigger it it will start showing the 404 error every 10 seconds (or w/e the interval is): ![Screen Shot 2019-06-18 at 4 29 07 PM](https://user-images.githubusercontent.com/27822304/59717778-b499e180-91e6-11e9-9e45-f62327cb9a66.png) Refreshing won't help since the range state is saved in the URL, the only way to get out of it is by: clicking back, changing the range manually, or clicking on Stack Monitoring again ::> We're not, but rather than creating a separate issue and fixing it at a later time I decided to sneak it in with this feature. It's a rather nasty bug, ... It's good that you found this bug and are fixing it, but we should do that in its own PR (no need for a separate issue if you can put up the PR right away). There are a couple of benefits of extracting the bugfix into its own PR: 1. It makes reviewing _this_ PR (and the bugfix PR) easier. By separating concerns and having a PR for each, the changes in each PR become more obvious to reviewers, since each PR then has a more focussed context. 2. Typically, bug fixes will get backported to all active branches whereas features only get backported to the current minor branch (`7.x` today). I realize this PR is categorized as a bugfix PR (personally I think the ability to zoom out is a feature, but that can be debated) so one could argue that the changes related to the zoom out ability + the changes related to the this thread would be backported to all the same branches. However, this won't always be the case so it's best to get into the habit of breaking out individual bugfixes into their own PRs. 3. Smaller PRs generally tend to be easier to backport as there is a smaller chance of conflicts, especially against older branches. 4. Separate PRs means discussion/debate in one PR can't hold up the other from getting merged. This helps us keep making steady progress.::Thanks @ycombinator! This makes a lot of sense. I didn't really think about backporting etc. I will revert this fix, and create a new PR for it::Please use an EUI SASS variable instead of a hardcoded pixel value. In this case, you would want `$euiSizeM`. For future reference, the available size variables can be found here: https://github.com/elastic/eui/blob/master/src/global_styling/variables/_size.scss::I don't think we need the `,` here::I don't think we need the `,` here::I now understand the need for this, thanks for that explanation. However, I still don't think this is the best way moving forward. We need to explain this context for future us so we know if we could safely remove/change it or not. At the bare minimum, we should add comments at this level, but it might be worthwhile to move this to some lib function that is well named and handles removing and adding the pop state handlers in a safe manner. WDYT?::Just adding a thought here for us later. This kind of constantly passing down things does not excite me at all - we should make sure we have a better solution in our React world::💯 Even though this is ""The React Way"" of doing things, I think this would have been handled better in a state manager somewhere. Another way is to pass **one** object that holds all of the props. Works really well with typescript and interfaces::I think adding a comment is a good idea 👍 I don't see us using this more than once, so the class idea is a little less appealing::",f0108a15647abcdc4c49aac919ab8b6218e89a48::77e36da73b0ee35b2112c91debe8229dc7bf77eb::0febc4bac3f237ef2460d72b07118afbfa6f8576::a6803e2a3bbb026aa3a0bfdbfeecaa17cea517a7::487d0d69b33dc7ded0aa02f54f43fa81d5527315::d43c84e95bd74ce8bda6383d5e1bf0a9fdf27569::c9cbe94ed7c6aea598a3b3df6bd0986c6e0541c3::b19154763650f137ac24b1e07179b010f04bf113::235c9715b85635ca29dc7f00ff9c36d8c5609722::1dd009b07d149aacacdb3407b95c7ab22817f76e::3b175331220d588fc6afe656f99585ee3b5bca86::074d8c0df15234e29f1f479e7d30097da8c60a6c::94cfe88fd732fd91f692ecc2f3914cdd519e4f79::0824ef23981b4a5ee587b406b45d40094e116e89::cf1a38d648621826e57a0c15ee13a754c809d62c::6ea05a6588161afb7e0715f08b911fd805fd71f1::da07ca1ed81d32404612afc41dc92f066a65c6f1::796d09d5384d593b5588946409486d1deba6cb65::f045fbdff36023ede853b90bc8c5541f233747bf::bc63274f9f3cdd33d76dcf3ead62ce20eff28a4a::dfca7679e76437a9252afe13981c5ce63444ea11::
https://api.github.com/repos/elastic/kibana,39069,transaction-sample-redirect::master,0,merged,release_note:fix::,"Fixes an issue w/ the transaction sample redirect being too aggressive & redirecting to the default sample before the data has been fully loaded. This makes deeplinking to samples unreliable. ## Definition of Done for APM UI - [ ] ~~Flag and create issues of things that are left out~~ - [ ] ~~Before/after images or gif of UI changes~~ - [x] Release labels - [ ] ~~Designer sign-off for UI related changes~~ - [ ] ~~PM approval for bigger, user-facing features~~ - [ ] Add to Observability Weekly Updates::I understand that comparing the `status` value from `useTransactionDetailsCharts` with the `FETCH_STATUS.LOADING` constant from `useFetcher` is correct, but it feels cumbersome and leaks implementation details of `useTransactionDetailsCharts`. Perhaps `useTransactionDistribution` could explicitly expose the boolean flag `isLoading` to achieve the same result?::sounds good, but it seems like the status is explicitly exposed from the hook anyway (and from `useFetcher` calls in general). In the interest of time, I'll merge this one as is (and backport it to 7.{2,x}), we can improve on this later  (maybe it should be solved in `useFetcher`).::I found the mix of ternary and double negations in `find` a little hard to read. It looks like we can bail out early if `distribution` is `undefined`, and replace `find` with `some`. That makes it a little easier to grasp imo. ```js useEffect( () => { if (!distribution || loading) { return; } const selectedSampleIsAvailable = distribution.buckets.some( bucket => bucket.sample && bucket.sample.transactionId === transactionId && bucket.sample.traceId === traceId ); if (!selectedSampleIsAvailable) { redirectToDefaultSample(); } }, [distribution, transactionId, traceId, redirectToDefaultSample, loading] ); ```::Yeah, honestly this is a little hard for me to read as well even though it is very recent. Hmm.::I guess that's the good thing about giving feedback on older PRs. We both see it with new eyes 😄  👀 ::",01891e4b24d33d7a8a5ae7691b2867fffbb121cf::
https://api.github.com/repos/elastic/kibana,38657,issue-xxx-saml-realm-config-breaking::master,0,merged,Feature:Security/Authentication::Team:Security::release_note:breaking::v8.0.0::,"Make `xpack.security.authc.saml.realm` mandatory and completely remove previously deprecated `xpack.security.public` and `xpack.security.authProviders`. ------------------- ""Release Note:  `xpack.security.authProviders` is no longer valid, `xpack.security.authc.providers` must be used instead."" ""Release Note:  `xpack.security.authc.saml.realm` is now required when SAML authentication provider is used."" ""Release Note:  `xpack.security.public` is no longer used and has been removed."" ------------------- ~~**Blocked by: https://github.com/elastic/kibana/pull/37346**~~ ~~**Blocked by: PR for [Docker image](https://github.com/elastic/kibana-docker/blob/master/.tedi/template/kibana-docker)** (Tiago let me know that this repo isn't used for 7.x+ docker images anymore :champagne: )~~ ~~**Blocked by: PR for [QA integration tests](https://github.com/elastic/integration-test/blob/a970a346a9d628cb6f0eeee81197578e37794f8a/qa/configure_start_kibana.sh#L67)** (Marius kindly offered help here and will handle this soon)~~ ~~**Blocked by: PR for [Cloud config validator/docs](https://github.com/elastic/cloud/blob/master/wiki/Operations/EnablingSaml.md)** (filed an intention/heads-up issue in https://github.com/elastic/cloud/issues/34234)~~ ~~**Blocked by: PR for [Elasticsearch docs](https://github.com/elastic/elasticsearch/blob/master/x-pack/docs/en/security/authentication/saml-guide.asciidoc)** (Ioannis kindly agreed to help with that!)~~ ::```suggestion URL that it derived from the actual server address. Starting in 8.0.0, the Elasticsearch SAML realm name that Kibana will use should be ```::It feels like these should be added for 7.x, do we want these to be part of this PR which will only be merged to master for 8.0?::I have no preference, I can either keep these changes (two whitelisted realm-related settings) here and create a 7.x-only PR just for these changes or I can move these changes to a dedicated PR that I'll merge to master and backport to 7.x (maybe even 7.2 if we want). What would you prefer? P.S.: I guess a large chunk of the Kibana settings isn't whitelisted here and people just mount their `config.yml` to the container to set those.::Let's > move these changes to a dedicated PR that I'll merge to master and backport to 7.x > P.S.: I guess a large chunk of the Kibana settings isn't whitelisted here and people just mount their config.yml to the container to set those. Yeah, I'm not quite sure the history of this. It seems like if we want these settings to be used by Cloud, we'd want these to be settable here. This is based on the assumption that Cloud is using these settings, which they might not be.::Got it, I had an impression that cloud doesn't use our docker builds and rather relies on `KibanaUserSettingsValidator`, but let me double check with the Cloud team.::Ah, that's entirely possible.::Confirmed, both ECE and Cloud use their different whitelist/blacklist mechanisms for Kibana settings.::> Let's >  move these changes to a dedicated PR that I'll merge to master and backport to 7.x Moved to https://github.com/elastic/kibana/pull/38861::",c6b40a9bac969d3a13d3b33523a7df0ee9263259::413af71032ec69f6dd92026d9d99d0cc2ff3c9ce::f38ff7a477f9cfad0fe92d7ef3cd056f640c7c25::b211af8688b666245c5973c7855831fe158779e2::
https://api.github.com/repos/elastic/kibana,38440,eui-10.4.3::7.2,0,closed,chore::,## Summary Bumps EUI 10.4.2 -> 10.4.3 ## [`10.4.3`](https://github.com/elastic/eui/tree/v10.4.3) **Note: this release is a backport containing changes originally made in `11.3.1`** **Bug fixes** - Fixed `EuiBadge` conflicts with providing both `iconOnClick` and `onClick` ([#1994](https://github.com/elastic/eui/pull/1994)) ::,ae782807ff60fa7a15dfa94585155c15fd24cfb0::
https://api.github.com/repos/elastic/kibana,38369,implement/generate-renovate-config::master,0,merged,Team:Operations::release_note:skip::review::v8.0.0::,"In order to make it easier to update the renovate config, including defining extra labels and including `@types/*` packages for package groups, I've moved the core renovate config to a TS package that generates the renovate.json5 file which is used by the renovate bot. This file is generated with ``` node scripts/build_renovate_config ``` The output of this script is validated by CI, so changes to the script or the config without committing the correct result will fail.::optional: is there a way to get current versions? as I can `package.json` contains reference to 8.0.0. it's easy to forget to update renovate when bump to the new version.::can it happen that lock file re-creation will contain updates for packages not related to renovate-PR? say renovate want to update packageA, but lock file contains updates for packageB, just because it has a newer version available. ::optional: why not use flatten from `lodash`? ::pls don't forget to add ```js { packageNames: [ '@microsoft/api-documenter', '@microsoft/api-extractor' ], enabled: false, } ``` from https://github.com/elastic/kibana/pull/38239::so it will handle only type packages from `package.json`. [others](https://github.com/elastic/kibana/pull/38369/files#diff-fb098e156f6841cfad609154ad7c309eR28) aren't included. are they? ::The plan is to enable version pinning before turning this on. Version pinning will remove the `^` prefixes in our package.json file so that a lockfile refresh will only update the versions of transient dependencies. Updated comment to mention version pinning.::Not that I'm aware of. I could pull in the current master version mapping, but the other version will change much more frequently. The closest thing I could find is the `.backportrc.json` file, but that just mentions the default branch names (`7.x`). Ultimately I'm not worried about having to update this after version bumps. After a while I might get sick of that, but it will be relatively infrequent.::Because I don't like using lodash, and because I want the default to be undefined, not an empty array, so that the renovate.json5 file doesn't have a bunch of empty arrays in it.::Oh, right, maybe we should add the other packages too 😄 ::nit: could we declare it explicitly as ```js const scopedPackageRegExp = /^@(.+?)\/(.+?)$/ ``` ??::",f76c3d5fded1f3918c5d176204fb39b8afd1e1ef::3b41d9feba55bfe11c3de0b337e671ae2d63c35a::54003575886c3eb29f242dfefca464eeca48e27d::15bfb3b0a97bc78a9a14100f27212bc345255f5c::e3a795ba89ed6a72f5427f27371c429c002853ee::8498d41006878e30fa5545514f991fc74c1db582::20a9ac05d5f82d93cc5046e24b5b13118998e152::d4e7a986901ea64e9312060fda0e0719f820a979::8ebe080e185a959eeeb0478276c2900b0d187f1b::fd3709b5d3ddad99078dc7a662130cc059d36511::9f4a1c7ec8c8f62a660a52a2219460dcbb708f2f::613c265fc7d80c7774e02be8ddb8bdc7e02d8dd6::12c8421a4e7a3cc5ea5ab6ab3479b7242aea1676::8d2d2a1c5dfd49f94190920e5ec7de06aeff59fb::7bf3fc374b1fbecdacc79c761dc85cc77737ae3b::0c06a615c0bc1b035948930e4cc0f266b371b723::32271ead747ee480be1685d7373611d92ab87d68::
https://api.github.com/repos/elastic/kibana,38271,tooltips_round2::master,0,merged,Team:Geo::release_note:fix::v7.2.0::v7.3.0::v8.0.0::,"Fixes https://github.com/elastic/kibana/issues/38038 and https://github.com/elastic/kibana/issues/37373 The description list text was not expanding the width to fit the label and value content. This PR swaps out EuiDescriptionList for table. This is similar to to how [Visualize tooltips are structured](https://github.com/elastic/kibana/blob/master/src/legacy/ui/public/agg_response/hierarchical/_tooltip.html). The PR also adds `eui-textOverflowWrap` for both label and value cells so large values do not run off page. <img width=""150"" alt=""Screen Shot 2019-06-06 at 8 46 41 AM"" src=""https://user-images.githubusercontent.com/373691/59043339-498cfa00-8839-11e9-9c18-5118dc7589c6.png""> <img width=""150"" alt=""Screen Shot 2019-06-06 at 8 51 44 AM"" src=""https://user-images.githubusercontent.com/373691/59043356-514c9e80-8839-11e9-855e-9e11f298bb3d.png""> ::Will this cause issues when trying to backport to 7.2?::I will revert yarn changes::",4bf791770f21a7f2d3318d3051740bfdebed541e::4d542746302d52091e25d116a88c0bb76603f608::ac8e575d8095249dc3e9f813bfa3cb436782a822::8e62b0a141bcaad52bf062cebe427b33f680c39c::
https://api.github.com/repos/elastic/kibana,37513,bugfix/reporting-png-is-cancelled::master,0,merged,Feature:Reporting::bug::release_note:fix::v7.3.0::v8.0.0::,"Fixes an issue with the cancellation-token utility, will backport to 7.x as well. ::nice to see these tests... but is it supposed to catch the issue? I went back to the old code and ran the jest tests and everything still passed. Maybe I'm doing something wrong though.::It is a binding issue, I'll see if I can't get a test-case for that specifically since these methods do get passed around::Added a new test case, plus changed how some older tests functioned (they did explicit bindings when utilizing this util). Tests started failing when I added these news specs and adjusted older tests. I'll get it on the list to re-enable that functional test.::",bde64ae0525f3fd22e0df72110fb6150de1e9541::701bd7a2dfda12ff6cc8901f83aff834bfea4103::e63e047a6489cefbb4b5a55396b7f7053d7de7f4::16a4b79ea7211a9e0e4542adbc66882ad18bf459::72509bedb8e6336bcab768ee6d5d20e1e9f6fb4b::d8bcba113e30b0b9186519bec7fa8f49f7a9a140::
https://api.github.com/repos/elastic/kibana,37511,uptime_location-links-to-wrong-docs::master,0,merged,Team:uptime::bug::v7.2.0::v7.3.0::v8.0.0::,"## Summary Resolves #37022. We're linking to the wrong metadata processor doc for the location field in the monitor list. This PR updates the link, but the link will not be active until the updated docs are published. More info is available in https://github.com/elastic/beats/pull/12082. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::This should actually point to the page that will go live with the merge of this PR https://github.com/elastic/beats/pull/12433 I'm realizing . The URL would be: https://www.elastic.co/guide/en/beats/heartbeat/current/configuration-observer-options.html It would go live with 7.2::Ok - is there any good way to test that this works before we merge and backport to 7.2?::",f5999130e268ea0f58126d397ce39c4dd6300609::8e1487107dfcccf465b1ebc0069d08d22aef6baf::b488ae5b480df4478a21d38232449aa9e5be61ad::75dd3a9edf818b573a3067b7dcdf7a4070164f22::d23e8de945f5056c25fdb2306f9dfa1017470ce5::5f4dfeadfc2c89d08f438deb3fd0ce1c49c02506::
https://api.github.com/repos/elastic/kibana,36986,monitoring/stats_endpoint_500::master,0,merged,Team:Monitoring::review::v6.8.1::v7.0.2::v7.2.0::v8.0.0::,"Fixes #36943 Introduced by #35691 Added a test too. Fairly self-explanatory. Need to backport everywhere #35691 went::I'm not sure this is the right fix. If `modifiedUsage` is falsy, we'd still want https://github.com/elastic/kibana/pull/36986/files#diff-f0c0c68b870440940fc9df81085b5249R123 to be executed, right? Instead, perhaps we could make https://github.com/elastic/kibana/pull/36986/files#diff-f0c0c68b870440940fc9df81085b5249R83 return `Promise.resolve({})` instead of `Promise.resolve()`. WDYT?::You're right. That is better. I'll update it::Not sure this description is accurate?::",53df03c64d9bec0904050103b10f2a0006d03962::306f6ba10ac34c4357338d23164327a0ee023ab0::84c160de497276f2a254fe0013e7837d9099ad9d::
https://api.github.com/repos/elastic/kibana,36923,bump-7.3.0::7.x,0,merged,Team:Operations::release_note:skip::v7.3.0::,"* Bump to 7.3.0 * Temporarily build from source until ES snapshot has been built * Updates backport branches, removing those which we will never release again.::",1429a729d81dbaa48fb1bff476f222d76f88824e::56c997e3260e7159d09f7439de86eac509675661::
https://api.github.com/repos/elastic/kibana,36835,remove_swn_file::master,0,merged,Team:SIEM::,"Oops. Was introduced in https://github.com/elastic/kibana/pull/36768. I already removed it in the backport PR. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",2657b4ca2b05a501cbac3bc06e21bbad7311e18f::
https://api.github.com/repos/elastic/kibana,36776,7.x-apm-index-pattern::7.x,0,merged,Team:apm::v7.2.0::,"Summarizing all the apm index-pattern changes that haven't been backported yet, from following PRs: https://github.com/elastic/kibana/pull/36666 https://github.com/elastic/kibana/pull/35166 https://github.com/elastic/kibana/pull/33778 https://github.com/elastic/kibana/pull/32978 ``` --- old.names	2019-05-21 15:39:48.000000000 +0200 +++ new.names	2019-05-21 15:39:52.000000000 +0200 @@ -24,6 +24,13 @@ ""name"": ""client.mac"", ""name"": ""client.packets"", ""name"": ""client.port"", +  ""name"": ""client.user.email"", +  ""name"": ""client.user.full_name"", +  ""name"": ""client.user.group.id"", +  ""name"": ""client.user.group.name"", +  ""name"": ""client.user.hash"", +  ""name"": ""client.user.id"", +  ""name"": ""client.user.name"", ""name"": ""cloud.account.id"", ""name"": ""cloud.availability_zone"", ""name"": ""cloud.instance.id"", @@ -53,6 +60,13 @@ ""name"": ""destination.mac"", ""name"": ""destination.packets"", ""name"": ""destination.port"", +  ""name"": ""destination.user.email"", +  ""name"": ""destination.user.full_name"", +  ""name"": ""destination.user.group.id"", +  ""name"": ""destination.user.group.name"", +  ""name"": ""destination.user.hash"", +  ""name"": ""destination.user.id"", +  ""name"": ""destination.user.name"", ""name"": ""docker.container.labels"", ""name"": ""ecs.version"", ""name"": ""error.code"", @@ -88,6 +102,7 @@ ""name"": ""event.start"", ""name"": ""event.timezone"", ""name"": ""event.type"", +  ""name"": ""experimental"", ""name"": ""fields"", ""name"": ""file.ctime"", ""name"": ""file.device"", @@ -103,6 +118,14 @@ ""name"": ""file.target_path"", ""name"": ""file.type"", ""name"": ""file.uid"", +  ""name"": ""geo.city_name"", +  ""name"": ""geo.continent_name"", +  ""name"": ""geo.country_iso_code"", +  ""name"": ""geo.country_name"", +  ""name"": ""geo.location"", +  ""name"": ""geo.name"", +  ""name"": ""geo.region_iso_code"", +  ""name"": ""geo.region_name"", ""name"": ""group.id"", ""name"": ""group.name"", ""name"": ""host.architecture"", @@ -128,6 +151,13 @@ ""name"": ""host.os.platform"", ""name"": ""host.os.version"", ""name"": ""host.type"", +  ""name"": ""host.user.email"", +  ""name"": ""host.user.full_name"", +  ""name"": ""host.user.group.id"", +  ""name"": ""host.user.group.name"", +  ""name"": ""host.user.hash"", +  ""name"": ""host.user.id"", +  ""name"": ""host.user.name"", ""name"": ""http.request.body.bytes"", ""name"": ""http.request.body.content"", ""name"": ""http.request.bytes"", @@ -144,11 +174,14 @@ ""name"": ""kubernetes.annotations"", ""name"": ""kubernetes.container.image"", ""name"": ""kubernetes.container.name"", +  ""name"": ""kubernetes.deployment.name"", ""name"": ""kubernetes.labels"", ""name"": ""kubernetes.namespace"", ""name"": ""kubernetes.node.name"", ""name"": ""kubernetes.pod.name"", ""name"": ""kubernetes.pod.uid"", +  ""name"": ""kubernetes.replicaset.name"", +  ""name"": ""kubernetes.statefulset.name"", ""name"": ""labels"", ""name"": ""log.level"", ""name"": ""log.original"", @@ -223,6 +256,13 @@ ""name"": ""server.mac"", ""name"": ""server.packets"", ""name"": ""server.port"", +  ""name"": ""server.user.email"", +  ""name"": ""server.user.full_name"", +  ""name"": ""server.user.group.id"", +  ""name"": ""server.user.group.name"", +  ""name"": ""server.user.hash"", +  ""name"": ""server.user.id"", +  ""name"": ""server.user.name"", ""name"": ""service.environment"", ""name"": ""service.ephemeral_id"", ""name"": ""service.framework.name"", @@ -251,6 +291,13 @@ ""name"": ""source.mac"", ""name"": ""source.packets"", ""name"": ""source.port"", +  ""name"": ""source.user.email"", +  ""name"": ""source.user.full_name"", +  ""name"": ""source.user.group.id"", +  ""name"": ""source.user.group.name"", +  ""name"": ""source.user.hash"", +  ""name"": ""source.user.id"", +  ""name"": ""source.user.name"", ""name"": ""sourcemap.bundle_filepath"", ""name"": ""sourcemap.service.name"", ""name"": ""sourcemap.service.version"", @@ -269,6 +316,7 @@ ""name"": ""system.process.memory.rss.bytes"", ""name"": ""system.process.memory.size"", ""name"": ""tags"", +  ""name"": ""timeseries.instance"", ""name"": ""timestamp.us"", ""name"": ""trace.id"", ""name"": ""transaction.duration.us"", ```::",f1c39ff88a35f15e8894875dea419aaf97a66874::
https://api.github.com/repos/elastic/kibana,36475,implement/kbn-es/retry-set-password::master,0,merged,Team:Operations::review::test_infra::v7.2.0::v8.0.0::,"Resubmit of #36290 In the backport for #36290 we had another setPassword failure that implies we have not overcome this battle against situation yet, and we might have made the impact worse by throwing setup errors rather than silently swallowing them. In an attempt to overcome what we believe to be a timing issue, we're going to attempt retrying the setPassword requests after 1.5 seconds to see if it resolves the issue.::",a17c301b3f1593dbffabcba6f52b97f0162e9c0d::a6b84ddce83546931fbe1424bb3c32a21dd12b41::efce98092fc17471edfa45994d12e8e5f8574f30::f4cdd9537d886f818bd4283be0fe758d1aafbfcf::7a0d9acae767b83ca7dcb5c00928c338b0b6b395::
https://api.github.com/repos/elastic/kibana,35994,71-breaking::7.1,0,merged,Team:Docs::v7.1.0::,## Summary This PR backports the https://github.com/elastic/kibana/blob/7.x/docs/migration/migrate_7_1.asciidoc and https://github.com/elastic/kibana/blob/7.x/docs/release-notes/highlights-7.1.0.asciidoc files to the 7.1 branch ### Checklist - [x] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) [skip ci]::,3096870b5bdd8d04c0d7d55940f9a11790f17899::
https://api.github.com/repos/elastic/kibana,35592,docs/fix-backport::6.4,0,merged,Team:Docs::,## Summary Fixes backport of #35505 [skip ci]::,e2a8918a8a2bd9dbd22f71534747543a5e33587a::
https://api.github.com/repos/elastic/kibana,35540,fix-status-page-stylesheet::master,0,merged,Team:Operations::release_note:fix::review::v6.7.2::v7.0.1::v7.2.0::v8.0.0::,"That PR is simply removing an empty stylesheet that we currently have for the status page. Serving an empty stylesheet, in the current way we are linking them, will fail the entire kibana serve by the proxy causing the browser to throw `Refused to apply style from .. because its MIME type ('') is not a supported stylesheet MIME type, and strict MIME checking is enabled.`. We should also backport it to `6.7`::",c809c2be39c002cd4f5d3607abe9f2b38c359425::6fe9db207031c87cf0656b19bc9ac80bd129b97b::76186bc7005ebbd839a43327b2122b4dc97578cd::
https://api.github.com/repos/elastic/kibana,35266,fix/timelion-ui::master,0,merged,Feature:Security/Feature Controls::Feature:Timelion::Team:Security::regression::release_note:skip::v7.2.0::v8.0.0::,"When Feature Controls were merged in #31652 (and backported in #35014), the `timelion.ui.enabled` yml config introduced in #30131 stopped working. This was due to a duplicate `injectDefaultVars` method in the plugin definition. This PR merges the two so that both timelion feature controls and the `timelion.ui.enabled` setting can work correctly.::",9edaa679250cdcc095d30be41e3a6d4fe2bcb410::8d393132c1758bc934a71eb4bc6ca2826482fd90::
https://api.github.com/repos/elastic/kibana,35249,uptime_add-mapping-for-rest-api-test-data::master,0,merged,Team:uptime::test_xpack_functional::v7.2.0::v8.0.0::,"## Summary Mappings are currently absent for the data directory we use for Uptime's REST API. This caused some problems when [backporting](https://github.com/elastic/kibana/pull/33178) other test-related changes to `7.x`. Specifically, certain values were being counted that would have been ignored if the proper mappings were present, which broke some API tests. Rather than modifying that backport PR post-review to make it work, I decided it was better to open a PR to add the necessary mapping file to `master` first, and then backport it with an updated version number to `7.x`. At that point I can remove the added mapping from the above-linked PR and retest only those changes. ## Testing If this is passing CI then it should be ok to merge. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",b0698099d24737055466551d14f9262b0e02db49::
https://api.github.com/repos/elastic/kibana,34874,ml-enable-model-plot::master,0,merged,:ml::Feature:Anomaly Detection::release_note:fix::v6.7.2::v7.0.1::v7.2.0::v8.0.0::,"## Summary Looks like a change snuck in via one of the localization PR's https://github.com/elastic/kibana/pull/27587/files#diff-b89bdfb3a422bccc7980d6a542808920L60 This PR removed an `else` block that ensured that when a cardinality check was successful, status would be set to `FINISHED` and no warning was shown. This removal is causing the warning to always be shown as the cardinality check status always gets set to `WARNING`. This also prevents the UI validity check text from updating as it is waiting for the `FINISHED` state. This PR simple restores the `else` block removed in the above mentioned PR. NOTE: waiting to see if this needs to be backported to 6.7 - will add the label if so. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. ~~- [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility)~~ ~~- [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~~ ~~- [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials~~ ~~- [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios~~ ~~- [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~~ ### For maintainers ~~- [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ ~~- [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ ::There is missing whitespace after `recommended` and also before `If you enable model`. There is also missing whitespace in the `errorHandler` message further up in the file.::Added the missing white space 👌 ::",d88fb65d99a27007840a8d93b4348607529abeec::1eff9d951f794fb2020c59847cdc7910885651c0::
https://api.github.com/repos/elastic/kibana,34795,fix-date-histogram-tz::master,0,merged,Feature:Aggregations::Team:KibanaApp::bug::release_note:fix::v6.7.2::v7.0.1::v7.2.0::v8.0.0::,"## Summary Fixes #34784 Since the introduction of rollups we technically had the possibility to specify a `time_zone` for a `date_histogram` in the AggConfig. This was needed so the rollup plugin can overwrite the timezone by the one from the rollup job. Unfortunately that means the time_zone was also serialized and saved in the saved object when saving the visualization, meaning every visualization you created since 6.5 with a date histogram in it basically stored the time zone of the user creating it for the date_histogram. This means if a user in a different time zone or if you change your Kibana's time_zone, you'll still see that saved visualization in the time zone it was saved in. That's a very bad behavior since it basically breaks collaboration over multiple time zones and changing your Kibana's time zone. This PR fixes that behavior by making sure the `time_zone` parameter won't be saved in the saved object anymore, but only lives transient ""in memory"". It also migrates all saved visualizations to remove the stored `time_zone` from it, since there is no legit state where you want to store it with the visualization. @LeeDr and/or @bhavyarm since this fix is going back to 6.7 and we're migrating all saved object I would appreciate if one of you could give this a QA test too, before merging. **Steps to reproduce** 1) Create any visualization with a date_histogram in it. 2) Change your Kibana's timezone in the advanced settings and reload the page. 3) Open the visualization again. 4) **Failure**: It will still show the data in the old time_zone. You can also check the saved object. It will have a `params.time_zone` in the date_histogram in `visState.aggs` which shouldn't be there. If possible also test migrating of old documents. If you save an visualization before that fix, it will have that `params.time_zone` in it (and render in that time zone no matter what you configured in Kibana). If you apply that fix, your saved object should be fixed and the `time_zone` should be removed from all `date_histogram` aggregations. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - ~[ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility)~ - ~[ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~ - ~[ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials~ - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - ~[ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~ ### For maintainers - ~[ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~ - [x] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::@tylersmalley I already talked to Chris, but we wanted to clarify with you that our thoughts were correct: In the backport to 6.7, I'll remove this 7.0.1 migration and just leave the `6.7` migration in. But since we already released 7.0, and potentially have now people on that version that should get the same fix, we need both `6.7.2` and `7.0.1` to do the migrations. Also just adding a `7.0.1` wouldn't be good, since if we backport this to 6.7 a user who runs the `7.0.1` migration on `6.7` would then, after upgrading to `7.0.1`+, not get all the `7.0.0` migrations.::nit: Not a huge thing, but you don't necessarily need to clone every doc that comes in since you are only going to be updating `attributes.visState` on date histograms. You could return early if the doc is not identified as needing to be changed, and only clone / reassign the `visState` on docs that you know you need to touch.::nit: lodash `omit` could save you from some conditionals here, e.g. ```javascript if (agg.type === 'date_histogram' || get(agg, 'params.customBucket.type') === 'date_histogram') { agg.params = omit(agg.params, ['time_zone', 'customBucket.params.time_zone']); } ```::Makes sense, glad you explained this to minimize ""WTF moments"" in the future.::There should only be one - one of these needs to be removed. It doesn't necessarily have to follow the versioning of Kibana. On startup, it will see if there are any newer versions for the visualization type, we will run those migrations to get up to that version. ::Would you prefer that? I find it actually harder to read, then the more explicit version :-)::I think there needs to be 2, because some clients will have run the 7.0.0 migrations already, but some will not have (those running 6.x). And we want to fix both people without forcing the 6.x people to upgrade to 7.x. Does that make sense, @tylersmalley ::I think either is fine. Go with what you think is most obvious.::We talked about that offline and it makes sense now to everyone. I updated the code to have a better explanation why we need it twice.::I marked it as a nit for a reason 😉  Totally up to your preference here, I only suggested it because `omit` will automatically skip things that are undefined.::(And FWIW I had no issues groking the code as it is currently written)::```suggestion * We need to have this migration twice, once with a version prior to 7.0.0 once with a version ```::",816d44298f453927b1a73057e0b369310968b6e3::0ae6ed019cef8ce5a5fdf6262c5ae525070d9cd2::8c91d8ee7fbe13fde6dc3c74f3d2faf9bdb245cc::217a9ad7eb0977d01938e5db74c54f05fe069851::53cda841b54443265c17ceef806d35495448eb41::91beb2f1f9a5287ffb6ce5288dde4715ef618aa0::6a2dcd2f4c1aa2c189c467a5aa1ddcd530d21c1e::
https://api.github.com/repos/elastic/kibana,34785,fix-7.0-infra-links::7.0,0,merged,,"## Summary Fixes issue with APM links to Infra where the time range parameters are incorrectly specified. Fixed in master in #34310, backported to 7.x in #34738. Can't backport to 7.0 at this point so this patch just brings the small bugfix from that changeset. <img width=""1202"" alt=""Screen Shot 2019-04-09 at 8 13 55 AM"" src=""https://user-images.githubusercontent.com/159370/55799468-7aea8300-5a9f-11e9-8f5e-09f9e729ed92.png""> <img width=""1188"" alt=""Screen Shot 2019-04-09 at 8 14 03 AM"" src=""https://user-images.githubusercontent.com/159370/55799475-7faf3700-5a9f-11e9-9f2b-fb1974e933ff.png""> ::How hard would it be to add a test for `getInfraActions`?::Probably not too hard and a good idea, but maybe better for the master/7.x branches. Will make a note to add this.::👍 ::lol looks like we already have exactly this type of integration test for the link generation, and it just failed because I fixed it ... yay? https://kibana-ci.elastic.co/job/elastic+kibana+pull-request/8824/JOB=x-pack-intake,node=immutable/console::",1f941e64016c9c342b21de9c0257e87a0da9ebb3::c9536dc12276340f56a22abd179713cec4d4aac2::
https://api.github.com/repos/elastic/kibana,34609,monitoring-telemetry-collection-interval::master,0,merged,Feature:Telemetry::Team:Core::Team:Monitoring::blocker::release_note:fix::v6.7.2::v7.0.1::v7.2.0::v8.0.0::,"Work on @chrisronline draft PR https://github.com/elastic/kibana/pull/33705 --- Relates to #32519 This is a straight copy and paste from [this comment](https://github.com/elastic/kibana/issues/32519#issuecomment-475262777). This PR implements this idea. In order for this PR to work, you'll need to update the `.monitoring-kibana` index template in ES. ``` PUT _template/.monitoring-kibana ``` Copy and paste the json from here -> https://gist.github.com/chrisronline/fdf4f549d4e96cdda06e7b20cf88ce2a > Okay I think I have a plan for this and want to run it by everyone. This solution will ensure that kibana monitoring collection will only poll for usage collector data at the same interval as the normal telemetry service. > - Add a flag (`isUsageCollector`) to each usage collector, as an actual property similar to `ignoreForInternalUploader` so monitoring can know it's a usage collector (see [why we have to do it this way](https://github.com/elastic/kibana/issues/32519#issuecomment-474914728)) > - Modify the kibana monitoring collection code to _ONLY_ collect from *usage* collectors at the same rate as default telemetry (This will be kept in sync by exposing the interval through the `xpack_main` plugin). However, the monitoring code will pull from *stats* collectors at the current interval (default to `10s`) to ensure the monitoring service and UIs continue to function properly. This will mean that some `.monitoring-kibana-*` documents will contain a `usage` field, and some will not. > - Update the [`.monitoring-kibana` index template](https://github.com/elastic/elasticsearch/blob/master/x-pack/plugin/core/src/main/resources/monitoring-kibana.json#L52) to include mappings for the `usage` field (it currently does not) - Doing this will require a version dance as we want to ensure that folks don't run into a situation where Kibana is assuming this mapping exists but it doesn't yet in ES. This shouldn't happen [as we explicitly recommend the monitoring cluster to be at least the same version as all monitored clusters](https://www.elastic.co/guide/en/x-pack/6.2/how-monitoring-works.html) > - Update [the query for collecting usage data from monitoring indices for telemetry](https://github.com/elastic/kibana/blob/master/x-pack/plugins/xpack_main/server/lib/telemetry/monitoring/get_high_level_stats.js#L217) to filter out documents that do not contain the `usage` field to ensure it only fetches documents that actually contain usage data (which will now occur at the same interval as default telemetry)::Because of the template changes,  will this cause problems if we backport? This field won't be in the mapping of existing indices and so the stats query will return nothing - so if we were to backport to 6.7 and 7.0 this would potentially break telemetry on clusters with existing monitoring indices? ::I believe for we'll have to add some sort of check for older versions if we need to backport. if the returned hits are empty then request again without the `existing` filter? The drawback of this is that it is being hit every 10seconds and now it might start hitting twice every 10s for those older versions. i'm not sure if it is a good approach to use the version number inside the condition but it prevents this issue Note that currently if the mapping does not exist we get empty hits `[]` not a failure.::Could we co-opt an existing mapped field on backported versions to indicate that usage data is present?  It's not ideal, but it would address the collection frequency using the same solution remains the same::Then the filter here could just check for either condition, in a single query. ::It won't be pretty but you could use a [`script` query](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-script-query.html) that does a bit of parsing and comparison on the `kibana_stats.kibana.version` field, since that's mapped in older versions as well: https://github.com/elastic/elasticsearch/blob/3e60785faccbcf0ac766ec4f24acb32c260e948a/x-pack/plugin/core/src/main/resources/monitoring-kibana.json#L67-L69::In fact, if we are going down the `script` query route, we could just check the existence of the `kibana_stats.usage` field with a `script` query.::My [previous comment](https://github.com/elastic/kibana/pull/34609#discussion_r278246010) will not work. I chatted with @jdconrad off PR at length and learnt that we can't check the existence of `kibana_stats.usage` even with a `script` query since that field is not indexed. This used to be possible pre-6.1 but hasn't been since. So I think we could consider the approach I mentioned [two comments ago](https://github.com/elastic/kibana/pull/34609#discussion_r278243336), using the `kibana_stats.kibana.version` field.::Can we get away without the version checks? I think there are 3 possible scenarios when fetching stats - Monitoring cluster is new, was created with the new template.  We're good here - Monitoring cluster is running 6.7 or 7.0 patch with the fix.  We're good here too with backwards compatibility changes - Monitoring cluster and kibana are running old versions without any of these changes.  The old kibanas will still be updating those at a rate of every 10 seconds, and we don't need any filters on our query when fetching the data.  All the records will have usage data.  So I think we're good here to. So I'm not sure I see the need for checking legacy versions? If we can avoid this we really should, it will make it very  hard to test and maintain. ::Rather than a separate query,  I think this just be part of the filter when we call `fetchHigherLevelStats`?  If the filter is OR clause it can match ""new"" or ""legacy"".  And then as a fallback if it matches none we can query with no filters at all, and assume it is a cluster that is still being updated with usage every 10s. ::This should really only be needed in the backported version. I'm fine leaving it here for now, but we should have a followup commit in master that removes this since we don't need it going forward. ::Maybe I'm not thinking through this right, but what about the scenario where we're running the new Kibana code (code in this PR with the `exists` query) but against monitoring indices with old mappings? So, for instance, imagine a user is running Monitoring cluster 6.7.2 today, which has monitoring indices with the old mappings. Then they upgrade the Monitoring cluster and Kibana to 6.7.3 with this PR's code in it. The _template_ will get upgraded, affecting _new_ monitoring indices that get created going forward. However _existing_ monitoring indices' mappings won't be affected so the exists query would evaluate to `false`?::Filters are inherently `must` groups without the scoring and this is being embedded in a `bool / filter`, so we've already done away with the scoring bit. Logically, this query is becoming: ``` WHERE cluster_uuid IN clusterUuids AND ( kibana_stats.kibana.statuses.name = 'includes-usage-data' AND kibana_stats.kibana.statuses.state = 'includes-usage-data' ) ``` We should just drop the `bool / must` here and add the two `match` queries, which likely should be `term` queries (assuming both fields are `keyword`s, which they are), directly to the filters array. Thus making it the same logical query: ``` WHERE cluster_uuid IN clusterUuids AND kibana_stats.kibana.statuses.name = 'includes-usage-data' AND kibana_stats.kibana.statuses.state = 'includes-usage-data' ``` Separately, this query seems to be treating `kibana_stats.kibana.statuses` as an associative array, which is not true at query time in ES unless you use a `nested` object and a `nested` query context (only possible with a `nested` object, which we didn't use). Ignoring that, we don't need the name -- only the value -- unless we suspect that other statuses' `state` is that same value. Finally, these values are only going to be added to the newer documents by this PR and thus future versions where the fix exists, so this won't help with legacy documents anyway and will actually cause this query to ignore them too because they'll never have this field in them. Presumably then this was supposed to be a `must_not` rather than a `must` and my first point here should be ignored. (This is all probably moot based on my other comment about the `range` qury`, but I wanted to make it clear)::`keyword` fields support `range` queries, which we can use here to avoid a script and avoid checking for legacy versions, then re-submitting. We could change this code around to optionally add a more complex query that imitates the legacy code above in one pass: ``` { bool: { should: [ { exists: { field: 'kibana_stats.usage.index' } }, { bool: { should: [ { range: { kibana_stats.kibana.version: { lt: '6.7.3' } } }, { term: { kibana_stats.kibana.version: '7.0.0' } } ] } } ] } } ``` Logically, this is then: ``` WHERE cluster_uuid IN clusterUuids AND ( kibana_stats.usage.index IS NOT NULL OR ( kibana_stats.kibana.version < 6.7.3 OR kibana_stats.kibana.version = 7.0.0 ) ) ``` This would allow us to avoid the entire `someResultsAreLegacy` check because everything would be correct, for Kibana, with just this query, as well as avoid the `isLegacyVersion` check code altogether. If `kibana_stats.usage.index` is enough to identify the with-usage documents, then I would avoid adding the `includes-usage-data` code also (https://github.com/elastic/kibana/pull/34609/files#diff-2a18558cd89400e7ad8801be1cb48e5cR60).::@pickypg good point, I think this works provided we merge the updated template back to 6.7 or 7.0.  How often do we roll over the monitoring indices?  Since existing ones won't have `kibana_stats.usage.index` mapped, and so the query will return no usage stats.  If their daily indices that's probably OK, but if they're longer lived we might lose some usage telemetry. ::The monitoring index gets rolled daily. So we're in good shape either way, ironically, but with outdated info. Imagine the user is running 6.7.0 - 6.7.2 without the fix, ingesting usage data with every payload. Then they upgrade to 6.7.3 midday, so the template doesn't have any impact until midnight UTC. With the above query, we'd just grab the older version of its usage payload, which definitely falls in the ""close enough"" pile. Then, after tomorrow rolls around, the next time we'd get the new version. > I think this works provided we merge the updated template back to 6.7 or 7.0. Coincidentally I'm in the process of backporting the template to 6.7, so this should work out.::BTW, a lot of the kudos go to @ycombinator for calling out the version script, which got me thinking about the `range` query with the version.::OK looks like the default is to use daily indices, so I think we're good. ::@ycombinator yes I think we're thinking the same - new telemetry code + old indices without the mappings, in that case the query comes back empty so we end up with no usage telemetry data.  It sounds like you and @pickypg sorted that out with back-porting the mappings change - in that case the problem last 24 hours worst case, I was making it was a bigger problem than it really is. ::I assume this comment is meant to say something like ```suggestion // we should supply this from a parameter in the future so that this remains generic ```::",461ba88a428e893a45c03cf7e5d7dfd4b68021f1::6068833ad0dde7548de2beaab7b8d5ff69a4b849::06a85227aee0cd29cb88f9e3b81451d20cc7e5a0::ecf86d2b4f04fe3cbf47ff666c121a7a7eb8e1d0::bcac3dc7c93935671139fed02e6ea30199ae6c23::21f4cebe8cc7f73e393f047e9127d1e5697de0d5::16e11066be2d63f84ea2ded4662194f79c5b3bd8::cf96b03b53f945a575ffac210845dc9936643f4e::ea2897d21b8444b751b96a1a6d3329d45400facf::263fe37c9fa89ac6340faecf9a625fa9297f04b9::c6e1598a7bfc34518263db30e5a5b90743138de2::0ef00b5425d0e52ab50e8099bfbcc162c7a49181::e8fceaaf80dfe3fd383c04ed45c27a0aa5d0ee72::63b643f06f126547ce3703710aa0aea67496105e::661f3ce98337a3dba88b69ad24684b09812fb744::4f452f64c7314d28fcb50b59faa32f58a8b6663b::303e4f30172bcdaada97847e30de630cfc86a0f4::d29b37addb89669ec9befb4d42ef9d43d564431a::24bbdd3f85637e39082717d19ae057118ae61cc7::550e437643604556ed901db7f8a7dc4e1e85ee0f::32bb24c4edd7f132cfc82a0a4a8d46f4e4c1cf3d::
https://api.github.com/repos/elastic/kibana,34570,docs/port-i18n-docs::master,0,merged,Team:Docs::v7.0.0::,"## Summary This PR is a 'forward-port' of #32547 to add the i18n docs to master. Once merged, this will be backported to 7.0 and 7.x. [skip ci]::",c9229f16722f7c8596e851a89600e71bcd806da8::
https://api.github.com/repos/elastic/kibana,34503,maps/add_cors_ems::master,0,merged,Team:Geo::release_note:breaking::release_note:fix::v7.2.0::v8.0.0::,"Closes https://github.com/elastic/kibana/issues/34017 - allow maps app to request content from EMS either through CORS or proxied through Kibana. This is configured in the `kibana.yml`. - the new default is to use CORS, similar to the region-maps. This is a change in the default behavior of the maps app. - the actual tile-requests are proxied as well. Before, only requests for vector-files were proxied. Closes https://github.com/elastic/kibana/issues/36524 - align the behavior of the region-maps with the maps app and do a simple CORS-call, without injecting the additional kbn-version header. This also introduces an internal refactor. - layers and tms-services configured in the kibana.yml are no longer proxied through the meta-call. This also fixes the bug that the initial-layer selection now correctly uses the tilemap.* config from kibana.yml when it is present ----------- Discuss ~~This changes the default to use CORS (so the flag-config does not conflict with the default (and only behavior) in the region and coordinate map visualizations.~~ ~~We might want to backport this all the way to 6.7/7.0. For the backports, we would actually want to preserve the default of proxying EMS.~~ ~~It'd be something like:~~ ~~- 6.7.x: proxy EMS (as it is now)~~ ~~- 7.0.x: proxy EMS (as it is now)~~ ~~- 7.x: use CORS (breaking)~~ ~~- 8.0: use CORS (breaking)~~ cc @alexfrancoeur ::this flag only applies to the Maps-app and will not affect the visualizations. should we create a new nesting? e.g. `map.maps_app.useCORSForElasticMapsService` This might start to get complicated. All other configuration under `map.*` applies globally to the visualizations as well as the maps app ::Why is `_xpackInfo ` getting added to window? I don't see it getting read any where.:: `getEMSResources` signature lists last parameter as `useAbsoluteEMSPath` but you are calling it `useProxy` in the tests and `proxyElasticMapsServiceInMaps` in the wild. Maybe  `getEMSResources` should rename last parameter to `useProxy` to be consistent with the common usage pattern::Could you add a test case for `isEmsEnabled ` is false::that is great that by making `getKibanaTileMap` sync we can move the check above `isMetaDataLoaded `. This makes more logical sense::I don't think you need any logic for checking `proxyElasticMapsServiceInMaps`. The client will only call the `meta` endpoint if proxyElasticMapsServiceInMaps is true and the server should fetch EMS meta data::Need to add try/catch here. If the kibana server can not access EMS then the kibana logs are flooded with <img width=""1371"" alt=""Screen Shot 2019-05-20 at 3 18 53 PM"" src=""https://user-images.githubusercontent.com/373691/58052676-b783b280-7b12-11e9-850b-7dc1532cc639.png""> And the client gets 500 <img width=""792"" alt=""Screen Shot 2019-05-20 at 3 20 11 PM"" src=""https://user-images.githubusercontent.com/373691/58052718-cf5b3680-7b12-11e9-8fcb-44792a78d728.png""> ::right, this call was removed from the client.::`const emsResponse = await getEMSResources(emsClient, isEmsEnabled, licenseId, proxyElasticMapsServiceInMaps);` is setting `useProxy` with wrong value. Instead of `proxyElasticMapsServiceInMaps`, should be `!proxyElasticMapsServiceInMaps` or better yet, just `false` since the else statement is only when proxy is not enabled::`!mapConfig.proxyElasticMapsServiceInMaps` is not right and should be `mapConfig.proxyElasticMapsServiceInMaps` or just `true`::i knew I was going to forget flipping a boolean::hmmm...  maybe throw if `proxyElasticMapsServiceInMaps` is false? not sure if this meta call should be functional at all if the proxy-ing is turned off.::returning 404 now::called it `map.proxyElasticMapsServiceInMaps`::",d1205fbe57f330085e2a28d41a959e1ae7278ad8::fa33a0e29cf51f68570742263e8c6e42734d7470::9002a4fd9d62a3fcaa9a62f98eee3573c2f72c33::7cb7c6f06c1bc57ac86a9a5e1032525631df2188::7f4acbd75deae7c3ebaaf324caf25beecefd3d26::32cd4630b98586bc86277b71f87cf3eeae0350b4::1c76b76b83b7d3cd1e0ba8d117912ba9a3a85846::7acb74fedc384b6ab0ce26a30cbf2876fd2201a1::f3830b7a177b5006cdee298c54ccc77b103b456d::be03108a02499d6ad0ef0c88eb710d7c13918ddf::d7d51c751f5d8292695c9b8880cb1c05728b30a5::8c5acdfbe17dd2efcf9a80a991914638d5b548fc::2e4c27b5b7ce624edbc60a8c499f4cf17ce0813f::919b106b8eda4e34220a100ba1c5bc319324ab26::6b997483e38d866f1b8fb1299266aa42d8c87dbb::d4f840987397842476d83015966fc42fb1508b5b::96d204bd261bba065a73c6574fed1d6130c075d4::e9d5b03c4df312e9f86e881de6564cba203bddb1::23e4a7dfbb0f36a210124e74249ba6bda71342b6::867348fdb0ca4b868b365df26b70dca888437f8d::ebfffbf4252ebfc2198cdf8e217570125ac3492f::96324fae11a7fe8490507fce6bdf8a90d715e4f6::253d34eac7ed5371a8d830a2dd3b4aed950bc288::76c03314cf468c2a7899c20f70545ec669f8fbc4::3b68af94072d72d0ef7eb48bdc4ccbaf8836d021::0a096f98c7cfbe658b83eb199a623430ddadaddb::6bfadb3f84423a8b4922e7e38f36a588614d1604::344d8e03135f042bdd4a405cea9df9c440f7d840::
https://api.github.com/repos/elastic/kibana,34426,minor-improvements-es-client::master,0,merged,Team:apm::[zube]: Done::,"When backporting https://github.com/elastic/kibana/pull/34356 I noticed some inconsistencies in the unit test for setup_request, that I fixed while backporting. To keep master consistent I also chose to make there changes here. On top of that I also flipped `omitLegacyData` to `includeLegacyData` - the double negation felt awkward.::",59fbfb52e432abbc1a97388487c373de1d7d97a5::
https://api.github.com/repos/elastic/kibana,33863,ml-modules-created-by::master,0,merged,:ml::Feature:Anomaly Detection::release_note:enhancement::review::v7.2.0::v8.0.0::,"## Summary Adds a `created_by` property to the `custom_settings` field for the job configurations in the APM Transaction and Auditbeat Docker Processes data recognizer modules, which had been left off in the original configurations. This setting is used to identify the job wizard that was used to create the job. Also edited the value of the `created_by` field for the Auditbeat Host Processes to make it consistent with the value of the module ID. ### Checklist ### For maintainers - [x] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::Changing this makes life hard for the telemetry repo because jobs will exist in the wild that have a value of `ml-module-auditd-hosts`, so then the telemetry repo will have to cope with both.::Actually, it looks like `ml-module-auditd-hosts` wasn't in 6.7 - is that correct?  If so, I'd be happy to change this provided this PR gets backported to 7.0 in time for 7.0.0-rc2.  The problem only arises if people will have jobs existing in clusters that get upgraded to 7.1 containing `ml-module-auditd-hosts`.::I will go with `ml-module-auditbeat-process-hosts` and `ml-module-auditbeat-process-docker` and backport to 7.0. ::",4552db559c279f45a9c141c202818ecfc11cbd1c::
https://api.github.com/repos/elastic/kibana,33798,monitoring/logstash_pipelines_reactnodeid::master,0,merged,Team:Monitoring::review::v6.7.1::v7.0.1::v7.2.0::v8.0.0::,Resolves #33707 Relates to #33797 We need to provide this to ensure proper teardown. This bug goes back to 6.6 and we'll backport as far back into 6 as we can (which I think is 6.7.1)::,d4010683c4561448889ad2f96e606aa3a939a800::
https://api.github.com/repos/elastic/kibana,33792,add-default-field-docs::7.x,0,merged,Feature:Upgrade Assistant::Team:Docs::Team:Operations::v6.7.0::v7.0.0::v7.2.0::,"## Summary Adds documentation for the API created in #32829 in case cluster admins want to use this functionality for indices other than Filebeat and Metricbeat. ::I'll add the `_doc` mapping type here when backporting to 6.7.::```suggestion <1> An array of Elasticsearch field types to use to generate the list of fields. Required. ```::```suggestion In Elasticsearch 7.0, some query types such as Simple Query String, have a limit to the number of fields they will query against. You can configure this cap in Elasticsearch by setting the `indices.query.bool.max_clause_count` cluster setting, which is 1024 by default. ```::Maybe either `starting in Elasticsearch 7.0` or `In Elasticsearch 7.x`::",a6286dd3b93666ce640df859f01b788827704a49::5cdd1dea7d2f1446c56a4f70e72237536383481d::2ecbade369d8e735830116ca59a9066d5cd1e7f4::
https://api.github.com/repos/elastic/kibana,33273,eui/6.10.5_k7::7.0,0,merged,v7.0.0::,"## Summary Adds EUI bigfixes and backports the nav changes and dark mode changes. And includes backports for #32864 and #32728. ## [`6.10.5`](https://github.com/elastic/eui/tree/v6.10.5) **Note: this release is a backport containing changes originally made in `9.0.0`, `9.1.0`, `9.3.0`, and `9.4.0`** - Adjusted the dark theme palette to have a slight blue tint ([#1691](https://github.com/elastic/eui/pull/1691)) - Added button to `EuiSuperDatePicker`'s “Now” tab to trigger the ""now"" time selection ([#1620](https://github.com/elastic/eui/pull/1620)) - Added `footerLink` and `showToolTips` to `EuiNavDrawer` and added `EuiNavDrawerGroup` ([#1701](https://github.com/elastic/eui/pull/1701)) - Allow `EuiListGroupItem` to pass a custom element as the `icon` ([#1726](https://github.com/elastic/eui/pull/1726)) - Added `toInitials` string service ([#1729](https://github.com/elastic/eui/pull/1729)) - Added `fullWidth` prop to `EuiButton` ([#1665](https://github.com/elastic/eui/pull/1665)) - Added `.eui-fullWidth` utility class ([#1665](https://github.com/elastic/eui/pull/1665)) **Bug fixes** - Fixed keyboard navigation and UI of `EuiComboBox` items in single selection mode ([#1619](https://github.com/elastic/eui/pull/1619)) - Fixed `EuiComboBox` `activeOptonIndex` error with empty search results ([#1695](https://github.com/elastic/eui/pull/1695)) - Prevent `EuiComboBox` from creating a custom option value when user clicks on a value in the dropdown ([#1728](https://github.com/elastic/eui/pull/1728)) - Fixed `EuiSuperDatePicker` time selection jumping on focus ([#1704](https://github.com/elastic/eui/pull/1704)) ![image](http://snid.es/9a4992852d63/Image%2525202019-03-14%252520at%2525204.03.56%252520PM.png) ![image](https://user-images.githubusercontent.com/324519/54397657-72578600-4674-11e9-95ea-882fceda434a.png) ![image](https://user-images.githubusercontent.com/324519/54397666-7a172a80-4674-11e9-9caa-e9c848d073fe.png) ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",8202893f40b3bcf58f688de811e53e4858a46088::df372227781910be7de3ea075519e09216f9a8d0::7a8a5901a9da1f072358f39a76728e62d6aab6d6::a186843cd02675064b723344c0cf835b1c7919c4::3caa02aa4b81b9c0719078df72dc9dfb26e19575::ee3921ba98671363e316db579cd09f8eca342005::6fe57f4047dd53a039d5cbbb396460050afcf969::
https://api.github.com/repos/elastic/kibana,33267,upgrade-eui-to-6.10.5::6.7,0,merged,chore::v6.7.0::,"## Summary ## [`6.10.5`](https://github.com/elastic/eui/tree/v6.10.5) **Note: this release is a backport containing changes originally made in `9.0.0`, `9.1.0`, `9.3.0`, and `9.4.0`** - Adjusted the dark theme palette to have a slight blue tint ([#1691](https://github.com/elastic/eui/pull/1691)) - Added button to `EuiSuperDatePicker`'s “Now” tab to trigger the ""now"" time selection ([#1620](https://github.com/elastic/eui/pull/1620)) - Added `footerLink` and `showToolTips` to `EuiNavDrawer` and added `EuiNavDrawerGroup` ([#1701](https://github.com/elastic/eui/pull/1701)) - Allow `EuiListGroupItem` to pass a custom element as the `icon` ([#1726](https://github.com/elastic/eui/pull/1726)) - Added `toInitials` string service ([#1729](https://github.com/elastic/eui/pull/1729)) - Added `fullWidth` prop to `EuiButton` ([#1665](https://github.com/elastic/eui/pull/1665)) - Added `.eui-fullWidth` utility class ([#1665](https://github.com/elastic/eui/pull/1665)) **Bug fixes** - Fixed keyboard navigation and UI of `EuiComboBox` items in single selection mode ([#1619](https://github.com/elastic/eui/pull/1619)) - Fixed `EuiComboBox` `activeOptonIndex` error with empty search results ([#1695](https://github.com/elastic/eui/pull/1695)) - Prevent `EuiComboBox` from creating a custom option value when user clicks on a value in the dropdown ([#1728](https://github.com/elastic/eui/pull/1728)) - Fixed `EuiSuperDatePicker` time selection jumping on focus ([#1704](https://github.com/elastic/eui/pull/1704)) ::",0bbc880f3bf25f92d14af5b2d84df8c785070758::
https://api.github.com/repos/elastic/kibana,33246,docs/replace-attributes::6.6,0,merged,Team:Docs::,## Summary This PR backports changes from #33195 and #33143 but removes docs for Follower indices UI (not available pre-6.7). [skip ci] ### Checklist - [x ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials ::,18bdba0b0a31e0deff19e5ff2466dd86895e1896::
https://api.github.com/repos/elastic/kibana,33197,ua-fix-apm-dupes::7.x,0,merged,Feature:Upgrade Assistant::Team:Operations::non-issue::v7.0.0::v7.2.0::,"## Summary A backport (#33048) inadvertently made APM indices show up twice in the deprecation list if they needed reindex AND needed to be migrated to ECS. This didn't technically break anything but it does make the index appear twice, though the reindexing logic is smart enough to do the right changes regardless of which Reindex button you click.::",552f42901f3e4eb2162310ece25d6f6de32cd71d::
https://api.github.com/repos/elastic/kibana,33162,master::master,0,merged,,"To explain which labels will exclude PRs from the Release Notes::```suggestion To NOT include your changes in the Release Notes, please use label`non-issue`. PRs with the following labels also won't be included in the Release Notes: ```::```suggestion `build`, `docs`, `test`, `non-issue`, `jenkins`, `backport`,  and `chore`. ```::",d789f02b84f2b0aa93bbadbb8861ef5774fb3ae0::af701c138afb8c24267d4d0437ded4568bf4dff4::78900e112f7484074e21be35f877d015fc71661b::410cae4605cadd055e1e4613986c4abb2602d487::ce8dbd15040ee45e23f5256491767049d315ffa7::
https://api.github.com/repos/elastic/kibana,33072,maps/fix_linestyle::master,0,merged,Team:Geo::v6.7.1::v7.0.1::v7.2.0::v8.0.0::,"Closes https://github.com/elastic/kibana/issues/32530 ~~This probably won't backport cleanly, but the basics of the fix is that fills are no longer applied to linestring and multilinestring geometries. Can be fixed on 6.7 and 7.0 similarly.~~ (it actually might ...) This does not address separating the vector-style editor into a more fine-grained UX.  (e.g. extracting points, lines, and polygons -styling in its separate tabs/sections/....) todo: [x] add functional test ::remove extra lines::remove unneeded logging of layers::need space between `}else {`::",f7d7a7fe0d21a0dc5aeeddddc06b0871c3b400ee::333ed26f63faf36e1d033b8729b13f7a5d4b9c64::f0e5d956bb801fdd900f70d0fea86b4283099e71::54e023747e02f97e3ed5042e82f6968f34bd66db::b4406612cf720497333bad94252f9b7efd808e25::d8319ca7c19d66efe54cef64d1b5c94d37339af3::48920c1086477adbe2a9c793d720a490066ba018::7905e25412af0e7d9a81b90491fc7aed726224e6::
https://api.github.com/repos/elastic/kibana,32803,fix/7.0/reporting/auto-download-ci::7.0,0,merged,Feature:Reporting::review::v6.7.0::v7.0.0::v7.2.0::v8.0.0::,"We removed the bootstrap cache from 7.0 in #32782, which the tests were relying on to provide the chromium artifacts. Reporting wasn't automatically downloading them as we expected because the tests are running the Kibana server in production mode, and that config was off by default in production mode, so instead we've based the auto-download behavior on whether or not we are running the distributable, which should always have the browsers available anyway. This PR targets 7.0, because that's where CI is failing right now, but I'll forward/backport this to the necessary branches once it is in.::",e9a9b88ba4a241417faff16c8c16a8ee48626730::
https://api.github.com/repos/elastic/kibana,32727,implement/check-ts-projects::master,0,merged,Team:Operations::review::v6.7.0::v7.0.0::v7.2.0::v8.0.0::,"Based on #32705 We currently have TypeScript code that was backported to 7.0, which was backported without issue because it falls outside of any TypeScript projects in 7.0. This means that the pre-commit hooks break on changes to these files, and that they are not getting type checked by the type_check script. To fix this we need to verify that every typescript file in the repository is covered by a tsconfig.json file as part of CI.::a possible conflict with https://github.com/elastic/kibana/pull/32148/files#diff-6e3fffc3af7f0f6bec3018ea1c6d42aeR32 depending on merge order we need to update checks or find a common solution::shouldn't we exit with error? otherwise it's easy to miss logged error::I think it's fine to categorize that file as a fixture in https://github.com/elastic/kibana/blob/master/src/dev/file.ts#L55-L57, which could be done in #32148 so the merge order doesn't matter::Oops!::",dfc4a743480865966959131a9198ec3fa29947e0::91df7886450b232feb75bc31e437e877c8aef80c::86b7786d0d74c0facb472f83e2a99f00f780a33b::
https://api.github.com/repos/elastic/kibana,32628,32059/fix-missing-axis-labels::master,0,merged,Feature:Vislib::Team:KibanaApp::release_note:fix::v6.7.1::v7.0.0::v7.2.0::,Fixes https://github.com/elastic/kibana/issues/32059 The counter for the current position of the axis label during filtering didn't work correctly for vertical axes. I couldn't find another place which triggered this branch but the one outlined in the issue. @lukeelmers Do you know how far we should backport this by any chance?::,c8c79c259a1f4bfb479def695451675c96d9555a::
https://api.github.com/repos/elastic/kibana,32223,test/rollup_job_create_integration::master,0,merged,Feature:Rollups::Team:Elasticsearch UI::non-issue::v7.2.0::v8.0.0::,"This PR adds a ""redux"" integration test for the creation of a rollup job. I was in doubt if creating multiple files for each step or one big test file. I finally sticked with the later to avoid duplication of testbed setup. I also realize it was easy to navigate the test file by folding the blocks thanks to well organized `described` sections. <img width=""487"" alt=""screen shot 2019-02-28 at 17 55 07"" src=""https://user-images.githubusercontent.com/2854616/53587388-20960280-3b82-11e9-9308-989c799e73f9.png""> ::This seems like a bug fix we should extract into a separate PR, and backport to 6.7.::For large test files like this, it might make sense to try extracting all of the helper logic into a sibling helper file, e.g. `job_create.test_helpers.js`. If this is possible then it might also enable splitting this file up into multiple files.::I haven't been able to test this, but perhaps this could be made terser with a loop? ```js const initGoToStep = (fillFormFields, clickNextStep) => async (step) => { const completeStep = [ async () => await fillFormFields('logistics'), async () => await fillFormFields('date-histogram'), ]; let currentStep; while (currentStep < targetStep) { if (completeStep[currentStep]) { completeStep[currentStep](); } clickNextStep(); currentStep++; } }; ```::Many of these tests seem more appropriate as unit tests specific to the validation functions in `steps_config`, though maybe I'm just not understanding the testing paradigm we're using here. Can you help me understand why they should be here instead?::Similarly, my instinct would be to move these tests into test file that's specific to the cron editor component, i.e. `steps/components/cron_editor/cron_editor.test.js`. Could you help me understand the rationale for putting them here?::I've found that a neat way to shorten descriptions and make them less repetitive is to omit the word ""should"". For example, this could be ""has 1 additional condition"". When it passes, you know that it does, and when it fails you know that it doesn't -- you get the same information, but without seeing ""should X, should Y"" repeated dozens of times. 🙂 ::I've seen Jest tests tend to use `test` over `it`. It might help people differentiate between a Mocha and Jest test at a glance if we use `test` in our Jest tests.::Typo: available::Similar to my other comments, I wonder if we could move this into tests for the specific component, i.e. `components/field_list/field_list.test.js`?::Could we add a more verbose description? I _think_ we're testing all of the different ways the interval input can enter into an invalid state?::Seeing this, I feel like it really begs to be refactored into the [page object model](https://medium.com/tech-tajawal/page-object-model-pom-design-pattern-f9588630800b). Then instead of having `findTestSubject` calls everywhere, like this: ```js expect(findTestSubject('rollupJobNextButton').props().disabled).toBe(true); ``` The page object could expose individual parts of the UI, so the code reads a bit more like a story: ```js expect(rollupJobWizard.nextButton.props().disabled).toBe(true); ``` This would also mean `testSubjectExists` is no longer necessary, since we could do this instead: ```js expect(rollupJobWizard.nextButton.exists()).toBe(true); ``` ::I prefer to stick to the [RSpec](https://en.wikipedia.org/wiki/RSpec) and use `describe` and `it`. (see comment here https://stackoverflow.com/a/54907283/5642633). Aside, if I'm not wrong, files ended in `.test.js` are all Jest, no?::Good point, I will create a separate PR for it::Will try that 👍 ::So the idea is to be as close as possible to how our app (or app _section_ in this case) will be used by a user. If we test in isolation all the files in `step_configs`: - We'll create a lot of files 😊 - We don't have any guarantee that our component uses them. So we might have a green CI but a broken app. Here we have the best of both world (functional and unit testing) without the complexity of a full browser + API integration testing. It also allows us to refactor without worying about the implementation details. And... if a product/QA person reads the spec files, he understands a first sight and in 1 place the validation of our form, withouth the need to go throught dozens of files and hoping things are wired correctly.::As I commented above, this would bring less ""confidence"" to the test.::I will have to give it some thought as it will complicate things and I'm not sure it brings _that_ much value. For a few objects always present on the screen, it might be nice. But for elements that only appear in the DOM on a specific step (or when the detail panel opens) then it either does not work, or we have to add special methods to dynamically update the objects (the complication I'm talking about). And then we'd have 2 lines (1 to update the objects and 1 to test) instead of one. We can talk about it over zoom if u want. ::If we were to create the cron editor as a reusable component, it might make sense. But we don't so I prefer to test it in integration. This article helps in understanding the reasoning: https://kentcdodds.com/blog/write-tests > Integration tests strike a great balance on the trade-offs between confidence and speed/expense. This is why it's advisable to spend most (not all, mind you) of your effort there.::I'll take it into account for future tests. Although to me it's only a `tit + TAB` shortcut command for the block prepopulated with `'should '`.::Yeah, Jest test files end in `.test.js`. But in terms of optimizing for readability, it reduces a bit of friction when it's easier to identify code by just looking at it than by looking at the file name. And if you look at any of the [Jest docs](https://jestjs.io/docs/en/getting-started), they all use `test`. Not a blocker though, just pointing it out. 😄 ::Cool, I'm also willing to take a stab at it myself in a separate PR.::> in terms of optimizing for readability Funny, when I _read_ a test (`to.equal` vs `toEqual`) I don't wonder what is the testing framework underneath. I do when I _write_ it obviously.  😄 ::Did the loop idea not work out?::Forgot to update that part. Just did it 😊 ::@cjcenizal @njd5475 For info: this relative import from `.test.js` works 😊 ::",1b58dbc487269f9aa4be577040dfb6a7fe545201::6790f776b61d2feb934ff3f035b7d7f4d45fcc39::8cdd23cd36912595c6d49b252fe2dcec23e09f1a::9f292dac9a173c4abeca9ef482b62e2fa36fe10b::aaadeb260143f9cdf8cdd1ed032fe3dc5f95281c::e26f23b79389cb7d81cdd49363d1b2b0105756e7::f170bcd681bf0e01cc61c19a7f71cd3bd248a2fe::f7c4522a5559c711507b95e9e5f3c6d1ae95daea::eee97d713ff65485ed45d6ddcb08a892b705c777::1d3f79bd90175fabe78d80bdee988bd5143e5516::cf253598cf8073868cdd81283e853eb664207c01::3d807f472430437e1c0ebb4064d54e5e9a0dda88::64ef85d0480cf1d2f9ebd8ee6b7c117efa046ff3::2a6eb2ead62794f89fb442e9513c46f0a7aac603::8147bcf0ec0c0eea66f16fcd511b1d1a5b1cc7d3::33d5a3816516e57e67dcac898a6b01ac597996f3::80562b9dfc1fa5cb8d799611503d7c4ecafc0fbc::5acdff5177655d4588717f13209d9344ad813c70::2a5d66b9263e96539a9718d20bf81cb68c1f3ae7::432ce8f9479b38a13b76c64f48047f8359aa7e19::98ae91096679e31b186d3215c22ede010d007ff3::bdbbe91a1e2b076173725c474e98f4432c5c37dc::9a409a2097b1beb101f09296288044c9260d0871::0193443415d65488df517fba1e1105923d6d7df4::6a1908d9f42fb9336d7ab784b83662edbfd71e5c::
https://api.github.com/repos/elastic/kibana,31937,eui-datepicker-types-7.0::7.0,0,merged,,"## Summary * Updates EUI to 6.10.4 (with backport of react date picker types) * Adds dev dep for @types/react-datepicker@1.8.0 as required peer dep for EUI types * Removes existing date picker types in Kibana * Fixes a few bugs that adding the types exposed * Fixes moment timezone type bug where, because we have `moment-timezone` as a dep in Kibana, we have to do `import moment from 'moment-timezone'` to avoid type collisions since the moment-timezone package overloads the `Moment` type interface and adds required fields that won't be there unless you import from that package.::",89d9f89b6fcd515f89e606c48e6d7e92aea2348e::99ee789e4deaec637aed39166ff9cc478fe56cfb::5c82ab2e4cc0dc861b37801cc36cd0933996d296::4067c6954abbade974679ab51f8936db24ce7446::3a067f28530ce0c15c4a154c8cbfb68bfaf5742c::
https://api.github.com/repos/elastic/kibana,31631,adjustCaps::master,0,merged,Team:KibanaApp::v7.0.0::v7.2.0::v8.0.0::,## Summary Kibana query language -> Kibana Query Language https://github.com/elastic/kibana/pull/31617 needs merged before this can be backported to 7.0::,e3a97c85baf9c7c374ab4807c3427aacc73501ea::
https://api.github.com/repos/elastic/kibana,31499,chore/dedupe-typings-includes::master,0,merged,Team:Core::Team:Operations::review::v7.0.0::v7.2.0::v8.0.0::,"The `tsconfig` file in X-Pack had a duplicate path in `""include""`. It looks like https://github.com/elastic/kibana/pull/29951 and https://github.com/elastic/kibana/pull/29663 both added `""typings/**/*""`, the first at the top, and the second at the bottom. As a result, the path ended up being included twice once both PR's were merged. This PR keeps the first occurrence and removes the second. Since https://github.com/elastic/kibana/pull/29951 is 7.0+ only, the list in 6.7 is correct, and this only needs backporting to 7.0+. ::",369a2608ebce4f7a910f3b97b9b39a9efd3a0e3c::
https://api.github.com/repos/elastic/kibana,31492,kpi_network::feature-secops,0,merged,Team:SIEM::review::,"## Summary Init a placeholder for KPI network widget. Not ready to merge, just want to make sure that it is on the right track. ![image](https://user-images.githubusercontent.com/6295984/53034334-de2a4280-346a-11e9-9ed1-69da2a0c781a.png) <img width=""1676"" alt=""screenshot 2019-02-25 at 23 58 23"" src=""https://user-images.githubusercontent.com/6295984/53417206-09cf9e80-3a10-11e9-9326-e6be42e9b38a.png""> - [x] Add kpi network data: - Network events - Unique flow Id - Active agents::why 0? why not just returning an empty object or null.::I think that we should try to make a difference between 0 and no data. Maybe null will be more explicit.::I'm thinking ""Unique Flows"" would be more descriptive. I'm open to suggestions.::Should this be `QueryKpiNetworkResolver`?::Nit: I believe GraphQL convention is to capitalize types -- so this would be `KpiNetworkData`. edit: Yeah, looks like the generated type is capitalized automatically.::We have a few bad examples right now in our code base for `i18n` for keys. Sorry about that...I kind of started the bad habits. This great guide was referred to us for making our key names more to up to par: https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/GUIDELINE.md#message-types Guessing here but I think for these keys they should end with `Title` like: ```ts xpack.secops.kpiNetwork.source.networkEventsTitle ``` ::Yeah, you're right. I think empty object will make more sense.::Good point, I'll update the default value of uniqueFlowId, and activeAgents to null then.::Yeah, I should have checked the spec properly. It appears to be `Unique Flow ID` on the UI spec. How does it sound?::👍 ::Great code! Really clean and easy to read through. Since this has only `props` an optional but interesting thing I believe you can do is change this out for a `pure` from `recompose` which will make it easer later when we eventually use `reactmemo`: https://reactjs.org/docs/react-api.html#reactmemo Since we're backporting to `7.1` I don't think we can use `reactmemo` just yet, but using recompose pure is a good step. The code would be even smaller with it. It would something like this with an implicit return: ```ts export const KpiNetworkQuery = pure<{ children }> => ( <Query<GetKpiNetworkQuery.Query, GetKpiNetworkQuery.Variables> query={kpiNetworkQuery} fetchPolicy=""cache-and-network"" notifyOnNetworkStatusChange variables={{ sourceId, timerange: { interval: '12h', from: startDate!, to: endDate!, }, filterQuery: createFilter(filterQuery), }} > {({ data, loading }) => { const kpiNetwork = getOr({}, `source.KpiNetwork`, data); return children({ id, loading, kpiNetwork, }); }} </Query>) ``` That's not exact syntax up there so you have to fiddle a bit, and this isn't required, but overall for the eventual evolution towards hooks and react functions we are trying to keep what we can within `pure` recompose. That and it's less code to write :-) Let me know what you think.::👍 ::Awesome tests! I can give some context around things we've learned along our journey for context. No changes requested since you're following what we're already doing (consistency > correctness in most cases), but context is usually helpful to see where we're heading and better ways to do things and you might have better ways of doing things than what we're doing at the moment so we can sweep through and changes things. The `omit` is still ok to have but we found out it looks like it will eventually be removed from lodash and we will have to remove it from our code base: https://github.com/lodash/lodash/issues/2930 I removed some from my pull requests in favor of `.cloneDeep` and `delete`. It doesn't make me feel good as it feels less functional and react/redux style but there's this git page: https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_omit which shows some destructuring tricks we might be able to seep into our code a touch to reduce usage. I haven't used it yet but maybe that's better? The other context data point is that In some of our tests and areas of our code we are using the `as casting` such as `as GraphQLResolveInfo` but we have to be careful about them as they usually show us that we have a mistake somewhere in our typings. They're not forbidden but we are being cautious about their usage. This outlines the caveats with `as casting` I have read that made me more careful: https://basarat.gitbooks.io/typescript/docs/types/type-assertion.html In a lot of cases we might be able to use a `Partial` or other tricks? https://www.typescriptlang.org/docs/handbook/advanced-types.html Overall in tests we are not going to avoid the `as` casts as we do interesting things with the data. I am just pointing out context for knowledge...::`""The id of the source""` I think this isn't the GraphQL comment you want? It usually applies to ID's. Pointing it out in case it's an oversight. Disregard if this is the comment you want for your GraphQL. ::For context, these `as casts` and methodology is from the Observability (which used to be known as Infra) ... In case you were wondering where we got this pattern. It came from `infra_server.ts` We are code thieves from sister projects when we can be  :-). Which does mix a bit of different styles and idioms and philosophies but it's good to know where some code came from. ::You can keep these ranges to whatever you feel is the most important, but I do want to point out what I found from running the `esArchiver` after Beats updates a few times now is that I prefer to keep my `FROM` and `TO` as wide of a net as possible to try to reduce the amount of times the integration tests break. So, for example, in a lot of the integration tests I prefer to do: ```ts const FROM = new Date('2000-01-01T00:00:00.000Z').valueOf(); const TO = new Date('3000-01-01T00:00:00.000Z').valueOf(); ``` So that the next time I run the EsArchiver I have the best chance of getting all the record sets again. Each time we run them it is usually on a newer data set that won't have the data set of `2019-02-12T01:57:24.870Z` in  it for example. This is fine as is, just pointing out, I try to get all the record sets these days to reduce the maintenance of when I have to re-run esarchiver. Thanks for following the other patterns as this will still be easy to change as we update archives. ::ah, I got it. There is no specific reason that I have to make `KpiNetworkQuery` a class, agree to `pure` from `recompose` here.::@FrankHassanabad will be proud ;), since now we have the value who can be null from the graphql, you should check for the value null `has('networkEvents', data) && data.networkEvents !== null`::Thanks for this @FrankHassanabad! For the first thing with `omit`, I'm thinking of replacing it with something like this: ``` describe('Test Source Resolvers', () => { test('Make sure that getKpiNetwork have been called', async () => { const source = await createSourcesResolvers(mockSrcLibs).Query.source( {}, { id: 'default' }, context, {} as GraphQLResolveInfo ); const { status, ...expectedKpiNetworkData } = mockKpiNetworkData; .... expect(data).toEqual(expectedKpiNetworkData); }); }); ``` However ends up it complains about `status` is not even exists. I'm a bit confused as this case seems to be part of the existing unit tests, but I couldn't find the `status` key from their mock data either. Should I just update the mock data with this key or actually I don't need this case?::It looks like the types are telling the truth. In all of the 5 places we are using it, it's not needed. I think that we might have had status at one point but not anymore. Let's just remove the omit statement altogether and everything should be great. Nice to see that using typings shows more left over code we don't need! :-)::Thanks @XavierM, nice catch! I've updated accordingly 👍 ::Alrighty @FrankHassanabad  , I'll check the mock data from our existing cases and update them as well.::Haha. I think that was a different Frank you pinged up there.::Blimey! Haha sorry about that lol::not just a frank but a franek no less :-) anyway I'll just drive by hi :wave: and leave ya'll to it :bowing_man: ::👋 👋 👋 😄 ::",7d4827d2a6aa516095d952c7f61793de82db78e8::479b3215459d2e4246149854498b298a1ac47e63::05b74dd4af01f93d189e506e2b54d556fb100384::38a96dcad4c402d18989e2be79cc93dbe609f7e0::94d4337644e51448e1b8141c2a7a7defae637f7d::309d12f1a88395ab37630276be5ff60b524cba8e::76c821483b2d446de437358238ac9f041f7a579e::bde1f97510e5ff7cc40f70500834c5a1ed3af1c6::6c052a125437b3ce35140bbdca887214377f9ebf::f4fde5c1bef23bf1e5d29fb8c7a894a263abc4a0::18fbb184d80dc52d527bf3cc6547c4c91e8cead0::
https://api.github.com/repos/elastic/kibana,31408,copy-req-resp::master,0,merged,Feature:Inspector::Team:KibanaApp::release_note:enhancement::v7.2.0::v8.0.0::,"## Summary Fixes #9064 and adds a copy button into the inspectors request and response panel. ![screenshot-20190218-121151](https://user-images.githubusercontent.com/877229/52947233-6844af00-3376-11e9-950a-74006ceef2bf.png) Since that feature has been introduced in EUI 7.1.0, and we only backported the upgrade to EUI 7.1.0 into Kibana 7.1.0 (coincidental same versions), we cannot backport this PR to 7.0.0 to have the copy button available there. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - ~[ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility)~ - ~[ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~ - ~[ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials~ - ~[ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios~ - ~[ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~ ### For maintainers - ~[ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~ - [x] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::",c17de946df9657a74f0056c910171495636fbd45::
https://api.github.com/repos/elastic/kibana,31304,backport/7.x/pr-31282::7.x,0,merged,chore::v7.2.0::,"## Summary Upgrades EUI from 6.10.1 -> 7.1.0 This is a manual backport of changes already in master (the upgrade to 7.0.0 wasn't backported to 7.x) ## [`7.1.0`](https://github.com/elastic/eui/tree/v7.1.0) - Added `append` prop to `EuiFieldText` ([#1567](https://github.com/elastic/eui/pull/1567)) - Adjusted set of Elastic Logos in `EuiIcon` to look better in dark mode. ([#1462](https://github.com/elastic/eui/pull/1562)) - Added `isCopyable` prop to `EuiCodeBlock` ([#1556](https://github.com/elastic/eui/pull/1556)) - Added optional `Snippet` tab to docs and renamed demo tabs ([#1556](https://github.com/elastic/eui/pull/1556)) - Expanded `getSecureRelForTarget` to handle elastic.co domains as a referrer whitelist ([#1565](https://github.com/elastic/eui/pull/1565)) - New `url` utility for verifying if a URL is a referrer whitelist ([#1565](https://github.com/elastic/eui/pull/1565)) - Add iconSize to ButtonIcon type definition ([#1568](https://github.com/elastic/eui/pull/1568)) ## [`7.0.0`](https://github.com/elastic/eui/tree/v7.0.0) - Created `EuiDualRange` using components from modularized, refactored `EuiRange`. New util service `isWithinRange` is the first in the number category. ([#1485](https://github.com/elastic/eui/pull/1485)) - Upgraded `lodash` to v4, taking advantage of modular imports. ([#1534](https://github.com/elastic/eui/pull/1534)) - Added pseudo-localization mode to docs ([#1541](https://github.com/elastic/eui/pull/1541)) - New docs page listing localization tokens ([#1541](https://github.com/elastic/eui/pull/1541)) - Added support for OR group clauses in `EuiQuery` and `EuiSearchBar` ([#1204](https://github.com/elastic/eui/pull/1204)) - Added `customQuickSelectPanels` prop to `EuiSuperDatePicker` ([#1549](https://github.com/elastic/eui/pull/1549)) **Bug fixes** - Fixed `EuiSearchBar.Query` match_all query string must be `*` ([#1521](https://github.com/elastic/eui/pull/1521)) - Fixed `EuiSuperDatePicker` crashing with negative relative value ([#1537](https://github.com/elastic/eui/pull/1537)) - Fixed `EuiSuperDatePicker` crashing with invalid start and end prop values ([#1544](https://github.com/elastic/eui/pull/1544)) - Make TSLint issues be warnings, not errors, when running `src-docs` ([#1537](https://github.com/elastic/eui/pull/1537)) **Breaking changes** - Made `or` a reserved keyword in `EuiQuery`'s syntax ([#1204](https://github.com/elastic/eui/pull/1204)) ::",a885425ff8c8de96a009edff170d60df54ad6de8::
https://api.github.com/repos/elastic/kibana,31216,ie/dp::master,0,merged,v7.0.0::v7.0.0-beta1::,"## Summary Fixes https://github.com/elastic/kibana/issues/31211 Flex issues around the datepicker in ie11. Will require backports to 7. ![image](https://user-images.githubusercontent.com/324519/52824908-73929480-306f-11e9-8ade-0d8c477b3660.png) ### Checklist - [x] This was checked for cross-browser compatibility, [including a check against IE11 ::",f36d3d0d27c9742ec714cdede752f8b9a101d5a6::30adc738f45ab752a8468d8faf57bec205f0fe38::86293fc06327a48e91a9a79f296118bd5f7e8342::
https://api.github.com/repos/elastic/kibana,30435,new-dir::master,0,merged,Feature:Plugins::Team:Core::dev::non-issue::review::v7.0.0::v7.2.0::v8.0.0::,"There are six commits here, and they will be merged as-is rather than squashed first. The first five commits perform the following moves: ``` src/deprecation      -> src/legacy/deprecation src/ui               -> src/legacy/ui src/server           -> src/legacy/server src/plugin_discovery -> src/legacy/plugin_discovery src/utils            -> src/legacy/utils ``` The final commit cleans up path references across the project into and out of those locations. This is to support the new platform migration effort, and the target structure as a whole is described in https://github.com/elastic/kibana/issues/12466. Note, I _might_ backport this to 6.7.0. It depends how seamless that turns out to be.::This is really the change in this PR that isn't strictly just adjusting paths. The existing sass implementation for plugins allowed importing from anywhere inside `src`. I spoke to @tylersmalley about this and we agreed to just let plugin sass import relative to root rather than update this to import from within `src/legacy`. There were a couple reasons for this: 1. We can't statically analyze sass, so any sort of bulk updates to paths will need to be done through find/replace. Something more specific like `src/legacy/ui` is much easier to grep for than just `ui`. 2. If you don't know exactly where to look, finding this path configuration is challenging since it's just string-based relative paths. 3. Why not treat paths a little less magically? We both also agreed that node_modules should probably be removed as well so folks would need to import those relative root as well, but that felt out of scope of this PR since it wasn't already touching any of those imports.::",827f22557f014c615cda7d8179314ece898b4ca7::19f5875580beaf511ce046325f87379cf319924f::630b5828d32563af29e3a990d84c7de7f0df4aa0::ec481861799ed8dcced9cafd8112e5b26e641c54::049814d53cc6da95c2f83bef8cfc15331f6e3fb8::2ce51a5be583a0a58c38ed1426efdbb9e5f19ecc::
https://api.github.com/repos/elastic/kibana,30330,docs/upgrade-assistant::master,0,merged,Team:Docs::Team:Operations::v6.7.0::v7.0.0::v8.0.0::,"## Summary This adds documentation for the Upgrade Assistant's APIs. Some parts of this will need to be tweaked for the different branches, but I went ahead and included everything in this PR for review and will remove the irrelevant parts for each branch as I backport.::```suggestion experimental[This API is *experimental* and may be changed or removed completely in a future release. The underlying Upgrade Assistant concepts are stable, but the APIs for managing Upgrade Assistant are currently experimental.] ```::```suggestion The Upgrade Assistant API allows you to check the upgrade status of your Elasticsearch cluster ```::```suggestion and reindex indices that were created in the previous major version. The assistant helps you prepare ```::```suggestion experimental[This API is *experimental* and may be changed or removed completely in a future release. The underlying Upgrade Assistant concepts are stable, but the APIs for managing Upgrade Assistant are currently experimental.] ```::```suggestion See the next section for an explanation of each field. ```::```suggestion Once a reindex is started, you can check the status of the reindex operation by submitting a GET request to the `/api/upgrade_assistant/reindex/<indexName>` endpoint: ```::Would be nice to make mentions of ""status code table"" and ""step code table"" and ""warning code table"" link to the appropriate sections.  If so, you can remove the word ""below""::```suggestion 0::  The reindex operation has been created in Kibana. ```::```suggestion 10:: Index group services stopped. Only applies to some system indices. ```::```suggestion 20:: Index set to `readonly`. ```::```suggestion 30:: The new destination index has been created. ```::```suggestion 40:: The reindex task in Elasticsearch has started. ```::```suggestion 50:: The reindex task in Elasticsearch has completed. ```::```suggestion 60:: Aliases have been created to point to the new index, and the old index has been deleted. ```::```suggestion 70:: Index group services have been resumed. Only applies to some system indices. ```::```suggestion 2:: Documents will be converted to support Elastic Common Schema. Only applies to APM indices created in 6.x. ```::```suggestion To resume the reindex, you must submit a new POST request to the `/api/upgrade_assistant/reindex/<indexName>` endpoint. ```::```suggestion You can cancel reindexes that are waiting for the Elasticsearch reindex task to complete (`lastCompletedStep` set to `40`). ```::```suggestion experimental[This API is *experimental* and may be changed or removed completely in a future release. The underlying Upgrade Assistant concepts are stable, but the APIs for managing Upgrade Assistant are currently experimental.] ```::```suggestion <1> You can fix indices with the `reindex` attribute set to `true` using the <<upgrade-assistant-api-reindexing>>. ```::```suggestion When checking the upgrade status, some indices will have the `reindex` paramaeter set to `true`. You can use this Reindexing API to reindex these indices. ```::Good idea, done!::",9353586d5ccd94ed1629e0d12098a7011b80bb12::cfe0153c6d1da0967ec536897506d6dedfe4da3b::55436542fbfb7379e62eedaeb98b9ce6e36453e3::
https://api.github.com/repos/elastic/kibana,30261,fix/taskmanager/include_type_name::master,0,merged,review::v6.7.0::v7.0.0::v8.0.0::,## Summary Starting Kibana with Task Manager enabled broke recently due to incompatibility with ES in the way it was trying to put the index template. The ES change seems to be: https://github.com/elastic/elasticsearch/pull/38270 This keeps the type name in the mapping to make maintaining 6.x with backports easier. This fixes an error when starting Kibana: ``` server    log   [16:32:11.715] [info][task_manager] Installing .kibana_task_manager index template version: 8000099. server    log   [16:32:11.727] [warning][task_manager] [illegal_argument_exception] The mapping definition cannot be nested under a type [_doc] unless include_type_name is set to true. ```::,587c399b75e08eb9e5fa861740b6fcc927b058fd::45f968aeaa33053ca6c912a0a515129244ba597d::040608c390c54380f219b6794e8113136775da72::
https://api.github.com/repos/elastic/kibana,30019,6.x/regionmap/ems_locale::6.x,0,merged,,backports https://github.com/elastic/kibana/pull/29671::,db03461fe077ee4297077364978d42764e7acb3f::
https://api.github.com/repos/elastic/kibana,29521,fix/brush-histogram::master,0,closed,Feature:Vislib::Team:KibanaApp::blocker::bug::regression::v7.0.0::,"## Summary Fix https://github.com/elastic/kibana/issues/29391 This PR fix the brushing tool on line, bar and area charts when using histogram aggregation on x axis. I've removed some unnecessary code. That part was not clear and have some ""magic"" comments inside. Removing that part doesn't break the actual functionality. Maybe a check from @nreese (the author of this part of the code in https://github.com/elastic/kibana/pull/8735) can be useful. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [x] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - ~[ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~ - ~[ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials~ - [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - ~[ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~ ### For maintainers - [x] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - ~[ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~ ::do we need this check ? we already check before adding brush event.::what does this actually take away ? ::Yes in the we do a check before adding the brush event, but we never know if in the future we call this. Maybe I can remove the other check::I didn't found the reason and the utility of this function. We already have a the brush function that takes care of painting the brush such. This peace, with `Magic!` inside, doesn't seem to have any effect on the functionality.::what do you mean ? if a chart is brushable its brushable .... now and in the future. only time this could change is when we redraw the chart, and then we re-add the events as well.::i guess this was a feature at some point that we lost and is now no longer active ... ::I mean when someone else will touch this code. ::That's why I've requested @nreese review as seems something introduced by him long time ago::ok, this was supposed to be brushend event it seems ... and now we handle that differently::`simulateClickWithBrushEnabled` existed to handle the case of clicking a bar instead of brushing.::~Since we will backport that to 6.6.1 I would prefer leaving it in. We never can be 100% sure, and let's minimize the potential change.~ Got confused around the different PRs. This doesn't need to be backported 6.6.1, I still think I prefer not throwing away safety checks :)::This is calculating the difference between two data rows.  That may or may not be the same interval used for the request.  Filters and queries can cause empty data across the requested interval which would cause this interval to be larger than it should be because those empty rows wouldn't be in the table unless the user said to show empty buckets.::",9916814d93acab25ae037adcf510d1ca77cfa485::5c841fd29d884c88e43b9496cb44fef2c0d37f3e::7b3da23154d68d2a93e51794ea6270495fe2e64e::8966f8743f0881d66144f93883b9f6edd69798a5::9708195468f1e4f90cb032fb5607b8cc72108541::
https://api.github.com/repos/elastic/kibana,29461,geo_grid::master,0,merged,Team:Geo::v6.7.0::v7.0.0::,"`geotile_grid` aggregation is coming in 7.0.0. This PR makes the changes needed for supporting different geo grid aggregations that can be backported to 6.7.0. That way, the versions will diverge less 1) Use more generic name for geogrid source, rename `ESGeohashGridSource` to `ESGeoGridSource` 2) move logic for calculating geo grid precision to single location inside `ESGeoGridSource` so when there are multiple aggregations, logic can stay encapsulated within `ESGeohashGridSource`.::I'd call it `geogridPrecision` for consistency with the other renames.::rename to `geogridPrecision`::",53e19e3a7c98a3a836e17428435bdec780d35b44::226e4f5be0e49c1be5cd713f47ce71f72c2165fc::89d310b637c3880571edfd6ab1cb9d7684fcbe82::48b351a219d34d8b5ea71a9b9d8402a76bd57c78::cd1d7a279d4881c8a772cddfb074490fa7d42c61::4bf3e77bfd81172ae3755f44ca0a17f2a63f6df0::c76cc4a74e881a17cf219f30683b270640f6850c::6cc6e38acf0f4047677e438a450f26253cbf5f7b::3e16612c794f79198f29d7024a3dff8e18b5e383::
https://api.github.com/repos/elastic/kibana,29235,maps_time_picker::master,0,merged,Team:Geo::v6.7.0::v7.0.0::,"This PR breaks out the part of https://github.com/elastic/kibana/pull/29204 that can be backported to 6.7. This includes updating QueryBar with the prop `showDatePicker` so applications can turn on EuiSuperDatePicker. <img width=""2045"" alt=""screen shot 2019-01-23 at 7 24 31 pm"" src=""https://user-images.githubusercontent.com/373691/51650208-8b7d6980-1f44-11e9-85fc-43c30d16bfdc.png""> ::Why not use the EuiSuperDatePicker's update/refresh button and already includes all the states you need including icons and tooltip? Otherwise, I'd ask that we port over that button to here.::Because then there would be 2 update buttons - one from EuiSuperDatePicker and one from QueryBar. Linking the DatePicker changes to the QueryBar update button allows users to set the query and time range and apply the changes in a single action.::Right, but I thought the EuiSuperDatePicker's update button was created in a way that you could tap into it's state and onClick functions so that it could be used **instead** of the one that's already there.::No. The EuiSuperDatePicker's update button just works on the start/end props, not outside state like query.::So its the other way around, if you want update logic to include other stuff then you set `showUpdateButton ` to false and add your own button/logic in the wrapping component::Ok, then we'll want to convert the EuiSuperDatePicker's `renderUpdateButton` function to an actual EUI component so that it can replace the query bar's update button. That can be an 'eventually' but the states and tooltips that are there for the date picker should be there when the date picker is in conjunction with the query bar. ::Instead of the `@ts-ignore` here could you add a `time_history.d.ts`? It could look something like this: ```typescript interface TimeRange { from: string; to: string; mode?: string; } export interface TimeHistory { add: (options: TimeRange) => void; get: () => TimeRange[]; } export const timeHistory: TimeHistory; ```::This could probably go in the `timefilter` directory and be imported in the file I suggested above instead of declaring it in both places.::I think this `@ts-ignore` can be removed by making this `public` instead of `private`.::Also I'm not totally sure if it's `private` if the `defaultProps` even works. I haven't tried it out though.::If you declared the `time_history.d.ts` above then you wouldn't need to specify the `: string` portion here::Pretty sure this is going to have to come from `config.get('search:queryLanguage')`::I think `date-range-from`, `date-range-to`, and `is-refresh-paused` may be more descriptive.::Typo: `timepicker`::Is this ever `false`? Would it make sense to just hardcode `true` in the html file?::I tried removing the `: string;` portion with `time_history.d.ts` and still got TS errors::We wanted to default all users to kuery regardless of advanced settings. The maps application is a new app and we did not want to start users with lucene. This is intentional.::The TimeRange from TimeHistory is not the same object as the DateRange defined in this file. `DateRange` describes the results returned to onSubmit. They could be a different form than `TimeRange`::Change to `public` does not solve the ts lint problem. I could not figure out why it was complaining so just used the ts-ignore. defaultProps is working. To verify, do not pass `date-range-from` in map.html. then change default props to something like the below. Notice how the time picker displays uses now-17m. ``` private static defaultProps = { showDatePicker: false, dateRangeFrom: 'now-17m', dateRangeTo: 'now', }; ```::We are switching the default to KQL in an open PR. I would think that it would be best to not ignore the advanced setting here in case there are certain users who want to change the default back to Lucene, or if we end up adding additional query languages (SQL, etc.) in the future. But that's just my $0.02.::Good to know. I will pull from the config then::",ea5b6daa1e207266669030204448e2e47e3e9e86::bb7cc6746150e83588531b839843b553745795bd::3f671a16962886dfd3f0ff574fce1cc419052355::0660067ffa6e997ae9966ff3b569e799296c0b2c::b5ca764a4227ba24e5a2fe81ebccce8a37a72e4e::8851074311bdbd03e8d94ef8cfae31ae471faa6e::9d30d7136ab68e1a7eceecba7390a9f562a4a2e7::d4368adc6baa13a5c96ea9e4847214f0c11db8e1::28ab882aa100aa27683a40b30a3cf28c2e03e724::a87a478b3d0714ca82e5b3afad470659cb1309f6::fcf05217b845299278c599af3dfc21a3a3d029ce::68e7b6b58dcf578060d08c9fa82400d557156744::28e3dbc46db4af1a99d9803f1c16874a4027c7a5::066a4fe375d777868aa5c2272dca8d0f3707f50a::67d30b573cae5482020b06826e6c48bdb6f36747::ffcc6a8d92e29f6593cdfde683c97cece40b9c4a::813ad27e541fc5c8d1e5b61e75d1d5fd5ec1e682::1c9137f22ee2b33e4f85ad4a5959d6f61d818172::6ffd2de59416b440cf3374173f57419ab32a4712::4389ac6eb3b5398921c9dc01367db36ff69d770e::19511a25d3e58c30b00bb437cd3f3a529701ee53::5aebec31535b0edd78ded3d5af6df9823b75ec4c::338ef57ae6b5cdb7ef0b15203668fae919b41830::f28b1b26e47c28adeeba6a0a7bac1c2e47b1287d::9f1ee6e86d6b6ca7813afd568aabf9d254356f06::58056a902528f6e02a619ac73232da83a3485090::b8f9e34a0a50a2f8d0db09a1a5aceb61db96c13f::6b04a799608f7b5236eb906b46be1a1560480340::0b9c432c606cd15d1abe5b1883581fa042358f49::
https://api.github.com/repos/elastic/kibana,29209,gis_height::master,0,merged,Team:Geo::v7.0.0::,"Fix panel and goto button from getting cut-off in K7 design <img width=""634"" alt=""screen shot 2019-01-23 at 1 16 00 pm"" src=""https://user-images.githubusercontent.com/373691/51635052-19406100-1f13-11e9-87f3-a486568e4500.png""> <img width=""787"" alt=""screen shot 2019-01-23 at 1 28 57 pm"" src=""https://user-images.githubusercontent.com/373691/51635056-1cd3e800-1f13-11e9-9936-f3694c875a1d.png""> Note that this will not be backported to 6.7 because then there is a gap in the page <img width=""1113"" alt=""screen shot 2019-01-23 at 1 31 58 pm"" src=""https://user-images.githubusercontent.com/373691/51635189-76d4ad80-1f13-11e9-97f8-ebc7ec7378c5.png""> ::",d01dc91e191e6ad5068d06932aec89203002b0cf::
https://api.github.com/repos/elastic/kibana,28526,uptime_remove-reference-to-uichrome-breadcrumb-type::master,0,merged,Team:uptime::bug::v6.7.0::v7.0.0::,"## Summary I backported code to `6.x` that references the `Breadcrumb` type from `ui/chrome`, which is now causing 6.x builds to break. I've created a temporary interface to remove references to that type.::",23e1f30252a6bd7cd4e834c8ba237281a961095b::
https://api.github.com/repos/elastic/kibana,27890,apm-remove-format-index-pattern::master,0,merged,v6.7.0::,## Summary This PR removes formatting of `span.duration.us` and `transaction.duration.us` to `milliseconds`. ### Checklist - [x] Coordinate merge and backport to 6.x with https://github.com/elastic/apm-server/pull/1717 ::,fe239328ed6a89a5f1681763d9f8e28a4ea60226::
https://api.github.com/repos/elastic/kibana,27591,add-missing-trace-id::master,0,merged,Team:apm::[zube]: Done::,"`transaction_id` is not globally unique but only unique within a given trace. To avoid collisions at scale it is therefore necessary to query transactions by both `trace_id` and `transaction_id`. Additional changes: - When a transaction was not found the API should respond with 404, and client should handle this - Fix an unrelated bug with StickyPropertiesTable where boolean values are not visible (must be stringified) This will not be backported to 6.6.::",8b8471562d4ad83dfc0636f2aacc7dc8009d22b8::b6be25c4ed83a22a5c7ab279df31b0a6fda3ace7::fb40b34feec40c9b98aa3981abaaca8108f2471f::ee73814a6b7443e81872c846f77104a9856e3452::
https://api.github.com/repos/elastic/kibana,27497,bump-6.7::6.x,0,merged,Team:Operations::,## Summary Increment package.json versions and update .backportrc.json ::,139cac386006d2f4f0502bfa29297b01a78421dc::
https://api.github.com/repos/elastic/kibana,27154,fix/table-partial-rows-v7::master,0,merged,Feature:Data Table::Team:KibanaApp::review::v7.0.0::v7.2.0::v8.0.0::,"## Summary Fixes #22168, but specifically for `7.0`, `7.x`, `8.0` (master). Also closes #3455. The original issue was resolved for `6.6` in #25690 and backported to `6.5.x` in #27421. A different solution is required here since canvas pipeline in visualize has been merged (#25996). This broke the original solution, and therefore requires a different fix for `7.0` and moving forward. ~~This will also likely conflict with some of the work that's being done in the visualizations field formatting refactoring, currently WIP in #26951.~~ (Edit: [Conflicts resolved](https://github.com/elastic/kibana/blob/2acea0271f0f84c026ea3d06e9dd20a1f8350c97/src/ui/public/visualize/loader/pipeline_helpers/build_pipeline.ts#L173-L186) to work with #28746). ### QA This PR should resolve #22168 for the `master` branch. Since the issue was already resolved for `6.6` this technically should be introducing no changes for that issue, just a different implementation of the same bugfix. However, this PR additionally resolves #3455, which should be the only difference that's visible to the end user.::right now we do this for every visualization .... but this settings only exists for table.::On line 239 you could do: ``` if (hasMinimalColumns(vis)) { viConfig.dimensions.metrics = [visConfig.dimensions.metrics.pop()]; } ```::as his is only affecting table .... doent checking for `vis.params.showMetricsAtAllLevels`do the trick ?::probably we don't need hasMinimalColumns and could just do: ``` if (vis.params.showMinimalColumns === true) { viConfig.dimensions.metrics = [visConfig.dimensions.metrics.pop()]; } ```::",6393fb9da48ecf33b47959d7b4997db345777495::02da7c4024c8d6c942d75e4308adc26b589b7468::9b7ab6d12697d9ec57324818bfef269891953428::116cdd11ddb430fa4d19bad51715948b5b1b1413::
https://api.github.com/repos/elastic/kibana,27142,reporting/remove-phantom::master,0,merged,Feature:Reporting::Team:KibanaApp::release_note:breaking::review::v7.0.0::,"## Summary Closes https://github.com/elastic/kibana/issues/27141 Removes Phantom dependency from Kibana. Do not backport this to 6.x! ### Checklist - [X] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials ### Release Note: > Breaking change: PhantomJS for PDF and PNG Reporting has been removed from Kibana. Starting in 7.0, Chromium will be the only browser supported for Reporting. If your kibana.yml has the `xpack.reporting.capture.browser.type` setting, please ensure that it is set to `chromium`::NOTE: Unlike other stack products, Kibana does not yet have a grid of operating system support in the docs. One should be added: https://github.com/elastic/dev/issues/1048::It doesn't sound to me like the support matrix is super straightforward.  I worry that will be delayed (also isn't really tied to a release since it's just docs), but this will remain in the docs and be confusing.  How about just calling out specifically cent os and RHEL 6.x and not mentioning the support matrix? once we do have one we can update this (but if we forget, not the end of the world either, since I'll still be accurate).::I wonder if we should leave this in for a release and remove in 7.x?  Otherwise I think developers will have phantom artifacts hanging around.::Or maybe not, maybe the context is you can build for different OS's and clean up the previous artifacts, but you'll never have phantom hanging around. I'm a little hazy on this.... ::Looks like this task just cleans a build environment, so that the build target doesn't have old dependencies. Yeah - leaving this alone would help w/ developers build Kibana in their environment. I think folks that do that usually will wipe out an entire stale build target directory. It's possible for someone to get no-longer used phantom binary, but I don't think it's critical.::",0e5e45518b0869c0f0b96e6ba7dcdd3faa7c1fd2::f1e127928f449dc315573759098e03fcc3377b30::37dbe5dafaed6e67f2757743e0ad9df9e00db790::76c3dbb850823abef252b230d1ad710d7e7bf0a1::f26064a24fdd908cf13936ee19b353c118ddb08b::4a2e91ea946e11675b5ae1741e1f7cf01a63af96::c5dab36b2a4d10a514239c9b62290ab7e684c750::c4c5b32ab318ddb04f87ccadb943ba8114d2856a::440293f3126d9af3ffc789a751e96c851f82c247::d32bec6f04be4a93df68dc7726c90d127299487e::0183bf00a84970ad049747babab165b4d0947e5d::6fe02d3221ed7f6e6e788437494dad6ffa208d99::2c02de8c02e6298cb795664a50024183a41e668c::
https://api.github.com/repos/elastic/kibana,27009,kui/vars::master,0,merged,Team:Kibana-Design::release_note:enhancement::v7.0.0::,"## Summary For team review pings: - [x] I changed the APM JS variables that mirrored EUI. It'd be nice if you all imported this from the JSON we dist, but it was simple enough. - [x] Beats team - I changed some hardcoded hex values you had in styled components. Also prefer if you pulled this in from EUI's vars. - [x] Security - Small template / sass changes to match colors. ### Color refresh EUI 5.7.0 had a color refresh which switched around our palette to better match branding guidelines. Hex colors are still hard coded in large parts of Kibana so most of the changes not in `kbn/ui-framework` are simple shifts to match that styling. ### Styling of KUI KUI now imports the EUI global scope. I went through and touched a lot of the global variables in KUI to better match EUI. Outside of the coloring, I did some very minor work around KUI form fields and the verticalRhythm component. ### Removal of many KUI components KUI remains deprecated since 6.2.0 but still exists. I went ahead and removed any components and styling that were no longer being used in Kibana and then removed several KUI components that were being minimally used by replacing them with EUI styling, using EUI components or selectors instead. This resulted in KUI being a little under half its original size and is the reason this PR has such a large negative number. ### Global nav cleanup With the color change the global nav icons in the K6 nav was really off. I went ahead reworked them to use EUI icons and cleanup them up stylistically. The static images are still available if no EUI icon is used so this is backwards compatible and should be fine for custom plugins outside of core Kibana. ### Tests The color changes required me to rebuild the baselines for the TSVB screenshot. We have a lot of hard coded hex values that in turn are converted back and forth between rgb and hex. In one case I chose not to not change an advanced setting default to match our new colors because the tests went a little nuts. It's the green color and is mostly close to what we're using in both palettes. I'd like to do a later sweep there and make these tests less reliant on copy / paste codes, but given FF timing, I'm just avoiding that value for now. ### Updates EUI to 5.8.1 from 5.6.2 ## [`5.8.1`](https://github.com/elastic/eui/tree/v5.8.1) **Note: this release is a backport containing fixes made in `6.0.0`** **Bug fixes** - Fixed some EUI services' TS definitions ([#1380](https://github.com/elastic/eui/pull/1380)) ## [`5.8.0`](https://github.com/elastic/eui/tree/v5.8.0) **Note: this release broke some of the exported TypeScript definitions.** - Reinstate ([#1353](https://github.com/elastic/eui/pull/1353)) `onBlur` action on `EuiComboBox` ([#1364](https://github.com/elastic/eui/pull/1364)) - Convert roughly half of the services to TypeScript ([#1360](https://github.com/elastic/eui/pull/1360)) **Bug fixes** - Fixed `onCreateOption` callback of `EuiComboBox` so it isn't called when the input is empty ([#1364](https://github.com/elastic/eui/pull/1364)) - Added `anchorClassName` prop to `EuiPopover` ([#1367](https://github.com/elastic/eui/pull/1367)) - Added support for `fullWidth` on `EuiSuperSelect` ([#1367](https://github.com/elastic/eui/pull/1367)) - Applied new scrollbar customization for Firefox ([#1367](https://github.com/elastic/eui/pull/1367)) - Fixed `EuiSuperSelect` from accessing ref when unmounted ([1369](https://github.com/elastic/eui/pull/1369)) - Allow any color value to be passed to `EuiIcon` ([#1370](https://github.com/elastic/eui/pull/1370)) ## [`5.7.0`](https://github.com/elastic/eui/tree/v5.7.0) - Adjust EUI coloring to better match brand guidelines from Creative Services ([#1356](https://github.com/elastic/eui/pull/1356)) ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [x] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - [x] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md) - [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers - [x] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) - [x] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::Are you slightly worried about how different these values end up being? For instance the base spacing goes from 10 to 16 which is kind of a large jump. You could just make that one `euiSizeS` and the following one `euiSizeXS`::I don't think this is going to work very well if it ever exists in dark theme as `$kuiColorWhite` is ghost::KUI has it's own variables for dark mode :/::Only thing that really scares me is who knows what absolute pixel heights were constructed assuming some sort of constant from these. I'm not worried about the visual difference though. I based it the off intended usage I saw and mapped against our equivalent. These were used similar to our spacer components and not for pixel precision. KUI's base was 10 and that one was the most common vertical spacing selector in Kibana. The equiv on our side is EuiSpacer size=""m"". It's most often used to provide distance between larger blocks and panels. Here's a good example where at least spacing in some mixed views is getting at least some semblance of consistency. ![image](https://user-images.githubusercontent.com/324519/49921218-ba8ebe80-fe61-11e8-89d0-36a13c008ead.png) `.kuiVerticalRhythmSmall` is mostly used for separation of form elements and checkboxes from what I could see. In all the cases I checked the spacing made sense and was closer to our usage in EUI. Below are some screens showing common usage of the smaller sizes. ![image](https://user-images.githubusercontent.com/324519/49920860-92eb2680-fe60-11e8-85d0-4c2e9dd0d41e.png) ![image](https://user-images.githubusercontent.com/324519/49920864-97afda80-fe60-11e8-81cb-7139e002ccd3.png) This is all pretty quick damage. Spacing is one of the quick things I think we can change in KUI to make things _feel_ a little closer. For a half minute I thought... hey, why don't I just extend EUI forms into KUI ones, but I backed off because I kind of want to be able to look at the page and still know what needs to be removed. Ultimately, I think we're in the single digit months of how long KUI will actually be around. This stuff ultimately I think is a band aid. ::That said, I need to check more into the dark theme coloring. I see some breaks this introduced.::Got it! It's one of those situations where I don't know if it's intentional or not. Looks like it was thoroughly thought through. 🙇‍♀️    ::This should be something like `ng-if=""!euiIconType && icon""`::",953308613992ddc1223c483f75c4c51562879f75::f9cc0d4b3eb36b05a36a01486977a42eefcc68cf::9b7a4077425518b321f0dd65784a08a6354d1ec0::c887bdb5ac79f6446003d301cb8ee8c952586d3f::02a22aa5677957868436db0b46ea3fc9b8db8e1d::08c3a6ab4dc88b75a2ebe44e54a48dfa944f56da::670deb21c5905bf8f956c9a6de15920445eaa8a3::748573fad965499a842c224f058538c0720329d4::39de600f2e59a5cebe6b523274970fc720f3b45c::cc93d6af68e7a6c5d9bfb5365ee999dad7bda229::13ab270fffc12e612fca5d0bd73ba002b8f8e5fe::3b9a6691f7bbf573144d0af6aca98d8cbe399ac1::b68f1956cfb3f188a24dc6e0f5d2e4e2db0d165d::aefac15cb6381df85935ec7d23fae3b6f115c416::db8ba95f89f8fb85d51d896f6f20bca8e7e7cd9e::d87c44775a77966326677aa1f6ca8a90df1848c1::e6215692c26662d92b604a1ebcdbe7434b09a10b::efe94c5f9bfa1d00929dabc8ab7b38cb9be664d1::59801a57a161ed1bbcc34a4744a6538b25f765de::c6fcdfd8f2b479c62b55625562c0062f40108e09::90556dde8315c402c075416992b41044f52fb2d2::69756d87c63e31961526d9896f34f96594465587::4c00a7a0edaec526085491db3dd662b1487cee1a::fa192fd902cdc9743b2b80aec0cf47ecfd4739c7::214a9f3ca83d28e7e080415cbd66242b49c60d13::13fa9446f28dfc8db4541f243cdda9ae21a11588::
https://api.github.com/repos/elastic/kibana,26988,fix/rollup-button::master,0,merged,Team:Elasticsearch UI::review::v6.5.4::v6.6.0::v7.0.0::,"Fixes #26981 To test, start ES with trial license and set system clock to past the license expiration. Without this fix, Index Patterns page will not show create button or the list of patterns. With this fix, the button will appear with the standard option (no rollup option) and the list should appear normally ~~along with a warning toast notification about license expiration~~. Due to the severity of this bug, I will be backporting the fix into the next patch release as well (6.5.4).::It's been suggested to me on other PRs that we not do the translations statically, but rather do them inside functions, so maybe do a getRollupIndexPatternIndicesErrorTitle function that returns this?::Can we return early inside the condition and show a `fatalError` here, in the event we don't show a toast?::Maybe it'd be best if the localization team updates the [guidelines](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/GUIDELINE.md) first and then we do a sweep of the codebase and make this change at once?::",2454a1350e123fd501e57607dac8631f3c307b85::
https://api.github.com/repos/elastic/kibana,26741,ml-calendar-settings-react::master,0,merged,:ml::Feature:Anomaly Detection::enhancement::review::v6.6.0::v7.0.0::,"## Summary `Settings -> Calendar management` (settings/scheduled_events/) rewrite to React/eui (settings/calendar/). Meta issue with details and screenshots: https://github.com/elastic/kibana/issues/25970 #### Note: Adding tests. File structure will change as I add them. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [x] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) - IE11 issue to be fixed in follow up PR ~~- [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~~ ~~- [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials~~ - [x] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios - [x] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist) ### For maintainers ~~- [ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ - [x] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::we generally always add a new line to the end of the file. I see in other `scss` files they don't have an ending new line. is an eui rule I've missed?::Might as well start now with BEM style with new ones. ``` mlCalendar__list mlCalendar__listItem mlCalendar__listItemContent ```::nit, `ml-nav-menu` and `ml-new-calendar` could be self closing::``` mlCalendarEdit__form mlCalendarEdit__formContent mlCalendarEdit__comboBox ```::should be `initPromise(false)` these are react pages and so do not need the `$q` override::You're using this number in multiple files so you should use a variable. Likely it can be replaced with one of our breakpoint values though. `max-width: map-get($euiBreakpoints, 'xl');` would get your 1200px ref: https://github.com/elastic/eui/blob/master/src/global_styling/variables/_responsive.scss::Haven't loaded this up to see how you're using it, but remember that `EuiComboBox` has a `fullWidth` prop. Hopefuly that negates your need for the overwrite. ![image](https://user-images.githubusercontent.com/324519/49611196-a7f22200-f955-11e8-80ef-f3bc96a74082.png) ::I might be missing something, but I don't see why these functions need to be static members of `ImportModal`? They could be moved to be functions in a separate file or just non member functions in this file.::these `render...` functions could be react components e.g. `<ErrorCallout />` or `<ImportedEvents />`::the setting of `selectedEvents` in this function looks like a side effect to me. this `if` statement and the creation of `selectedEvents` could be moved to `render`. `selectedEvents` could then be a local var and be passed into `renderCallout ` and `handleEventsAdd`.::these two functions are almost identical. could they combined with an `isEdit` parameter or something like that? ::this line is unnecessary as you're already importing the root `ml` object in the line above. the `jobs` functions can be got at using the namespace `jobs` e.g. `jobsSummary` is `ml.jobs.jobsSummary()`::if lots of deletes fail, this will display a lot of errors. instead of showing a toast per failure, an error list could be built up and displayed in a single toast at the end. Ideally, a multi-delete action should be behind one endpoint to make it more atomic. a `deleteCalendars` endpoint could be added which would take a list of ids. probably for a follow up PR if you agree it's needed.::similar nit as the very first comment, not important::again, should be `initPromise(false)`::Glad you brought it up since this is one I wasn't sure whether to keep this functionality here or move it. 🤔  Mostly kept it because the functionality is all very related and specific to this component and I thought it might be better having them all in one place. Happy to move to another file - maybe a utils for this component - if it feels like the better way.::yeah i see this argument. it's nice to give them a home. I'm torn between this and finding them in the way when reading through the class. They don't _need_ to be in the class, so part of me wants to move them out.::Good catch! 👍 ::Good call - thank you! 😄 ::Yep 👍  Went ahead and removed it since we don't want those to be full width anymore anyway. 😄 ::Nice catch - thanks! 👍 ::Decided to move this out of the file to improve class readability. ::🤔 I think the `renderCallout` is simple enough since it simply returns the `EuiCallOut` component - I don't think we'd gain much from wrapping it in another component. `renderImportedEvents`, on the other hand, might be complex enough to justify having a separate component. I also agree with the comment below you made - makes sense to move `<ImportedEvents />` out and avoid the setting of `selectedEvents` side-effect. 👍 Thanks!::Thanks for catching this! Turned into a nice refactor 👌 🙌 ::I kept these separate because I like keeping it clear whether we're editing or creating. Also, if we needed to pass a flag we'd have to wrap the handler in an arrow function so we could send along the flag. I prefer to avoid that since that function gets re-created every time we render. I'm open to changing it if the team feels it's best to combine, though. 😄 cc @walterra, @peteharverson what do you both think?::Good point, @jgowdyelastic. I kept the multiple toasts since we're using the same logic in `Filter Lists` and wanted to keep it consistent. Not sure if changing to a single toast would make it any easier to read if there were a lot of events listed in one toast - seems like that might be difficult to read as well. 🤔Happy to hear more thoughts on this. As far as adding a multi-delete endpoint - I agree with that idea. Sounds like a good candidate for a follow-up PR. 😄 ::yeah, just checked the jobs list, and every failed deletion is given it's own toast, so ignore my comment. I think this is something we should review and address in the future. If more than a few actions fail, do we even need to list them all. Could a `17 jobs failed to delete` message be enough. Obviously something has going wrong pretty badly. ![image](https://user-images.githubusercontent.com/22172091/49724602-98c6e900-fc61-11e8-9e9d-dd36c6c358c5.png) ::This message only needs displaying when in Create mode I think, as the ID of an existing calendar cannot be edited. Or a similar approach could be used as the edit filter lists page, where the ID is just a title on the edit form, and you could just display the description in a sub heading (as it looks like that can't be edited either).::Looking at the EUI writing guide, I think this needs to be `Delete this calendar?` / `Delete these calendars?`, possibly including the ID.::The text on this button should be `Delete` I think, as in the example Writing Guide example, and for consistency with the Filter Lists delete modal.::In tests I had a few problems importing events from an ics file. Once I saw a 'ParseError' in the JavaScript console, but no error in the UI, and secondly, when trying to import past events no error was seen but no events seemed to be imported. This area probably needs more testing.::This column is currently sorting as Strings rather than on numeric count: ![image](https://user-images.githubusercontent.com/7405507/49731875-a2a61780-fc74-11e8-99d5-4837c4855944.png) It should now be possible to apply a custom sort on columns - see https://github.com/elastic/eui/pull/929. Possibly one for a follow-up PR as I suspect the 'item count' column on the Filter Lists table also needs a similar fix. ::Is it possible to see if the ID is already in use prior to saving?::Is this something you planned on doing in this PR?::You'll need to pull in the k7breadcrumbs from `x-pack/plugins/ml/public/settings/breadcrumbs.js` by rebasing to latest master::As above, you'll need to pull in the k7breadcrumbs from `x-pack/plugins/ml/public/settings/breadcrumbs.js` by rebasing::I'm happy for these two functions to remain separate!::I'd drop the colon before the calendar ID in this error message::As above, remove the colon `:` in this error message.::Is this component fully accessible as used here? I wasn't able to navigate to particular dates::I'd rephrase this to `An error occurred loading the list of calendars.`::Is this comment still needed?::Change to use relative paths?::Heya @peteharverson - I fixed the problem of not being able to import past events but I haven't been able to reproduce the issue where you see the 'ParseError' in the console but no error on the modal. 🤔 Could you give me more context or share the file if you get a chance? I'll test this more as well on my end.::I'll make a note on the meta issue for a follow-up PR 👌 Thanks, Pete!::🤔 We could go through the calendars we've loaded and make sure the id doesn't already exist prior to saving. Is that what you mean?::Yep - updating it! ::All the inputs and the arrows to move between months are - this should give keyboard access to all functionality. Moving around through each day in the calendars themselves looks like it isn't - not sure we can override that on our side, though. 🤔 ::Removed!::Updated!::Yes - we do that with the Filters Lists - it gives a clearer message as to why the save failed. Happy for it to go in a separate PR.::I think switching the disabled ID and description fields to `EuiTitles` when in edit mode would look better here, as done in the edit Filter List page: ![image](https://user-images.githubusercontent.com/7405507/49794143-cfb70080-fd2e-11e8-93d0-8758210580ae.png) (In this case the description field would just be a non-editable `EuiTitle`)::I can't reproduce this with your latest edits, and see `ParseError` for example when trying to import e.g. a text file::I think there is a problem with this for events which have been added, but before the calendar has been saved. Looks like events only pick up an ID after saving, so if you delete a 'new' event (as in one which has yet to be saved), all 'new' events end up being deleted.::This needs to be `calendars/index` to pick up the renamed `calendars` directory.::Nit, but this file should probably be called `_calendars.sccs`::This should probably be moved out into a separate `_list.scss` file inside the `list` sub-directory, as you've done with the `edit` directory.::Adding to follow-up - thanks! 😄 ::👍 Doing this in a follow up PR to avoid backport messiness since the breadcrumbs update is only in master. This way I can backport this PR and just leave the route update follow-up PR in master. 😄 ::Same as above comment. 👍 ::Heya @peteharverson  - this is fixed now. The temp event id wasn't being passed on to the new_calendar form so there was no id to keep track of deletions. 👍 ::Just want to make sure that disabling these tests is intentional. ::It is. I'll be removing the `scheduled_events/` dir in a follow up PR as it's being replaced and these tests were causing the build to fail. 😄 ::",9ccf17445f928dab33e6cc8bee0e4fe5dd1ae499::928d19a2a0dac3f0baa9828710ed892ebd100113::506436ea32ed5e4ab9fb08413969107da0014272::10047e070ed92f31fa096339afcee5885e347828::33b8349b1756b14de3999a421c5b724a7f737d54::b964ab47a46dea37febb6284749ecd5baf2dbac4::5b2609804ade39878dee17133405a83309199986::ad9cce2e04d95c18450f4c6408974c0863eb78ea::b50886e1d48c3e7203e70c06e994f99445317f2f::ca01ff72daadef8659ef677a0ba0a3eba43a16bb::a7f5cd315a03204e187411ffd1efae3c11775cf7::d3eebd67b3f47d1f1768f4106b2d1e64234435eb::df8dee8ec6af1d943edf7f4fc05565345ff9c5d4::fd4b3c93868de453a1cf852db0f031597d3502a4::e82862d37328a6f6b13a72d315bfb1e0602a59c6::fb7bac73aebe5516b280f69f0151f547dc57732a::2b23fff112734099cc22a23294cecfe1d3e1dee2::4ebdf0b79ce47ba3adc67d518963d86d39310069::85d0678e65e9c3de45c7dd58615d058fc53ca2ae::d9e0530fc78112830d0cbb82e4d7c812f23f408a::38ce90c20376a811cebcff28bf73246b7b8e89fe::c8d6248ca2f64e3f3b29659b193e59c9d9e1fc35::b5d6c24484f8209daa678cb5aa448837c6b49eef::2fc753b3e392fb24c10d5ab10c53508682fb066b::f8d7a3b5bedd8f941502416de76551287423245a::9ed166c8529a75edd25bbda253d4a9cd501a9fc6::1ba8bc6f547076aaa5434cfcb72eb5c60c1541ed::3059db914d6f9db27d8868d3c117936760ed41cd::0677295735fe51f8b3bcd3fc3cdd312fd13ab007::7f8ca529790795ca407a68e2784f1b5330889895::36ad67d0f3396501830515c38941d1aa38ba75f0::52ef6e5080fda6caad12e0b95571f8740409e74f::7152675f76c726d7e5402b4da9a46b4c4af3162c::369f35641cbd525587030ec601247a0793ff005a::3bbc4f770de44bc0879a2815879460fa63958086::
https://api.github.com/repos/elastic/kibana,26727,backport/6.x/pr-26205::6.x,0,merged,,"Back ports #26205. Had a merge conflict that required a manual resolution, hence the two commits.::__question:__ I guess it's (and few places below where these packages are used) accidentally removed?::__issue:__ merge conflict issue? It should be `fs` I guess::__optional nit:__ there should a `minute`, but I don't want you to wait another CI run, so I'm fine with backporting this as is.::Coolio, going to merge this!::",34c895f0a763752f90b6331ba744fe959030e6ba::3d223d39034db1afc626ad8584449b4f8e9aaf28::2a366e500f52afa499ebb9888418738ad6bc4377::
https://api.github.com/repos/elastic/kibana,26446,es-msearch-timeout::master,0,merged,v6.5.3::v6.6.0::v7.0.0::,"The `_msearch` API in ES master is returning a 400/bad-request when specifying the timeout in the header without units. This PR moves this parameter to the search body. At this moment, it's unknown how far this should be backported... it's possible that the parameter that we're specifying in the header on 6.x (and potentially earlier) is simply being ignored. ""Release Note: Resolving issue with the _msearch timeouts being specified incorrectly, which was causing them to be ignored.""::",7b07bfa2e63174d5c391037930be9ca95e1faa2d::296981e0b647d21be13cd4f202d32e0d3c4d885b::f2151e7b3b4e6570c3b8def789fa00d7e6b7d5d4::
https://api.github.com/repos/elastic/kibana,26436,move-impact-calc-to-elasticsearch::master,0,merged,Team:apm::v6.5.0::v6.6.0::,"Closes #26428 This moves the calculation of impact from the Nodejs to Elasticsearch. Impact used to be calculated as `transactionPerMinute * avgResponseTime`. The equivalent in ES is to sum avg response times. Calculating and sorting by impact in ES ensures that the top 100 buckets returned are actually the top 100 most impactful endpoints - and not just the top 100 slowest endpoints. This will be backported to 6.5. cc @roncohen ::I find the one-liners much more readable.::No, these `sum` values are not just random numbers. They are `doc_count * avg.value` for each bucket. Was hoping the test snapshot would stay consistent but if you look at the changed impact values the differences are very small.::why is `as unknown` necessary when it get interpreted `as ESResponse` later on?::Without first casting it to `unknown`, it complains because the object contains properties that are not defined on `ESResponse`. I think this is due to `@types/elasticsearch` not having everything defined properly. I wish we didn't have to do this, because it's definitely defeating the purpose of a type system, but I think it's the most pragmatic solution for now.::This is the tsc error I get without unknown: ``` Conversion of type '{ took: number; timed_out: false; _shards: { total: number; successful: number; skipped: number; failed: number; }; hits: { total: number; max_score: null; hits: never[]; }; aggregations: { transactions: { ...; }; }; }' to type 'AggregationSearchResponse<void, Aggs>' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first. Types of property 'aggregations' are incompatible. Type '{ transactions: { doc_count_error_upper_bound: number; sum_other_doc_count: number; buckets: ({ key: string; doc_count: number; avg: { value: number; }; p95: { values: { '95.0': number; }; }; sample: { hits: { ...; }; }; } | ... 12 more ... | { ...; })[]; }; }' is not comparable to type 'Aggs'. Types of property 'transactions' are incompatible. Type '{ doc_count_error_upper_bound: number; sum_other_doc_count: number; buckets: ({ key: string; doc_count: number; avg: { value: number; }; p95: { values: { '95.0': number; }; }; sample: { hits: { total: number; max_score: null; hits: { ...; }[]; }; }; } | ... 12 more ... | { ...; })[]; }' is not comparable to type '{ buckets: Bucket[]; }'. Types of property 'buckets' are incompatible. Type '({ key: string; doc_count: number; avg: { value: number; }; p95: { values: { '95.0': number; }; }; sample: { hits: { total: number; max_score: null; hits: { _index: string; _type: string; _id: string; _score: null; _source: { ...; }; sort: number[]; }[]; }; }; } | ... 12 more ... | { ...; })[]' is not comparable to type 'Bucket[]'. Type '{ key: string; doc_count: number; avg: { value: number; }; p95: { values: { '95.0': number; }; }; sample: { hits: { total: number; max_score: null; hits: { _index: string; _type: string; _id: string; _score: null; _source: { ...; }; sort: number[]; }[]; }; }; } | ... 12 more ... | { ...; }' is not comparable to type 'Bucket'. Type '{ key: string; doc_count: number; avg: { value: number; }; p95: { values: { '95.0': number; }; }; sample: { hits: { total: number; max_score: null; hits: { _index: string; _type: string; _id: string; _score: null; _source: { ...; }; sort: number[]; }[]; }; }; }' is not comparable to type 'Bucket'. Types of property 'sample' are incompatible. Type '{ hits: { total: number; max_score: null; hits: { _index: string; _type: string; _id: string; _score: null; _source: { '@timestamp': string; processor: { name: ""transaction""; event: ""transaction""; }; transaction: { ...; }; ... 4 more ...; host: { ...; }; }; sort: number[]; }[]; }; }' is not comparable to type '{ hits: { total: number; max_score: number | null; hits: { _source: Transaction; }[]; }; }'. Types of property 'hits' are incompatible. Type '{ total: number; max_score: null; hits: { _index: string; _type: string; _id: string; _score: null; _source: { '@timestamp': string; processor: { name: ""transaction""; event: ""transaction""; }; transaction: { ...; }; ... 4 more ...; host: { ...; }; }; sort: number[]; }[]; }' is not comparable to type '{ total: number; max_score: number | null; hits: { _source: Transaction; }[]; }'. Types of property 'hits' are incompatible. Type '{ _index: string; _type: string; _id: string; _score: null; _source: { '@timestamp': string; processor: { name: ""transaction""; event: ""transaction""; }; transaction: { name: string; duration: { us: number; }; ... 4 more ...; id: string; }; ... 4 more ...; host: { ...; }; }; sort: number[]; }[]' is not comparable to type '{ _source: Transaction; }[]'. Type '{ _index: string; _type: string; _id: string; _score: null; _source: { '@timestamp': string; processor: { name: ""transaction""; event: ""transaction""; }; transaction: { name: string; duration: { us: number; }; ... 4 more ...; id: string; }; ... 4 more ...; host: { ...; }; }; sort: number[]; }' is not comparable to type '{ _source: Transaction; }'. Object literal may only specify known properties, and '_index' does not exist in type '{ _source: Transaction; }'. [2352] (property) _index: string ```::",4a2cc02464f061d492bf52b1359ea7721c15abc2::9ed6ad0b267783cdd4354754a1ce68dd5f3e2995::
https://api.github.com/repos/elastic/kibana,26403,ml-job-wizards-kuery6x::6.x,0,merged,,Backports #26094 to 6.x. Note a manual backport was done to avoid merge conflicts as the backport of #23345 (#26306) is still to be merged to 6.x ::,c43a0ba7016f2cfeea4a98c8722dc5f6b6ba5062::
https://api.github.com/repos/elastic/kibana,26391,reduce-http-post::master,1,merged,Team:Presentation::review::v6.5.3::v6.6.0::v7.0.0::,"## Summary Reduce HTTP POST by avoiding unnecessary updates. This is achieved by ensuring that elements and shapes are compared pairwise. For example, a different internal order of elements should have no bearing on the position. Before this PR, order mismatches could have resulted in unneeded updates on every selection (esp. after performing ad-hoc grouping at least once, which impacted internal order). Mechanism: 1) filtering the comparables according to the same criteria; 2) ordering them by the same property (id). So it's literally, preprocessing both arrays with the same `.filter(...).sort(...)` before doing the comparisons. The investigation that led to this, among previously merged improvement PRs, was initiated by Cloud feedback from @timroes and @alexfrancoeur Slated for backporting to 6.5 and 6.x too. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - [X] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) ~~- [ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~~ ~~- [ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials~~ ~~- [ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios~~ ~~- [ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~~ ### For maintainers - [X] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ~~- [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~~ ::These functions may be extracted in the `grouping` PR, although such invariant functions have no impact on performance here.::This could be turned into a lookup `{}` map though there'd be no discernible perf difference. Changes are kept streamlined in this PR due to planning to backport (minimal fix)::",a4768535f5cf45769e11364b014d64580ffc20dd::
https://api.github.com/repos/elastic/kibana,26214,apm-ecs-1::master,0,merged,Team:apm::,"This PR updates the Kibana index pattern to include newly introduced fields for APM. To be backported to 6.x, where these will be aliases. for elastic/apm-server#1582::",0072e1b9752df959115e4d5fa59e09481831c1e2::
https://api.github.com/repos/elastic/kibana,26006,tsvb_kql_serverside::master,0,merged,Feature:KQL::Feature:TSVB::Team:KibanaApp::release_note:enhancement::review::v6.7.0::v7.0.0::,"## Summary This PR will enable the support of KQL in TSVB as in https://github.com/elastic/kibana/issues/17722. ~Before reviewing this PR, two other PRs needs to be merged: https://github.com/elastic/kibana/pull/23345 and https://github.com/elastic/kibana/pull/25994~ This PR enable KQL support in the following case: - when using a stored index pattern in a TSVB visualization (series, table or annotation), KQL can be used to filter and query - when using an index-pattern string that doesn't match with a stored index-pattern, global query and filters are just ignored, the data returned will match only panel filters. This file was removed because no longer used: `src/core_plugins/metrics/server/lib/vis_data/table/get_column_data.js` The CSS fix is used to display correctly the TSVB error subtitle. A follow up PR can be created to display a warning message on a TSVB that doesn't use an index-pattern. ### Checklist Use ~~strikethroughs~~ to remove checklist items you don't feel are applicable to this PR. - ~[ ] This was checked for cross-browser compatibility, [including a check against IE11](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility)~ - ~[ ] Any text added follows [EUI's writing guidelines](https://elastic.github.io/eui/#/guidelines/writing), uses sentence case text and includes [i18n support](https://github.com/elastic/kibana/blob/master/packages/kbn-i18n/README.md)~ - ~[ ] [Documentation](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#writing-documentation) was added for features that require explanation or tutorials~ - ~[ ] [Unit or functional tests](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#cross-browser-compatibility) were updated or added to match the most common scenarios~ - ~[ ] This was checked for [keyboard-only and screenreader accessibility](https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility#Accessibility_testing_checklist)~ ### For maintainers - ~[ ] This was checked for breaking API changes and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process)~ - [ ] This includes a feature addition or change that requires a release note and was [labeled appropriately](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md#release-notes-process) ::There's already a utility for this here: https://github.com/elastic/kibana/blob/837a0544669484a2af052adf7dc03b5f0bd6899e/src/ui/public/index_patterns/static_utils/index.js#L28::```suggestion const queries = req.payload.query || []; ``` @markov00 we're just getting back into reviewing the PR after fixing that bug in master that I mentioned in our zoom sync. Wanted to let you know that you'll need to fix it for TSVB in this PR as well since the relevant file changed. All you have to do is apply the suggestion above. Our PR is https://github.com/elastic/kibana/pull/27636 in case you want a little more info.::There's a util function you can use to do this instead if you want https://github.com/elastic/kibana/blob/b99c516700eb8bf38ebd4fb7cd8a2612a98c9f9b/src/ui/public/index_patterns/static_utils/index.js#L28-L37::Could you explain what the purpose of this change is? It looks like you're trying to handle the case where the index pattern input is empty, but that probably isn't necessary any more now that we handle null index patterns properly in the KQL serializers. ::Should the query bar really affect the annotations? I think annotations are likely to come from a different index, so queries in the global query bar will likely filter out all docs in the annotation index. Annotations also have options to ignore the global filter and the panel filter by which are enabled by default so if we did want to allow the query bar to affect annotations, I’d think we would want an option to ignore it as well. @alexfrancoeur or @AlonaNadler do you have any opinion here? I'm not super familiar with how annotations are generally used in the wild so I'm just guessing.::Quite timely, I literally just closed two enhancement requests this week around annotations being filterable. They have been filterable for awhile now but it isn't too discoverable. https://github.com/elastic/enhancements/issues/4007, https://github.com/elastic/enhancements/issues/5141. I'd say it's important, we have controls in TSVB for it as of 5.5 https://github.com/elastic/kibana/pull/11260::@alexfrancoeur  Cool, so just to make sure I understand, you're saying we should allow the query bar to filter annotations, and add an additional boolean option called something like `Ignore global query bar`?::And what about the visualization, don't we need to add the `Ignore global query bar` also here? So you can opt-out from the query bar as it works before this PR::I know, but reside on public and we need to use it on server side. I should move that function in a shared folder and reuse it.::Let me try to check if it can work now without that part. ::I think KQL should filter out TSVB just as the existing query bar and filters does today. There are options to ignore the filters or to persist annotations there. This functionality is generally applied to metrics as well in TSVB, not just annotations. These boolean options should already be available in the TSVB UI today. If it's easier to sync live, I'm happy to touch base over zoom. ::Oh duh, I missed the fact that one was server and one public. No sweat if you don't wanna move that around in this PR.::Yes, this was introduced to fix the empty/null pattern error. I'm updating the PR removing that.::@alexfrancoeur yes please a zoom sync will help :)::@alexfrancoeur @Bargs @lukasolson with this commit https://github.com/elastic/kibana/pull/26006/commits/9384a2d1d69fc9fefdf638d5caec5579a76e45c2 I've updated the PR to mimic exactly how TSVB works with lucene syntax: - flagging `yes` on `Ignore global filters` on data, any filter added to a dashboard or any search written on the query bar will be ignored by the visualization - flagging `yes` on `Ignore global filters` on annotations, any filter added to a dashboard or any search written on the query bar will be ignored by the annotations - flagging `no` on `Ignore global filters` on data, any filter added to a dashboard or any search written on the query bar will filter the visualization data - flagging `no` on `Ignore global filters` on annotations, any filter added to a dashboard or any search written on the query bar will filter the annotations The current label `Ignore global filters` is, IMHO, a bit misleading because doesn't seems to include queries on the querybar, but I think we can change that on a different PR. If this is ok for you, we can merge this PR and backport it to 6.7::Is there any reason we wouldn't want to show the filter bar? Aren't they being applied too?:::( oh lukas you are the missing bars guy 😬 So this comes from this PR: https://github.com/elastic/kibana/pull/12770 That is closing this ticket 2 years ago: https://github.com/elastic/kibana/issues/12761 ::Let me check with Peter to understand things better ::ok @lukasolson I prefer not to switch on the filterBar because it can be a bit confusing when you are editing a TSVB viz on an index-pattern different from the default one: the FilterBar will shows the options on the default one, that cannot always be applied to the used index-pattern. I prefer to postpone this when we are making explicit the index-pattern on filterbar and on querybar::",ac3532e4bed08e786585cdb4ecd70117439298ed::7f1464b8caca8af4fc0ade490a098b4e4f37569c::9db9e9d3e26590c9dab813573a3af06440f66637::15125bd7ac0c15429473d8f40d5c9aa567583102::4bf31a31b3819e4c2e7b090fbc55195ed686e77e::b4a570fdc2195ba1e5561fa2975ff9a4a45edcb7::eb27329d10db34edd529f27f2f753444d0c9484a::f0077428538c9444cdcc710437cd1e3bcd38daad::6093879938411297ee15ffaa57eab104a9495f56::ce46be8970bec203b3690d995b8416df8d3a8d2f::a61214e6870e87579aca0dce0e1397e57fb0e123::c3ea045038a11fe425d576e2e35c33fa20ea65c8::85b81fc1c35ef260e2eaeee4a6f25b2a90490989::0c431f31c174ad08a1bb70df5ea496db8109e022::edc03424ff1448bd3feb4d92ce7de12010959909::5e78ee9142ca3df70f77d4360b33fcabda88e0e9::9384a2d1d69fc9fefdf638d5caec5579a76e45c2::940aba6e25fde527ec2d67aa37ff527aa16f78eb::
https://api.github.com/repos/elastic/kibana,25927,fix/sdh5176Graph::6.5,0,merged,Feature:Graph::Team:KibanaApp::bug::v6.5.2::,"As a result of [this change](https://github.com/elastic/kibana/commit/2971d7635e7b823a8995852bfdd9a199ad140196#diff-61526cb0a89a365c1f34dd5561c4dd5b) the Graph UI settings [were broken](https://github.com/elastic/support-dev-help/issues/5176) - the ""advanced settings"" and ""drill downs"" sections just did not appear in the DOM. This proposed fix is a straight copy-paste of master’s `settings.html` which has diverged from the 6.x branch for reasons unknown to me. It functions as I would expect but by copy/pasting like this I am obliterating any previous work here on the 6.x branch which may relate to styling etc I see no reason for a functional divergence on master/6.x branches but I can’t say what if any style choices may need to be divergent. It looks like there were some attempts at tidying the 6.x code formatting on or before the x-pack reorg but I don't know why these were not also applied to master. Any future backports should be made easier if we re-align these 6.x/master versions. I'm unclear what else in the Graph UI would benefit from a similar re-alignment. ::",9a67979b1f104173f26809e8748df4a4b70dc64d::
https://api.github.com/repos/elastic/kibana,25905,mgmt-eui-nav-sidebar::master,0,merged,Feature:Kibana Management::Team:KibanaApp::review::,"We need to convert the current horizontal tab screen for Management features into the K7 sidebar design. [Overall K7 EUI components.](https://elastic.github.io/eui/#/layout/header) [Sidebar navigation mockup.](https://app.goabstract.com/projects/5e808cd0-0129-11e8-a0aa-8dd0be700871/branches/master/commits/ceebaa5a747b02e7b1d9e97a5fa2723671f7e299/files/C61376A0-2800-4F3D-85E9-3298F6FF6E14/layers/A23CEEAD-34DD-4829-B743-D6B017708875) **Total: 3-5 weeks** - [x] Create sidebar component (1-2 weeks) - [x] Include logic for ""active"" menu item when inside a feature - [x] Include as part of a chrome wrapper around all Management features - [x] Remove horizontal tab screen, replace with sidebar (1-2 weeks) - [x] Reach out to design to clarify behavior when initially clicking into Management tab - [x] Based on discussion, potentially adjust behavior to load a default or previously viewed Management feature - [x] Adjust functional tests (1 week) --- Code change summary - - Remove Angular code for nav / add React sidebar - Update kbn-management-app section values to reflect selected page instead of just section - Update sidebar rendering code to update when management registry updates - Rendering changes were provided by @snide ::got lazy here. hopefully its okay::This is a good starting point for the PR.::You removed the additional toController argument, This is needed to ensure I dont have to worry about merge conflicts when I backport changes. I have no current need to have different code in master then in the version branches and would rather not have to. ::Same comment as above::Can we add i18n support for this message?::What are your thoughts on using the [existing feature description](https://github.com/mattkime/kibana/blob/mgmt-eui-nav-sidebar/x-pack/plugins/spaces/public/lib/constants.ts#L12) for Spaces here? As an added bonus, it's already i18n-ready::Good catch, forgot to scan the code for these ::👍 ::Another question that might be for @snide: Do we want to say `can be found in the left menu` when the left menu can sometimes be collapsed and on top of the content instead of to the left?::Is it weird to mention permissions when it RBAC/User Perms are not available under all licenses? Here is how we describe the management section [in the docs](https://www.elastic.co/guide/en/kibana/current/management.html): > The Management application is where you perform your runtime configuration of Kibana, including both the initial setup and ongoing configuration of index patterns, advanced settings that tweak the behaviors of Kibana itself, and the various ""objects"" that you can save throughout Kibana such as searches, visualizations, and dashboards. > > This section is pluginable, so in addition to the out of the box capabilities, packs such as X-Pack can add additional management capabilities to Kibana. Possibly a question for @snide as I think this copy came from his PR (or @gchaps)::Perhaps you could include a descriptive comment for this method to make it more apparent what the listeners are for, and why they are a global registry instead of stored as an instance property. It would also be helpful to add a couple of unit tests to [the ManagementSection suite](https://github.com/elastic/kibana/blob/master/src/ui/public/management/__tests__/section.js).::When the listeners are called in `ManagementSection`, they are passed `this.items` as an argument. But here you are pulling them directly from the `management` instance property. For consistency, consider removing `this.items` as an argument to the callbacks in `ManagementSection`, or rewriting to use the parameter: ```suggestion management.addListener(items => updateSidebar(items.inOrder, $scope.section.id)); ```::might be worth just adding a TODO for the time being?::We should consider adjusting the styles so that the index pattern list can expand in width when there is room (see screengrab below) Right now it's just fixed at the one width, and I'm noticing that it truncates any indices with more than ~20 characters of text. So all of our sample data indices (which used to display) are now truncated unless you are on a very narrow screen and the list jumps to the top. ![kapture 2018-12-28 at 15 02 55](https://user-images.githubusercontent.com/1608770/50531238-07aa9b80-0ac4-11e9-9e97-f02c535d1c27.gif) ::This might be an EUI issue, but I'm noticing the menu icon is not clickable when the sidebar collapses: ![kapture 2018-12-28 at 15 04 20](https://user-images.githubusercontent.com/1608770/50531286-97e8e080-0ac4-11e9-926e-9ea5e7f039e7.gif) ::This will be addressed in a much more complete manner in - https://github.com/elastic/kibana-team/issues/51 which is in progress.::I'm annoyed with this implementation and yet its a bit beyond the scope of this PR to create a full featured async section registration system. I've chosen to no longer pass `items` since it only passes the management section thats changed, not the complete set of management sections. Nor does the code triggering the listener have access to the global set of management sections. I suspect that a couple of clever lines of code could solve this but I've chosen to sidestep it. ::Added comment and tests::Was this change intentional?::I don't recall why `deregisterSecurity()` was previously always being called, I assume it was for some weird edge-case. Are we confident that we want to change this now?::yes @snide requested a change in item order::@kobelb This code is called every time a management route is requested. Every time the route is requested the security section is being deregistered and reregistered. This creates an _extremely_ noisy registration system which is difficult to understand let alone present to the user without weird side effects. (mainly the disappearance and reappearance of items) Previously this didn't matter because management sections were rendered synchronously. Deregister and register before rendering and everything is fine. Beats needed async loading which caused the noise to become visible. Maybe this was doing something I didn't understand but its likely that it was just a thing that happened and worked until now.::Clicking the nav works for me after pulling the latest updates! `mobileTitle` will need to be translated if we are going to include it (or we may be able to leave it out -- I'm not sure if that prop is optional) @snide or @gchaps - is there a convention for how to name mobile titles in `EuiSideNav`? The only example given in EUI docs is ""Navigate within `$APP_NAME`"", and there isn't really any clear precedent elsewhere in Kibana (in fact, I only see this component used one other place). ![screenshot 2019-01-02 11 01 31](https://user-images.githubusercontent.com/1608770/50604915-cf1d1000-0e7d-11e9-8b82-321581445ed2.png) ::I also need to adjust the padding / margin beneath the nav ::""Management menu"" is fine for now. This is for the mobile version of the menu.::It can flip back if you feel strongly about it. It was actually before we introduced the index page and the thought was that we could direct people to a set page that we were sure people had access to.::For now I think it's OK to optimize Kibana to the Desktop experience. In general, I think we'd all rather have something else for an index (such as a summary of things going on in management).::@gchaps Can you provide a subhead for the line mentioned above? It shows on the index view for management. So the context should be... ""this is what management is:""::This commit provides some explanation of why this was changed initially, but to be honest I'm not following it entirely: https://github.com/elastic/x-pack/commit/d40253b1eee7a957ba956393baf5a4d252ca870c @Bargs perhaps you could enlighten us?::@lukeelmers Working off the description above  (and the fact that a lot more has been added to the Management app since 6.3), I'm thinking of something like this:  Manage your indices, index patterns, saved objects, Kibana settings, and more.::Sorry, I don't know why it was getting called on every route change, I only made sure each registration had a subsequent deregistration. It used to thrown an error if `register` was called twice without a deregister in-between. But I see there's an `ensureSecurityRegistered` function being used now so maybe that's no longer an issue. ::I withdraw my concerns then :)::",5194c279cddca6825744b7de0aeddbebb1d04cf1::aec019fb5fe86e6400ff0837798c49c1d7bb1b2c::739ea827be30c665122b6b178d32d9e7c57aa654::47186ec3ba7f424bb495e47d0cb64f5c6b3d1c2b::1f1fa43fc780b6d316b600b0aafd4f66984a2f0b::f8a7bf41e3a11ee9e6ff052e333b294d1a794e85::93b28ffd7a86024b10823ed815b11d48eeb571ad::b6b94dbffa0c44dc0870979722daceed8c420824::94d445dd0db2a885f6f050d98ee5d26bde6b941c::62c1ca7783f3e9696b6965bccd1a55666bf5897c::7b4a934d921012814e384f5448d57d111d38585c::ee32e9408d5e202671ab39cd4f42e7d58b979263::331720a32ce1c5b0f15c285cf588c33ce8c37906::999a5cddfdbfa5dcacef800d1f26bd0f33bc3026::43aef920933b66ccd745d452910406c0916a7876::9187f37b7dcb5e5e027288cfd3cc0378c8835961::d60a1cb5757aa8554842ad725fbcfedbbea0d9f7::31bf202ced414177d1cb89c8272191d070b4df89::706ad58a2b1ba1774f5d1411e078e5843253076b::54730f14f2ed5362e17e8853227fcfb817681954::4b2e4f29c8f8163d2a7ab35d2a5e6a67b966a119::6772af2f04341dc32e21f942317d5fd5cb00e88a::d6eb247e29cb8d77c582bf2abd8b870d9af248f1::c54b34f2831ad1caebfe555f75669dc702f76b99::ab205a664b8c3858b7e461c75f1929dd41acd5f4::065f7ec4005c07394eb34db66a5b25283806e5ba::fc98c69af97ef57a915439fa26e4c97dabc37dbe::cef6e4c7c28659960e7c291c2ecdc48196cf359b::cc49368721d86b14969c1d7d769ab6f298c66ec2::e1aa9e38022015c1363ef5bff8824c8ada64a846::4588def757b0d1e935abb10cc34e58a4f701bdad::2fbe6a806cc1eee36d2b2e425028fc4f2f98ed6a::486cf4677633c1ec7ea7fa5eb4ea4b5ac16c47a1::aff34a83b881fa2fd5eac3f7d7783e5cd575abc6::e5a228143db55b3da787553f47756b063e052bcf::92b474139c193dd7e71811cb4a1b1e46c64d8580::e115678f4fc51bea42c5a0e576045277a0a3837f::58379905481a5f0a872b4441a73b7b1c59c7b31e::ca490060d6718f152b5ec689038cf7bacf440ac2::ee29f6841b5dfa4664252f711ae6738b724f5a33::a7b08cae7d7f31dcdc0f01d51b69e52d94da7196::25b9acbb2a87d8ebf606ea54abf784bbab92af28::09385007da94539094fb6240dc207fed3f0ed862::86f8166851719cd7db01a72f4a2cb2fcd2812787::042f53349585ced6c98a72279e29aade0c311b3e::82454ea6618a44122b7912e4ed730eaff2f447bd::47dd461e996d72c7b57d6c0df9134f435c6451c3::d3e6f3d88274bb820c5af4ea397580dd4b017899::0b3668a8d530815828868a9dfc955059371c905b::d239a46109f84f7f96986d79f9d5e401a9cf965c::4e4aaa343d95de79091628a4d2aa37d61e57bc7c::ef379456a5c352c30fca827048d90d569584bca2::0b95434f95c48c712b4e2364d7dd38547cdc0a9c::7231329245a342831a3f6b73f8373d4c9e873f4b::dd7adfb38733bed4f6ea28cec8e303db0b807313::7a41c294ea4fc1503bad8e2e3e93b35ca10a380d::7657b15f46be8f2d2e3650062e815cc1ec968af0::95de9f361386ac1b14456754cc9036ad40a14ae0::86a5e2fc3fc9c3cd42e8b142c60787b18b02b391::2570988e742b33a0dca9ddd71a36ec968101ae29::b3ca7706ac24cc652c15692e55a778fbda04ff5a::daf78d812d8a91f55831abbe9dcb94e99d566d7b::db928483e7d1b141fda17e6a13b8ee15f8c01b05::e193f4456e16ea5a834154fbd2ba7b2f70230d5c::2d3f715e9ebeae3c5fc47083e7dd257887bcc3b9::9f3d8b838a4135d5ae8b14aee9e76438e7f3c002::c8195a5124ae00aab66dc403280659434170b950::3edb295011396b2d121cb1e394eadd202159bdf6::add68fa5662be3afda2507807218c25c33970c26::b6817a944896cf28a3183bbac8aadf6c9c7c2075::ab0c50bbc234d89c73ee1d4dfe8882c2aa3d4b0b::7312e3a85928d9136e000a7ccc0abe80a0a77a34::70aeab464f674a3f378d110d0057a6e4922f8ca3::1ee929601b010338c3d9f2665c44f1a75c560c7b::f94b625da8d871ede11eae5025df90b330df9e39::e569656018dd7484727405709c98e8c91a59abab::abf1f092c477c82e1a5df4cb4f50ec5970f44a5d::3fb122b05015081c9a7536c611f80231383db75c::0f0a10ffde4ecc357282e63ea1bfa16015e22486::34e93b24b64f1f2f284dca3d87536b4771ac974e::ec5ceb464fa2dff820be0bf713f0cd4459b0d161::b5447574bf9d880677b91e8ca907812fcf5c4b4b::e8a3b6a5fe9e55a00783e984f793424b293ddbe7::a79a846a86c7b0f658ba5f53b664697c1c081603::1fe3bf73cfd50e78b31c5f3197e296126803e323::f8a13dd00c06d407e5089ff70bebc4adaba07201::7c9e9e2559431097a6439a79cdad5806b4d889ed::b47c5a3567df1df984956d4ad8b25b904fa080cd::58566542b3ae4e8598c14307956ca1749d132ff2::2565689753bb6fff9ff120090ec49b5e7a23b7a2::a834fc9a55041c9c5d70f223021db6d9b208cb54::0f500b03ce4d3714fe7b6c6e282d79c8aad88fa5::4a87d15be2d3925604dbdcb9ec35a21adfe05565::c39fdc130d39729cb9e414cad59557317b29c1f5::97c82751c0a544af39b94703a43e54a6290b7783::e609740a83be2d4af94dffb0c0c14b1e9f658696::f275358030c7e6b39302f01ea364c95209891f7c::a578c9f3f3df0bc60908d2b5327c13b891d7aa18::
https://api.github.com/repos/elastic/kibana,13212,6.0-fix/percentageFormatting::6.0,0,closed,Feature:Visualizations::release_note:fix::review::v5.5.2::v5.6.0::v6.0.0::v6.1.0::,"Closes #12391. this is a reprise of https://github.com/elastic/kibana/pull/12746. Opened against 6.0 (some issues with ES/Kibana right now on master. Will forward and backport). This is a spot fix, suitable for v5 and v6. https://github.com/elastic/kibana/pull/12661, which is still a WIP, may introduce another approach, but cannot be backported to v5 and may not be ready for v6 release. ::how is this relatedto this PR ? you could also write it as `return !!scale.invert`::scale modes is something thats really vislib specific, should not be used from outside, and should not be part of vis::this is already implemented on the value axis. `handler.charts[0].series[0].getValueAxis().axisConfig.isPercentage()` what about adding a getSeries method to handler, which will return the right series based on id ? `handler.getSeries(serieId).getValueAxis().axisConfig.isPercentage()`::why not handle both the same ? (label and the value) so you already have set the eventData.percent when you want your value to be rendered as percent, so you only need to print different label in tooltip formatter when that happens (check is already there), no need to polute aggConfigs::extract the config to fixtures ? (i think there are already some configs there) ... also i don't think the whole config is needed ?::",73cb3831b1263f014bc1b8d1684a8d6acf00d0d5::9dd42cacfe8067d2c869294a8922585f1949a65b::
https://api.github.com/repos/elastic/kibana,13130,spy_table_headers::master,0,merged,Feature:Visualizations::release_note:fix::v7.0.0::,fixes https://github.com/elastic/kibana/issues/7211 backported to 6.x: https://github.com/elastic/kibana/pull/13224 backported to 6.0: https://github.com/elastic/kibana/pull/13225 Release Note: Ensure spy panel table headers update when new aggregation data is fetched::can you make this: ``` async getDataTableHeaders() { const dataTableHeader = await retry.try(async () => await find.byCssSelector('table.table.table-condensed thead')); return await dataTableHeader.getVisibleText(); } ``` I'm in the process of converting most of the functions in this file over to that style.::Not sure if I can. Looks like `find` is not defined `tryForTime failure: find is not defined`::Add `const find = getService('find');` at the top of the page::dayum....::Can we please not add more CSS selectors to the functional tests and instead add `data-test-subj` attributes to selection targets and use the `testSubjects` service?::,b42e684d842dcf37ddfeb60715c48c1c836dacbf::a928503b2c248bfe5e370b92316134af760429bc::ddc75197e888fd8f6d09c0808957d529c57340f1::88e2bf800d0122f759ba784b2b1587dd9ad09b66::
https://api.github.com/repos/elastic/kibana,13104,6.x-remove-inline-awaits::6.x,0,merged,,"* remove inline awaits * testSubjects.find now always returns a promise, so we need to make sure there is no more inlining * more find conversions * need to pass property name * Make sure async functions are awaited on. backports #13043::",d8b7aded3a0a84d2cc4d5de49a87889072ab0aad::
https://api.github.com/repos/elastic/kibana,13099,implement/es-test-cluster-util::master,0,merged,review::test::v5.6.0::v6.0.0::v6.1.0::v7.0.0::,"Addresses part of #8130 This adds `esTestCluster` to the test utils which exposes a simplified API for starting elasticsearch nodes for tests. `esTestCluster.use()`: creates an `EsTestCluster` object that wraps libesvm with some defaults/helpers for use in tests. It accepts several options: - `options.name`, required, used for the cluster name and is prepended to the logs produced - `[options.port=9220]`, [default is overridable](https://github.com/elastic/kibana/blob/460157d4e5429865c9ac6965ec17320574186587/test/es_test_server_url_parts.js#L6), port for Elasticsearch's HTTP API - `[options.log=console.log]` a function called with log lines from es - `[options.branch=master]` the elasticsearch branch to start Example usage: ```js import { esTestCluster } from '../../test_utils/es' describe('module/ThingBeingTested', () => { const es = esTestCluster.use({ name: 'module/ThingBeingTested', port: 9242 }); before(() => es.start()); after(() => es.stop()); it('...') }) ``` The benefit of this wrapper is that it enforces some good practices, like logging all Elasticsearch output, and only downloads each branch once since it knows when other tests have already downloaded that branch.::3 minute startup times?! :(::Rather than hardcode these times all over, and since they are directly related to the behaviors of esTestCluster, how about moving them to a constant from test_utils/es?::Why `resolve` again?::This branch should come from configuration rather than being hardcoded.  Ideally using an existing configuration.::I think `start` should throw an error if `cluster` is already defined, this way we don't get into a situation where calling start orphans a cluster object that was never shutdown.::Agreed, wouldn't this break if backported to 6.x?::It might have to download es on a slow network connection (like mine, at the hotel I'm staying at)::Works for me::Use to be making modifications based on test cluster `name`, but refactored so that all test clusters share a directory. will remove::We configure branch in package.json, how about making that the default?  I'm not sure when we wouldn't want that.::Well, branch in package.json is the Kibana branch and I didn't want to enforce a coupling there that wasn't necessary. But if you think that's a good idea I'm good with it too.::Welp, turns out merging https://github.com/elastic/kibana/pull/13149 does just that 😃 ::Yeah, if we ever diverged from Elasticsearch, we should just introduce an esbranch variable or something in package.json anyway.  Trying to consolidate the versions across the board into configuration::",c814b6a051d639096f55c03db87b8c51af644bcc::f4d78a21fd8e751afbe0c2063783a569e83df042::7bde396d976d47807bacfa4b1cf2498073ef2292::a027e79306a7bd9b20a094087e904dc09eb7e25c::875de2fa8a2a91d3ed685b5a084979f5443f5693::b66b77994652581dd8c65fdc55d2710101eaa881::f18738fa65ee395400f5a8bdfe5e281f66fc85b0::a1140fd02ebf5710402413f80d4f51f646e0a2a6::53b9dbefb501b358df27dec86d71e339a25bdb16::c8dc548dc6ff63e8ab1dacb869f6caf3074925e0::6452f7f5d91fd26dd11724e73f3a022083276fe3::a85ca633b6ced4e637fc1cda0cc0ed19a591da25::357c7e20d5734dd7960baf212fdef35bc7fc1009::ff8cf3a4f6e6ac1d71254f45ca898a364205703b::
https://api.github.com/repos/elastic/kibana,12994,5.x::5.5,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",79a16f85db4dab86b43f49a8f93bf8254c3d71bd::a5f1e10b1e6cf7176e0789ed3fca7a81e5e95fdb::ca2d5ce0b39ee3e16f6c397c8ea6f34cbabe75ae::9b9eed748eb979933524fc6ed13a5c2a68e21a6a::624104beec906602f836cca4df9e54da27b2d2d7::7d590505d20b6a36fc11e2e612948b8b8c8ee153::2d8565540fe4f46201f041d548e3295cd488a9b0::faeafa54e3b770f094d0510e27d19d609bae46bb::50145bd07a160dd64fb73c19ae927dce681a4a16::db6e2a666d5365fc356bcb0672abea3bbfdd137b::ed0fa68766ef050e1203017228915320a54c69be::f45aadcef2a318e3365193745271663f623d07f4::0370057530926c8d82d6f80420f1de9d74de7d5b::ac1be5dbe272c5432e41dd4c64412224e7c08101::31f9b70a48ef2346def406e5c1cae5aefa531675::8a845a094ca32c6eb4cf25d57024f2c40c8c0e64::3a215e1cce6a22ff4b09859dc30e27b8f622d76b::b4ccc13ded72f1a6333e8b8d86e438826515df48::7a13fe1d4b4e7865bca2b6e9a39ce8ae1d2232d1::f2478c48c0012c3d883f3e46eb07e6fbd36f4681::b4ea18e76eeffe9e76fb5cc9d1186bba78767494::aae411dc6f1b468e08c7f572c745d34220abf954::4f03e8ff7865e8f4c53328eb7b295d5c49e1a5ad::d7550420dd874f22af165e24f798b75e2689e846::f7e9b3f89439b11e6370a705fff4ba15ab3f1d1a::67865e8c5df38f7731218faab5756cc6b8cc5a93::4001d6f28c8945e035d6368db294a77298c33412::81b7f8493bfd5db03210c46a341e366230db8558::821789b8874597a59dcbff2c8948adfec1196380::2c4fba3fc2889ec050d916519445b117435ccf77::eb1197743169903d4f84ce87dcdfb3e4439118d9::faeade72fdde8d61bf434a509fa6a39494636426::1734f4f14e14316cdb5f323331f3b25c5a529456::45aa3a2037ab1d53fb87a3be10162609972ed163::bc3f3fa37650456a42a8716566bfa61fff42194b::464358618c23fc7c519f2a05466cfc618068375f::3916956e20bc62e0561f09063e3d8ba2cd6bd84c::db5f3e9076c69a5a4ebb403eed2df54c79264350::f0b8a614be527fabec9ce613d8ab973664c7a559::437ec256591efc812d84c0070fd3b70be820dcee::a91270fa869a0a5bb06ee967f20fd4d08baa07b4::a1d17fceed87b4c7ca77b222121ddad38e157fae::f2469f1ef66d2faa4cbc59ee1457d43ebd43fd13::51b56ce3097b95a9ec02edc77da3d358bb1e53e7::c694516e388e3daa20a5ed9d14b88b63da3e53c4::4298a8839e066b60a9f0653fdbe2cf085ce213e5::d7c4ee8839f70843ef9833c18bfec20cb956e70a::cb674df3ad0afa533e47af4a38a4a26e4cae77b4::af9c9ebe11664e5c6080fd15e8519b560e55eda5::4cad59c5ff3cb29f5cd465373b6c207a53bb39d2::c5bd0c8599880e685c6c225301c1e27aa394843d::48db34817d053816b0663802af4e2fcf72269810::fdd1075cbcbc29a0a6365c5815d4534c85810f47::fa53e2ef9ca3450186f63aae95b057626eae6907::0a6c22bcaeb55c8cff4a52fe68be49013eaf36a0::7798ff8b234683e505c165d7ea4cd33ea5c94d3f::c0244378cc038e1e9505cab7a0977872551b9d9a::8e0b127598ac8d46283849d5c2006056beae2bda::cf4e1d825afe73685e1638239b4078d8fc6c55d7::367ba7238e892d23feafb227cff3a6ab42a94e74::a25c6bdd3a9e83d3ba2836df74495d866f6ca83f::32a07567d3a6f0acfbf01bc42be0234b133a15d2::9828ebab0fd1b8e07e635939de8c47770cd0beef::0462cea6db5cabd02d4ffbcb4895197ed3c754e8::52f13384337bcfca4418f0d3b5e6265b7df8d349::587944da84660364a05c1749ac0f9574bb973843::5e5ea2dd759878ef3ce284a58d194622c4a76277::25bc932012cc4cf64fe57933b502d74619ad3e51::5280373dccc4da0f4602657284a5b9d774733417::90cab8ade7dac7833a259ffd62516e60431718e3::36e56ce4ec1c09b9de52f157697c866eabeb1194::23fb570af708de368514c427bd6e2ef130376fc1::6393fb9ab4288d59387fc1504049f1fcce4f206d::83d25fc52a8862eb589593740ae57217048350f3::5478a8f05c0efdd548610dc4c9a06712427d7980::3dac10abf18174bcc64333b2c37b4fc0843c4a2d::6fef8a632c192915ece9d3a60139b089bc4377e4::b7b779289944775b4b88a77eb1018d4d22dbe2a5::f48d8317288c14365f2c04a88bd463d2a38bf697::683a29c4224e3fa1d900587feaef8af4b7627ae8::dc19cd1010cbfcf866b1e707fefe0f65e1f0c629::d2675d4b27d0cb72bc92103aa934b584c1876486::7932e6218e81375c52a7b46f958fe1583bcda8e8::1cd259738eabae57e7e1a4a7539c6b144ce3b06f::f0b6e7d85f9ea4ce3fbb1eca20404d1380c8e4e9::3c64283dd1068d3adb8095e8945271bd604d2413::9b64d91e7bf26be6d9e7a8e23e5cec9afd9b66be::8d1bbd92a6b46137b680e6838b1622cb1d90a5c6::929aa8efae20a19e38dee8462cee6682035db7cb::74f353a299c786a597a9fcdd9e2e529529a13685::84efff0298afd0fefab74703ab125b63484d9b6e::e6480f881834b8deab695e3faf84577ff942c066::89d3462f81bbed1f571936e811e64a6463d7d020::a63183766a0535cd75fa93c5f559df306cc09d42::09d0d7c1c7e0315f47a1e9840b9cf9d1a571023a::e7c6dd1a9763ea9d75e3e61ba8f692784e81dbce::b82fbace762e2f6ecbf90ff4ec04d6055806d0af::e3932ee12914dd70a14cdcdd7d4d73ca0c3019ca::89394b4490896606f372fb3af83fd00152a11bc9::ded1eec3ac42ac9256a97fe6e681ecf754d9fa03::827142e64e68012369ba7b7fa853d82069e15892::6c7ebf780da1b8ff765a505a6e920107d5672354::4a138f42708658ae9981d92f86924313b2df6c1a::6e76310ba3c4da3080d295e907eda55338bdbbd8::46f4f5709f901ae84f2708fef98e8d3875fdf88e::11099398e80c68517c92183ba45d7a32c34a4f01::1d284b5f6cfd468f0516237f0be949a29a490014::edb742b65c00589ec4caec7f075aed9c026618e3::737429dd6a54b6994bb2c9ef0bbdb3e98df7bf16::7907618d0fcf61263f50248dfa284d207c7cafbf::aa58d85cf4b3ab8760577ed9d9e67c6694f5cdfc::ddc2bad80ff9e950042e3a1485bc8c4faae50464::aa1a52a8b50244fdef20e6d407d66de2db0d2ec5::1f492f050787bca6f36ab1e190bddeed0b80063f::cf5a044ef5914cfd4116cbc3f4c853db4753b346::81d6437be26b345792a95eb919736e9839b72992::
https://api.github.com/repos/elastic/kibana,12978,backport/5.x/12794::5.x,0,merged,review::v5.6.0::,Partial backport of https://github.com/elastic/kibana/pull/12794::,ca0a175bb8949e5dc91c465661e07594ffcfecdb::
https://api.github.com/repos/elastic/kibana,12923,master::master,0,merged,Feature:Visualizations::Team:Docs::v5.5.1::v5.6.0::v6.0.0::,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",37d57f6eb2d6d5ead391464503feebeb53294f59::
https://api.github.com/repos/elastic/kibana,12849,5.5_add_attribution::5.5,0,merged,,"EDIT: This is a manual backport, and required resolving merge conflicts when backporting. This adds the attribution strings of vector data files to the map. It also enables the map to allow for individual attribution strings from each individual layer, so attribution gets updated correctly when adding/removing layers. ::",33af53f7e6e8bf9f4e583ba0bdbf55693f753acf::
https://api.github.com/repos/elastic/kibana,12845,5.x_add_attribution::5.x,0,merged,,"EDIT: This is a manual backport, and required resolving merge conflicts when backporting. This adds the attribution strings of vector data files to the map. It also enables the map to allow for individual attribution strings from each individual layer, so attribution gets updated correctly when adding/removing layers.::",aa1b82f332ead3e9f12cfc1b096a29efec55dac1::
https://api.github.com/repos/elastic/kibana,12794,single-type::master,0,merged,Team:Operations::blocker::blocker-ff::review::v6.0.0::v6.0.0-rc1::,"Technical Summary: - Removed compatibility with multi-type indices - ES Plugin status will be red when multiple, or zero, types are detected - devs will need to delete their kibana index or use the migration assistant UI to upgrade the index while still using 5.x - the `ensureTypesExist` part of the health check is now `patchKibanaIndex`, it no longer creates types and applies all patches in a single request - `SavedObjectClient` - Fixed `#find()` support for filtering on specific fields - improved test coverage by breaking [`createFindQuery()` into pieces](https://github.com/tylersmalley/kibana/blob/9f64888c32b535f319b9c35a6d4b120848f2759f/src/server/saved_objects/client/lib/search_dsl/search_dsl.js) and testing each individually - Removed `normalize_es_doc` as the abstractions was subtly different for each method and seemed better implemented inline - `fields` and `searchFields` must be arrays after the API. - respective query params will always be cast to an array by using `Joi.array().single()` - `server/mappings` module added - includes what used to be `ui/ui_mappings` - exposes an instance of `IndexMappings` on `kbnServer` that should not be used by code outside of the uiExports - all mapping properties (except for the [defaults](https://github.com/elastic/kibana/blob/9f64888c32b535f319b9c35a6d4b120848f2759f/src/server/mappings/kibana_index_mappings_mixin.js#L9-L27)) should be defined with `uiExports` type `mappings` in a plugin - defines `server.getKibanaIndexMappingsDsl()`, which was previously exposed via `kibana.uiExports.mappings.getCombined()` - code that used to pass around the `mappings` object and the `server` now just pass around the server - added [helpers for reading mapping DSL](https://github.com/tylersmalley/kibana/blob/9f64888c32b535f319b9c35a6d4b120848f2759f/src/server/mappings/lib/index.js) - `kbnServer.mappings` which is the instance of `IndexMappings` maintained by the kibana server and extended by the `UiExports` class using `kbnServer.mappings.addRootProperties()` - when in the context of mappings management/es index types, `SavedObject` ""types"" are now disambiguated from es types by calling them the ""root properties"" of the ""root type"" of the ""kibana index mappings dsl"" - ui - `SavedObjectLoader` now sends `*` (not `undefined*`) when search string is `undefined` - Converted several uses of `indexPattern.id` to `indexPattern.title`, where appropriate - Added a [`mapBreadcrumbs()` argument to routes](https://github.com/tylersmalley/kibana/blob/9f64888c32b535f319b9c35a6d4b120848f2759f/src/core_plugins/kibana/public/management/sections/indices/edit_index_pattern/scripted_field_editor/scripted_field_editor.js#L12-L24) that will allow them to set the display value for the index pattern id in the breadcrumb as the title of the index pattern - Removed a stray `async` function that snuck into angular code - When an index pattern doesn't have a title, the id is assumed to be the title (BWC) - functional tests - updated `kibanaServer.uiSettings` to use `SavedObjectClient` - added `kibanaIndex` service that fetches a copy of the `kibanaIndex` mapping and exposes the name of the kibana index to tests, should they need it - `retry` is now in the common services, along with `kibanaServer` and `kibanaIndex` Release Note: Starting in Elasticsearch 6.0, you are no longer able to create new indices with multiple index types. To accomplish the same effect as index types, a new type field was added to identify the document and the value mapped under the index to allow for strict mapping. Example ``` ""mappings"": { ""dashboard"": { ""properties"": { ... } } } ``` is now ``` ""mappings"": { ""doc"": { ""properties"": { ""type"": { ""type"": ""keyword"" }, ""dashboard"": { ""type"": ""object"", ""properties"": { ... } } } } } ```::This shouldn't be necessary right? We can just add this to the `doc` type?::When a document is created in 5.x with multi-types, we create the document with the id provided. When we re-index, we are pre-pending the type to the id due to uniqueness only being guaranteed per-type. Currently, we are utilizing Elastisearch to provide the unique ID's and if we attempt to create a document with a specific ID, then we continue to prepend it. I believe we should change using `uuid.v1()` or similar and auto-generate the ids ourselves. This would allow us to, beginning in 6.0, to do lookups/updates/gets by ID. The change here fixes the issue and I am working to implement and test what I mentioned above.::can this be reverted too?::yep::any reason for the switch to false?  i'd think the error messages would be more noticeable than a silent failure::unrelated but it caught my eye, thoughts on boom.notFound() instead?::Assitant -> Assistant::we can probably remove this too?::config.get('kibana.index')?::I like this more as something like 'Your kibana index is out of date, reset it or use the x-pack upgrade assistant.""  I mostly don't like the v5 part, because technically it could be v4.::shoud 'doc' reference a constant?::Yeah, i figured there was a reason for the switch. I too prefer 'strict'.::We don't reflect the status of individual requests in the HTTP status since this is basically an mget, but if you're thinking something like `Boom.notFound().output.payload` I'm indifferent. Seems sort of like overkill though.::Not in the functional tests, it's not configurable there since the server is always running with the same config and the archives are setup to use `.kibana`::is this expected to pick up nested properties?  ie if i want to add a new index pattern field.::We might want to change the wording `reset` to `migrate` here. Once we have documentation on how to perform the migration manually we should update the error message to include the link.::Some of these changes, like this one, will need to be backported to 5.6.::Not yet, it could become recursive, I tried a couple things and none of them were great, but we could totally get something in for 6.1::The idea with `reset` is for people who are alright just deleting their Kibana index, primarily devs who will see this as soon as they pull master... I'm not dead-set on shipping with the verbiage though::",83b33e14865e6e0952a15d9ffc0486b4d6a40dc9::11628981179b28e4fb51885e5520af03d6d08920::aaa68b5b72e66f1eb3dacb09d350675a8dc88fac::7e15a38a8fedbd41b1ad9c215896580e5fb3cba6::bb486cc39c29e1a09027f97f3b409751476bd756::2e7d9f7693bb4966c1ccfdd9c376ac7f84e5d9a3::986b39bc0dbfefbb28fdaabbb1b2d492c1a5b161::1b9aa5b6d9b1acb3c5c35885dd7296f14b368d42::889097d4f1f8dc90af953f1f3c5397f2ef4b828e::fd06f0d2c71cf373d4ce01c765abc93cd35b5740::8719e8068f474a188d4232967e191682e7f629db::d849eb2d72e7bf465b3437bd2470070918c6e14e::5da984c6fa0d381c502beb1a97306fdfaecf8e20::865730b301b662a2a66de0833f7e8c3c466c0987::b97fbd76e6b2c5b2b36dbdcbe09f3890eca0ad49::13674ad84801225b7c81f52770c9c150a5abc5df::8ae6ae98e91cc2c64f673cb539611307fea88e29::27e16bd894cc1f901c2aaac4fdaf0f5ba543ac93::4de377c407dbfa1ef82333f9457eb261b7691def::bc35c25863c9c9522f65a36054e2f8df0d2cc9cb::49666692ce418680e9c18fa2ab2ac8dd14379e86::9759b38cdf7d99f08ce3210e43baa00e7f8c1ee7::282b963b27465f981a7e2dc565c5bf75f4e55f1e::c8480dc87a949a4e318aa10dcfea6ce50cd584bc::bec9af5fedaad02ffa547d0d242b5a498f8281ad::adec1fbcf44792a395b163d80b001c71f5e5d33d::45cb298e501b4cb2960ee4b96d8a3503fce6c123::bcb4e40ac379b5553bb2e8e1fae4af3bd2b1855b::20316794ddbebeeb1f2d24296cbba0b3e25f6f1b::96e11904c2babd4e2fd076dae2f6aee363f9eb03::d85564c1023041ee269564212b4a02226bf44e44::f59a7201e65f8f2f1939ff659b5043e6c79314e9::19b80b9fd2eee43de25478ac76eba753d75ce822::badd28d9df37d7f166192e9288e50ab8b3ae22c4::f6d0b49404c9907cd63433e3b4d2b18d7a97fdbd::72d8fb5fb84dc5d69906438a92dab0f62a967fe4::4e78a0f07f9bf2d67ee39e1c0e79337e002beae6::4b70e935d50282980fb636aa8ba364bf67fc825b::6f8d4b01cd0bbad7c04e6cc1f5e5b49d49981f02::f898e1bf3b47d2ac4002d1676f0394b565a3117d::d5104a24afed7f916591d550eafc970a0859172f::2c4aa768af17fcfc26aa7a5e7e3a54ce6651b026::2c9388833eeb5cff80c4601bd483c3570b0dc96c::d5cd567797d224bc7e7e01ad04a2328c512c6610::57a708ee5eb6de50fbf2e2ed960b76965b2d3bb6::a8fa7cfeb11e398c01dda75fe2ffa4f7ba98d63d::6317afd66bfe252c69bcb7494926b94eff786f8a::12ff778e5f5eb02567a29b40cd146fd8c5a6905b::d6b20f0719c0c8593e86ff498741f4c1bf3f21c7::098ef57124f9892b1880459e416f1929b6ed29f0::6c1adb4523680cf066626d506d13bc15c2cf1c77::89bae9a38f36f2672af8d46584dd040e9746b769::179f91532ea82cc8011d234d9ea0c4f77cf1af87::fdec6fae43206bd6834a7fe1975c94daaa56441e::9f64888c32b535f319b9c35a6d4b120848f2759f::12640d5d87b5283b3a0f88cb76c3280c0e5fdeb2::cdd5a1105348b33080eff3495adee60830aa7105::542e6e0991cdc90431ee5334cccab18ec295d897::8fd583bb69754878011220f2812f937890bbfabd::e9ed8907f21eec9e93652de783aa3b95fdeeb370::bf7772e9bb5de72fac8b1eb270935c5f0026dedf::fd6e4f7928642fb76472cde409b0b718103be1d4::
https://api.github.com/repos/elastic/kibana,12750,5.4::5.4,0,closed,,"update from origin <!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",9d532b95ff2205c1ca3dd9858bb5d0465351ade3::
https://api.github.com/repos/elastic/kibana,12749,5.5.0::5.5,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",6ee2aab014ef5971823556bed1ea99dad519278f::06f66eb2fa77b6014ac96685e6381853a5ff2e67::44c8d2b7093016599be0e9e13f272e981e7cde53::383827e265a8674b362dc8a459ab67dd03ed3d36::87f6bb9df08a896de4e4d503f70ad7482686264f::1602589b8fafcc8472325b9f150dc55e84bfb3e8::00dbd5cd15ddd716080b0586c2d16bf1a18ea374::2b21094c83e3aa2b802df31382784f7c9be66e84::8e3c0ea0bda6e3c57ef7123cbaccfb32c6a58ace::688fbd013db7fe312cacc3fb94706ae5c213184a::8682b6e36f2ea7137b894b24cc25b96a1c6c536a::5983d8a4efb89c65afc9870789ef526e88985a5a::c919e072f8de7a4b9adc507811dc411e9080bdd3::9fed90da3bbb3edff4762040d6487a37ab371b93::4eb678e65e12eeed50e071752980cefc4b8059b7::788fded8b0be0fc21760a883887145d81e0ac362::35f0d0fcbc566cc385a87897d16305da1884de28::50b899f89f7cf7313654a8b73a196c410477b32c::0a06bc3f0894536e31a71df63cc33cb2da87a383::e6b5614f2088c6926aab835ea5d83f6f7739cdf5::5f026453c11b7ffa839656e56b72e4994d676f29::940c4e2d0209a6961de4b38d0b5ea02f2fdb13c1::d17cea12d5c8a000171b78a6c0dbc0080dc45a6a::f182a4f87ba3b2836e970889c1e34f90bc7c0253::e79b729afb692b397ee36d20b493290535c84ec4::5d28311ea82bbdc8555a970d28432b19375cdd5d::3945f0d407eeb50cd420cce09fc7b7e56467ee02::a3c58af7a8f969e38bf10364f20241de24f78cbc::5be2414faa8f3a5c1a676bdb79cd826cdc6c359c::34e84808732807d5bf7d325f90df0795cebe80a5::54aec985b508b4744cb12d6f40fcb6ec89c2ee86::01e5c5d7c559c4effa6a2c7f1b7fb0a57e6a2fce::0b6aa598d4c89c75c9aa6c3084303a2296603b8e::f0a2f9a4aef7bfc53cc7547b65efa3f7ec81d2fa::f4525210528210ee58182006b2b496e76e0bbfbb::7b979a3cf352377f2fa6b498019d5aae9a97541f::cdcfe928c1a24445dc416099777f954a6751d02e::8b101de6f25f32aed4f98c84f5b4b54a5a39ada5::2a3169423900907106d9f62d7520217471453306::badf243732213bbbbb8afd7a9f8122c2c16e0f52::9ae5aab6b9f6cdaa879663e621bd4e127fa91717::a09ff303b37a0f895a9a05fb9b89f16ec71ba45d::7e079b338c5fe4568130458f365bb438675f7c42::92b92e5642899d8091273a619ed08c03017048e8::fd4714bfa75ee7d57a5e652501f76190d642f4d9::accee873b892b16c986bf847ad001ab038f701f0::2b86b74ab83bf13bada3821df3261ec8864d5d97::9a7dbf8600a4139ec6f29a84c610ca613c86c770::4a802462fcde697b00fdc368151d5baf1283f8cc::1cff416495c5e2d65f3952d71048b0321a5ada77::55b97882dff4a4ea01f1d84a69003ff0c68ac6c4::79e96ac5796916af9953f0d855137702c3e6273d::75afc9fbb024df55fa01acd1a4c2f76d44961746::177c801807d63fb536c4ea13ccf13483f27a52da::dbc55cf66418e0dd7def4f9143da12a76d5a9b74::5592e14bf0a6ff0f05c08e99c608f5fcf61a2d99::bf75b01dc6f3df33d0608069596932515505c196::e8b5b939cb26aebcb80998af8d8e90a6bfffd279::7dd37e2bd8e5f489364a5fcd2e8a0f3542ef1021::f0f8be56488cb609b8c14e084de85ab5af7bde39::fcb8c63567f3e2594f1004be7526fdb4f5f6bdd0::5317eebdf967f88e23e4f5dd1e9b37d705523e0c::1e80ca76f5d59de46ad3c29de31513667ae2802d::9552dbbb8241cf81361ced4aa69af3d774c41c0f::ae3ea80bca1b6f9f04257617858f7d2b36a5f759::c127e9e7131d9c1e8930b46373204ecd7d9193b7::e91efc34bdbdd1fdf58e7d00d48a06fcf66e1b88::9816c56413d5bc8d13db47fdd425925cb38bc06c::72dd928bd332cb04db60a5b9edf072abbc925a33::72443cdf2a5aa62a22babdcdae7eb54969e2d774::29ceef66f3f307e585ca965177ff670fda3a3669::9fef93103a1d2bc1ffc52c6ca4e9c0390aecdec4::b665880b999e68b70a8816498a322eb112403551::0b56286bd779ad21052da8b3d60a3a58b8b922cc::229bdf7d0278ea7e7f346d391d26806b14edfe1e::4dde26283e319c2fe4f3fdc037dcc42e6de33459::efc7fa1f7507c650c0db24ef08477cb621808e97::281fe71347efc589bae801aad32a300e5a3ff2f0::913ee1f1beb8bc5acffcca36fb298452eda6d337::a75e9d89c93225a664ed6e972556b3f39236607b::aab5f38be78d3ce80dc8402cf234fece4b6439a8::154f52ac2ff56eeac44969931ac7823971a9dd02::
https://api.github.com/repos/elastic/kibana,12748,master::5.5,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",62774e608cc76630232c51abd7e82869eb23e0bc::7ac2d725919857722e2feac2654c18693cc314a7::14ed2e55e65626dea65673fc182083228bbee85c::b3eb25d64808270fc466715a5dbb67398aeda60a::c6da5f67d60a9ffd96788bacdeb9a6d11fe7c8e5::90be7e882f434eb65b5b3e4b66d99078579f9e7d::a08f0dbb5a2de2b169474e131486d758cdf9e1fe::9da5079bc6636b73518f3a35cbeaec541674fc3e::b1a7f22be392a3f96ac871d7076a0c852243777a::7c8f2e64eb8e14cea68fc8c15d59f8e1ec0299bf::546804f40c9bfa99a1dc6a2129a0a8d853c62f1d::06da1becec59f416a3696843d8d5aa432a84667f::ed2a0085b5bddd2404be45b7e091ea0b0cebfed2::888973cbcfcf6bf0beef3dfc931a30aa87b1f27e::f398dd2368769aba5095b111ac487342e25d5117::30676a4a9521b26f1a86cd34b49379a7943eaa14::b76a871790da36e2533b1a41bd7814ab01f4c650::2f1afca063b02a0bad595f17df5d9cb51899c13b::d70e17c1a752ec41998ab137fe84d81f0a73a275::aa579ab73a14df7e97b0f1b93e70848d0f63c9a6::22f8176e432b0b31f2e242173b5c7f8db5054863::3fc88df6700a5b35f5e3f86a06290dc79d1f95ee::cea1b39b607f5a132398db9c01edaa3b11ec25df::1f75cd5e2b73b539bf3b75c1040307171c4f162c::4a35d59b09519d609f2d319f841f37ba123c17db::67a6d29606fa1aedd67eb33b8a8c738c7a41b48c::10c79d90ded673ddecb3ec329ab2415a204f6d99::00da1341ac066dcf082ab07d27604bd3cdff5827::c13e786e1018f5fe3eb8f0144cebd69ffa9f1090::74641d7d850f4b2ec25de9d4a0b5a2f4a1d34821::2a0d3428ac5464bd02eb916b65e442fa05ff5134::fb7be6229f46c7969b6dea5a4929877f44796900::2b24b5c48829a26fb09c6847bfbfbc6bc6c5f451::6d254a3cc9074ef8307e8f4f2fc66b5ccedd8589::ca3d3e03afb40469c20ce6545cb821b9e8a946f6::a2053b37314fbce5e07b7182591d65dc833fa978::8eb17b330ec45626ab95f65965828b21beade840::38f6cc876cdc27be441a7563c9b7a8c63927c293::006fae00f71f7f06e85750c1f58154c8ac1e6d5c::25e6435792962373c0bea17bcaff34472a7643ff::e39111a2c5fde681e4660e8f9d5eda4ae2655e82::2fed5d3f221577f1eaf84c21f8cbcb1d8985a1ab::6752dfe1689b98fe41ba59cda47ac5a1e04fe7b8::6ae4a07cff7569b3038551cf85fcb0a0f617e42d::90434765c092179d10b589b7f6749a1eb34fbb93::b79334b964ff2005e68eb72ea14b7cf678ac7880::991077051302eb322cbaf2a5e938ffd52e8388b8::49255e04a989021925907715a9d6d7861d8c24bd::5aea4ff210f9a353d94f68959152e74bf8aa7cec::bf63cac183e54f64a054eb781ffba5708270710e::ea838ec9004b0f548c26ca672afabb4f4fb47109::da7ab525ce89801a90f0b717199a1e48ddd6f462::766646c5beb9872378c314ce6d75b5acd25aecaf::918b4181a6504426f1866034dbf5c76a45e5221b::1b1e6838e857ff7f8d0f8b9f65b1546183f2fc3b::6ecdbd092aa081ab0dffeba6a2c5916e24b6046a::3ff7d5b6fa0827f55496b34654dbf116486af692::90bccde33b4fc04661a5844b12e5ff15bb4c5cec::8c1c617161b3aecdf4693d03c96c019c28308c6b::6b0aface7a772fa12f44cc7df949f0006eae702e::03ca71ed3c830d7085704a1c4a346f113385bf45::17d88663e1ee3500b4e9d98552a3f8a4948d5bec::f6ab93f91f9115364023fee0f7eb4d0e52a29144::925a953338d856d56ded98664960c9ff3e15b291::811ed5b5f528527039f19965f2e38a838898c051::9fbc39f21aa397080cfa4af15cf2dfb25925e7af::945316cc154823444b9d0b921661017d914a2204::cb1aeaf3e6f494e16b1d5b79f66bae14c16178b4::76c9e0cab4ff81079067618a464062ee77fd72e5::b8939ffdee137cfb3b0a3deeff33218a6f55fb41::a37232883144d9a0c49151335295206b714987f7::d6e15a7a1c07a24543baec1afd9e8b0d607027d2::0c67890bd96f3e4c4674cbf3bd84093e6a306805::9f33293e5c45f09feecfefd0c0a0ea9e14317d2f::b5049580ed7f593ba472a7e2dda34ba0759977be::be609d95059f54a1d1481d2edf48460ef9ca4996::c3fc467a140ff1b8aaade5d5ece98d789d064e55::45eaee58ba61b81d83310cabae27a1a90a6e96ef::e96a8d8273a762ca220dca38da309ee3b6f924e8::b7d11c97306585e8da639727309afed402dcb95e::0be7acc0dde2d761243c2142246d13f7371e9c8b::6d81bafe3d7179a4033496078914aaf962dacde0::3a6e68a601fbff84cdd49f483d0a7294cf412db6::753dce8c75fc361e926edf2393e48470fe78ed00::d2c791e06e7f7d8ee20beabc710222d8ec3c61e6::1bec1f28b7b8c2a9192149c6b6d81ccad479c2ae::345b64924d663a4dfc88db69a92f9a5fd38ddd69::a605b7f478147e8e69b21330049b9b6094ae3049::69c22889aba8c88ab39c38ce060c60a2fe6e60b8::3eeecb73818ff873aedcbf02f2d1ccc921098428::80ba3a52b0addf73f09360284987a234df9510b1::0c11a8b1f5c923233816917491614023859b6ac1::e879c867313d10313bd508c607731f897a502cb0::40e32f2b3748544782e3dc32ccb9478d64d250b2::ea45885933455d17cdfa629db5431dd032681206::6c2411d244e9c90eb84e020b60c5c571b5f3b451::b6b6e8be62a0b898001b7755b6b0886b9f4e5eb2::8c4ed2a1ec2f57cb92c534dde8df0229990a22d3::123d45e80b7051da35044521bcf4ffa70d0fd1b3::3a8d08614359c3a69c1c1235b11439fb3c12e2f4::e320bec8e3ac56265367dda1f14217c3a60e1a39::c092c4d2883563a9e22802a6eda085b1b40defa5::bfaaf1585cc301d93e8b6c1eca779356d4b83e61::c643c3ac71a3bcd9ac81d6c6d435cfd132eca283::439901971d2c9486aa4a99613a0e6ca0614f0640::9c37e6c4c1c89a0c311faf8dbbaad008ac25c612::bd1f63d0aae2abe405c027463675790970be69a0::b756eb0f8c9ac1ec9c45fe1568cc35738ed076f9::476031b4ea02e0b99d4771616a400e6181e77376::f72e7269dcd62ccd97334e5719d59984f29b17d8::d183d9ed71f5878ea0874dfb77bb94546ea4727f::5a6766bb5005445373ea5515509c35fc83f6deba::8ab5aad846b2243ccb38f1038874a338eeb775ab::d83fa10cb615ea735291b4681d516b08777175ea::bb40d5084fda838c38b7e6c71acd901c62fa6910::9317574a3edc5317c1d27834ed2d3dfbc6fa7276::788e6c650efe3f81e338f38e5dab569f3f04299a::82b05c4199179731c72cab8046cb3a296d82dc40::00d11ea07fd21d75671bd3fdeada9bc541ee1a28::b5d1df929a5aa67c7eaf6adc51554d886cff6148::b5269cff105442115002d50c7daa68eb4eaddf18::4209774ddee705c879da41a3aea0d7ebcff6f6b6::b79cb08a2895ce44e7d3f309333e7d219abf9f82::363bdaf22e62316dd4c1a18432bafc776320af59::3b4d0b26e17ee1bc78bd30bdf6fc0ab5cdb9f723::ea7bfcc19bd454f1e9ed1c5da9f9c5f05620ab75::55ba578a1e3db619b62c64057b24d0e6ecdc84e9::984aaa80cf8207b830acdac77c603a8b584e7707::8694acb9e471dc5c4f6c476a8ef48eceaba27078::2803fd333a63d45d23d2ec966a6866a335d9bd1c::5984a4a40bed0530c33f731cd99382e786e86dfb::0b285fca04b7bdea8bf9bd9cdf0da57f02d9f6cd::857eb3aaf6f7ca80467c260a557a9eeae9e08afc::ec984473cfa86e4ac3ac3e9b2d40a4e213741348::c30d8ea38ccd0958fbcda420714df84da0023ca3::02787e3df5a2c4929737321472140701ddfd392e::fcf1f5089a2559e6e295c79b26a591d72547a2db::73f2ff513a90bbf2ef0cd43795e54c5e507de2d2::36ccbc1465b5f2615b7ab938c1ee37c61c9fc77f::1f76e7508e4c5be0962aa8f514c0449cc5c7620b::1b308cb69a2185d8394d1aebff26d00607190086::a3bfc2b6e838e57cb36b572415e0f772ba50e6a7::35fbe2308f070560bf8fe4bedf4919a6c0f759e6::144cf70cdb60da3e6a8a553984348d5f2e008af0::96ab4a97c3321a0339a8c772fd9cc52139c257ba::f94859857e4d2a948325008ff90d2d7aedccd81d::7b2874d518f148cfd245c22e2639f5498f8d8239::fcb3707e9f65288e44c2fcb3eb8382f475770fa9::5ba57f7c629a003e6f8ffbf88c1b40d189596b2a::5db50dec1707ac4cb7c872be9d856c60bfc07b10::d4c5372267cc9156b753778339510079ccd1a047::432dc8f7f4b19693267f9e2a3d55133c276936a9::ac84ffcf52f1185268ec8094ad8deeaf64e6a6c7::01e0bb04254aa508d8eff7b8c14225cac8e3917f::26a62642fb05eb7473bc21c00c85d8b5fe53fa45::8ef383e923d5695b5d6a7c5830ec706699b61148::2e7b202fe5e55b04a0516976c4108071f69ab2f8::216386d5c657fabccb867b90a41db20665e09627::e227ec782803f71f0590e6d20687e95d99546adf::c9eb101f338f1f131459c37c2d21815d86d37476::eb4b22d139d02cb6cd8af67cb4abecdd488755e9::616390da61d601f819b5756eb0da5725067a98a1::8fca519a391f8c3f3a38d180fbb4b7e56e0fb9de::114a014866dcba4f6571ef7a45ddf1f87e8845ec::1494278a7edb5d30d85c12018a02abe1d2ced7b0::e6896ab19aeb662dbb518d763fb8226ac6f79e0b::14e38cc6ca8cc31e882f04bcc66ea7665054e981::e5e939f536c21fc1d9a89201722b8c3d6966791b::f76bef46c054af848282cea50233b93de3c2de88::e91c99f2b236339c0f12819974a9ce9d9f18503f::4c6c401576fb0fb41b52b95a12d9559b8377959b::e6d3beaee3cd2652efbba2b35d371175c0cf53a8::06debb57096bcc1e090ccd92d537fc2cb6dfef02::055e99eaf67c43befbdce17f91bbcc188b8af2ba::815b082799cc42b0a66d52689d901525b5e6f182::b984a1966b1cb30ffbbcc50238be11379b0802e9::16f55d118f42c2d84c360bf5b56ab40ea8656fb6::f15477a82c8f5fe41934b6b1e993c222412e2d64::993216c0991adfd2ed3136db9bcad54af588a802::536be5d5e0b4f27d8258655d252b2401d2fc0af2::1b1605edf9791542f9b6c210440812d3fb1962a7::a25d99d2100b017e8a4e350a168155fa1e76196f::b5e64894581f26aeacbd5a59087dbdbaa6bfd785::24b9b229af37b1858a19096dfc4cab0346ba8993::08cbcb75b953bcd22fe3044d615249db76e769d2::36ecf130add6e150420da0105552dfa4a523b01f::192fc10b703d19f916fb8400b6711e084de22c36::d81e7c67cb3e59790b7db3676491b080fd4e65d1::511f86bdb0e3668855e687c5cb9815dcb8569e13::817c4b42a7fb0df75cc7d87a6aacfe1ce744d5b9::d04f393d91d8de0af27fcb44a204ab6dffaf1f0e::ddfd85ed15f95438a5efe97fe5f2611f05800343::d5ee251dbd1513e380984167ec61ff20f48603fa::9509d9e89b22eb908d9dd55ae04d88b4bd0145a0::d126e7c5f48f6e01624ebbee1aa98281272c43c6::57ffdc9edb6a446b6675edb5d8b47dfe1013a748::2587c859dae52d8e43fc9163ae5d81407506d5a2::fe6db3b9e41a496f190b691b428c9c558b6fba36::4ba903e02303e06fe6186ef5e9f59feae987295b::01fcf6b927760a650f49c4891978cfd3d2f37702::9f0caba9b643987c12d07ed21cab3792a1c7ce06::b75ce02eaa9523866380fae150bf7d2b2465be5b::f2f313875c556ebef0c20034bb61bcb81035befc::ff870986b33fd0b7c2d42ec3e0f7e867aa9991b5::2405a6f617e77ea3443439d53e2667d7984e3bbe::4c3f39e949c5b5cca531a4878ebc1023449b82ee::d2bf8707a6971044a577fcce4a1a6775b8307633::68ada6b366d5c5a4705933e2e02007d0f74c513a::12f7353313a26141df2540ac530e08266378940c::366bd7702efc34f8192503b164562ba6ab6747cc::e64ae627c764ee7b45df899d57b3c75916eaab14::f56736f9516fdffab0c8bd5bb08b6effed14732f::e14ec930f1f95f68830893d7217d32cf0c3c02c2::fa1aa4f034bfa36f1ef3f7ac345434bf4787039e::c861dc2bc4e59c6e57a6d629e200cc7e57fb6316::21f2b87676909570f04bc4c40957449a913b2a54::5284b3d389c6876cf6cadacceb68c3a4cc3bca83::070a8a4669487fc329e1b3ef2e157672a920cc5d::c946b43f3ee868c2436fa9b0aa149f2c47b907b0::45ea866e30be21dfa93bf4130beb9407e0de08ce::563157c8c9e49f2d7088d99fe49399acd01416f7::56fdebb8530801040112ef9848c8323d6f3d196d::2e7fed87fde51eb76374d5eccc1a061576340451::880648c9e310f8d736650222ea3dd8b42c5ac64b::c1b714e853c8816a57accd7de6a2d754cafe18b2::ca049508c2977459291ce4356da50c69375705f6::f7ae779b6bc6ba98bfc94053d81e83012c8c4501::871b16d6be17c716406655902d8a683d2381a725::3cb51f4c041d5875cd7e6830251fba4aa0a47587::059071e623c8baba75872bf4b5a95a5d3803b4b2::34c33f389553569ef8d7889cfd584e41277e9381::d7ce1038e75d874e6fb2e388d8bb63424d3a320d::99266fca67eed7e916d50ce5800080a0f9b91898::f593eb3d06de94e579f19dcb2ac342ce809d9db1::211b3d4c1c40295eece0a0cb515c127d5e281f4c::ab0cfb3edc265e67aa066e8b7c5620ccd7349e84::7af34041ca12c3fbe083a270748e83c57d57b7f1::46f1bcfd76b662200d8fd5012835340b2cc14d4e::11581ae136165fb957bc70c163c1dd5d584ceae4::01e54022ad8f6c41f4cba9fbbedcd25bec70a2aa::8b31d5557997a89d66e8f3b364e21dd37d4d501f::b09d131b8047ac2a4318f20cdc4c254885d5d379::b03128da83a8b75224eb92b1c306820a8f2324a4::d23fa3689be6542332038e7310deab0183f52e5a::866bf5d520d20b28ba4ba923a9c180f53306dcf0::32eff371f2367b9ffa6e1fabf2b3a8a61f90aa35::31fed421ff9d12580bbeed4001f2d1cb77d5ffcf::12e56b8b4cf3a6f7722d3a8ea87cda0656fed197::419f3132b833b9b24e76fbb220f33e4ac3e3cb36::882079c4f8498f291ec97078f15d396485541ed8::
https://api.github.com/repos/elastic/kibana,12664,patch-1::master,0,closed,Team:Operations::chore::,"Signed-off-by : Amit Kumar Jaiswal <amitkumarj441@gmail.com> <!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",257297fcd897043a5710161e3c33e351f23e1648::
https://api.github.com/repos/elastic/kibana,12548,patch-1::5.4,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",22196fd9cf9a0dfea8cc617b385522df66767d48::
https://api.github.com/repos/elastic/kibana,12367,leaflet::master,0,merged,Feature:Visualizations::release_note:enhancement::v6.0.0-beta2::v6.1.0::v7.0.0::,"To use PR, uninstall old leaflet modules and install new modules with `npm install` Uses leaflet-responsive-popup plugin to fix [Tile Map tooltips near edges of map are cut off](https://github.com/elastic/kibana/issues/8799) Unable to upgrade to leaflet 1.1.0 because [1.1.0 breaks most leaflet plugins](https://github.com/Leaflet/Leaflet/issues/5650), like leaflet.draw - [TypeError: can't define property ""segmentsIntersect"": Object is not extensible](https://github.com/Leaflet/Leaflet.draw/issues/739) backported to 6.0 https://github.com/elastic/kibana/pull/13669 backported to 6.x https://github.com/elastic/kibana/pull/13688:::+1: :100: ::I think we should not use the zoom-level of the current map (because that may change for a given precision).  Instead, the lowest zoom level that correspond to the current ES-precision on the map. I think that would yield more consistent results. It would make the construction for new heatmap-marker layer consistent for every ES-precision-result . By using the current zoom level, depending on where you are in the zoom,  this layer could get instantiated with any of the 2-3 zoom levels that correspond to a given ES-precision.::imho, could be a tad blurrier, but that's just me.::nice utility. Would you mind moving `kibana/src/ui/public/utils/zoom_to_precision.js` to this folder as well? for some reason, that ended up in some rando util folder, but would fit much better alongside this module here.::I'd label this as something more wishy-washy: 'Granularity', 'Intensity'. The reason for that is that it ties us less to the L.heatlayer implementation and would make it easier to backfill this generic property with another heat-implementation. Range form 0-1 remains good though.::good idea to measure the diagonal. heatmap-grids change aspect-ratio per zoom level, this is a good approximation.::ok to switch this off for now. Client-side desaturation is a problem. we need a base-layer on the server-side that's already desaturated and work towards vector mapping on the client.::by using canvas now, I'd hoped we could have turned off this client-side filtering hack: https://github.com/thomasneirynck/kibana/blob/72f6b8a37fe76c9d799fc7af9f7dd2358789d987/src/core_plugins/tile_map/public/markers/scaled_circles.js#L30-L35 https://github.com/thomasneirynck/kibana/blob/23d903746383c2fc3d55c0cf1075a686aa6cb0a9/src/core_plugins/tile_map/public/geohash_layer.js#L92-L92 However, when turning this off, it remains pretty jittery. so ill guess we should leave it in. :( ::Is this the best place for zoom_to_precision? Precision is used to create aggregation request. I stuck grid_dimensions into the aggregation response folder since it is used on the response. Maybe there should be a top level geo_utils folder so geo stuff can be gathered into a single place that is outside of aggregation and visualizations.::ok. makes sense::",62a7f0e6abc6fe11b4195c407f0dce7bd1b87582::727d8a07b8db4ec67dc27f8a3c3444d596aca106::99596b4ade2b5b1c444cf7d7d4e4a18f3f6e390a::6f65dff45a8b47329f6c09169da7442eae9c869c::43a489c0360c160a669a590331cdaabadabbc40d::a0da09ae302716c50b5f0ef78a977646e0141519::4ac3eb255d1f7b5a5785e09c45fac83abf1639cd::710be5175f5ee01db0159d48a3951b7669b39be2::7959d805c70c971aadbba3abd4c511854801b780::ee28bcced5832c59af31b162cb3e7a3448629c38::cb05aaa825dec488c4634ecb58e328c9e39dc5f3::ce14885ed401f794becee4e93ae92eefd7257647::17d8c93505905edf358d6da330c21d9db9de5244::831ea09c0eb37a8eb9dc89e0413254d94ea3edaf::41bb04e29f0cffea50ee534f497f8d3c6960c7b3::7a3952b4dcae4e8677810ec4cb9ff2556c9e6f5d::3309f70d640002f8120a51e5869d59b2283baec3::89683dbe65a8fec1b652bf528306ac8b9c12ea14::50576472e97a9f35665613a136ee105d4842b01b::b6cb4920aa2271ad8bd9e86c2995f89de113bb81::42ee912b20e38a1ff9926cd99833d078c103ce57::5d702c866cdb4c4a06b21c13de9f41771f69dc06::5a56b7bcf283d4adf486b5c57eabde5a87eb21c8::bbe3fd037f84968d14c9476b098c19f5906fec8d::
https://api.github.com/repos/elastic/kibana,12324,patch-1::3.0,0,closed,chore::v6.0.0::v6.0.0-beta1::,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",fa570c3c58ed439af23bb436c77c86365579539c::
https://api.github.com/repos/elastic/kibana,12306,issues/12303-5.x::5.x,0,merged,review::v5.5.0::v5.6.0::,The testbed folder looks like it was inadvertently partially added through a backport.  This removes the folder. Closes #12303 ::,806adebea0a7df392cda3307eda6b7a53f090ad4::
https://api.github.com/repos/elastic/kibana,12268,patch-2::5.4,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",05a5fb8295ba5f0b89c2e2656d5419c6c1de3064::
https://api.github.com/repos/elastic/kibana,12238,5-x-revert-bug-fix::5.x,0,closed,,"…om dashboard (#11932) (#12199)"" This reverts commit a5f1e10b1e6cf7176e0789ed3fca7a81e5e95fdb. Should not have been backported to 5.x which will be 5.6 now.::",02c2d3771cf43fa734ee684105904fa6619046d0::
https://api.github.com/repos/elastic/kibana,12164,Improve_visualizations_search::master,0,closed,Feature:Visualizations::release_note:enhancement::,"- Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? **Yes, now I have a book** - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? **Nop, too long** - If submitting code, have you included unit tests that cover the changes? **Sorry, no idea how to test** - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? **Nop** - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. **Guess it can wait until next release.**::",21b4de7e671e245ba2e0c3c82918031df0eb0d9d::a5b3bdb2504adc21cb02585b6a3b7a2b3b59024d::
https://api.github.com/repos/elastic/kibana,12115,5.x::master,1,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",89973fe1b1c9f5527a3411ef073fffc8ae9eef6c::39636470a1edfaebcef42045374c6096ecd6b7be::e3b0228a0bac27f71ecfeecb846c01047423c1bd::ae364b378bda6bdcecec178cde2b2733e103962f::41303bc46a347dc94655db94453d752ec6cfbfc0::60e4d4845fc33f49e7504b6a2607380d3aaea076::a4fd5492af90faf0a57ea6a92e5528ab6d123d8d::ed044152487c674e8f579ca8f863859efcd06aec::7fa8c6e2ba6234ff99380b064dfe4fcbc4c4469a::72bdeee417e4a5ce3f1f5f11c3c4ed25dc0448cc::42d8ee176184b389ef01a99cb57bf58b1a5b1f33::1da260ec1f7c6bea25df58c57e49b4d3f154a5ec::d375c83e178b45e30ad69e8e4ae9a3bfc5a9fd8f::d7c37f36e6425cb0c2d33e65546560632265a065::75922783d9e2b42bcb70c49fc5ce1375efd4d57a::55afaf7b701a27633249bbb14f5cbb7edb7be6eb::de903207707854a15bdc091f62fb0253a0f0c475::4de11f88c945232ed4d8b82dad876e61b9ba6d42::3487db8afe32aa4aa657d5a386d9036c9980cbdc::f6db770388282c6e558c56c5e2bfa72bcffddb04::e0ea463b714830adf658808d026e02cf41f73c74::e322259f08fd2695721f2737ba9c129b14ab6e22::6bab406353e88afa49f64657fd4644076f1c352e::147352f2b4487a3397a939a8da0047fdfa0c8fc0::239020b24e99a8b970fde92e072e1df9d1084f88::2193d7ab69a017355166928cee3234ad51680b0a::fb83f5f0fe599e883865b908b28352413a7551b7::605aaa44d371620653c080eb6c98421cfc292e9f::db51a9afcf5234e2e3c394a323e2b1c369acd6fd::7476a10554f96b2b97de908edcfe9e4515aec973::523829eda65561f3f5f53fd2c0e7cdb264b7ed94::57a1c7887deefee9971613936c92943d10b2b962::ab42b2712e887fe860b6d0a7a9d6532d0664413b::f49b7502d1b1cede6de76af9dc12968bef30b29d::82abf8a07146e3a233579d1087fe9f155912be8c::ee27f9072e12abb26a29e6c7ffeb4f8d0558881c::e8cbfdb8caf912321024f14779bf2ba2a6adb584::e16bbf611e1c073b93ccc3036a9803045fdceba1::f49eef76bb67d824065477f1a83760e6fbffd258::07ceef41cdeb51ae2bcc62ee2856c70b4c4d5be3::4e3b5319a58961e5fddecbf51576ff605c27af55::83d40e7a0ec69a7bdea6cb1636b6bc8a3e441122::d5dda024d3ce14c95444086b9603cd592beb7a77::2469ce7136609a576960707e7866091d86dd7e25::9be5ead8c2876c732479c3673bf72dac02be0e3c::b036aaeec7c09566ef1d916022148f4bbc0fc91c::400a3f0bb5912bca94b6b5b898f6f6be26d6d62b::94236d385d47783cc35222182abff2dc3570b7d3::22da373e3ed91b08549a740d9a5db759dd87549e::7d4ce8c60199b3c486fc22cc4ae9a16568563ec5::70feaa1f2262c10019b1fae1df979d84ba5737ab::7aae24bfc9bfa3e1973b3da2fc89bf960875c444::ac542ca95b41da6dd0bc18b13de4ce9e28c75a59::7ef0f6cbfe3f5b8aac5f01166fb2b0d8535b33dd::b31e4be076e2c9270657e8f0db4457f2680b815b::36269e3cbc56303ec671a8e777a3efbd3c2b3641::c800f025cf5108ec7349c77c1df05ecd55222420::592b2cab7109beeded3081526aa80c4fe9488f47::d2f39ff846b2570fc5b422d1c99cfc852a20f2e5::75ee2466cfb5c4321ff72c0663e2205922f0bb91::72bb8be6504af566150b0ef9da6bb02b92a53bea::cde4222c89d3a913687480595bf65de6df1d64ed::d8238df086da753189447bc79eef30a77ce8a539::80c79e653d65a1a0f360efae0a7f843b82f94913::d034e9aeb7ec8eb575d3dfd49fac36a6c51c7b51::33854722e21c7f0ee24fa2e5ef0db2175c48812e::5f2a37e7e26beb09b1bd49571ac871dcf8d59875::041cf94ad22e9ef718a130d6f0ae5b68ae1b52c0::34d8236a98756173deae021a538472595ef3ac43::15ecbaf0b3a59ea8bb7d5200fc56612a03cd5e68::be7d6afe04a91fad16bb4a84a81ee6e6f0ce2a4e::732ec35c15a095b7598bad29ae6a4d5ec0cbaad2::12fd67ba263c989dab0e7eeefcfacc20a940b000::7129fac8094729db7f6ae25e5593e4f329950779::69f1e5919adb0475ead6f883093dd69edef55226::f02d0d6998a425ea381429ce76f3ad93c643a75c::90eda029673d6573dc81fa61cfc3f198c44ea81c::f09fae0cdcf1e4d910853f4385f574b467742933::e826536e72db34268bb7e4b0a6203e02e3871484::02ad0ac16dd48cdfc9d74aaf1dc51b6b90f97a75::7e74b2d19cfd9a5c82747fac42069be596197e2d::e0e064a3e933df35289f93f96ea43e227f3d81b2::0a63610b9fab64f23e2ce60e30d9e7d660c87fa6::157769960d04ba9131a8ab7776b9d519b3a7dd7e::ab812aa39e54caaa00109f00496345604fac20f8::c07770f9575b44fc5ebd63319e469e70efde980d::0ee55f790a743ac429f417d9ecf645e5f97e1b44::6ea7059a0ea0554de10853b28331d381c6ebc1bd::54ce13412c1150c67f8abdfb1dc2977fd1e8f244::73b7ca4a35a9dcb1420300bb90abb57319c2c313::f9e668ddf24cfb1de190dd0453dc8adf44b4fbb7::5d7c6a0a7d261dd7ebb7cf09e33fb7d8991c2c55::ef5758425551047a654cfc5c1a679a59373e9e8f::d78396714201805591e77d83e8d8730372a68bf4::6b55a196e3a3c41241ec7a8d0f52d8c81a506bf4::28c692a177e405c6d67999b1b79623e2cc42ac14::91623d7095a9dd544249d625cfd4bcc325ce00dd::ad3731060172bab70cad7f20a6e86879b7616073::5c0fa9776335fdaf33dddf5d6e2576ea37164c45::4926ec8bfec81ab60bde6a167ced68e1d11f34eb::dddf635eeb260b8882303df0c6bb2c257b26fdbe::dff9253f90a1030e0704bc67feb2c866999159ca::983a1ab1af7b816e8a816ba617794536ce7cf5e0::ab5133bf57ca4a0f55c947fd77d6964ac94c0030::f25f1182d2518cf6ae19d01feea6c8f2c0e02710::3aaaf3f557925ce8131a979c63423b970b04b0b8::094510922e14ad24cbec90b22e3a5c4fc547b189::73e74b045ce339e5b7ce4b3c5906b8fa630b2123::f587dc01acde7bbe708b063c713e2ed91e63b9f8::9eb0af74d828de413ddb4b1897536ecc90f11052::8013644775d70335a4886198f43d2a87f91ad845::3e714055ef9f477aa3d0cc1612bbed3595edfdfe::36b8da45840ca77214dffdabc4b4cf9c0a8c5d52::b2ae428aaa12f50b4a799e25af8e499efaffc99f::b28be0cfa0638a57a651f0c895d41551c56426f0::519a47c584b64270734bdfa9fc115f16c2bac1d5::47610d6f1055fa341567aa6b7fb451ce850f31f6::8167449c99e6be149dc06774ffbe950e5b30daca::2e4aabd65b22e296f6f3e27aebf4a7cd609b23e7::df9f3326459cae36b0aa3fae6b710a8f47f25098::816e550aee5273f96eebb7c7dd317d6f8d3749d5::93fd1c5fc444d8c42dc94742c3360737da2413b0::acb42de8fcd2a137251ed0b7e9d05bd7e3117a57::07916f0c2f36bb626d9d2ffc872bb598ef8c3339::3ea447380f5c09b3f1cb6cbdbe800bc86eb3767c::8eb393a5d1bae1c850a299529787b55933686047::62a5dc63bb2d68181fbe008a54ad8dca998ca2b3::0c3bb057e2b63074b8d6b00bc0fa9d98d8caf8dc::d2587a8100189b10f205a19bbbb7c178142cce22::bd77356e1bde55bef7d1043ff9644e7ac92bdd2b::96cf8fbf353f74f6643e0ec37464017412c90ce5::e3b604ed225d52e5993614f8182bd5d9579eddda::7ab15693d8d6ef265d8caafbc4aef6b1045a2479::a580dbb563fdfcee5ffaee455e213e55234e81bf::7344771a4b046463cc8224ab9f5621de4bee6ca8::fa6429ec449802ed02cf9bc945078f6bbf29d69e::8af8b3af39b8ae34afaf966e34c3b13d0602ef11::78cb3a822b4e5527f5a76c669ecd1e98d70ceb6e::94e37cf0db5ba490315c8c353fb63ccdc30e0767::74b0ac097fff7dc62dc68cafcdd7a45d4b1fc1c8::65354776a7fb88cd2f46e3d6fee5ecc757fc9d97::97bf1907f6c0f1788a1f0e02ba2bda8c273a2819::28093925a80951ef2bb7f670ff7a609e8990e9de::ed7334a10398f1a4afe3f88259439144a09e356c::65e5c09d3276f1ab5198689f2ac34f1d3d36ee77::8e033ae82efcff00d18ee041717ebcb641f6a646::00376a7b0cc21b208485a83a5bbc59dd04e2bfd8::122d6cfa54764a350ea5f0e6365b9c941b1b2bcd::3cecad7b00b9fa29ad4c77ef3281c7c4dedb2732::6413a86c967875a0ed573e8fbbf99b552825f3eb::c6baef840f9221e9bac33717f157cfa741457c05::30ac1868de3039869fe9e36c55a081a75745ef09::94a2e13c39975a3204ebd0df9ad2c95c26464f9f::98420976f16c25341f62b58f021f1344bd993922::549e62411ee9bbcd39f62d7b6f8d866030d94679::367babc81d083ed7700565f218058dc6ddfd52bd::547feb15785e9aa54e63bdecac86b81458ffb750::77ab4ce7cf09ff24f89f0cac728124cbd0fedaf4::a65a652c0f2046ee5f24428e6027433ef8f35342::9828211dde60f0eab72188822847e49cd420c0d2::09d97ba56f8cbf00b4d1847ad62429b093702099::64ecbed395e98a70fc6b24fab24542117dd9d186::bc443a93262dbbae5626120f564b427ae1f56091::4db59972b301ae8629d73fb52d0cf293430594de::3cad0d154a68830be68180a4507b6a7145951663::e4c94bcd7a45868fe61efe9b0c6e7f96a38e7450::7ae402155761a6421e651cea4605966b36fca1af::ee6fa6bcc9f6ceba0c64375ab7c9b5b329f13e40::98de700e510890dc0795538d48467ffd13a72890::4da3357a91e36a82ea1bbd064c4375e496fdea1a::d8976cebcaa820ec0fbe166dcadae54ee86518ab::4fb18dac7120c5d4f1cb5ccfd09592d8826eac97::bb89e1739ba70fbe95ab55c24732a3bde700a32a::8e7b7ebce7bc36f52f0e6088e0fd438d5565b66e::50fa25d469d9e0c79321953b9eea5ebf7cacece3::cab6112f9c05b4f7915eb6ec5b0d053ec84f3f02::8e735afa704f76ffca67404f949104e45ba22320::d906788fb2dd74af158ac29121be0e8668b495c2::096db2792c84d0f2608dc7022e5c6bdd2f433dfb::389bcdcf442df57212b1702b33923b07983b65ad::5020e03071ff88d5441c42b5a11f86f5fc1fd9b1::e808110004646e372c2d75266f6f4422de1edca7::4d5f0e0cfe3fdc2eaf8cbc73760d6476394fb3f8::e7528290813c02c057f1483de94a8bb9934357cd::2d4e8fa3f74eb2e3cd47aef527c599835c538d6a::3f181d112913ac82bc58a55756e0f6e7e33b0cad::1a1fa92137fda8c4b70346cdfb2fed2149daf602::9e1c9aea8dd1d4f4dbb549af9e6013e318ee6f0c::2095fe934af8462a6ede2b2114334febcc44e152::228fa0a0d61822da1451caadd9bc2b24d4169ae8::e0d3782e844e5cb78519294821e5539ee6311a55::4e4db590f40b3538abc935185b5166a72ed596f5::ae81b82420a7d4a05d68af56ab401c6542b69249::c9b0d454c90fcdc1b9a98353064e3342278fc909::0a3b8d16ba8d15d796e8d75b2951368f8f7d6fac::b006cf0469680052155f476687a161dcf9bab025::b48b1ee98e98129ac81a3802ec9906527afabcbb::595294eee89ab284b2864070bd64947cd80a2964::83758f499ad04738a659b28c75356e8537b8e5d5::ae16cb325e04ac62a262f977c91e98111a000b6a::db3eb270a47f2aea5aeb38035a2c187ca165c228::0a887000d8daff44f7123bb355292c7129bd351b::d2500c30f285daeefeca6e9dbeab230a13d91b18::fe5abb292b2d32ca8655a0d00f2703b68356d714::334bb25db8c95bfaff1e323ddd48436ab99c4d0d::098242d68782d748e04da18dfe72028618802ec8::3eae3d385c90659f47bac50ffd5e10bb832ebf5b::9712cf500f6ff46820f40318878a0c56688c0b15::09efe43802f63a67c0c95a225ae35a4f2c1ad1e2::74038586cfcb572316f428e4eb0214eb136330d5::cad21c7aee0f9c9bf8fdf4ddd510207ba8ca87cd::c1761613dc327e3232d03f2608957b1db7119c0b::5560973ddee9378fb13341c5ac2509b96d777ad5::f0793a38e5e4ca124286cc1cfb884101ac5fb926::223abc8dd1d15d1a5c18aea0b25f793f0aa83eeb::a3d237a754aeb066f5b8d670e7fc5be5838bb387::1307ea39abd52db9ba5b5c2d5dc110816f200075::41da73af84046791bc0caa09f5d5acce7d01c940::86889b78261b964cea58b08c35779fe478fe4d0a::0527267d5122cdc4d6e3b76d0525c45b2edab5ee::0ad2ac2f69d76a9e3d093df7bf3e8e14c6e4067e::43c803a31f4c402b30a3041fd33c1bb6542af68b::8c6c3bf3d7270006b628d45101db832133d6a64c::f6f2a5b41b003e6e64d9bfa5654fea48981e6791::d6501e85b13abcf799aac45044c7b33831cf838c::b994f600e524a2b548c0140a7a362aa2c873678a::05293f1c8d765179a0d2973df16617e653323f83::84d659437b3954bc157fe1495f5e7814e0af3a9d::a1614af2b409a00ae8d6115d6b8244b720cca926::9e2d64d265acf002b228a31044e35552847c1f2a::5d046c7431d64bc3dc4b6e6f0c331d6a8a82f7e7::8bb0776ab8b7dffa0d7639f18c7b13c7eef38fa5::d304f29b79dfdd3cfeabda7ce07499de67b7785d::dbd3c8300ca0e9caf062f7a7ab0e81dcdd892eb7::7f81f944db0eb8a808795a49e568c60462a0e245::0e76b17fd3c1548b8aa4db49e3af18c2dfdb0036::6513062b783203afee2ef7cd5303ab187558efbb::15d4d8384bfc5b16f409022afe44d0ad3ea58dde::cbddb475d1f035820d5ae7a0eb7d26cdc055bc2b::9c67b2a0e2b0914955611f3347a5658e1a6930ed::fafc1d975499bee931d4ed0b16cc6a1a755d3e8e::23e2896731ae34b28c411da58a5bc9211e0666a3::63d0415700cb43bd7fd7387d736957ad4f152809::22ba3a06226b9ccd98da6c4962b989f4f0da83ab::d7049c23b42a9d06d7e50f51e4b7f033f1c30ce7::a7cd3258d27e036a39c2d3efef777584d162c62c::e3d038cacf6c0503bc9a3f957807e76e057165a9::8d8438f79b181c72096df4b70a916f232d443509::41087efb6a64abb8f4e7d7bc9f5e86346f99ff32::b79154d79b4953223bfe1942db1ffa9a953c56ed::
https://api.github.com/repos/elastic/kibana,12106,5-x-firefox-scroll-issue::5.x,0,merged,,* Fix firefox scroll issue * add comment for the change in the css backports #12031::,3f7d545605f6f4a9922b14613c08e9d35fb10aaf::
https://api.github.com/repos/elastic/kibana,12023,patch-4::master,0,merged,Team:Docs::v5.3.3::v5.4.1::v5.5.0::v6.0.0::,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",e4654ceb56d140cf0324e0cf5358647ccba29534::
https://api.github.com/repos/elastic/kibana,11978,patch-1::5.4,0,merged,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",32b95bc506770b152d354fd3e7872fe8a191dfc6::
https://api.github.com/repos/elastic/kibana,11971,master::5.4,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",e39111a2c5fde681e4660e8f9d5eda4ae2655e82::2fed5d3f221577f1eaf84c21f8cbcb1d8985a1ab::6752dfe1689b98fe41ba59cda47ac5a1e04fe7b8::6ae4a07cff7569b3038551cf85fcb0a0f617e42d::90434765c092179d10b589b7f6749a1eb34fbb93::b79334b964ff2005e68eb72ea14b7cf678ac7880::991077051302eb322cbaf2a5e938ffd52e8388b8::49255e04a989021925907715a9d6d7861d8c24bd::5aea4ff210f9a353d94f68959152e74bf8aa7cec::bf63cac183e54f64a054eb781ffba5708270710e::ea838ec9004b0f548c26ca672afabb4f4fb47109::da7ab525ce89801a90f0b717199a1e48ddd6f462::766646c5beb9872378c314ce6d75b5acd25aecaf::918b4181a6504426f1866034dbf5c76a45e5221b::1b1e6838e857ff7f8d0f8b9f65b1546183f2fc3b::6ecdbd092aa081ab0dffeba6a2c5916e24b6046a::3ff7d5b6fa0827f55496b34654dbf116486af692::90bccde33b4fc04661a5844b12e5ff15bb4c5cec::8c1c617161b3aecdf4693d03c96c019c28308c6b::6b0aface7a772fa12f44cc7df949f0006eae702e::03ca71ed3c830d7085704a1c4a346f113385bf45::17d88663e1ee3500b4e9d98552a3f8a4948d5bec::f6ab93f91f9115364023fee0f7eb4d0e52a29144::925a953338d856d56ded98664960c9ff3e15b291::811ed5b5f528527039f19965f2e38a838898c051::9fbc39f21aa397080cfa4af15cf2dfb25925e7af::945316cc154823444b9d0b921661017d914a2204::cb1aeaf3e6f494e16b1d5b79f66bae14c16178b4::76c9e0cab4ff81079067618a464062ee77fd72e5::b8939ffdee137cfb3b0a3deeff33218a6f55fb41::a37232883144d9a0c49151335295206b714987f7::d6e15a7a1c07a24543baec1afd9e8b0d607027d2::0c67890bd96f3e4c4674cbf3bd84093e6a306805::9f33293e5c45f09feecfefd0c0a0ea9e14317d2f::b5049580ed7f593ba472a7e2dda34ba0759977be::be609d95059f54a1d1481d2edf48460ef9ca4996::c3fc467a140ff1b8aaade5d5ece98d789d064e55::45eaee58ba61b81d83310cabae27a1a90a6e96ef::e96a8d8273a762ca220dca38da309ee3b6f924e8::b7d11c97306585e8da639727309afed402dcb95e::0be7acc0dde2d761243c2142246d13f7371e9c8b::6d81bafe3d7179a4033496078914aaf962dacde0::3a6e68a601fbff84cdd49f483d0a7294cf412db6::753dce8c75fc361e926edf2393e48470fe78ed00::d2c791e06e7f7d8ee20beabc710222d8ec3c61e6::1bec1f28b7b8c2a9192149c6b6d81ccad479c2ae::345b64924d663a4dfc88db69a92f9a5fd38ddd69::a605b7f478147e8e69b21330049b9b6094ae3049::69c22889aba8c88ab39c38ce060c60a2fe6e60b8::3eeecb73818ff873aedcbf02f2d1ccc921098428::80ba3a52b0addf73f09360284987a234df9510b1::0c11a8b1f5c923233816917491614023859b6ac1::e879c867313d10313bd508c607731f897a502cb0::40e32f2b3748544782e3dc32ccb9478d64d250b2::ea45885933455d17cdfa629db5431dd032681206::6c2411d244e9c90eb84e020b60c5c571b5f3b451::b6b6e8be62a0b898001b7755b6b0886b9f4e5eb2::8c4ed2a1ec2f57cb92c534dde8df0229990a22d3::123d45e80b7051da35044521bcf4ffa70d0fd1b3::3a8d08614359c3a69c1c1235b11439fb3c12e2f4::e320bec8e3ac56265367dda1f14217c3a60e1a39::c092c4d2883563a9e22802a6eda085b1b40defa5::bfaaf1585cc301d93e8b6c1eca779356d4b83e61::c643c3ac71a3bcd9ac81d6c6d435cfd132eca283::439901971d2c9486aa4a99613a0e6ca0614f0640::9c37e6c4c1c89a0c311faf8dbbaad008ac25c612::bd1f63d0aae2abe405c027463675790970be69a0::b756eb0f8c9ac1ec9c45fe1568cc35738ed076f9::476031b4ea02e0b99d4771616a400e6181e77376::f72e7269dcd62ccd97334e5719d59984f29b17d8::d183d9ed71f5878ea0874dfb77bb94546ea4727f::5a6766bb5005445373ea5515509c35fc83f6deba::8ab5aad846b2243ccb38f1038874a338eeb775ab::d83fa10cb615ea735291b4681d516b08777175ea::bb40d5084fda838c38b7e6c71acd901c62fa6910::9317574a3edc5317c1d27834ed2d3dfbc6fa7276::788e6c650efe3f81e338f38e5dab569f3f04299a::82b05c4199179731c72cab8046cb3a296d82dc40::00d11ea07fd21d75671bd3fdeada9bc541ee1a28::b5d1df929a5aa67c7eaf6adc51554d886cff6148::b5269cff105442115002d50c7daa68eb4eaddf18::4209774ddee705c879da41a3aea0d7ebcff6f6b6::b79cb08a2895ce44e7d3f309333e7d219abf9f82::363bdaf22e62316dd4c1a18432bafc776320af59::3b4d0b26e17ee1bc78bd30bdf6fc0ab5cdb9f723::ea7bfcc19bd454f1e9ed1c5da9f9c5f05620ab75::55ba578a1e3db619b62c64057b24d0e6ecdc84e9::984aaa80cf8207b830acdac77c603a8b584e7707::8694acb9e471dc5c4f6c476a8ef48eceaba27078::2803fd333a63d45d23d2ec966a6866a335d9bd1c::5984a4a40bed0530c33f731cd99382e786e86dfb::0b285fca04b7bdea8bf9bd9cdf0da57f02d9f6cd::857eb3aaf6f7ca80467c260a557a9eeae9e08afc::ec984473cfa86e4ac3ac3e9b2d40a4e213741348::c30d8ea38ccd0958fbcda420714df84da0023ca3::02787e3df5a2c4929737321472140701ddfd392e::fcf1f5089a2559e6e295c79b26a591d72547a2db::73f2ff513a90bbf2ef0cd43795e54c5e507de2d2::36ccbc1465b5f2615b7ab938c1ee37c61c9fc77f::1f76e7508e4c5be0962aa8f514c0449cc5c7620b::1b308cb69a2185d8394d1aebff26d00607190086::a3bfc2b6e838e57cb36b572415e0f772ba50e6a7::35fbe2308f070560bf8fe4bedf4919a6c0f759e6::144cf70cdb60da3e6a8a553984348d5f2e008af0::96ab4a97c3321a0339a8c772fd9cc52139c257ba::f94859857e4d2a948325008ff90d2d7aedccd81d::7b2874d518f148cfd245c22e2639f5498f8d8239::fcb3707e9f65288e44c2fcb3eb8382f475770fa9::5ba57f7c629a003e6f8ffbf88c1b40d189596b2a::5db50dec1707ac4cb7c872be9d856c60bfc07b10::d4c5372267cc9156b753778339510079ccd1a047::432dc8f7f4b19693267f9e2a3d55133c276936a9::ac84ffcf52f1185268ec8094ad8deeaf64e6a6c7::01e0bb04254aa508d8eff7b8c14225cac8e3917f::26a62642fb05eb7473bc21c00c85d8b5fe53fa45::8ef383e923d5695b5d6a7c5830ec706699b61148::2e7b202fe5e55b04a0516976c4108071f69ab2f8::216386d5c657fabccb867b90a41db20665e09627::e227ec782803f71f0590e6d20687e95d99546adf::c9eb101f338f1f131459c37c2d21815d86d37476::eb4b22d139d02cb6cd8af67cb4abecdd488755e9::616390da61d601f819b5756eb0da5725067a98a1::8fca519a391f8c3f3a38d180fbb4b7e56e0fb9de::114a014866dcba4f6571ef7a45ddf1f87e8845ec::1494278a7edb5d30d85c12018a02abe1d2ced7b0::e6896ab19aeb662dbb518d763fb8226ac6f79e0b::14e38cc6ca8cc31e882f04bcc66ea7665054e981::e5e939f536c21fc1d9a89201722b8c3d6966791b::f76bef46c054af848282cea50233b93de3c2de88::e91c99f2b236339c0f12819974a9ce9d9f18503f::4c6c401576fb0fb41b52b95a12d9559b8377959b::e6d3beaee3cd2652efbba2b35d371175c0cf53a8::06debb57096bcc1e090ccd92d537fc2cb6dfef02::055e99eaf67c43befbdce17f91bbcc188b8af2ba::815b082799cc42b0a66d52689d901525b5e6f182::b984a1966b1cb30ffbbcc50238be11379b0802e9::16f55d118f42c2d84c360bf5b56ab40ea8656fb6::f15477a82c8f5fe41934b6b1e993c222412e2d64::993216c0991adfd2ed3136db9bcad54af588a802::536be5d5e0b4f27d8258655d252b2401d2fc0af2::1b1605edf9791542f9b6c210440812d3fb1962a7::a25d99d2100b017e8a4e350a168155fa1e76196f::b5e64894581f26aeacbd5a59087dbdbaa6bfd785::24b9b229af37b1858a19096dfc4cab0346ba8993::08cbcb75b953bcd22fe3044d615249db76e769d2::36ecf130add6e150420da0105552dfa4a523b01f::192fc10b703d19f916fb8400b6711e084de22c36::d81e7c67cb3e59790b7db3676491b080fd4e65d1::511f86bdb0e3668855e687c5cb9815dcb8569e13::817c4b42a7fb0df75cc7d87a6aacfe1ce744d5b9::d04f393d91d8de0af27fcb44a204ab6dffaf1f0e::ddfd85ed15f95438a5efe97fe5f2611f05800343::d5ee251dbd1513e380984167ec61ff20f48603fa::9509d9e89b22eb908d9dd55ae04d88b4bd0145a0::d126e7c5f48f6e01624ebbee1aa98281272c43c6::57ffdc9edb6a446b6675edb5d8b47dfe1013a748::2587c859dae52d8e43fc9163ae5d81407506d5a2::fe6db3b9e41a496f190b691b428c9c558b6fba36::4ba903e02303e06fe6186ef5e9f59feae987295b::01fcf6b927760a650f49c4891978cfd3d2f37702::9f0caba9b643987c12d07ed21cab3792a1c7ce06::b75ce02eaa9523866380fae150bf7d2b2465be5b::f2f313875c556ebef0c20034bb61bcb81035befc::ff870986b33fd0b7c2d42ec3e0f7e867aa9991b5::2405a6f617e77ea3443439d53e2667d7984e3bbe::4c3f39e949c5b5cca531a4878ebc1023449b82ee::d2bf8707a6971044a577fcce4a1a6775b8307633::68ada6b366d5c5a4705933e2e02007d0f74c513a::12f7353313a26141df2540ac530e08266378940c::366bd7702efc34f8192503b164562ba6ab6747cc::e64ae627c764ee7b45df899d57b3c75916eaab14::f56736f9516fdffab0c8bd5bb08b6effed14732f::e14ec930f1f95f68830893d7217d32cf0c3c02c2::fa1aa4f034bfa36f1ef3f7ac345434bf4787039e::c861dc2bc4e59c6e57a6d629e200cc7e57fb6316::21f2b87676909570f04bc4c40957449a913b2a54::5284b3d389c6876cf6cadacceb68c3a4cc3bca83::070a8a4669487fc329e1b3ef2e157672a920cc5d::c946b43f3ee868c2436fa9b0aa149f2c47b907b0::45ea866e30be21dfa93bf4130beb9407e0de08ce::563157c8c9e49f2d7088d99fe49399acd01416f7::56fdebb8530801040112ef9848c8323d6f3d196d::2e7fed87fde51eb76374d5eccc1a061576340451::880648c9e310f8d736650222ea3dd8b42c5ac64b::c1b714e853c8816a57accd7de6a2d754cafe18b2::ca049508c2977459291ce4356da50c69375705f6::f7ae779b6bc6ba98bfc94053d81e83012c8c4501::871b16d6be17c716406655902d8a683d2381a725::3cb51f4c041d5875cd7e6830251fba4aa0a47587::059071e623c8baba75872bf4b5a95a5d3803b4b2::34c33f389553569ef8d7889cfd584e41277e9381::d7ce1038e75d874e6fb2e388d8bb63424d3a320d::99266fca67eed7e916d50ce5800080a0f9b91898::f593eb3d06de94e579f19dcb2ac342ce809d9db1::211b3d4c1c40295eece0a0cb515c127d5e281f4c::ab0cfb3edc265e67aa066e8b7c5620ccd7349e84::7af34041ca12c3fbe083a270748e83c57d57b7f1::46f1bcfd76b662200d8fd5012835340b2cc14d4e::11581ae136165fb957bc70c163c1dd5d584ceae4::01e54022ad8f6c41f4cba9fbbedcd25bec70a2aa::8b31d5557997a89d66e8f3b364e21dd37d4d501f::b09d131b8047ac2a4318f20cdc4c254885d5d379::b03128da83a8b75224eb92b1c306820a8f2324a4::d23fa3689be6542332038e7310deab0183f52e5a::866bf5d520d20b28ba4ba923a9c180f53306dcf0::32eff371f2367b9ffa6e1fabf2b3a8a61f90aa35::31fed421ff9d12580bbeed4001f2d1cb77d5ffcf::12e56b8b4cf3a6f7722d3a8ea87cda0656fed197::419f3132b833b9b24e76fbb220f33e4ac3e3cb36::882079c4f8498f291ec97078f15d396485541ed8::54b4fce8caa166f0edb8acf3a7313557efca18d1::efc621826b9bb7813efd64a6a4a139f6cd9bcb36::0f8729587b5b8924e96705a52994b7633383ee5e::c2319d5d07b12486f30d26297fbb1b7a5fdbbed1::a3a642cef1b3d24878c67d244f098f6158812c8b::27ccda84ecd044cdf78313239559d0814552e66e::f6683cb2ca4f412ed64ea4b520cd74ecb34867b7::91e525e99d7ea19eab35ed1005f120478502b20a::dcc6b425487ad17ffa3af7316ac413ad5f26d18b::c1e09d5b0ea8c2951c3ab32563e748914a5ffbe3::f5f056c701fb17f5caaa665f3fb88e07de310152::a9ee082660ad1608508c9be0f01f0117097bb919::9c9cad344e6107e65d4f2b5e0bceeb9a93f3b6d3::27af46f8d08227c6d8683aeb868a4484ec699ee3::2513616c316c573df2a7aa0b0e53fe445ac53d00::e7d5fc79ea20806e1bed984335ee6dfd50e58590::39eb457e5e7d686f322d6b2db9b70d1fe3e0e443::d3ba4287961342376f7ffc90844570458ea96699::8a765a376914e0db1893a3a33d07d5b112e1c679::bc64b9a3aa28949ffa9390b058e4ec0cfdf15fce::6c3fc81ea9184b548feec8a6302086d473882706::4692d195d901e1c671175706a684548a1707198d::bd66f16a07ad51b427722f610fc8e755b1ad1818::8b3a2d59a7d9bdb4af24125c9e979600db33a9c8::7553e091c1aa90eb9614c715fd6fcdb644f01f16::1d2341fc2b0cce7a156dbd206395eb7fa642c041::c2ccab85150ea49d15ca98d79cb7974a54955acd::c9c8e8d066a950d6ca63b3ee2067bd5f3cc7457c::b5c51d1a23545fcaae0a81f1c721c893afad7d86::3caf5d7125ca8eb20d214397049f617c836df134::d125835d74b61d2bd0473b031c457542e33e5e26::515e16ac87ca5ca8c9fe9384658d5ae804172fb6::5472cacb5ef92e7b701b6ff9fa937d121477a197::1689fd89dabb58e21b38a0216bc3b86554113c88::7557c8f56314dd41140d13eca68219a63a9fc245::e62e06343975cee3a73bb55c6eb4a43f856f6521::f20186122abc697ad8a752d41c31fae223c6582c::f3235ba950df2e1d1e7ef94669f6136a0421e574::192b2ead4975bf209678be65fdd3827296ab2698::76f93282938bd2d4dd63cf1502fcd1371953defb::
https://api.github.com/repos/elastic/kibana,11934,backport11926::5.x,0,merged,test::v5.5.0::,backport #11926 ::,b4e3cd18574d450ef6ade4a9d689b3aac58dc65d::7b444ce9663e6c6c30547624430d4aa3ae3ccee4::
https://api.github.com/repos/elastic/kibana,11816,5.x_hidesavebutton::5.x,0,merged,Feature:Visualizations::v5.5.0::,(backport: manual merge edits in test file)::,96414778ff99bf98b9df1c052c2c7ab5ce8b1a2f::
https://api.github.com/repos/elastic/kibana,11757,5.4::master,1,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",c496c1f529407d1d152f2857dfd0bd6b0dfd5f7f::2678b9595ab4966a1a2071f07569c0499eb5acce::cc9f5aa5df9635c39532015b5ecdc7174c7116c4::8418cfc1978df49985595ef3cc43e5388410a3d3::6e64194ebd64723e25bc185e3803f11a52a497b7::ef51496d0c8461824172bcf3a42a67f154129648::b93819a8d9934d2e7d2f27e019f2e9da01050fae::0b801bdd221dc9631ca503519df651914dd019a8::1204d427f9ff3c7a48e2b155ba4d3145bdebe250::14d27fff1f2c6326b91263a7c4b093c270117092::9e3def9eb0dd114225d4879c6baa6fdeb5416366::191a70f28d9d45a93f04f1479c14c9643a0f2bce::b2370cc6e6dded04e36ea77d19f95b36c3b6d879::105f0d59b24c2294427c561cef0f282235caaeb9::3f00bb1fb83ad03d3ce74248fdb9f6c228260f56::abf805d23f9ac27840a3150d8da0026aede3f0f1::b2450c6a8c882a3181303df65098b6d1cbab8201::d7f84e43ce35123fba58413573ef10bb304f5cc0::5e3af5459b39433989ba5439e52adcd8bbf29c6e::1c414d09c42f86b9bcf801a0bab8c378141fc455::a97932f7ae485ce3fc301437782c595e0f40ebb7::4b954d45425b4ac926a798f9ee31053c786d39bf::6bcfc9963185bc19509404fae33577d4a790d956::dc469360baaf453bd82b99d0f13dca35408b84e5::813ae905c241d6110b68c705170dfae7a073953a::82a9bff01ed5227c0588846f444d9d379180e042::4bd66c606f9c182f8592eb3c4289e78f99f9d48b::b1956ad432224c88b0e3de7dd82ad5049f2db579::308ad10a58a3f5f79bc4fce169e2547bcfbe2ab8::7e0d5028f18c91f089d8d052604b7ed7b6a619c1::771ed95a8cb9b1c98b54a6db34eb2b40001ba5ab::07b899c9b3902b9f4bb44389f2d2157798503eb0::89c464660d7e4c839da3ff64c5f16b7eafbcc6e7::9fb571f87876d4e306cd0390d969e91f353d520e::aed365c947b2ff831c2c3b42507c95a13060eb2c::253ed0b481b5343e36677829f733924a97bc1fd1::e26f06b5a78e92ea6b1b02a33c868424fba60cad::ed7a00020545d3638f222cffae41839c37e3f75f::f5d34c0129328dc70d77b73e1b5836cff6d89722::4f49a71f23683046773b109ae8ef806696435d6f::30f309474609088c532f1d1bcfa458f1c019a800::ea376be2ba67e30a424d2ae93c5b470e3b5c7a66::c7641deb93e0b268db8cae24c870960b0dc8f9bf::3264487275ac944d2717e0423458e5245c48be3c::6b955f6910d84e0977da8efa8a2c06eb6b8f2d14::48e004617304f13285493083d7aa7124f131b0b5::6bb9e1dfcb3236da5b588052e1cb430e7c189303::1f9f5732a77823c02177df2d5516ded2375c8fea::1fbcbe9cf77cf6ed57684d18982a39a121b47e32::ddda38e9cec5eed88f874d05ede42d325faf3543::70a3f9546b078053d30f3460a95616d8568665dc::4a0d35e6cb1cad12c1ec28283bfc23373a1b9ae5::1cdf106a0e6879f29de8b9e9b1440a42fe946ebb::41c42ce29a6289e659d0d35304f6a4b8bb5df963::5018699efda8845093599c25f2f7d76cec4a2c2c::8857ac5dc07da6f0dfab49019077962770a3570f::8e446f7fa3f1abfcac4e2dd1a3d56be655fdc1aa::61ff6ff63bf31c797d8d4007546eda845f435ae4::bbbf145f1fde6f06d052ae7e0c1e0b842501c304::707f7747253d800191466b4206d0c1f475476f9c::addfb25132edfc1f94ffcb9e4ca338f050a39dea::b6418bf66c30e693ab50740026cee49d6275961c::d08c76b4d5c164fc91d1ca5aeba61e1f902b1b14::77fb9936456bcf86aae11fa3a87960aec1364e21::3a3cf6da44edc732fc97cbe898fc2a93eac059a9::6a4734b7a99a264d7cef7fb9b6dc1071e142b7b3::958c0afd08d1310dd666451f422b839d0a85d196::3c5f00214eef3a14f3b1f0bbf8af753017b39d91::f2ba08eb19bb70fa848f1b173761e09582983c00::2797a69427118d2be695ae9f2e5ea2a163a254f8::60dd186ef107b0034bb8dfbe69357c34255d26a4::4708fd61779d6a8d7b867f00d1bc9c9dc797d402::ac64980232d41cd8c5c3e78fef4fbee87cc23895::1be1e2a587aeeefdf4590e1f8dad9fbe55f099b0::a5871e89a2f40733b8b89d2606f928509ae7c08a::d5c22709dc5df1a9d7408315c786f1e21b540ed4::9111e6220ba4533d995d46f917bcad93be264924::d96da0fb174a0838bc3f71e2c8809776efe67bed::e0c66b98d2ee4208536ae2089dfbbd3680cb1840::bdf925e8f9e2f753c45227de7bce6d5d3c502c4b::613a745404bad87a867c3b6cc512079ff839ec7f::74ba30dacdcd3cfacdff5a6305174cc6299b5bab::925b2c2495097aa58475930c6579568ea528a132::bed5f011075faf1343ffa96f63be7b1828c9ee92::32e84956bf66108f0cce26e5a7a26f99a147a108::45263a41b3f83b95d173ed77df174520f2a8c091::f3a87de5df036906de2029ad8b53b115b2426e74::1b3fdb8cf1adfe9467849feb502e29d8b3b8871a::3ec25295e35ca04aa86b46e26abb71e8999fb1d4::398e4f589d9096bd85fd805b92cdc355edaac779::753d0b481eb574b4bc620ba43c9c2b39e501b9dc::a7b6099684a4296f52f5ac424566270de463809b::6e89d686f986a3d869672bcf4d3ab6c1ea83f79c::6e4e1a3befde67fe7670ab3a1649f1952ed9fab8::5c5772099a37b4471a4c719af8f3e20ee1e161f3::4197c544fa06639863162733ed442962fc65e268::d6f7857ebad33d480b065cdc5a03691504ecc3fb::ba92d47e992779fecfb1b77f76911d280933e4c4::f819116ded587b87a14749633a4a23d2fc17a52e::c411c27c265b27a13816d5d843b6ed79c1fe64d8::cd6a703352df21ca212184505c63978087e7bc2d::2419b38fd86153c8a5ad943e495551d0493be4a6::aac87ea83f6159c201bca7e50f59f58af6059f28::2cef69f49c0c3365b6c5ea27d9d8178cf0be7676::ea7f2f168f50bca50c4b7780dce59cc0c6879da0::c107fe4ca636711ccdea6937bf97f513112b4687::3c92197192ea8276120438e51252150e332d6b9c::c25fa65fd7cbea753078eda4e45f8d6d134e4489::062108434d9cc1adace9e987dcaf23a5298eb13f::197fb1f742e1bdaf173c5b3619767c8c1afe62c8::5babfee4b2f9c8ca9df26d5e878b3c8a7c89c4b7::562011647fd4916f8fb40942f5b82ad274ba1912::9a6b3a3c103b9f1f6ba4dbb8c533e5c642590922::23ec2f128debdba9176a0ac88828f21601a12f48::d2264aa1b511b3a2214ea4c1d4df1f862fed2188::65e95674cdd33de67ac416764c3a9680829cf624::137c1f20b4edc9f8b5cbb14a7853d3e72c2d2b47::09d896df2cb11fe26c3554b4e236b86ab438717d::10ac953d29403c4c07d5767c097ae71f0d285d56::eb40f7d249f5a36b9343d795c8b50aa6ae72ae2c::ee2219db380923a8a860aa4be57b51c7a89de876::4855162ba9964083e8be359133be9c8738031d48::f7920722529ebcfe7e91f083dda67382a71c3f0b::7eec1d99a120b73b860982f41b965467107552a1::cd89ac645314b8a1600856b6614e82a525ccef71::d73a2b61db96ac3887646c0368708cb1f0d14ab5::2365d4ddf960b3f7dd01bdc3f80421cf501d66a2::fd0459b6e4046cfb8ac95f67a034721d0f1ff84e::fe79564edad9ce750b72f5e7307fba976c5dff73::9af9d1f73e489e1d34ae6e54defa2b3f4cffa0f4::194752f63e8231665972cf839743e36f8bd871c8::4e88a167d127621dc506827b2f1b7f3af7e876dd::9d5b1936974ae4bc7c4bf2d154b7d27894db76f9::fb8cd9c9eca987c2dd98af5d47612890ef861926::0a1c1b3e6bb253a9927457fe391002f108b17544::4ac3330435317a9f32be4ba49dd62b693c4e9427::c9502fbe8a8c347563a526b72e8ace44fb3c2e2c::e90091b19a34853d71eafd85e4e98c1829057444::2af35f032bd15c7141439cf168a3723feed0743b::407aa075e1ef97af250a1c83f5ffb2e05a752eb6::bfd2dc9ead6d18bc4fb6160f337b9598c9842626::1c853b128fa7dfa01cd3b4638514cbf71e888b89::d9c7dc1ab85461395db8618f5f58f4cefff26149::86bf3fbec52d3c16a24f8b326ab226d300a2f9bc::f14b33362e60d51d0caeceeeeee44b28879fa86f::60551145aa0ab6b34ba1adf2247f55a6de164e88::0bd785850208995ad395629d996374245f75b957::c85f46d218a1812a788589198fee9555c33f1dee::31bb88f5d5f874209da91027dd68e2ef1e56739b::fb009eba993b929f17db7fd5a5a69f9a0336bebc::6b3d544203734c2d9a05592970afd6b09b3bd917::4675c233d6f20eb0a5ce4222fe1b4febdcc122d8::35287f4fb4fe7ec76832bd068d80ac38871be326::d39f38d0afe1bbcf431900a2bb3cc81cc9e72969::31f3df0f5005515d57542fdd8287f6d88df73895::3fa65e3855ba21115fb93c8c0f740577dce046a7::84d0d65540cee71679d2ad88481c5e59ae1bd772::1f6287fba9f76f131d9740ca6aa8120fd2e192eb::1067788545c9489043ff0e16ff255f1ab819992e::c6a0b1ee95fa0f176a89e39e000880448566fb28::7d0663934434ba69a1ac2a735b85441f3cc5a897::9f5b7c1e2053f91e3bf72f4d52424e3c48796584::34f3be1a482b71be3d24ed09fd1f508605e72741::dabfafc66912ad2bf022a428e043567ee7f02f76::ac300de18c700151f963b38372a73a4d19c531ab::c511fc4d72e691386ff65e128eeb74d9f495e1cb::f76f9f748f5f8cce23d911cbec3a375a727b5a9a::b8bb2123f4e54140f953119e913e95c44765a7be::1a35ba590dc72659686159a634d3a083ec164bc1::2530365bcd91a7eb38fec508455b51045839620c::af4de542d581c3f74a8fd974a194fc9e5295e211::74e2d440710ad405185f6a536360956ee986e022::420e30879787107d56ca21aef176f24ba2d96d9b::72f716b5e6712d27cc870e39fadaed98851c71ad::6ee2aab014ef5971823556bed1ea99dad519278f::06f66eb2fa77b6014ac96685e6381853a5ff2e67::44c8d2b7093016599be0e9e13f272e981e7cde53::383827e265a8674b362dc8a459ab67dd03ed3d36::87f6bb9df08a896de4e4d503f70ad7482686264f::1602589b8fafcc8472325b9f150dc55e84bfb3e8::00dbd5cd15ddd716080b0586c2d16bf1a18ea374::2b21094c83e3aa2b802df31382784f7c9be66e84::8e3c0ea0bda6e3c57ef7123cbaccfb32c6a58ace::688fbd013db7fe312cacc3fb94706ae5c213184a::8682b6e36f2ea7137b894b24cc25b96a1c6c536a::5983d8a4efb89c65afc9870789ef526e88985a5a::c919e072f8de7a4b9adc507811dc411e9080bdd3::9fed90da3bbb3edff4762040d6487a37ab371b93::4eb678e65e12eeed50e071752980cefc4b8059b7::788fded8b0be0fc21760a883887145d81e0ac362::35f0d0fcbc566cc385a87897d16305da1884de28::50b899f89f7cf7313654a8b73a196c410477b32c::0a06bc3f0894536e31a71df63cc33cb2da87a383::e6b5614f2088c6926aab835ea5d83f6f7739cdf5::5f026453c11b7ffa839656e56b72e4994d676f29::940c4e2d0209a6961de4b38d0b5ea02f2fdb13c1::d17cea12d5c8a000171b78a6c0dbc0080dc45a6a::f182a4f87ba3b2836e970889c1e34f90bc7c0253::e79b729afb692b397ee36d20b493290535c84ec4::5d28311ea82bbdc8555a970d28432b19375cdd5d::3945f0d407eeb50cd420cce09fc7b7e56467ee02::a3c58af7a8f969e38bf10364f20241de24f78cbc::5be2414faa8f3a5c1a676bdb79cd826cdc6c359c::34e84808732807d5bf7d325f90df0795cebe80a5::54aec985b508b4744cb12d6f40fcb6ec89c2ee86::01e5c5d7c559c4effa6a2c7f1b7fb0a57e6a2fce::0b6aa598d4c89c75c9aa6c3084303a2296603b8e::f0a2f9a4aef7bfc53cc7547b65efa3f7ec81d2fa::f4525210528210ee58182006b2b496e76e0bbfbb::7b979a3cf352377f2fa6b498019d5aae9a97541f::cdcfe928c1a24445dc416099777f954a6751d02e::8b101de6f25f32aed4f98c84f5b4b54a5a39ada5::2a3169423900907106d9f62d7520217471453306::badf243732213bbbbb8afd7a9f8122c2c16e0f52::9ae5aab6b9f6cdaa879663e621bd4e127fa91717::a09ff303b37a0f895a9a05fb9b89f16ec71ba45d::7e079b338c5fe4568130458f365bb438675f7c42::92b92e5642899d8091273a619ed08c03017048e8::fd4714bfa75ee7d57a5e652501f76190d642f4d9::accee873b892b16c986bf847ad001ab038f701f0::2b86b74ab83bf13bada3821df3261ec8864d5d97::9a7dbf8600a4139ec6f29a84c610ca613c86c770::4a802462fcde697b00fdc368151d5baf1283f8cc::1cff416495c5e2d65f3952d71048b0321a5ada77::55b97882dff4a4ea01f1d84a69003ff0c68ac6c4::79e96ac5796916af9953f0d855137702c3e6273d::75afc9fbb024df55fa01acd1a4c2f76d44961746::177c801807d63fb536c4ea13ccf13483f27a52da::dbc55cf66418e0dd7def4f9143da12a76d5a9b74::5592e14bf0a6ff0f05c08e99c608f5fcf61a2d99::bf75b01dc6f3df33d0608069596932515505c196::e8b5b939cb26aebcb80998af8d8e90a6bfffd279::7dd37e2bd8e5f489364a5fcd2e8a0f3542ef1021::f0f8be56488cb609b8c14e084de85ab5af7bde39::fcb8c63567f3e2594f1004be7526fdb4f5f6bdd0::5317eebdf967f88e23e4f5dd1e9b37d705523e0c::1e80ca76f5d59de46ad3c29de31513667ae2802d::9552dbbb8241cf81361ced4aa69af3d774c41c0f::ae3ea80bca1b6f9f04257617858f7d2b36a5f759::c127e9e7131d9c1e8930b46373204ecd7d9193b7::e91efc34bdbdd1fdf58e7d00d48a06fcf66e1b88::9816c56413d5bc8d13db47fdd425925cb38bc06c::72dd928bd332cb04db60a5b9edf072abbc925a33::72443cdf2a5aa62a22babdcdae7eb54969e2d774::29ceef66f3f307e585ca965177ff670fda3a3669::9fef93103a1d2bc1ffc52c6ca4e9c0390aecdec4::b665880b999e68b70a8816498a322eb112403551::0b56286bd779ad21052da8b3d60a3a58b8b922cc::229bdf7d0278ea7e7f346d391d26806b14edfe1e::4dde26283e319c2fe4f3fdc037dcc42e6de33459::
https://api.github.com/repos/elastic/kibana,11658,4.1::master,1,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",5c1e8133a5d965065d63ebee71611284e5f592dc::4cc3d91ea562f9c2d517c22ef320819af94b2f74::89b1372ec010bd8a69988a4f7b2b5fbf6572c0b9::ba9f25e7a0e9391ea1036f8815a13493ed9bf833::cb51c4322cb2261c08885fdb28af06d2ecbe0c82::040190f7a20994eed8ba123739dfba3c4e26ddc8::ccd84899406e870737711bc3b72a40ee138c87d4::1e5044e1491cdc272c5815fd437e92eba4aea35c::3655a3f82904d555dd03e048ec46ebcc64c2fa0a::49b33b36a6ab42ad7c15daa7a1707e0581f0a2b2::629f5b01f965181adf1fc52770e7fc0965b54945::f08fc9bfd5bf51ddd617d39ec3cbe4b83596ae26::80637c0830e36c9bfa1e65061fcbf2eb0b43da0b::fea19a1437c3cf6b23de502464f3890d98a9c978::3b82e4a8a2b485bf338c7cf152cde78cf99de12a::9be9eb8c487a5a9f2e86ec2f8818e0ce2273e39b::8ebbb93d1124e99d46483a574a8ea2527b4cd995::d7cb80be3012b9df75f0b5f1fbb71802749aa9cc::72cc96e0df347b9b33b6f0b79543a7c94329bd1e::e5d2b8d797a466b2f67c6620bb97a007ff7618e6::9c3d6dfa56f3a14c03a6f050fb08a595823becdb::bd4fcb654a2fa062c9a99853ac5f776965ab7637::6c069838eac66f53545edc0d6509678ea9620e7e::6dd8aae1c50e72c4dca99f0044f8d3713bb36368::f5f2109d3f9dae3d67bb9f7e4a3dcb0686d1b303::5e9d7a8e0d7759fd3fdc3252d6452cd6eeb33b82::cd0ae21ce8ee842e44d564f3769730d893e9c71d::0f2b1131362578f54bb8679f04a3a5fcf742b1a6::ab4317f5fd58b8ee3bf70ce3cf0a070ef7d4467a::e747cf60e4ad8170d193a508a9340845b8975c31::96db61b90af160c7ca690c3080931b3e7ff2c790::116241122bc64c8ddd9c6be41638d4809d4965a6::8cef836c61b5749164156e19accb2a0881e902e4::f7fffd39e2262ae10a4d5e9f7bb8f158f7786215::ae15d8b89292c0bacf7d2f8958d675490b617f0c::9310386342e379ab80be62a7f207cec8ecd7726b::5f8de2831890b7095f721df2abedfe7f64c6273b::224bcf31f3f353eadfae214a3a8831ef3a70bedd::1aa6ecd7b8a7baea0877de5062d9008d02d9f819::7c7f10844f1750cbec77866ef39735586ff8c68b::37000e66bf8833b78d7ebc7cdb811a376d43e398::8d63528878cfcf82abe22417df4dfcfbc091e53e::6e5ab9a32bc263e8f9b0564f01324b449436a253::3741cf1469d08df9a09184b44379649c04e91e12::ee5f53edc742430c58a186eabae768f0c091d83d::6b0278c3e963809251b84e191a19099a0a344287::62676c8712e592e96779a8297e7e7bc9bfa79bb8::ab6359d3c5a595fbcf62f15a5156182642b500a8::28db8bf5fb450b8806086317d991a4f9a18ed79e::e582663953f34fd81cf88a7583e80d429c0931ac::a3b7bc8cf062a06afd7d5026295374cf92c51b96::52531488bfe16a948af7fd481e87496775af1700::6734a5a39198a3ae5a411a50ddc07efef0f2a8bf::1e1319f02a152675887c4d1ffaa9dc8a9b8ed704::d0e00ff2b61c8a0d50a7ee42e9789d47ff9362a1::05e7cb28ef6c944503a663d3bfe1d685db6f9607::b1ec88524148b140ef157e679cfbd4d64700f512::76dcb6956755f398631869fe581f1221f69a205e::7a472391d6f9fab0a473554bb58ffd3b7aaea669::b2c34bf073e148da6c3bfd6ccc10efe18b181e4f::a1c819597ab99333bca07b52aaa046661f612888::2d5c901cba739728242318207b43b3c836440b2f::7d1c861709140e6599c4b0f8074b1cb3c96168c5::de29a4627d29cc24f55ca6dbadfe493854460b37::cee3710f5745943da456d223a400b000dcc3a42a::33d21a143c5ba7987393a3d6b7f22525c1d15e4f::dff123f787e15c606f53e84508303c04182fa6eb::1ddb32eec5e8936af05b54b6e5bbe857eafc32b3::82fb6e0756561e292b181536a3ce6f8eacd70579::628dbec0487c3119b04cc896b7de15186d32e8be::41137dd1abf1a934bfc0b8bd0af88e3f99ed4c60::386fd2c9a6b83064b74a625324def0bca037782f::40b4f479975dc5f313f5553a8805d2219a78fed5::9fc8d7bf13c8a7d8c680d669b7c9b15d3456a815::30905dcd71d37e19a3de87d7176962f560dd456c::3a263dc1d5a20c1a5b471251c2dfcb0eaec817d5::d4f8e16a64c88e503768324ba91e9bdd5e70b9b8::415ad1b76a3344492d4164bfc6b434ee5ceb88c2::62bd1d64d4ff7139592dba6c77f22cabcc9b17b2::425cbeff633eadfa6b5b0a3ed4ea5e1971758d93::7c61c2e8f54830e1e89f7211db17acbcb38165a0::cb9e98544e662e6b269dd91bb9f245dd2682a642::e5903e83982598ff142e8323f40b45ec731c4480::0e6372833adffe4cefc18e59dfb5cad145aa3ec9::bbdd7ba4823445c407fba624fbbd2ae28e8a2d6d::692d1af65187176b57ac8137f3ea111a24f1fa45::254b382324d212854d7a8fe9243ddb093bd815e9::29e0387dff67a5d0ff2bf1b140fbce6d40a235e7::c2f05f8f158582ad713da23a2be31aaf1018ca53::16a8a5d82d3b4deb481f19cd46caeca4570a7611::fc9723af6bdc7b9d749cb4cca106a7d86fb4aa4f::633e08f97da1a61fe04dcef9c4391f8ea941b591::734d60250308e55bfd4609649f63e901e79d0d71::f4ddd994a7a7b177d67a68877c320d156830ae6e::34af16e285598b21b9449a3e57560c89b0d11eb8::bc9e0dfdcd201e1f7442101572ec8cf549902137::715b1df306a8f884127806455867880f5d982157::6df59eb2ef22cbd98932e24752271c5f895fdfb8::61f854311b0771e4c6e816d5678cd1309ec87056::4d528c4ad6c72efab5761cde592ed1722ec38789::7c2df475da38407340a1fc45a6b1caa86d0376cc::980411f22d91db3c4d81b80a955219f43b8de484::76e5789103eb459042dc5a259425944d1524fe75::02c018d26dcb61a09e926a58d1897eb1053616ee::f822338009914246912879bd3207fc453ec5ec40::4b541011ef895c630118ed6f126ed3c59f971451::04144ea0f3cb792dfbf4a0a494455a2a46f6677e::9a4a673c54c57b79f3e13f2bf39fe5ac4abbad80::0eee5784f211339b7a61d2de8a5ae4eb2f51e169::cde936f3245af7d54225e85ff77f604421537284::77e5e876a1f646d97c49df28f0e43f45ad5c92fe::4ba8c608e1897396a1ee7d0b25856f93ef4445a8::58457c10bac3a520f599f2db9ec515bc7b88d367::39fd5a25eecadfebec564b25b5982331b10cf1b6::efe34565243462e5180fa199e864a3e4e72b5bdb::9c3a4e240a943c83acb4f18bf63807998f179f87::0dd60ed39301c97c8a45d00c0c11b32360df6a18::de48fdfcb06b9b4dd25d53575ac4eb191c7cf83d::9b901a07325b3881282e8c5d2a7aefd77bbda2a1::24573140abc9f7139c8fcd6a5e513423c907e184::3c433c9ada09f10e86e31bbc275da1256fbdbeb5::e9cf3aeafd0a85507b86061ac305a214160679fa::57829fedcc510a809c0d9dcd3463015fa5af4192::15ea3a25646e3f63303650f804d25c234dc3160a::4f9d3ae3b75655f015d94b53928863536990b734::4aee888b10a0cdb1e7124f114a6e3ecd12daedb1::ea29b5ae43e60a1b5c6ea932605067c51789f2af::91bb5ee1aa6f56ef2a259165f1c7b72b4f3a50c5::2be9a91636ecd0a57b1ce3a158d988ea67462665::f1cddb76ef48d534a7959c459df69b27ec67ad43::2c313d5efff2d07b1fa21fe43defb700cf69902a::b2810b984306fab2cbf3c8f0d5cd2a424e344171::846c0d1851150f046036e1c2710b279bb9f66aca::f895f228de1c8c34b1a5e84c3336c19abc35bce3::7af480ea4dfa0821657932494c426c9f55b4dd7e::595925bb40ac78add6a61e8d0e3e15300c2eb494::41669a7706364183b8524267fd1f3a356f26a5b7::d6ddd0f56486263072d519773b2e9275d5de8e57::d060dd4c3982ecef4f76690c085fb324be841a1e::e83489c4af01200aa062bd4947276e48c8939974::af5f29d024dd5cdb0fa209ea702aa6f3d367790a::15df4c2f345c7d6affa818a45726c123f5f1f5a3::b8151f0b5ac73e9e5f78cc04cc9e90f0041ec763::32f4714e830168f3710e97022513e19df62b4c45::24a3df036b03327ecfcd93db8d17295cb0bb6806::3bcfe9521a2ec2c2f91240e9edec04a7bb1906d8::10f654069594093b8c8f829b0a5c32b5b030c2a2::fdc28d08e3a06a1405d75cfffaafc9c6c8a0071e::8c8ff28273b871d725720ffdc6bf11fa2e1e67cd::69f9960b2dad1c1e2ec2d7902164d420165082d6::09433c3b3d13d0b79eff45a13497ed825f88cad3::f39478daa946de3b79db62a90dc8892ab1193804::569aa82afb291e7b7553819c1b633696f6f9037d::2fba2d180eda1d5bc1ceea317fce3c7e2c5869f0::d660db49551504f220604e1e11ae6805d087fbc6::e751e64920c401b04634c6afe3234125ebb4c128::683795118da1f6983d0002184ba2c2d247fb61d3::cf2c1b12c20e5e5dabd4b7177145725c77a37c90::011daa6b20ae16ec59d9ed4f4e9ad7ab085cf1f5::ecab839705074d40c7ec25ce0f7ce6b0bda848da::1026f1ff4e7995bbd93c798d03c223be2baaa94b::1c3d5ac4bf98ec207b550a6d769b849116c00d7e::f57f3748a29fa647abfc4d484dfa83647783f9e8::2edf10fcdf938c8a7d0de0b824ab28ac219bdc5a::6b8db7dbb5a881e5d57c4fa3baa3fc7f62d4431e::e4f4c5bef5fbec91f0890bd08f6a622f6c4648ad::44f9d7e34635944c3d0102fd47c28fb76895254b::77587a4edd2459135566c1c1d7a33cdaf8c70437::38aceef56ce5a442f6b5f8bb11edf0fc841bf94b::60b67fb367c4ca43352c5a77dd78d87de1c86e42::5c1d1526cdcaabdd9c9e14d972867b08809dd108::9ff791d23997f6565b50a9731a0e362e1cbd79b8::fcfa0cfa8a4eb40c219a6f457f17fcc743921677::e8f467c22837a6e754797be3c3547de74f72dbb1::af33bc2b35abd93c83070a75dd6c27f322724c1f::07ab648ccbc5f8695e61219c023fe0f485d0b1c8::901fb472148246982bbaa9ee6eeaa2cef15556a9::9aca9399554c36d959fdd02eadd24cc5d8a48c61::2a2f84470f33c47bcf956f7e793db03318ddacaf::9a52428d1734ec38bc94a70bd23d1dce7ed04015::6807a50ea3a92f1bd1c8271554900499977a6862::78cd618d41ae96512b60ad59087c1a0999d65920::1499eab3499e2c2c1f96dfab10c0b5a7bb8428a1::baf3b1452222982a276f19858f46e697f113519d::031ce23deecb345aa42f3cc8bdf2d5af0592ae96::08f7e2c9ab9fc9755c9e3a240e7da7ae79f7543c::9b0e54ebfe13999a7c488a73418de17f3abba1cd::868f7668ab026bb6b2d83f1b604d37762efbd926::44f24dc38b20c74d777d1598c23d323f6d50cbc9::d0b410d09e23af2de2314c0a90a99b5286bf3be7::dc8355225228b6ffda7a8cbedc45cf61174f72f0::c5dc97aaf7a3b45ae3b83cc96b0c280d3497da70::b4226e81464cff4fae1b76cb57b59f6d0e93d4fa::1ad184aad205c0e4f56c1a32d021e7c35b5e6179::a10afc493617f02f8da717e10d5aa7c57b8d7ff7::c1dd5364e51301fd0ea50dc5d9257b61be0c7ce2::d3548c7a2c8fe35bff7e7d85ae14a8a82eb15702::b2fb6cb6b7b498ec45e61dee1509e1560ba9418a::ba2cf163617f7476e84e35a11ff2483d7e87f9e0::91351e82fc53af5f7b27161d7fd0a36dd3793717::95859d9c5e3bcaea98e85fad9bc880c6b9aaec43::4333978f1593437bce2a90431f8f949f0e7aaef0::a478dffdbbe5acfff5ac2dc323c78a634d8e0c7f::4adfe146a754a0eb191ca6bb6f6366b0bdc1550c::83b78fee4c2f0443b39acee5575daf42f248b9db::
https://api.github.com/repos/elastic/kibana,11485,removeSourceRemove::master,0,merged,release_note:fix::review::v5.5.0::v6.0.0::,"Fixes https://github.com/elastic/kibana/issues/11483 The `discover-field-toggle` class was removed by https://github.com/elastic/kibana/pull/11352 but it was still in use [here](https://github.com/elastic/kibana/blob/4209774ddee705c879da41a3aea0d7ebcff6f6b6/src/core_plugins/kibana/public/discover/styles/main.less#L242-L242). @cjcenizal your PR doesn't have any version labels, it looks like it was only backported to 5.5, is that correct?::Instead of embedding this logic in the CSS, can we move it here so it's more discoverable: ```html <li class=""sidebar-item"" attr-field=""{{::field.name}}"" > <div data-test-subj=""field-{{::field.name}}"" ng-click=""toggleDetails(field)"" class=""sidebar-item-title discover-sidebar-item"" > <field-name class=""discover-sidebar-item-label"" field=""field"" ></field-name> <!-- _source field can't be removed --> <div class=""discover-sidebar-item-actions"" ng-if=""field.name !== '_source'"" > <button ng-click=""toggleDisplay(field)"" ng-class=""::field.display ? 'kuiButton--danger' : 'kuiButton--primary'"" ng-bind=""::field.display ? 'remove' : 'add'"" class=""kuiButton kuiButton--small kuiButton--primary"" data-test-subj=""fieldToggle-{{::field.name}}"" ></button> </div> </div> </li> ``` And then we can also remove this entire selector from main.less: ```less ul.discover-selected-fields { /* If only _source is presend in the selected fields list, hide its toggle button */ li:first-child:nth-last-child(1)[attr-field=_source] .discover-field-toggle { display: none; } } ```::👍  https://github.com/elastic/kibana/pull/11485/commits/3fff715f91d7332b7a679c592eef88cf35abe8af::",d689b02377140ddac68d8fb8b360d590a0630147::45812d6ef2692baf2bee8975f8578242fda2431f::
https://api.github.com/repos/elastic/kibana,11430,5.x_addtilemap_test::5.x,0,merged,,backports https://github.com/elastic/kibana/pull/10992::,c5589023c4dc470b65e430953c245f99ac9c7398::0ab0a2ae584f24eaef9bb385b9f4955fee84c822::
https://api.github.com/repos/elastic/kibana,11429,5.x_addtilemap_test::master,0,closed,,backports https://github.com/elastic/kibana/pull/10992::,0b801bdd221dc9631ca503519df651914dd019a8::1204d427f9ff3c7a48e2b155ba4d3145bdebe250::14d27fff1f2c6326b91263a7c4b093c270117092::9e3def9eb0dd114225d4879c6baa6fdeb5416366::191a70f28d9d45a93f04f1479c14c9643a0f2bce::b2370cc6e6dded04e36ea77d19f95b36c3b6d879::105f0d59b24c2294427c561cef0f282235caaeb9::3f00bb1fb83ad03d3ce74248fdb9f6c228260f56::abf805d23f9ac27840a3150d8da0026aede3f0f1::b2450c6a8c882a3181303df65098b6d1cbab8201::d7f84e43ce35123fba58413573ef10bb304f5cc0::5e3af5459b39433989ba5439e52adcd8bbf29c6e::1c414d09c42f86b9bcf801a0bab8c378141fc455::a97932f7ae485ce3fc301437782c595e0f40ebb7::4b954d45425b4ac926a798f9ee31053c786d39bf::6bcfc9963185bc19509404fae33577d4a790d956::dc469360baaf453bd82b99d0f13dca35408b84e5::813ae905c241d6110b68c705170dfae7a073953a::82a9bff01ed5227c0588846f444d9d379180e042::4bd66c606f9c182f8592eb3c4289e78f99f9d48b::b1956ad432224c88b0e3de7dd82ad5049f2db579::308ad10a58a3f5f79bc4fce169e2547bcfbe2ab8::7e0d5028f18c91f089d8d052604b7ed7b6a619c1::771ed95a8cb9b1c98b54a6db34eb2b40001ba5ab::07b899c9b3902b9f4bb44389f2d2157798503eb0::89c464660d7e4c839da3ff64c5f16b7eafbcc6e7::9fb571f87876d4e306cd0390d969e91f353d520e::aed365c947b2ff831c2c3b42507c95a13060eb2c::253ed0b481b5343e36677829f733924a97bc1fd1::e26f06b5a78e92ea6b1b02a33c868424fba60cad::ed7a00020545d3638f222cffae41839c37e3f75f::f5d34c0129328dc70d77b73e1b5836cff6d89722::4f49a71f23683046773b109ae8ef806696435d6f::30f309474609088c532f1d1bcfa458f1c019a800::ea376be2ba67e30a424d2ae93c5b470e3b5c7a66::c7641deb93e0b268db8cae24c870960b0dc8f9bf::3264487275ac944d2717e0423458e5245c48be3c::6b955f6910d84e0977da8efa8a2c06eb6b8f2d14::48e004617304f13285493083d7aa7124f131b0b5::6bb9e1dfcb3236da5b588052e1cb430e7c189303::1f9f5732a77823c02177df2d5516ded2375c8fea::1fbcbe9cf77cf6ed57684d18982a39a121b47e32::ddda38e9cec5eed88f874d05ede42d325faf3543::70a3f9546b078053d30f3460a95616d8568665dc::4a0d35e6cb1cad12c1ec28283bfc23373a1b9ae5::1cdf106a0e6879f29de8b9e9b1440a42fe946ebb::41c42ce29a6289e659d0d35304f6a4b8bb5df963::5018699efda8845093599c25f2f7d76cec4a2c2c::8857ac5dc07da6f0dfab49019077962770a3570f::8e446f7fa3f1abfcac4e2dd1a3d56be655fdc1aa::61ff6ff63bf31c797d8d4007546eda845f435ae4::bbbf145f1fde6f06d052ae7e0c1e0b842501c304::707f7747253d800191466b4206d0c1f475476f9c::addfb25132edfc1f94ffcb9e4ca338f050a39dea::b6418bf66c30e693ab50740026cee49d6275961c::d08c76b4d5c164fc91d1ca5aeba61e1f902b1b14::77fb9936456bcf86aae11fa3a87960aec1364e21::3a3cf6da44edc732fc97cbe898fc2a93eac059a9::6a4734b7a99a264d7cef7fb9b6dc1071e142b7b3::958c0afd08d1310dd666451f422b839d0a85d196::3c5f00214eef3a14f3b1f0bbf8af753017b39d91::f2ba08eb19bb70fa848f1b173761e09582983c00::2797a69427118d2be695ae9f2e5ea2a163a254f8::60dd186ef107b0034bb8dfbe69357c34255d26a4::4708fd61779d6a8d7b867f00d1bc9c9dc797d402::ac64980232d41cd8c5c3e78fef4fbee87cc23895::1be1e2a587aeeefdf4590e1f8dad9fbe55f099b0::a5871e89a2f40733b8b89d2606f928509ae7c08a::d5c22709dc5df1a9d7408315c786f1e21b540ed4::9111e6220ba4533d995d46f917bcad93be264924::d96da0fb174a0838bc3f71e2c8809776efe67bed::e0c66b98d2ee4208536ae2089dfbbd3680cb1840::bdf925e8f9e2f753c45227de7bce6d5d3c502c4b::613a745404bad87a867c3b6cc512079ff839ec7f::74ba30dacdcd3cfacdff5a6305174cc6299b5bab::925b2c2495097aa58475930c6579568ea528a132::bed5f011075faf1343ffa96f63be7b1828c9ee92::32e84956bf66108f0cce26e5a7a26f99a147a108::45263a41b3f83b95d173ed77df174520f2a8c091::f3a87de5df036906de2029ad8b53b115b2426e74::1b3fdb8cf1adfe9467849feb502e29d8b3b8871a::3ec25295e35ca04aa86b46e26abb71e8999fb1d4::398e4f589d9096bd85fd805b92cdc355edaac779::753d0b481eb574b4bc620ba43c9c2b39e501b9dc::a7b6099684a4296f52f5ac424566270de463809b::6e89d686f986a3d869672bcf4d3ab6c1ea83f79c::6e4e1a3befde67fe7670ab3a1649f1952ed9fab8::5c5772099a37b4471a4c719af8f3e20ee1e161f3::4197c544fa06639863162733ed442962fc65e268::d6f7857ebad33d480b065cdc5a03691504ecc3fb::ba92d47e992779fecfb1b77f76911d280933e4c4::f819116ded587b87a14749633a4a23d2fc17a52e::c411c27c265b27a13816d5d843b6ed79c1fe64d8::cd6a703352df21ca212184505c63978087e7bc2d::2419b38fd86153c8a5ad943e495551d0493be4a6::aac87ea83f6159c201bca7e50f59f58af6059f28::2cef69f49c0c3365b6c5ea27d9d8178cf0be7676::ea7f2f168f50bca50c4b7780dce59cc0c6879da0::c107fe4ca636711ccdea6937bf97f513112b4687::3c92197192ea8276120438e51252150e332d6b9c::c25fa65fd7cbea753078eda4e45f8d6d134e4489::062108434d9cc1adace9e987dcaf23a5298eb13f::197fb1f742e1bdaf173c5b3619767c8c1afe62c8::5babfee4b2f9c8ca9df26d5e878b3c8a7c89c4b7::562011647fd4916f8fb40942f5b82ad274ba1912::9a6b3a3c103b9f1f6ba4dbb8c533e5c642590922::23ec2f128debdba9176a0ac88828f21601a12f48::d2264aa1b511b3a2214ea4c1d4df1f862fed2188::65e95674cdd33de67ac416764c3a9680829cf624::137c1f20b4edc9f8b5cbb14a7853d3e72c2d2b47::09d896df2cb11fe26c3554b4e236b86ab438717d::10ac953d29403c4c07d5767c097ae71f0d285d56::eb40f7d249f5a36b9343d795c8b50aa6ae72ae2c::ee2219db380923a8a860aa4be57b51c7a89de876::4855162ba9964083e8be359133be9c8738031d48::f7920722529ebcfe7e91f083dda67382a71c3f0b::7eec1d99a120b73b860982f41b965467107552a1::cd89ac645314b8a1600856b6614e82a525ccef71::d73a2b61db96ac3887646c0368708cb1f0d14ab5::2365d4ddf960b3f7dd01bdc3f80421cf501d66a2::fd0459b6e4046cfb8ac95f67a034721d0f1ff84e::fe79564edad9ce750b72f5e7307fba976c5dff73::9af9d1f73e489e1d34ae6e54defa2b3f4cffa0f4::194752f63e8231665972cf839743e36f8bd871c8::4e88a167d127621dc506827b2f1b7f3af7e876dd::9d5b1936974ae4bc7c4bf2d154b7d27894db76f9::fb8cd9c9eca987c2dd98af5d47612890ef861926::0a1c1b3e6bb253a9927457fe391002f108b17544::4ac3330435317a9f32be4ba49dd62b693c4e9427::c9502fbe8a8c347563a526b72e8ace44fb3c2e2c::e90091b19a34853d71eafd85e4e98c1829057444::2af35f032bd15c7141439cf168a3723feed0743b::407aa075e1ef97af250a1c83f5ffb2e05a752eb6::bfd2dc9ead6d18bc4fb6160f337b9598c9842626::1c853b128fa7dfa01cd3b4638514cbf71e888b89::d9c7dc1ab85461395db8618f5f58f4cefff26149::86bf3fbec52d3c16a24f8b326ab226d300a2f9bc::f14b33362e60d51d0caeceeeeee44b28879fa86f::60551145aa0ab6b34ba1adf2247f55a6de164e88::0bd785850208995ad395629d996374245f75b957::c85f46d218a1812a788589198fee9555c33f1dee::31bb88f5d5f874209da91027dd68e2ef1e56739b::fb009eba993b929f17db7fd5a5a69f9a0336bebc::6b3d544203734c2d9a05592970afd6b09b3bd917::4675c233d6f20eb0a5ce4222fe1b4febdcc122d8::35287f4fb4fe7ec76832bd068d80ac38871be326::d39f38d0afe1bbcf431900a2bb3cc81cc9e72969::31f3df0f5005515d57542fdd8287f6d88df73895::3fa65e3855ba21115fb93c8c0f740577dce046a7::84d0d65540cee71679d2ad88481c5e59ae1bd772::1f6287fba9f76f131d9740ca6aa8120fd2e192eb::1067788545c9489043ff0e16ff255f1ab819992e::c6a0b1ee95fa0f176a89e39e000880448566fb28::7d0663934434ba69a1ac2a735b85441f3cc5a897::9f5b7c1e2053f91e3bf72f4d52424e3c48796584::34f3be1a482b71be3d24ed09fd1f508605e72741::dabfafc66912ad2bf022a428e043567ee7f02f76::ac300de18c700151f963b38372a73a4d19c531ab::c511fc4d72e691386ff65e128eeb74d9f495e1cb::f76f9f748f5f8cce23d911cbec3a375a727b5a9a::b8bb2123f4e54140f953119e913e95c44765a7be::1a35ba590dc72659686159a634d3a083ec164bc1::2530365bcd91a7eb38fec508455b51045839620c::af4de542d581c3f74a8fd974a194fc9e5295e211::74e2d440710ad405185f6a536360956ee986e022::420e30879787107d56ca21aef176f24ba2d96d9b::72f716b5e6712d27cc870e39fadaed98851c71ad::a8d65fcf92dda9143c7aac5a2c65222c8dfbed54::5fca81c5f09159f69dada11c430de8159f0a02af::335a3d77b50f27f6665e833ffe76950ea3e8ef2f::6feb7d64c9253899ab962bcb626c538e9daf5e3f::2628f84a7a5bdf855d8a52299057977db4b1716a::d5c5f1af672b14b7eb81bbadbd015ab90a5e985f::e4f9f3848ce296cb89eab92e059554a44ef313e9::65713fa40d534cd93afa7528d3043afab7e7cacf::f0ee8f3b2ee6a0cb136df505dc8d6ccab3b28472::159d905b01dffc0dd2b3e418f2322fdfc1d88f8d::3c4cb1faf2630fd0b70e9f10e87073444517b8f7::76671175cdb8f98d9b7a5472585d886f48aa86f7::0e46a7d155af24767f9f96c7b3b48c2f4863aac3::da327af5f5c6ee2a9d38fad38b63c47dc2ede97f::6dfe7d0291c1f455604ad9ba7a3765c9fcf1f633::ee7dac4c5505e19045d5bd6b671d799249a5eb6f::f3d1db14c60f9676ff8ccb56673d7df0e146fd11::0f1a5ad919d28f3a12744dbecf51e303ad822abe::6747dd97e88125e064a55b170118b692747a7c54::7c62e2497e7648bde5f5d4c99b8862bf1798b4f2::cac0091468ad01f5aeb70906e6000b710706ac79::c232b06b7c3ab2cc45dd3dd90338012f6748d0cb::c5a44b951c420fef6527c467a9655373bc30dcc5::89a33ee299a0b32d9293e744ac06cee5375ca6a5::b6d1e351af881354ddf6399d2b9a050976a1a6df::fd0612a59769bd1aab5ec174fe62f6a58aed4f77::077e295b8754a7c5d3fe74db95dd8a2d31fa8b99::a1c02c63bd17c7a430f6709ca3a8584b29e0dc9a::27b1b804b2bcc6e9dc5716d3ee3e575144fbd45c::9d4c76e18aa2118aa6b8f1c2e7414a239e539e9f::d6d99d3c5b7197607d0a0031e2fceaceb0621828::f0521d4e205afe3a19ed9943c704d271b063460f::13364fe1937d65aa423c7a33830a650a029c542b::4619594bb4b290a37f8a61d5e0d7162d0c517e8a::70a71f12675ad6c1e128007cbcf787efabd78f1f::9ca5059c467185b298263647d47fb5d43fbfa339::9de7ab146cc5456943515fa6d2b663d27948b14e::ebb0bc8fdaca5ef1c300e8950f63431f30bddebb::89973fe1b1c9f5527a3411ef073fffc8ae9eef6c::39636470a1edfaebcef42045374c6096ecd6b7be::e3b0228a0bac27f71ecfeecb846c01047423c1bd::ae364b378bda6bdcecec178cde2b2733e103962f::41303bc46a347dc94655db94453d752ec6cfbfc0::60e4d4845fc33f49e7504b6a2607380d3aaea076::a4fd5492af90faf0a57ea6a92e5528ab6d123d8d::ed044152487c674e8f579ca8f863859efcd06aec::7fa8c6e2ba6234ff99380b064dfe4fcbc4c4469a::72bdeee417e4a5ce3f1f5f11c3c4ed25dc0448cc::42d8ee176184b389ef01a99cb57bf58b1a5b1f33::1da260ec1f7c6bea25df58c57e49b4d3f154a5ec::d375c83e178b45e30ad69e8e4ae9a3bfc5a9fd8f::d7c37f36e6425cb0c2d33e65546560632265a065::75922783d9e2b42bcb70c49fc5ce1375efd4d57a::55afaf7b701a27633249bbb14f5cbb7edb7be6eb::de903207707854a15bdc091f62fb0253a0f0c475::4de11f88c945232ed4d8b82dad876e61b9ba6d42::3487db8afe32aa4aa657d5a386d9036c9980cbdc::f6db770388282c6e558c56c5e2bfa72bcffddb04::e0ea463b714830adf658808d026e02cf41f73c74::e322259f08fd2695721f2737ba9c129b14ab6e22::6bab406353e88afa49f64657fd4644076f1c352e::147352f2b4487a3397a939a8da0047fdfa0c8fc0::239020b24e99a8b970fde92e072e1df9d1084f88::2193d7ab69a017355166928cee3234ad51680b0a::fb83f5f0fe599e883865b908b28352413a7551b7::605aaa44d371620653c080eb6c98421cfc292e9f::db51a9afcf5234e2e3c394a323e2b1c369acd6fd::7476a10554f96b2b97de908edcfe9e4515aec973::523829eda65561f3f5f53fd2c0e7cdb264b7ed94::57a1c7887deefee9971613936c92943d10b2b962::ab42b2712e887fe860b6d0a7a9d6532d0664413b::f49b7502d1b1cede6de76af9dc12968bef30b29d::82abf8a07146e3a233579d1087fe9f155912be8c::ee27f9072e12abb26a29e6c7ffeb4f8d0558881c::e8cbfdb8caf912321024f14779bf2ba2a6adb584::e16bbf611e1c073b93ccc3036a9803045fdceba1::f49eef76bb67d824065477f1a83760e6fbffd258::07ceef41cdeb51ae2bcc62ee2856c70b4c4d5be3::4e3b5319a58961e5fddecbf51576ff605c27af55::83d40e7a0ec69a7bdea6cb1636b6bc8a3e441122::d5dda024d3ce14c95444086b9603cd592beb7a77::2469ce7136609a576960707e7866091d86dd7e25::c5589023c4dc470b65e430953c245f99ac9c7398::
https://api.github.com/repos/elastic/kibana,11391,5-x-fix-load-dash-when-viz-not-found::5.x,0,merged,,"backports #11324 Dashboard listens for ‘ready:vis’ to be broadcast, but if an error is thrown when loading the panel, it wasn’t being sent, so dashboard was sitting there waiting for pendingVisCount to be 0 before fetching the data. ::",52e929edf881b88886aed69680f5754f0d6d5b96::
https://api.github.com/repos/elastic/kibana,11327,5.4/fixbuild::5.4,0,merged,,This cherry-pick backport from https://github.com/elastic/kibana/pull/11257 broke the build on 5.4. Reverting this change::,4360cd41348c74593eb4ff0e65477fa7fec173b3::
https://api.github.com/repos/elastic/kibana,11326,5.x/fixbuild::5.x,0,merged,,This cherry-pick backport from https://github.com/elastic/kibana/pull/11257 was breaking the build on 5.x. Reverting this change. ::,8b3f3ca6af6c154c41ab79df0ec272042ba45b51::
https://api.github.com/repos/elastic/kibana,11300,4.6::4.6,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",151875512d806b274cb960fc94f6a049f15f5c2a::56182cd8a212ba284ea66c467db145390ffd1ca7::cd3be854eee7a29e14636e45ae7f68fbc6dbc3e0::7a1513a90c905445f29dd306a81d665053ff7b02::
https://api.github.com/repos/elastic/kibana,11268,5-x-default-to-named-a-to-m::5.x,0,merged,,"* Convert remaining export default's in ui/public * Chunk 2 * Part 3 * Part 4 * Part 5 Note: Must check in https://github.com/elastic/x-pack-kibana/pull/938 first * Part 6 * Part 6 * Part 8 * Part 9 * address code review comments <!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",8b573c025fa5ae9e876a52eb63bc950e7a3ea356::
https://api.github.com/repos/elastic/kibana,11255,5.0::master,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",9ec46750a48cdac928fb0086e2e827c8910afb4a::58367f8c803ba17793fa8fca9056d2cd5bc002b0::db15eee854281c24e2eb4a393a4a3ab80290ba19::88b17e38a447bc00260cdcb70448aea4d6b7958c::9ffe9bb9bda50a06cdf4184e41f68fb52a4d9eed::18137cd525970b2c25914ffa3004457e45b3abbd::79b09dcf7482eecd0d986f308784718bf6ad1a71::425c66b69db0ec34cae9c95622789fd799198fb8::b0844310ec2513f2a747485da152616a0d7cead4::6091c25ff4c7a24c48de5414278c089d3ca45870::cc585c2f3e556cd1f5aceba161c2c7710a13a42a::a6918744bab64b268e1dd73275503c867b0ff3a4::b0f466601d84301265f5dd2b3a95e2992e21edb4::7b229c4dfe356f6429e66f5cd9c48a9cce12291f::5547b431606a0909a2f57951fb5f33c80d9fa697::f51f5d98f058de5408238a660ec95f7b5d8b3cad::e5af490df8897f342eabf28b8506894997008def::985a111e308b3183d65bd001680babe15ed57ad1::7e90bdd583db9dd2e2bbb7580883f1c9a9e71ada::a2f1ddfae8274488f19a7d608c4882095db7d307::ca06bb694c74b5b65e9fc6c0aa0812fa0dd53e0d::814a1c8c1b61b22c0a34ee6e4f27ef84c4f2885b::7018e6cb2502c2ecac215e0fa46dd0f8c546c138::c4a5b7bc2892223ab6046e758a81daaa6c26ab2d::05e64c680ae753a9a9ee021033787bc1006db670::0f05b42ae20363f5af542a6f52ea73adcff69885::08a6826263bb243e31fa5cc5cb0648d4da5ef899::307f1696309441eebfb127d4f997918e73e015f2::ac5f9893699de6d09ec4c37c8cd2643abc3d27f1::def3653cfa16b0a5d0e9d3f222c6a46d65531ef8::bc43b2acfa96b787ef5a2191aeec0890b5329b93::ad3b0b2a34fa285051613d2f8c03ce5f8e15d328::015fa6221777fb283b3719039018002cd8a2425b::4b2e40eda7555b423ba1a73cff47a890e6e045fc::33da7e6f6420c325445cd4e2aba09068561ce785::6813bcc084e12c5d92cc4931677802a11a79f438::e87217592e48858394d055cf2c6619d0f9c19f77::b7210fecd6ed41957cbb59cda3c30fc8f5a7b402::37727a8eb0ab92f40e60038b68e2f6084a0934a5::348226a058bd4be39ca56c88056b9555ae5d1326::51418f934215118908d45edf52960b940d8081f0::492b43e9c4b1db5d97dc982e491f66677b61ce7e::c4f6c2d17d53aa87ba8f5a65517bafc6a2776cd0::ea4fafe3dd06a04802f5e25da99ea0e804e2b5d8::f1010b37b3d5fa74a495e97867cf43593fe089fd::10fcf1ab940cdcb225acb03ba580c4b013326474::63d7eb3c5ec7ca898d9dbbc9858ee4e7f8a323f3::0441267add6b7c01d3a4daa8601be49549d1f83e::c52eb60c5f6acd09e13e81a0bc082093ef8f5c48::22743a606369d52856d997c9be81f81a4f713120::2e6cd595a9a7b9b717318447b530454107c88155::4a5623b23c5489c32fb8ab65f4924867f34c89af::0c2ff0f189856fab0cb9713cdb0e05fa3607f1db::cfde9f4750166a085689f73b0a6e89804018f1d9::240876d36c3b331a575094efa1ada521e0c1e952::b297a54665a87d3353f8e4d7bfebb200e02cfb49::d621f5c429fcae1e36f95a238a8f4865022d610c::48ef86cfbfaf7e61ac61af83acbf942dbe932c28::322f391c99e4558f930b6db3586da2544b50e586::db3874c405b8623cca5a92e07d7d8a11aaf83bde::78500aed29262b56fd298e7538287fe73b1ea3a2::7fdd8c6a523234546f9f6b31f83030c8e01234e9::3287386388aa8025571a0881ee05b1b7bed51d61::a2b7a46f8d4ba73ec791798291eec75faaca613b::1214092b77c09fbc174eee9c6507fba013163eef::761bb9ffc55551f2d22c565da3fbf82d3db301bb::48725a379ab8dd4ccc74b7e34d7b8408bdaebb24::481fcfff8f5e43acb24459f2265b0255c3f8c6fa::1904f56c7307ff6e8a486322e2cfb3c46840f4e3::3f0f105fc956910930fa4ca428fb0dfb1570a19d::e86b355b40b8e5477b9f13605f9db071b6a3a499::47911d6fc5c065712e36b80a95dc4a8eacf81892::8d733f118aab927c7e9fe09cc2ce1d83e380c064::9de65665cc533165d54f59c2e51e9eddec083291::080fb1d49bcad263e5de1d5ac50bb68aea8d8512::034e7d9bd1531a64389a698596737dc01633adb9::b4e06e314e4649d81a47a668d6385f32061fbaef::f79e54de7bda85713ca6a972cf242e77d7c0c231::1fcde2274d7f0ed64bb025ad704c4673d333e621::839cbd39d3a3e8412d98b905462dab1fb17db457::64ef508975c67b428787ad6efac09282c80a8494::1c53b0df04c69f459fd13f1bbc20881dc995a118::49e858d13350de36e2d262cfc99a8d70f042b895::b233029c5722dda81a570fb6c260a641ea9c4106::3da6cc36967acf2543f9f47441f56b7593e390d7::9800fa52f2e0717b9de5f2af9d41d85614c158c6::51daa6ee3cf7096c3efd45b42f2dd7264576d945::203353d699bbcdb09ea3ea7ded194d2e6942c4da::cf14cfcd9c66ae2d9378876242f982a2d66e26b9::ba05897f63ff438ac6741b136227fda741bdfa6b::a293dfb4d98b23af8e8e9582a5aa4d2865db3980::08c79b360614111f33cc8814c8dc28ca6d82beed::ee6f222496729936852c1991d02d8270a46e75a4::2d7f28563be97cd7a4e8162532a2ed0e083e90ae::96a6ec34b8449c0fc0bc59b0fb1459bacd42f1e4::e382560c9b30a89ac798b4a1e48a7e2aa912ac6a::bdd055f18f04edd07938c1ec66f4c98aa760b1a7::183306e39e9592f6dc48f8e6a829e56f66cd3a83::ff8ac5c9d25a74e7b9d2113c722dfc96e4622f3c::234f54792ac1a8b391f17c363943114f17bb691f::5ea74e906586322725ed0a13e62c912b1e6bb240::9c34153051a111cc8cd94935d50de10b51ed8127::f037db3f8af8173f40b5f0dd17cba93457b22f7b::b14d909e265d216b18633b2d6dc494d722707c6f::d0f1b60556fa179c27f87616bdbc1ca67da555cd::9db2fc1c7bb4a972f2d0a28c13e950b9417b6d2d::b969071ae0e137ece80f02d10beeb5a26e4abd1e::2f44364ddc4859eae054b42aac68967909272072::dcffb24efb9c053f80583f1a97f93ba66175810b::9548204dd7e87b7bda00e060622a3e874c9a9501::820109a046b2852f4156bfb8639259b92844913d::2a1c86f67de55b1c13c36d3a3957a9036b18efc1::71ce503e16dd538bf3ffcaaa0bf9a5a3a2e0b0ad::00d0e3f48dd63483a3ba7baf803c9a4738447557::a14b51e0c21e3b612adffb5f36c8f595998839d4::8698aaf19970d96b896436ad8b8d14e224b3aa7f::6a95bc527dba987ada30311ffc6817725990072d::583ff7db01cd7bb758a9dc2aa85103e2c6abea67::373cbff5881ebf287f75649c9d01b658c306b3a4::3f8cab6a518365ee5e828cc517be4258236dd04a::c0c6cf98191a357ef7efb34edf38bb052a180f91::61dea2943b30450271e8fa02d6c5e48b56a9c7a2::f10e6bca3874a17ca9ab7834c042636d6c742ed3::9f33895b98a115b0d072ea743e0bbe35bb5f0db4::5f5f83d358696ad3b4666e4b84baa6098021e0ba::b2ef57efb18cc4009957b57d8e71f31fb1e73a7f::20ae5e5e31bb83ee2a3aec77a49375c17c1485e3::02ba08c52152ea81b83c52c156a92495197b7704::4f8d50a70e2d173b3e6a1eeb07fc4aaa20f1899d::2408374587ec051e0af7b8b05d4107661e789fec::58878efea5a553e2b322b945472ffcbde1e53ef7::1e49ec83c2d738c0131e4e9f83ea68b13c17a69f::2af16396d291304181573e36cd2b1a394ef34cfc::bce53132bf873d1fab0ef96ecc1026fad8e20079::772889f46457e42373affcc4916f592e19044f64::f18c0a106666fd409f1ec73e3da17cd00fc05f7c::cbbf3373138b98379f43f79f46ed38ee1812eb19::13ee3daa2c31fffaaf1c51146f9161b2f6c59b31::f3a872175427bd1e7814c13ae69b7466bb9f795f::744fdc9926b88ed6f073e604b96042782f3cb74d::d5db223ff784516b1cc0bd39fd6ed6d1e28aa677::ddb5a0843ab2876b4742004fd73022a1590f939f::71d210d3ab5fed77c1cd943f4fcde5f6ac7d1274::aad5e9a5fe51105a375a1d3ab4a8fdf83b9b9c4c::6a05615b8c263c1818d33e91870768df76ac0dd9::da19bc1683b0fa32ad089f4def42537ac7050b93::668bd101322b3ef4385288fbf1614ecf19c325ee::0b519aabe3abd56a66d7c0748d7a709f4be4b863::44d2a4c153137a89ea630443830f05975efc0130::6df4b68c6d9540060f7442a8342179608d43526e::3e815ab219bedad170278d471c308b46f83eb82c::6df4240c5f9e57d37e2e85974fe855a7fe5f9eb4::c28a0c462681fcecc9a18ad6e7fb95759d0c7e1a::c60a48160290d70d867e781c2de82dbf1226568f::20053f4e68d79a4852d006aececb6a88523998a5::d981b231e9d6143508fec1fd0893c38f839b3393::4b1a5ae7c5748538671e5aefcec5e87f8c1f3f80::e2b87a0c6a0ca01035a93c9bcf2f05f622c813b3::2e0a83366f3ace0eaf49f02ce6ca3725b8fc1cb5::32f3663dc0d97df01c387c7843b99eea4bcb07d5::381cd82a354b7822b69c0b6843696f4d78d377b0::11249b4678c9dc350011a3816870416413b64938::4f2ba78a1128bf8af963973f735b26992a6e0d60::5f33808d1a6de6abb5b621dcdc0769242572a3e5::9c93aa61775cb71e76f5bb9357832ebc62a5ed2a::3bb12241788e671c775fcfa42f32e462813b4393::5e1ac9d66ed6b0d2ac35645511f5047710726bcf::d4f4381f33cfbe0da18fa9234ffa0ed9c1a5d34c::e720a0faaa02e0de0929c290fad7e76cc2dfefb4::342bf5c9ad0dc7155587fb0c7fdc098626beed2d::647a84a0b4825a03f051b56350862a1082033b01::aec30562782df9b5cda52d9c9e0981249751abb1::3cd2b63fdbd651e223882da82d358ef8ba2277b3::f59762e4401e3ce83fd58f13d0eafcb63a452bbb::ba2febfa454613e71ab93e2c2de63680b3e51a56::a69ab2df1bc2d98dc1204bf2318da5aee6e3bdad::3a5095bd6e59e7aa89b3ac3b2d47f8985f82ce5d::a4efa8ada39aa41d7f11458d04dcf382b223e94a::e39cd4571ff8dd03b5269b03d9ab71756ba523cd::056db43051d72c2dc11ff28cfe41d40484507353::0fc37d117565c97b652441569debec290e2f5284::df92280ef442dfc7a61c98962cea3a4076d262a1::3fb98dc04572ec4c21e670bb1e3822515c7b1cbf::897b2967622920e5c0872855ad0b75a8de5b5a94::e5f5263339134290e1a0b1f8edffa81876308c9c::6b80d1efa28c32e5a24c7a0b85c3a06c91965b69::d962d9b1401cd8f22622e03c54111b68635a0be4::6199ec0d0aee00b6cbda87751c714c84829e8848::24fc8e9384df2fe1b0f58dffe16d6ec3410405e7::30952110b2e7b9d2de515ff2fecd1c6477a0fb90::7307bd6206b96f761c97ee31fd8c44423a08bab1::3f5cd570a334ab7a994668b90f1b060538a0988a::db43bcd2985a21ccf3ffafc965a96409d8a37cd6::794ebcad48fb00591825ef76446f0bfcd2bdfba5::c13c44b29d64421bf7d51d88640aba0ecb5f21f4::7857e05f6c538f2662b0eb6fc0824ca62e30ff98::c5af7a418333df6a934b8d1a5648c675641388bd::2714f35e964c299f871e772896f6bb4226dbbe7e::8e306514977b102004da3c5a8a81aa1374372988::82278df8688ea1c904b38195f6fae2024ceaaf2e::47ab7d0abd09232d4496170961970e95e4594129::7aef2068d6a21f74858303e261525aeff3503e53::0e134b9afa9a9b7765963dbdf1108c33343a3865::5a67ac2651f56d311aeecda9ee6cf994dd8f1f38::88150b890e918cff5d0ffc04d5bcd5850d7e0f03::5197dd440a366ce7e926a93620c7a36b6e7cc7da::303c04b4e3efd5656acbc220dfd80dbf5bebe681::b28772ed58692a1b43aff7237fd31b0d5eb50b5b::4a38a3f070e64907e8d19086142079ca863d8c9e::e979cc8b761e9dcd76a462be749a8a0aa47f4029::66c1ac9ff38571bfe468ee4a500d37c935f1b2f3::92ae3ae461654c56265da4ee797415b66a34c166::b5bfd6dda48aad55be2778470b70b2ffab0f0a5e::e7fb486dfe3c768258e06f5675adc0d828f930c2::f526cce64c938bc3e8e6eac0cff80d73d60e7dcd::5d24220f61429635330bfba32300a940a5df8098::2ee15d7ceb10d52bef0e5ee58d3f9c5a238cb786::84f8e0c580ac2b9c44b4cbbc74d4a79ac7f7bd1c::668ee45158deed0cd7b3c28a7941f3a8d0308590::9e961d28ec44c2ac9b998f350f4fc40315237c28::a39628d247eeebba0f949f76c34c4778c4aa9c06::067145ead9974be66eb843a99e81eb843101047f::4c47a068fe9cf3adba23ff0be87a14ee30da950d::58620709cd26921994f428213c0c0f7f742794fa::2dc667ac76fb439b68b56f78088d26202941594f::40df93e7cb9dab4033c3e197a656581e77368ed4::c027c18a8537c798f15520bd46cf2915037f7791::f8854cd9c3df6964ea23ad907e95b7a4523d7901::28c433fe2cc0b2f3ab274417fdb65e31b3c01bec::2ecb140fa152c4f630c17792739da1eed44f44d6::b8462ec122bde04d5e1a8c689de300dce57eab0b::a1a185aa5372cb815ab4f25f64e053eeec0b6bc6::e0b0125ed2faad906c23722a1dcfd643d49eccf0::253bde8b2fb8ecbf325a92ae3917892c4939f012::8f2ace746d1b84702bb618308efa65dc0c3f8a34::97fd7df1e99c8eed88d7484d4447b846d8a35e31::7fa05f799157d0c842069d07282032e4244f25a0::b99e84b099d0c102c5a7e551a33aba7886f449be::9fa2ad98b0314ac9fd20fa6a8dcc498e1591964d::e187d04b8481062b3a7a52f9fbb941c46dadd77a::a922c9abc4b1b8a4e7841b23b160320755ee5d1a::293223982d52014975f9303c03d567838f907dc0::4d0507d91efb043e4ebaa5c1f43f66e2f14d7a55::5e1ee898fbd26cf3900bcff363331691f0af6f07::65db441758eb2ff81107caed8d99ff367268b9db::0a6dfbdadd9399264fb4d6524d3c71043fdc1d23::eea7d72fd237a52b463ab68b305c55482cf4fad0::3b79a03c3dbbf4571ea9d350fa45263012b13602::a58b262855abb3a0d008a351bc3ed7c709ca0332::5c0efb9322fef79197f84d494ee3f97645456901::
https://api.github.com/repos/elastic/kibana,11207,fix-selenium-tests::5.x,0,merged,test::v5.5.0::,Something accidentally got backported that shouldn't have::,b29a9e127778669f70b47928f47b78a0d4f02bc4::
https://api.github.com/repos/elastic/kibana,11148,4.6::master,1,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",fe9f34cb6843921fdae0525253406dc96e5ddbbd::06d70e6a637d1961d668cfc5ac0bbd4a15679414::603f5035ac8705017ec352578ed16bab7f52235f::da702b402f64de8d1766b1be66f5db95188d15a4::4cff3dbea91cde120a74adf0fdbe92b4e74d5914::145f24f3fc7ee9aae53727fe4760a7edf7e8a123::f1e39f25007bd131c2cfb02b9b0aa2037181e9cb::dcf9a82269619efd1a16949cd8ff8c953d5b0b9f::7a23e8bcada576b29b1974d9e9a7a75aa7d62582::71fd41ae7d335244343266d308cfca23db4ff87e::21e1d19ef524871eda8243ab63e35e7895377a5c::e3691754f43fdcc722bd22476dd6b813739852fe::9f85332d409e358445d5d396a1f9c3d060c9e920::63a5b43faa03ad92c4846f2ddf86053af39e268c::fb858c9123b6de6657bcf98f65d976ccb19c3133::513950b751c92901d0bc8a01876d564d9c87ad84::2736def61ed965206568f4fea1c573fcc47d3b9d::b34e65b347a01450adf3d5ddc838a16c5f3ab6a9::73599009e66736ccb1a7e9386d25be3238fd9b36::f92bc14bb76afd6db7d5921bf22f0366df797af0::38b76bb3bebde329c379883bbb60a08f1e515b80::355d42aa1ceceebe0296a106537f9caa56049e96::899703fcf03257bf561c711c5746f31f87609514::2165805578539146c099b9900d386fde189dbc29::408f68430b790e9f27e19e0041e276fd20d9e2af::aba9108eef11ec9e4316601511bae95641f15bb2::844b95253e614e3385dbca868dfb0e414aad7cf3::3f99cb75a50e67b045a4342b3a34378ba51af6c4::c699992c3f458b56d52d81d46c333fbe65a369b3::c298a5bf038db9e1e2e3b42cc764798ce0702861::de925f2d84621c99bc01c03f7178e60f82513f62::22ef18a86fc5ccfbaa4320484474185ab0095c60::454f914d85cc004e547a370c82676a2017f57bf7::82177c094e40967c3e3f7ae8262d0e23b29c92d7::ad363326d60d7959a4d93ae5bc5ade9286950689::720a7efbb2fe355300bd4dddbd17df6958e94f16::cea7dae06ed0ccb7d604a2d4957fe35cef244537::2abfc658e864ad309b88ff4fafca76af68a6ac4e::91386bd6eba3f9eae6ff14bc83785458a1ce8e18::86b2b04c4c91154e1d9d3164eac89698f6e300a7::fc4023149add8449997e5cb97512aba00df89639::d280bf64be3434e30a8dd5e22e7fd9e2b530cb25::3dc9879791ba3263c7da62dd339e9a8c90de14b2::5f59c767bbf223345cd11a8fe34dc8ceb7cd6565::b6cf85187ff3c8b1a2514ed9795080b92dc2d76e::f6fe4c50b8ac8e69321d8d5915235bf63f0b2180::21a5de23c851a0bcbbf126e0d9e8451b6c64502f::ccb97f246468e0d0d892b965fca010397b289d1b::608ca552ae154a8c875efe762b8429bd2b7c4873::b397370d5f7aaecf2ba244612750b75bcf965a81::1042d4674eefb197cb3056735625ef8c88187897::44c9f988c2757bb784773b7034bc16a688022245::147016248d3f9a141368fdbc1538d221730559ad::6469d5339778ffeaa2c630dc87ffd11fdeb35365::c9c24b42c1892905ec1983b1793aee9b2fdbd8a6::47ab207834665a97d1b773f8745564280a8c7fc1::f73a848168ab443daa0046059d5406c291da0b57::5d2fada452bdd26ee93168cf0a43e04f1ead9596::d894f2b1d38587627b468a97ae1b20650dfd9030::24847fafaa6ac503c7d82b0139db8fd01c1534f0::aace5fdd9795a8d8a5f326e1556688016eb58e6a::c5b5003fc60dbc45b33d6781d3734dc3a36ced7d::f42ca5736c3c3abec580c410bd52291165b8d1f6::c3cfd834f01a3573bda47ef691fe291f6b15b487::ce0c2ce7c03c185fd0fe53dde4d8cad0f299817a::3727e0ac682a167b4516544e6cb9504b48d0f029::cea41cd47bd5c8d26dea134f4111a72bea77f1fc::d4a0308eb34000b485645d5b035abe646b0fa378::e4eb59b73946dd84b3dd124e0e021e98494c530b::28682338da378ced6934e8d6b741cb70b5de8565::1793c1e923be5ca351bb657051e3dcebe8f1462f::2329d14553df91b03eefa7b150310ad1f0c2d825::3ef98e9ea9b686674c54d34b03157a11c092ad21::164a0cf1fd9e4b899b4010d88d63d4f596d2b1ab::b73e3bbe2e2b2f1f3b6baa2c7c6bd7a14ca22b61::3b016916e73269f4bf7b9347cf7254d1bd17e745::92c4f742f822098007de0a7bf2f49fc838f4a76b::fa8ddbd9ba84f1dca90dbf7da0e23a8d10ee19d0::5f2ab9d2040ec242c41d1bc734b02ff08855fa18::047ee84acbdcf858df847eded917a0c07be7a968::2bdce59d9ed91ad4ed9e24c04141b789f32bd812::17daf2004f53797f2a9416ca9f8ffa1c27dd5fb1::711cb5b4c4e1bcfc8f17c663a44422f1d3e292b4::d265e0e5ebce45b4ab6222b954fe92d39e57166d::908892657832c22d96defb0283bcd240537c44f3::202ab58ff84d232918da58a630e8a35b9b9ab12e::afc3b48e540abd90d5ae399930cd7f99defbc56d::9a5fb28e3547641cff58d7cd00beadcb47bf6137::7a971d11d35f86f1c789c79a039508710014411c::aabf188aa66387188a0d57edbfc12f26729b7952::04da7a9ddf97e5fb1e43745f0d583f836a6d8ad5::0324112e48f1c4dff74a0aba4bb5447aea9fb211::73f8513729f8962bcb20cc3d22372ea03cc8e45e::e97e38eb54064324975a1ca3687758209269f14c::13023ce95e1b8b94b16569504c65f1c6ed1eab88::5547b874d4ff62d17f7f4889376d2d4e09ddef9c::d70861c44d69d51e26c978b42885319fdb76dfff::b7a81dfe99b47f7f69dfbfaf7abc72ddb9a9ae57::8b177491243ac47a0911ce5c7ac46a25d748988b::69d8d26ee1bc0a69a00f3124495cf5a287c56d8b::cc4a48deb5eb7e93130360604b1142dc826637bf::7a00ff73cc914b73e7f67a61858baa29160e5e25::160e74fdcbbb89af810d3b256b33d7b6c0c6f4de::6703b84a79795be6c93f7a2c51bee3c0ae1572fb::cd938e193d709b07d30bb63f3366cc29a3e3c24c::c0190208b5a36cd28d407787f7ef5a0838577245::4a32ae07fd59660c21c417ba4ea01824abc871ec::8cda510f26c93ca80a35870004bef68dea8c3da0::8541d003a59fd2c6ea2849c3e917761e0364d983::5c46cc84542488ea2a005c0a5568446cc8e86a1b::d677aaac95d0b2f688e93b478184f15975ae8b66::a11e72d57e08079ffe9f07ad1519d4a2b26d552e::006d49382e1bbeab445c4efb6924c855914940a3::6c7a481651e16d5275f046141aa068505c4c1c8a::b3345eb41d97c2ce92d3d5b5d0d33d89ce22c23d::a41a30837e929e89f7da8578151df672404bce08::48a9b41a4c978b3b6e1ed7f6da582821ca8312c9::34f0fcee7ea1e6956c6b57d747e2314bbefd7ae2::3d396234fad3f2fa76163cf719c289b09f38a419::d78eb515e07d03560261bf231680f3e2737c0c86::fe2a6f8879f0bff653304f9771af055f524fbf2c::981ce77d6f28c3f40288791242977ef1367d6ca6::dbf2a7d72c7a872a5f436a1872513da9573361c5::b95eeda863253d420c8a1c66c3e7cada0bbbc390::68932dee014a282396e1f439c7ada9a3f1472d99::94f24b6fdc45ec1b882a48e19532cabaab676310::80b3118ed63cf2b399b986cd69369c80e13ece68::63f222d3c64e048b09df7975bfdf2c86d477a299::6e1c246c64f1eb05bc347f15c0f346d5b34efce6::f3128aa4444479b7e647d7d1f829960a2665d5ac::d2109a6e7407bb1750fd95c267a8120f6a9153b0::fc7547bc7413cf34467c0389866517457e371b10::95d6f7d18239964ddc282f5cbd1f2f85a86daa4c::6b8dddec160b894d761eee2cf61c840e7e7731f9::6d7535cfef206d6979e1f05b29d0ff88efc3076b::f35541c0b0d5a1e02b371801becca7f2e9123150::dbb64616f7580fa47eb77b1235e589da98d9c7ed::a24fb3baabb28203f6febd976eb7b00b4e48cd0e::a89947e2220b26130f43ebb77d015b0ee424f26d::9f2c94f7333b1cf14ec4c191e4828918ebc7b010::e5b220e221e77afee132e0819dff4baab0aa1a73::435008773bacdf902fcdd4d67206b4bec3e346c7::61ccd2e8ce381f0ba6403fe7028f7bcbb28fb2ee::ee9985b397202bb54c213cc1b59950007c477736::19f771dd14df6f0d1cc27c833428ab72140bf6f2::0f9bb2f94a143f3157c65742707f245c9a24bc05::2c1ea3ee593b051a4afc4e5be50ccc6bc6ab439d::f21054c82d5186ac85bdbfb1d31cf1fe1dc38c0b::c68bf9dd29c9dd70a7cd8e6db39071e432227af0::60e25534e2a108827199d00420d64a626db9f1cd::f898fba4809593df9a66cc3d0778f6faae2566d5::ac666a39f7b2c24d6f04816dd8309a7d29d32804::dd8b83a4416766c91812253fd17c67053170790d::40e35d4bc791e60dedfed3c3f9e0a6565af4e530::a48051c106bb8824b684ae887d7787cc2c4d8ca3::68870d2d68d4f22287525f35248b227f15af5457::353009ee55ef7a767c009ebc4d471a2033797d91::8ba97f5b75f83d223e836b6b023f0e3a26f28508::ed9ef1f87e1bc6c303e10fd2d92033fbc5c5737a::4054711b47338deb662a1d125588c2391ea624ad::3ff0f9b07dbcf2f7552d204777ee426885886609::acbb484daf737b242c200390e01e4ff71aa07529::d578e278a00f4048aab1d8b52857f11957426ae2::8fb9b0848ab59ac3f7d737643e14f39094b09a62::f4d45c53860ae33e8a926cfb42b79a29ef83c8d7::e0a9156da8dd5b5fe3cd297ec36ed92b37251da6::6c9203a7bf3faa59e018ecf9c519b22c7c3f8548::6e69fedb1da4c1fb9bedddeb04cca94da9298e6d::d025b91e00157577575b267a1b5c4218c7d3a8e7::baacd026aa3f2d3e759a6e17ffdd743ff8853253::b6c390a7d1510d2b9afba4cebf4766004405ee8b::e735a43ab5d7d6c5ba8d17906dfd5c39344d5497::8349debf4b8e14029f0fa3128facbd9e55965ff4::4c6bbb2e0c8187c374bea4b351a556e378ebc3c7::06077616eca5230dd160979aad9994d1d6c09a2a::7c0ff89179c1034899885214a4bd697ee024ee16::488d0cb20ea1ead621daeb3801875c169a9e592f::8de218ba322f2712e66b4a208e918e6fed57ba1a::f1263fe75a557024c1a70206af4cd0659a644457::780c981f8099f030ac971882b11f2e3b9a4586fd::4451b81a24edab01cef52aa9fcac6e8b08196d38::8520e98a141e52380529d45f13d97b2d6480bf99::51f62bf41633b402677063da08d407b1bfd0c20d::b45dd2d0bd38c14a2bb9db2860c0b61dc84210be::96d3d93676e0e9dbfdc56759797aed70eed61f1c::f61bf475d6147741cb98b5cb2914e5033b82c8c9::1b0ebf433350da1ebad7dc83ef9513c8e5fdb041::a47fe9d60c5ed42b5c270311804c86cea39ec3bb::89044b051680b6a2cb0d118c1b6ff7f88e4c1d28::bdd39eadf77f2015f2a081c439659a7699e02332::7fbd3894d07b13770a102b560f9a7830b29b2840::332abe8f2708cfdb6537c1145741e76f598847e4::2a44afd2bb25e6b802dae1c939c16d9206bea584::8520bb4743a3977ee4b16a94f729f5b81078b61b::7d190f930e0df5387f3a598a6cdffef65a7c3aed::100085b27e14108666a5c6c938fd810740474f56::c3b3283e1a7ae150054af060780b2800fadb50a1::3efc96741b0f421c18c3c6dfd799bcc28adf16b7::5bd6185488f45b2b3873ffcd373885daa2f8a278::fb671778050824c154a26909b1cd332b6fd325b5::cb4fdeba250b41a7d3bed931dcf7897ce8d8f0d3::c45a77a57965b155b1e331e2ad697c76776135f4::68d0c961cc6b5f4d3e1df5caa37bb98871769dc4::6cc836c92ae8c558b6f570398944517e610504b5::f5599e966800f71486aaff3e51fe1c445ee6da66::fb6cac4a71e57f1a39bcb9d9e5eeb8de3751e2be::13ceb5130267e0fb8e81b5ac485b451361b790de::fe91274b8949657bbb34cafe8f9939245438354a::44656db6b5a1036df7ca3a228b8075ec0198d99f::cbf2887cc464b946ef8642e883750f47bdbdbf5f::b55513ffd6c72ac8e00738c3f0c1588984ce5b3a::d833b56c7301f51daf532b9fe2cafef085effcdd::64beb62965f6acaeeebaee1477f7109ccae253e8::f80e745ca8d10f62617feda10a80099f35c509a4::474c0ebdff10429ed423106e801509dea0374692::29976e72091582ce095fd4feadb10f26c1e6bd17::c26e319e84bc9ffccf14623926bf70e153c58f5d::52dcd154dfa3c1aa8c370b28f008600b3edf8646::8c592148ffeb624799c1927a3c657fdea12bc03a::c2c489ad816f0e1b5d40f094a6a27c8a9b290a5e::58d269f4e5f174fd485413623167ff278a7af1b1::e8d4253a5583fcf41df5fcbd148debe75ff978ef::3927080fc1659c5ea3b3c65f6068811f64acb423::e8908286a3840bdf3ad771535a68689f3e5fd0bc::f64f6ed3707fad25513f2d139c284d3eb4a1250f::3fa89f10d04c8cb4ea4c041c887b77441b9cde95::929d42aaed700a5612fac910909b3f2f2093cbfb::9da1f6c784c46a24264e1d1725488b94caa30684::cb404627a5a3f6583d752726132f963102f25f1d::1fea6c327bf4b5c8a3f11d86f5e718fed21fe727::d65acd1bc7009f600da9ac402d209b268e6a120a::95ec2f31f9df25b11cb878fb50a204ca9d201758::e9551c55b240f7bf3eb4e2b79875a3abef56a55d::9ab32713b2081b99ac94370733c683e0484e965b::f57a966db63a5230aa33030db64a85d2f617ea5f::2d33d2f0fd5fc5b2c757007335150a6a421c7243::9f5cf2c388921221af30dba6f8c52506e3d5ff0a::a996849880db27151553fe356aa0d165febd3f0d::9c5445444c6195e5ecef9dcec474921780a5ab5c::116530a16bd807637cc1f1e0c31249ef60cc7f2d::aaab2858e4f84b4e2062bb7b72942ed23d6e6cf2::4f213ebbbe24a873a47ea7532e38ed95f888aafb::8e77d00fe6136abb7a503b51149dc52060b425b2::fef23c8453a9ec8a25aa952b0cd6431aad59422a::f0ee72d5b77770935eb0381d7a14e85108f5e9e0::cc1e783ba852153de8b1ac99ee7937790a9d1edb::1bc8701106661422d78b7adc63b9edd95d39bc44::8214ab8e1bbe80adfef38642ed22703589bddf56::3b8764573bc9b4955803b644fa188faa0a6f80ff::51f00a06aaf8ee3b82f57cdbd4fc87854bfe9f9d::
https://api.github.com/repos/elastic/kibana,11115,patch-1::master,0,closed,Team:Operations::chore::review::,"Hi, I've loosing lot of time cause I didnt wait for the magic message and nothing works. On my computer (Intel i7 on Ubuntu) the optimization process take more than 5 minutes... Nobody said to wait :) So that's why I add this contribution... Hope it helps other beginners to stay on the wave and to not abandon on the first step :o) <!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",6f4f3cf02abe87ae9aa50b07e8239336bd5c5774::
https://api.github.com/repos/elastic/kibana,11026,remove-unused-nav-background::master,0,merged,Team:Core::review::v5.5.0::v6.0.0::,"This code is not used anywhere. Should at least remove for 6, not sure about backporting.::",2fcaaba18427b369a34c09a2e8d26da2568b64d3::06f2cedfc67b3e7a9f33abd900bf9de5d828c13a::ad71df742b95a396a49c8b5b79fdc358826af2fb::
https://api.github.com/repos/elastic/kibana,11003,allow-sharing-unsaved-dashboard::master,0,merged,Feature:Dashboard::review::v5.3.1::v5.4.0::,"We took the `Share` menu out of edit mode, but I think this was the wrong move because it prohibits users from sharing unsaved edits, which they could previously do. Fixes #10951.::Couldn't these routes also be something like `dashboard/anythingyouwant/create`? I could be mistaken, but it seems like the only restriction is that the route has to have more than 2 parts to it, or else the second part will be interpreted as a dashboard ID. If that's the case, then we should update this comment to clarify that.::And this comment should be _saved_ dashboard links, right?::Might be worth just adding a bit more detail, since it took me a few minutes to understand the implications of the unsaved dashboard link: ```javascript // For BWC, preserve unsaved dashboard links (i.e. links with state data and no ID) prior to v5.3 ```::Or maybe I'm misunderstanding this entirely. Why can't we use `dashboard/create` and `dashboard/edit`? If we handle those routes before handling `dashboard/:id`, then they won't be interpreted as IDs.::If we're going to change the urls I would vote for: - `/dashboards` - plural, shows index - `/dashboard` - create new dashboard - `/dashboard/{id}` - view a specific dashboard - `/dashboard/{id}/edit` - edit a specific dashboard::I believe this is because of the way the chrome app link url is determined (See my comment below).  Didn't seem to work when the app link url was `dashboard\list` but the other links were `dashboard\create` and `dashboard\edit..`.   It wasn't because of the id thing (though potentially could be an issue if a old dashboard was titled `edit` or `create` and had that as the id). As per comment below, I didn't have time to track down the logic that figured out the chrome app link urls, so this is my theory since it started working as soon as the landing page/app link url was a substring of the other urls.::What's the value of this constant if users of it must know that it must be used as `${DASHBOARD_EDIT_PATH}/:id` or `${DASHBOARD_EDIT_PATH}/{{id}}` depending on use case. I feel like a function like `createDashboardEditPath(id)` would be much more useful.::What if we had: - `/dashboards` - app link url - redirects to landing page, `dashboards/list` - `/dashboards/list` - landing page - `/dashboards/create` - create page - `/dashboards​/edit` - edit page Old links redirect as usual. ::Didn't see your comment @Stacey-Gammon, tried out implementing some of my suggestions in https://github.com/Stacey-Gammon/kibana/pull/4 if you want to check it out. It also removes the forced ""all urls in a nav link need to be complete subsets of the url from the nav link"" rule.::Love it, really nice implementation.  Much appreciate the last minute help.  Merged, then just added and removed a comment.  It's too bad such a non trivial change has to get backported last minute but no other way around it in order to preserve the urls. ::Might be worth noting why `new AppState()` is being passed here.::",6b3afc4cac391c5e0a8bd72599369ad1735e3813::857f501c79dfeed7b752ea3e33b411b2911f6034::7445de9b05cdc15e154f9ba6cb20758158ea4f75::4c56e64d80428d22fbe23d8e3e090f8c981cac26::4780282a23e07349576039f8bf90322c602f7957::94fee04fbc43329a778460c864deedf45b1636b8::7cf4b5ac1768060d9489615ecc1fe9f8c6afca40::464ad8e4f3a0041d34036992a9fa32bc9c1de358::3446de4e2320dcb5932567f2a468be852bceb219::c7beaa71d7fc772520128a1e52021d5ef56cbaee::fdf72e9a1837024f1d2358479a9969564c4b7265::c6aa7001c9fad1c7392cece67fb47e62f77a3bdf::2eaa7abfe2686a80e83f5326a8e991eed73645d9::60ef1376579bde50130fa8d9fb0bad0f872c4d04::db71184f6572b6ac5017823716bc7a6c5148c325::
https://api.github.com/repos/elastic/kibana,11000,5.3::master,1,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",9eea6a5769ed2f3b466e55350dd6ec8eff494516::be89fc841527267ab79b472be47ef4753589c7c8::a4e201f94db24f932c8636462ffb9722e175fa5b::33d23d0241d5b028242b1384174a91e7008e4557::aa828cde5d45329a36b4ac5469e076af6b2b3d02::1668d740c706d57758986bf3e8819659d970c109::3aea8e23c5b4f5520ccfb0f1b643b49cc74021b4::f9690a6cbc2d5304795b634d4cc279656b9dfa85::e721805c67a7b0d9ec2f450e4900886b2207bbc2::952bf135035d7baabb55b72931e9df5066f8c06c::33f2b8fd21618d14739a3fde2b2ecf5681b67ce0::67655da43b52add13ce50357a257b3ff2af3e965::c0cac0094c8895f09f9a67b54746bd90eb0848e9::9f483e10b047ab9277f62de86723230f9308d425::e1c9eea9035bc5460f48c1fea2c12c57fa7b8fcc::8a748e75c7d10b849f9ac482809139f4ed451802::7efded336b0d600a1dabec32d0c6e21508ad3f4a::8c0e89273b24a3859e7ccf1542f2cb71e2624224::44c10810ef1bffcd26a7086fef6a5dc3a1902602::d02ac4180fb3f7de01760d9df1c974e8d094f578::c0f3d9e1b5b9c6f70e0dd247070e7b59296c7d99::2de100d4233ead706089f9cdaa34e7436897dee6::da4c0b40f5fba13919fe210be09e8224ac8fd462::38975e2706492e42aa85ca1cbba5b9353baca016::87a7a3520940b83d6488ea0e7ad875156038e790::6634df3e2257cd621447fb45dcf2d3c6ecd34bea::c08506c752b4db92c9da67415636fc513eb09286::e2ce741e0fcf78af69805c4712e28587ab819212::53f1ebdb224ef7bd8215763403f6c3376d3b42b7::aa41e38d382996a43b2f246239f04daccb7a89ea::15eb80bf355cbadd3d0124dafb2aafe31ea4a4b3::3c2147dc567b82752d9652f79e1908b76ce4e767::ef40953e374034ec203baeb88ac54e40e0f0e816::6806477befc8751e06e0a19d7e8e2cd0f4f84968::6cd701667370e701cd6a095da585b3f868bacab3::d8a9ed9bb834817d4497c24847ad15e5d45b90db::dfd16c68686b13714c5a75a08b250f4ee268cade::e004a604b21d6ae4df8968a27b357bae59527ff7::18465ff195ba38306c50a5ea807b002bc869481c::663b94b31bf0570f64b781ba886ab3df1323e6d4::2092f87de18e0c1dd2029044a32c04f777626394::bf8d8b041471fad0fdb80e01fb706743f1924af8::b94b064f7ddb8c9a68976889b8b9523eff9fb6ce::8d2a7869d1008502daceb5deb774368e8d633381::fb308ada4ed6c06014a4d3ced2162f7a0996c94b::eb8866cea1b709010d9b0736f26eb0a7aa4cc80b::b6b266140890a3c77b0fbee0ebd27087536bde04::15b7de345557dc5ec7b373cb397f23082856ee6b::ca32e8fecae3882ff57fcfe972e81bedca4152ca::9a598fa13371d0e38991d7bf95c67a1dc38526df::f276e5755c889c5002018a19022fbdeaca01d2bc::c780ab17872b00a678b741b96ee869bc8ab0a4da::69f65d60510d411c4c2e124aecdd4c8aa8c93033::bd5b0cf4f3ecfa08fb78c09e9d2e69300fdb19b7::e7376da572a27d29cbee93dafd5d4be3c2348444::cf8f3362369257d92bc011ef24b3cd02e8acc3a3::0c96c39e51ae3fec49bc06f8c9838db4c1d0a46c::6d43ca220df6c67d8b7ed44582266973560c88e6::16522f665e93f885b37b660f4326bf014d663bdf::8e76bd86fb080f6fa88279fd77a099c12aa28ffd::f90fef65416bd8687663c99b6c3b99ed937a9433::00c3e1f216a6eaa6242d4cc9f223ad552179df49::01039f854f722210584ea3565592fa1fd89e7b3c::90a9f67df20913c53b0d92ecb2c3a07b0c195ec9::cb0a941eccf4e06392f5cb42dd2b313738b78e93::879de8acc316d4f27bfce620fc2c1f0dd97cdbf1::ffb1347f233023fed248afd64405bab64518c26b::3571cde2904b8ae6dbe0ee4397e88220ef945744::e3bd56aaf87eebfecbfcc6a3147e7e694bfbf3a0::b771d19d5b875cefd57d9961dbe1f601bac5d48f::4a586870c5247df23dc36ff2493919cd3ae857ff::b2ffc357410ad5e09d84698fda9aa2e8f51ffa49::82f883a70e036c5043b7c76ece3dec8aff9154ef::85b603f4721a881204b931aefddb9a1dd4476d81::caba8491e878f21e287e56bfe414f49023964027::1c97dbc41d4025a5ebfee933a56cd2326f7d4292::5613c053eb420aca11940c137cccd51fbf2b9795::d6b19375670bfcd37dbf5dab9004bc97d63a8208::672db67f720e5d6c85f063c12ea159ffaa32d1c0::15ad03f4b437799a5aabc61bdfe139604bae2ca9::026adf96ee73f21ae6980a6e4a3b3ec9ad207889::7564c4f0969a677fb59455bdcf53a666e96f23b3::be2ff2cb5c8087543aca4066639c1fb335728478::daabb70f0f781abfb2d8fd41a067fb78c0a36a03::cc0e72f45e4c3bad535ff2f2058c4206edcc462d::7b65ed2c35c49a08e896fa1c7646425e90eaca51::d68d0774240c694abfb3d66b94194ebcab09c9af::af722325129de661f7f2dbc5bfbe4327dab73baf::2636d2517946788b508a9ec1b5e36918a9210518::76c0dc891dc612992c47d3caa78217b7acd81df6::e767b4e9f61a8d63a1b75ec59a98dc4dce1c25b1::ab6a18cf53d5990e1bb433160734125a08a11191::76b886d401ae99b1205287ba80e03f7fba7f4acd::95ac4c1cefc666bfd0d53161dc078690947210f2::7e350f58adbf663dbc3e6d5cecf62c16d9402a07::1a3d1d8b9a06af564de60624647ddbc1fc9653cd::1baeae80120b2711ef5287abfc65ce31af28a4e3::c62d9aeda431832677a2db171781d86151199793::1c5f4164945cc7474e341e5289d9ed9c1e9d00f4::6020d157ee75291ac4e9aaa2b1f09135daa10e62::bc61824fd81436cb5974e4e8f9a4833ceeb1a27b::a0364c0ae0845a834c0f55d4e716be4ca7d7769c::ef6734f5cd5e4c9987ca81b32f22a5fdbcb61ed0::abad68f60d0761f5983a3ac2abc05dc8c5ab705d::40373e8fda8d749bc628e49ddd946b50640cbba8::54c4234234aaa9df7be7bfde71abfac6bc6d9be6::b3fddc98770988f8e832d9c2ff3b428461edea60::c6ad67a935b12396e6f516ccc1e4de33381b4b93::79716cd4978b4bb0006bc7075cf79f51af0412cb::b79c6d1e0ddf4432864281b18f94c87740cc77e4::250fa2368d6460246c7f07ecf63079ef0f67e66c::1269d3cd05e77ab35a40ad5c5999653c9b5c8f77::06a8b340165a1e21a344ed25647e33a207e6928b::36bf363b56deba7dc6fda2cd56f75f8ca5f5392d::a65b46c6ff966a80486ae04b81380208ed5e81f4::c881bc4bbd6ec772fbdb5ea09efc042802edb814::75619a95612e2b1f397f191b1a34d9454a507a63::e211bd1efe3d18ea565e4b1e464112230e712daa::d1fe488f49abc9eb162baf7582f639c334d55c13::8424411b1c5aac1d6da272dca62e267c0df4e5dc::9f4d9af1ec1e357906b9e99164e5812aa9f4a124::f4f74902a02ce16173c3eb2d777d2db69780ae58::72c38cf0c91454389c13e133e5414aaf02579286::10f4277d65e826f9fc335e49137d434a9e15519a::09a20f55cc6c684c4201c96d1c6e1f1038588a34::4d1f6f39ab88b467d64063dc0bb025925866940a::5c92cc854f67368ef38286e04a628e701ec186cf::00c086658920f3a7107d8c6f6cdc8a39a4d3ae3e::07d2f0c4187dad9649a3645c804a4cde6775d5b8::350682166f0f4712dd54fcf95f487d887a15a684::63760e6266e48b723812afb5e093f60eae5a3e7d::d990fce87637f6ef556797b6999e9b5c3c2a4c6c::deb399a8f9db72b840db2ae1632e49659c5f3577::033cd5880a570e78d5a2cf7eb3b767bf57e5636d::dd2db3eb26aacfeb23414aebe3523ce67c528c82::a8e107400a6f5bc8d55cc3db31a441fc5ec821e5::5146e5f8a1bfde9675ff46845ebc20a7262fed75::c9393ab3db9d58ab2bff3981c5bcf7d44c78ca1c::23901682e54daab0624b22ef948f45c782987652::b76915c3df4c2d1a421608649b89cef4222e9253::704a9f7131a618fbbd3c7b9d10364c1d546a63a4::15af92f36834b8faf646f005d1a8ca4ce6d792fe::470a2e7000b14d243e4bcb76f25882b60e29309a::5502c009bd5f375373dfd67548fd0ab0d0432c9d::5f249db235f5e04567d58208a3963e4b42b2535b::7aca11968eddabb19f36a6c0765fd3148bdc3868::930cf02f30172965c5dfcd1016b768788f1c9726::b9d99d30b958fa8c26b0922047ca055ba453052a::3e6e8a7bb502f7565220ab0395a4c83ad641aabf::aff62bb19de4dad2ad36644888b0fc44bcb904b2::45d899e4389cea18c089f5325c8d731d5711773b::584e671ea247114fd3aef7bfe424652478584677::74ca20b9a82b9854f3f4c1ab5eae315b28f37714::0f811ef50a77dfa3a4e8163f487f8efcc6e14fda::cfab767e50566d0649ee495739185cf86fd2880c::65d5627c947aa886354b6d506537fd2501ad0eea::cb5c6618ab95e880f65a9ea13ae5cce804040fc4::0488f19226363afd59a7187acea52b561d6319de::631099b555c10c5bee9ebf82c554ceee2b05213e::2dec109e58c3bd447df9fcfa2d30bc2ed79d2ce0::c443b20b560b0748c15ea26a08de683604889ffd::9e842d96e52d9bb1f5e2584b6bf8bb76fe41fec2::c58bca9532ec9ca393bd1c4486bcb346b8362f1f::89d2b38a396086a9d342544b5822f07d1c4c2d35::0685d425ea45253aa9ed82ec14467a51b70c2c23::382d578ccb888728a35291f4165422e5edad697f::5f5e3f4e55202be35d5482d1e9392ce7881dac86::6fce7fa5affb5f3f786a14437954117e2ccd0828::7a3b22927470ebd615b4505ae7b5ae3891810ecd::239d8271a719dab2c6a06505fcb3cfe104e8d273::4a59f0c0679ddaf77909a929b5bcf47461ce8cc6::1dd9f5e762f3b103f416318a85a35df02893710e::cac75cb23349ff8e01e92c69ea0f733c2d33f3b8::3ce17dee1256ce65519439a07b445f721e9db392::18451e5ed8e1021b5d860897facb22b23e06935a::932b7879120f1d4b0a2b64adc0a2de37a4f72261::09d644b5671921ba6edf60133a8d0f587373f03b::01cf8ff3a5492655770607237e8b5771c6e94ff6::2de7cecaef208d373404dbf4e681b17f83a78ed7::4f85268def5e2f9e171c056c7740914774209c06::cf20b28bd7e81b43c981300b6180d5f131cd21eb::bf3734bc8d33e7daa4093beb8b5d008733e2def8::9ed7e81b627bbaae6333a7504a815c03cc0d3b51::4d1e3129fb862d3ad74c6231dcfabf39972e00bb::94a4a8a2d02581570f2487ac159e04ba1bdc8b79::f400199b52e8d4eb715848edc4b5d220a98ff0ba::23ab0f2e4a971e8abc371fc936608a5d1f74b7a2::5bc910da965d107dd0014acbd649647ad4463e88::4714359273228bb7565ff8a51daa3794b5638b08::17f3477c2efabf923c034fdfb7f42ade627a94a2::55db0beaa589340d6cf9948c60cdc065f6b86e82::e1d7f16c2463763408cde42ec830fc1a8bf3540f::daddd3f05fd2b40e0a64b1a6c7f569a58ed90935::dd2b6f9fab974174b4b8a6aa7cac2c33d3a6133a::8826fdd41f46b156766157232d833e9fed4d1505::9648ed3dcee81b9c62c09e0191cdd126b39c3bd2::2cfe54a8da7f012b4a4b00a2e9d8afb2bf81a610::4fed0349930e003e42c459ee492cd8964bca84f7::3f9282822e8044f897c9f74a5585af1be3a51e73::8d1b5acc624e1608eadc60f1488fac54297be7e3::9a7e105ec8e69afc1b4c793462cc98a36368ed1c::c247124148f57d1dd3ad4ae1e43cefc66110770d::77778eb10e559af48756dc06805cdced54ce1f39::ebe11f1d0e264657582f6ca1a3b73e42e9424938::e6614fca79aa8fd83f87fe389cfd9914edb4132a::514d5d12d34f6207538c952b8b4d34c4236ce736::af881eaa0cc86d5da8c69299c56e6aa56162cbe9::30dd0f7547011bd3155eeace54d27376deb83283::c4cec9d4ced175b250fe4addc0c9ba4c7cac04c6::688c5cb8c0d1e9b1a2f26bfe58a40c961a9499bf::170e3c2ba0caabf3390b88437a80d85055ab45c7::d7c639fa0b47c93c1d7a5273c55e3884ab07bada::ae4a6f070a72111d748aea052c440565afbf7a1a::aef89e8ab9f96436416d40ea110ea5096bac12b5::cc5896e9a9cf98ddcfe2b974ec3183c128828fe4::61365e802e66cf23f8ed81cde0a937e6036a85ec::eb9fb9231d11c727cccf7e8323b9b8e746799b72::be5b20e540eaa30125622ce3814e08ca392b1642::ef314f8e9f0bec3b541cec2485546584f5e5f552::9b7cb0de2543019d9f750d6894b4e67d190cd9b6::a2aed59adc8015c1eddb7272b24ce933858878bb::406a79438ea4d52448d790ca71394d08ece42c26::2a52a9d66867ca61ecfec7d15cf5afc1b6ed66ec::10eb81f64d3aaa30e6ebd2c754ad22304c7a52ec::afefd4539c1e7dbc40ab0e64e59f5958facc2991::eda064af67856cf9ddb0e627b3d892df3b09c41f::34d1e9ff5a6ea5e1cc7d13414008b2d7bbe4f88d::d6eb00c0ca74a2a1e04d36c5d3fd0617693a3e47::e95ed41dbc289fa0ad545e5422d7c5c2483b5b25::5aa57695d7f7aa1bf8525b1890557cf9a82e0913::6641bc128d4d497cbfcc85bd99bb39cbdacca4f2::65a19b7ed118b142a16e300ded0d37334ea6b621::130d36d0b9bc254628c5b9bd6f2ef2426a9f13c0::c9dacfcf60dda2fabfd34f32a4edc823ff84e2f7::d79e68e823c68c56a656647fae0a4a0746f2d088::fb04e6be9318622f890260ad9b09898b74d712b9::884804ca1cc774e5bf8a596391000b1e768b4b0c::1610aa71cea2468287573cd3d249674ec09f9d1b::f9444365327e84b301653ab1f5b0504a1e27aecc::b9dd0164655370d7fb9dd887cda90ae9868c4fff::ce7908cdac87af1e3b02ac4038fc3985602cf95a::b1a278f1743512b52a803c81f3d44313f4de39d0::0557397c349d5928d62c2ca55c36d5829e22db7e::f8e02cbac7c860b97e48c7847945d468a653f02e::6bffd08af0d2687eec27bd5ebe960333c1ed3d93::cfedf412c037543f541dbc9a5089fa7c487891cb::92bbcf983a9b9220f743c39eec907ef2c529dacf::8fe0a3551ec44b7d08d3d9cba9290fcc955d1385::2dcc2c5634952a85d61ba92d1d2cadfc21f1857b::f5a536264cd692cdaaf6821c043ee058f7626fa2::
https://api.github.com/repos/elastic/kibana,10911,4.6::master,1,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",929f30c8ccb8677f3272e23ebf1929fe42f38be7::dfacedb27bea355e3f2199d5442ac75889df132b::fe9f34cb6843921fdae0525253406dc96e5ddbbd::06d70e6a637d1961d668cfc5ac0bbd4a15679414::603f5035ac8705017ec352578ed16bab7f52235f::da702b402f64de8d1766b1be66f5db95188d15a4::4cff3dbea91cde120a74adf0fdbe92b4e74d5914::145f24f3fc7ee9aae53727fe4760a7edf7e8a123::f1e39f25007bd131c2cfb02b9b0aa2037181e9cb::dcf9a82269619efd1a16949cd8ff8c953d5b0b9f::7a23e8bcada576b29b1974d9e9a7a75aa7d62582::71fd41ae7d335244343266d308cfca23db4ff87e::21e1d19ef524871eda8243ab63e35e7895377a5c::e3691754f43fdcc722bd22476dd6b813739852fe::9f85332d409e358445d5d396a1f9c3d060c9e920::63a5b43faa03ad92c4846f2ddf86053af39e268c::fb858c9123b6de6657bcf98f65d976ccb19c3133::513950b751c92901d0bc8a01876d564d9c87ad84::2736def61ed965206568f4fea1c573fcc47d3b9d::b34e65b347a01450adf3d5ddc838a16c5f3ab6a9::73599009e66736ccb1a7e9386d25be3238fd9b36::f92bc14bb76afd6db7d5921bf22f0366df797af0::38b76bb3bebde329c379883bbb60a08f1e515b80::355d42aa1ceceebe0296a106537f9caa56049e96::899703fcf03257bf561c711c5746f31f87609514::2165805578539146c099b9900d386fde189dbc29::408f68430b790e9f27e19e0041e276fd20d9e2af::aba9108eef11ec9e4316601511bae95641f15bb2::844b95253e614e3385dbca868dfb0e414aad7cf3::3f99cb75a50e67b045a4342b3a34378ba51af6c4::c699992c3f458b56d52d81d46c333fbe65a369b3::c298a5bf038db9e1e2e3b42cc764798ce0702861::de925f2d84621c99bc01c03f7178e60f82513f62::22ef18a86fc5ccfbaa4320484474185ab0095c60::454f914d85cc004e547a370c82676a2017f57bf7::82177c094e40967c3e3f7ae8262d0e23b29c92d7::ad363326d60d7959a4d93ae5bc5ade9286950689::720a7efbb2fe355300bd4dddbd17df6958e94f16::cea7dae06ed0ccb7d604a2d4957fe35cef244537::2abfc658e864ad309b88ff4fafca76af68a6ac4e::91386bd6eba3f9eae6ff14bc83785458a1ce8e18::86b2b04c4c91154e1d9d3164eac89698f6e300a7::fc4023149add8449997e5cb97512aba00df89639::d280bf64be3434e30a8dd5e22e7fd9e2b530cb25::3dc9879791ba3263c7da62dd339e9a8c90de14b2::5f59c767bbf223345cd11a8fe34dc8ceb7cd6565::b6cf85187ff3c8b1a2514ed9795080b92dc2d76e::f6fe4c50b8ac8e69321d8d5915235bf63f0b2180::21a5de23c851a0bcbbf126e0d9e8451b6c64502f::ccb97f246468e0d0d892b965fca010397b289d1b::608ca552ae154a8c875efe762b8429bd2b7c4873::b397370d5f7aaecf2ba244612750b75bcf965a81::1042d4674eefb197cb3056735625ef8c88187897::44c9f988c2757bb784773b7034bc16a688022245::147016248d3f9a141368fdbc1538d221730559ad::6469d5339778ffeaa2c630dc87ffd11fdeb35365::c9c24b42c1892905ec1983b1793aee9b2fdbd8a6::47ab207834665a97d1b773f8745564280a8c7fc1::f73a848168ab443daa0046059d5406c291da0b57::5d2fada452bdd26ee93168cf0a43e04f1ead9596::d894f2b1d38587627b468a97ae1b20650dfd9030::24847fafaa6ac503c7d82b0139db8fd01c1534f0::aace5fdd9795a8d8a5f326e1556688016eb58e6a::c5b5003fc60dbc45b33d6781d3734dc3a36ced7d::f42ca5736c3c3abec580c410bd52291165b8d1f6::c3cfd834f01a3573bda47ef691fe291f6b15b487::ce0c2ce7c03c185fd0fe53dde4d8cad0f299817a::3727e0ac682a167b4516544e6cb9504b48d0f029::cea41cd47bd5c8d26dea134f4111a72bea77f1fc::d4a0308eb34000b485645d5b035abe646b0fa378::e4eb59b73946dd84b3dd124e0e021e98494c530b::28682338da378ced6934e8d6b741cb70b5de8565::1793c1e923be5ca351bb657051e3dcebe8f1462f::2329d14553df91b03eefa7b150310ad1f0c2d825::3ef98e9ea9b686674c54d34b03157a11c092ad21::164a0cf1fd9e4b899b4010d88d63d4f596d2b1ab::b73e3bbe2e2b2f1f3b6baa2c7c6bd7a14ca22b61::3b016916e73269f4bf7b9347cf7254d1bd17e745::92c4f742f822098007de0a7bf2f49fc838f4a76b::fa8ddbd9ba84f1dca90dbf7da0e23a8d10ee19d0::5f2ab9d2040ec242c41d1bc734b02ff08855fa18::047ee84acbdcf858df847eded917a0c07be7a968::2bdce59d9ed91ad4ed9e24c04141b789f32bd812::17daf2004f53797f2a9416ca9f8ffa1c27dd5fb1::711cb5b4c4e1bcfc8f17c663a44422f1d3e292b4::d265e0e5ebce45b4ab6222b954fe92d39e57166d::908892657832c22d96defb0283bcd240537c44f3::202ab58ff84d232918da58a630e8a35b9b9ab12e::afc3b48e540abd90d5ae399930cd7f99defbc56d::9a5fb28e3547641cff58d7cd00beadcb47bf6137::7a971d11d35f86f1c789c79a039508710014411c::aabf188aa66387188a0d57edbfc12f26729b7952::04da7a9ddf97e5fb1e43745f0d583f836a6d8ad5::0324112e48f1c4dff74a0aba4bb5447aea9fb211::73f8513729f8962bcb20cc3d22372ea03cc8e45e::e97e38eb54064324975a1ca3687758209269f14c::13023ce95e1b8b94b16569504c65f1c6ed1eab88::5547b874d4ff62d17f7f4889376d2d4e09ddef9c::d70861c44d69d51e26c978b42885319fdb76dfff::b7a81dfe99b47f7f69dfbfaf7abc72ddb9a9ae57::8b177491243ac47a0911ce5c7ac46a25d748988b::69d8d26ee1bc0a69a00f3124495cf5a287c56d8b::cc4a48deb5eb7e93130360604b1142dc826637bf::7a00ff73cc914b73e7f67a61858baa29160e5e25::160e74fdcbbb89af810d3b256b33d7b6c0c6f4de::6703b84a79795be6c93f7a2c51bee3c0ae1572fb::cd938e193d709b07d30bb63f3366cc29a3e3c24c::c0190208b5a36cd28d407787f7ef5a0838577245::4a32ae07fd59660c21c417ba4ea01824abc871ec::8cda510f26c93ca80a35870004bef68dea8c3da0::8541d003a59fd2c6ea2849c3e917761e0364d983::5c46cc84542488ea2a005c0a5568446cc8e86a1b::d677aaac95d0b2f688e93b478184f15975ae8b66::a11e72d57e08079ffe9f07ad1519d4a2b26d552e::006d49382e1bbeab445c4efb6924c855914940a3::6c7a481651e16d5275f046141aa068505c4c1c8a::b3345eb41d97c2ce92d3d5b5d0d33d89ce22c23d::a41a30837e929e89f7da8578151df672404bce08::48a9b41a4c978b3b6e1ed7f6da582821ca8312c9::34f0fcee7ea1e6956c6b57d747e2314bbefd7ae2::3d396234fad3f2fa76163cf719c289b09f38a419::d78eb515e07d03560261bf231680f3e2737c0c86::fe2a6f8879f0bff653304f9771af055f524fbf2c::981ce77d6f28c3f40288791242977ef1367d6ca6::dbf2a7d72c7a872a5f436a1872513da9573361c5::b95eeda863253d420c8a1c66c3e7cada0bbbc390::68932dee014a282396e1f439c7ada9a3f1472d99::94f24b6fdc45ec1b882a48e19532cabaab676310::80b3118ed63cf2b399b986cd69369c80e13ece68::63f222d3c64e048b09df7975bfdf2c86d477a299::6e1c246c64f1eb05bc347f15c0f346d5b34efce6::f3128aa4444479b7e647d7d1f829960a2665d5ac::d2109a6e7407bb1750fd95c267a8120f6a9153b0::fc7547bc7413cf34467c0389866517457e371b10::95d6f7d18239964ddc282f5cbd1f2f85a86daa4c::6b8dddec160b894d761eee2cf61c840e7e7731f9::6d7535cfef206d6979e1f05b29d0ff88efc3076b::f35541c0b0d5a1e02b371801becca7f2e9123150::dbb64616f7580fa47eb77b1235e589da98d9c7ed::a24fb3baabb28203f6febd976eb7b00b4e48cd0e::a89947e2220b26130f43ebb77d015b0ee424f26d::9f2c94f7333b1cf14ec4c191e4828918ebc7b010::e5b220e221e77afee132e0819dff4baab0aa1a73::435008773bacdf902fcdd4d67206b4bec3e346c7::61ccd2e8ce381f0ba6403fe7028f7bcbb28fb2ee::ee9985b397202bb54c213cc1b59950007c477736::19f771dd14df6f0d1cc27c833428ab72140bf6f2::0f9bb2f94a143f3157c65742707f245c9a24bc05::2c1ea3ee593b051a4afc4e5be50ccc6bc6ab439d::f21054c82d5186ac85bdbfb1d31cf1fe1dc38c0b::c68bf9dd29c9dd70a7cd8e6db39071e432227af0::60e25534e2a108827199d00420d64a626db9f1cd::f898fba4809593df9a66cc3d0778f6faae2566d5::ac666a39f7b2c24d6f04816dd8309a7d29d32804::dd8b83a4416766c91812253fd17c67053170790d::40e35d4bc791e60dedfed3c3f9e0a6565af4e530::a48051c106bb8824b684ae887d7787cc2c4d8ca3::68870d2d68d4f22287525f35248b227f15af5457::353009ee55ef7a767c009ebc4d471a2033797d91::8ba97f5b75f83d223e836b6b023f0e3a26f28508::ed9ef1f87e1bc6c303e10fd2d92033fbc5c5737a::4054711b47338deb662a1d125588c2391ea624ad::3ff0f9b07dbcf2f7552d204777ee426885886609::acbb484daf737b242c200390e01e4ff71aa07529::d578e278a00f4048aab1d8b52857f11957426ae2::8fb9b0848ab59ac3f7d737643e14f39094b09a62::f4d45c53860ae33e8a926cfb42b79a29ef83c8d7::e0a9156da8dd5b5fe3cd297ec36ed92b37251da6::6c9203a7bf3faa59e018ecf9c519b22c7c3f8548::6e69fedb1da4c1fb9bedddeb04cca94da9298e6d::d025b91e00157577575b267a1b5c4218c7d3a8e7::baacd026aa3f2d3e759a6e17ffdd743ff8853253::b6c390a7d1510d2b9afba4cebf4766004405ee8b::e735a43ab5d7d6c5ba8d17906dfd5c39344d5497::8349debf4b8e14029f0fa3128facbd9e55965ff4::4c6bbb2e0c8187c374bea4b351a556e378ebc3c7::06077616eca5230dd160979aad9994d1d6c09a2a::7c0ff89179c1034899885214a4bd697ee024ee16::488d0cb20ea1ead621daeb3801875c169a9e592f::8de218ba322f2712e66b4a208e918e6fed57ba1a::f1263fe75a557024c1a70206af4cd0659a644457::780c981f8099f030ac971882b11f2e3b9a4586fd::4451b81a24edab01cef52aa9fcac6e8b08196d38::8520e98a141e52380529d45f13d97b2d6480bf99::51f62bf41633b402677063da08d407b1bfd0c20d::b45dd2d0bd38c14a2bb9db2860c0b61dc84210be::96d3d93676e0e9dbfdc56759797aed70eed61f1c::f61bf475d6147741cb98b5cb2914e5033b82c8c9::1b0ebf433350da1ebad7dc83ef9513c8e5fdb041::a47fe9d60c5ed42b5c270311804c86cea39ec3bb::89044b051680b6a2cb0d118c1b6ff7f88e4c1d28::bdd39eadf77f2015f2a081c439659a7699e02332::7fbd3894d07b13770a102b560f9a7830b29b2840::332abe8f2708cfdb6537c1145741e76f598847e4::2a44afd2bb25e6b802dae1c939c16d9206bea584::8520bb4743a3977ee4b16a94f729f5b81078b61b::7d190f930e0df5387f3a598a6cdffef65a7c3aed::100085b27e14108666a5c6c938fd810740474f56::c3b3283e1a7ae150054af060780b2800fadb50a1::3efc96741b0f421c18c3c6dfd799bcc28adf16b7::5bd6185488f45b2b3873ffcd373885daa2f8a278::fb671778050824c154a26909b1cd332b6fd325b5::cb4fdeba250b41a7d3bed931dcf7897ce8d8f0d3::c45a77a57965b155b1e331e2ad697c76776135f4::68d0c961cc6b5f4d3e1df5caa37bb98871769dc4::6cc836c92ae8c558b6f570398944517e610504b5::f5599e966800f71486aaff3e51fe1c445ee6da66::fb6cac4a71e57f1a39bcb9d9e5eeb8de3751e2be::13ceb5130267e0fb8e81b5ac485b451361b790de::fe91274b8949657bbb34cafe8f9939245438354a::44656db6b5a1036df7ca3a228b8075ec0198d99f::cbf2887cc464b946ef8642e883750f47bdbdbf5f::b55513ffd6c72ac8e00738c3f0c1588984ce5b3a::d833b56c7301f51daf532b9fe2cafef085effcdd::64beb62965f6acaeeebaee1477f7109ccae253e8::f80e745ca8d10f62617feda10a80099f35c509a4::474c0ebdff10429ed423106e801509dea0374692::29976e72091582ce095fd4feadb10f26c1e6bd17::c26e319e84bc9ffccf14623926bf70e153c58f5d::52dcd154dfa3c1aa8c370b28f008600b3edf8646::8c592148ffeb624799c1927a3c657fdea12bc03a::c2c489ad816f0e1b5d40f094a6a27c8a9b290a5e::58d269f4e5f174fd485413623167ff278a7af1b1::e8d4253a5583fcf41df5fcbd148debe75ff978ef::3927080fc1659c5ea3b3c65f6068811f64acb423::e8908286a3840bdf3ad771535a68689f3e5fd0bc::f64f6ed3707fad25513f2d139c284d3eb4a1250f::3fa89f10d04c8cb4ea4c041c887b77441b9cde95::929d42aaed700a5612fac910909b3f2f2093cbfb::9da1f6c784c46a24264e1d1725488b94caa30684::cb404627a5a3f6583d752726132f963102f25f1d::1fea6c327bf4b5c8a3f11d86f5e718fed21fe727::d65acd1bc7009f600da9ac402d209b268e6a120a::95ec2f31f9df25b11cb878fb50a204ca9d201758::e9551c55b240f7bf3eb4e2b79875a3abef56a55d::9ab32713b2081b99ac94370733c683e0484e965b::f57a966db63a5230aa33030db64a85d2f617ea5f::2d33d2f0fd5fc5b2c757007335150a6a421c7243::9f5cf2c388921221af30dba6f8c52506e3d5ff0a::a996849880db27151553fe356aa0d165febd3f0d::9c5445444c6195e5ecef9dcec474921780a5ab5c::116530a16bd807637cc1f1e0c31249ef60cc7f2d::aaab2858e4f84b4e2062bb7b72942ed23d6e6cf2::4f213ebbbe24a873a47ea7532e38ed95f888aafb::8e77d00fe6136abb7a503b51149dc52060b425b2::fef23c8453a9ec8a25aa952b0cd6431aad59422a::f0ee72d5b77770935eb0381d7a14e85108f5e9e0::cc1e783ba852153de8b1ac99ee7937790a9d1edb::1bc8701106661422d78b7adc63b9edd95d39bc44::8214ab8e1bbe80adfef38642ed22703589bddf56::
https://api.github.com/repos/elastic/kibana,10870,5.x-linter::5.x,0,merged,review::test::,These were either missed during backport or slipped in after merging the backport PR.::,6a8a8b9e2c84f335582ec44354a483e44f1dd383::
https://api.github.com/repos/elastic/kibana,10763,patch-1::5.2,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",882941131e4c5fe5555dbd04f11223922bd367ce::
https://api.github.com/repos/elastic/kibana,10631,master::master,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",1c0a20b2a628c5d7d4a5a8928cec182096b31b84::3fbf5a55c05fc1be0021039dff559d63f4895583::ba9b933dff7109f42d1a5cc561d030e143be1e92::
https://api.github.com/repos/elastic/kibana,10568,backport-warn-on-duplicate::5.x,0,merged,,backports https://github.com/elastic/kibana/pull/10321::,7f147f16cd36b49258bfdfa52cd7d6c1081e37d3::
https://api.github.com/repos/elastic/kibana,10538,5.2::master,1,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",9dcc32a506499d9c430b6b9e0f21b57b74d9881a::f0c43b1935ac2599faa4b42d969cfeb8254cc6ba::fa11c034c91427fbebb07a99079b2f763954120f::8d26546ebcb62aedffe75cf950d7073cfef5b066::f2e35284981131a3ec3ffd1976d4b27edf8b6bee::236557b349c40efe2bc33427b87ae91e98937d3b::2fdf95a1cf215739c6f351d3667e69baa14dc92c::2991900e855d378658fe122d55d338bc61cd75af::8e22a9e03984813b0a08e20d2b5692dc8313562f::ad43652e4a74d5a9f15e5d2dbeca685bd3cd5848::ddccd8a485e89cf2c367548b269e19a1d29d819c::e4de00da1990fea6b5c2e7d6682a3caa5ea8868e::181221822e09ae3756a1b6a89d6603dd164e9b66::405b54158662709064b7840bf84a08f21a3aeaf7::c834ee74b12c0579beebdcb5c3df87042d9aaaaf::9eb4f5bbba7c558c081916fc5b723bd1ebfeec33::b3e0138d66b4939a14235c6924d7d902996a3aca::0652bab8f79ddcb686318eff857814f3454351bf::e9671530ba61d7c324c4cafed05d26715fb34705::9b5c7f3cf941234cf74b84bc4daced819b044b47::df4ba650674e6fc855042c9626ee4fd4760dede0::2508a42cb2cbe28456ac1bc8165685309ef0da7c::e57608b19db9a23bdd903ae1d3dac2b6bc8880c3::6ddafd2a2dde65892f8436749a32a10057661974::bbd645334cd0b4bacc75b23134b9ab77e39a86c5::21d2d7fdd24d13e674b877b3fa497e04d50c030e::838b16eda53e00c2e310ded6ea086b46a84ce757::446cf1f4edbeb4598c9bf24bfe3a1927807d0e78::c228915f437639be77106266db88720f4b0521b9::799061777411ba6ad42e36908297ae235ed0f5c2::5b2bb402a0715b1e718af5728b5dca68d11d15f6::fc8cef75a69d9d9a8ed6c24c20ef30aecb19a662::3cf5df3be1b705879306a2dc749dc7279ebcbed1::ac3cccf3d2991a7dc8d43184eee1884f66e16cf8::4a76abcca710b2018f819fe8b1c72e6284a8f319::321e7e53f2d2d04b8d0a1876858e23577732524f::b3db3e6db53c0f598485ea6286e3085fd84718fd::19723a66c9de0f52e6cca239c176845d5a1ab65b::574da97c36cd0de9caaad561b6f4aa2b78280ccf::cc969c376ef8b09668a7f6eafe0eb218347afbf1::785dce008578add9d17d49420c8d14a6e4141e99::37895918914d8f92a4ffd11978112ef76ca69d64::379abee09bf1a0541457cf90640008f80b53f11f::1cce23cbd918916871096ec02cede766bc2d900b::80880a758a4e1dd9455ef6dab1c2e3f605c098e0::c02d2d132010129a46cfdd9f8b67c2327946e863::2ee5df9f0a4085014b514313153e2c8fd3f6d4c0::c190e5876396b83502801b20498cf1c5bac58dac::f522641f28bc15614e7279696ad88b8ce672682a::3396233d116e485b0645950c5370b3c579190e1b::6d0cee0434e6e661742e5a8de377eb5f5638a5e2::f0dfa906c69f12af6980e1197dda05e620b7714b::ac93aba3a3f78a434539c4f78c164f2cab0e6755::ece1272d85c336bb87740e50ddbb06119cd1db11::239332918cf4fbbc0b7261e578403fbfa0563ab3::24840a930c459e858598835b885992312ab7108f::6eb9b26d6b567b238faa13fcc89ce13fcdbf8e71::d58ba76cc15b6c54039b5fa7e891736778fdd334::ba0d301903981a9245c365d298656f4b85e9df20::2b04dde70f0d5be35e88ac10d0b3d56074f913af::d8fda1e201c6134ede72d901f0880342ac2773f2::02fd1f0aa5b2f9b0ac4c91d0593501e6ce4a1e77::1150ea39e34813ef279b8ff3b2f575c4d3f127c7::567d63630f9a795547935639fa91438b042d5e1f::269ee065848ca0542e36760ddd668572340ad12b::a529c47ce800c5932e508140e827e5002f443d47::29240b62726e97892ac9a39308b4aa93b8cc63a8::0eea19525f25b4b1b774aea91a71cb3884f18b32::fb367aa44605e38a906b09133b5dd8088f317543::8b47723c6ed4829a05b6e5bc6f3c89d44cba9e48::2b0b320c8343ec3a1ed61e5f5575b0cc3b6a8971::76897e1eb6b8953119fcf445d18c523143b246c5::3ca49d089aadcbeb1508551307dc89f6c2f27e62::5b300075a4df721e2951e285aadc830429117ac5::5120270ef42900d6a4a2da2626f1a186f0184366::1c37948b10884e30f4d61bc893845eff3258afa2::c3b67ef2cdca9014772c27b51fa6c3c53a537597::512e6bd3f021715fd29268ffbf5bc55e13b038c5::325940d83845f6564834643c2d4a303f9af51fed::e08041a93d590831340152b10ed5a2d4a0d4e8f2::1c8a6bb69e81f03cbaf6e456626180ab38b4387d::9fa81ecbc66ddb44475574758552f7f7e51ab724::ece9e031f9e22765f233ef0ad949f660453eed07::520d6467602d528dd70f57d4c00b8dbce8e3d43d::c64abe37ea40f0c52df33a5c37825b99240cb72a::5fa6006011091f2d4a0363684bd04b5c38469ac7::c7675b1c8e4d1b0fe434215947876ec4b3d78b54::c36e636e9bdd9eba6863b509d82475aa38eba82e::76175e6b30a8f4285f03de5dd8520488ad4b88b1::e1456a8936aae930d0e66291aa5e35b8ec7e29e9::17df55c5da4215aa144c2f0cdff550bec9a829d1::851ba237154b6b2c6a49082fa4e30d93c1d41354::422cbd2281242fe0a31cb1f431c7288531983685::a94ba3d23168fd6a8a12b61ba5bc49cdb457acf7::f7cc22c6ce1625ed0d5c73a3d8381dfefb9857d2::2735a32c8b1346b101eb38ed88f963f1a29b9a1c::5689997a5a9bfc111ac72507da5123aa8741c01f::6ae80730d75610d1067909a27b7b146375969797::5cb1e203412b78af1e06d11ff03eb994c37b189e::37a62943bec2112b3df0bc8d85639c59e8cde057::93f1282f7d89aef938c7d093329588c22129ef33::84a4a0df57bce421f2e2ff2c8d3aa91c116267d6::64799faf67827732567c9a7bf1bfed567372b14a::5a4a1e4d8f9dc4f0d2691f4cd1e3e46b65b2805b::75114b342d6094562e1c099fc9bf63f1b466736f::1787c7e7806a0cf288d247516984be013eb5375c::4b66537e3106767d51fcd9ef2b5e1cd904c8f0a7::df2644273b5119ffd205082fa7f5051826a11ed9::b891267b3735b98f5e0fdd917af246f00660b702::ff8aabbc7a4d0b408365b27272fb1cc6ba87efe9::a62c91bc4615012980fe018367b9bc4bb52f436e::7ee81ad5fc6535311fa48a0690d308f83676a512::187b63a2a951cea1d477c2b6ef0e371fdb0dc26a::9eea6a5769ed2f3b466e55350dd6ec8eff494516::be89fc841527267ab79b472be47ef4753589c7c8::a4e201f94db24f932c8636462ffb9722e175fa5b::33d23d0241d5b028242b1384174a91e7008e4557::aa828cde5d45329a36b4ac5469e076af6b2b3d02::1668d740c706d57758986bf3e8819659d970c109::3aea8e23c5b4f5520ccfb0f1b643b49cc74021b4::f9690a6cbc2d5304795b634d4cc279656b9dfa85::e721805c67a7b0d9ec2f450e4900886b2207bbc2::952bf135035d7baabb55b72931e9df5066f8c06c::33f2b8fd21618d14739a3fde2b2ecf5681b67ce0::67655da43b52add13ce50357a257b3ff2af3e965::c0cac0094c8895f09f9a67b54746bd90eb0848e9::9f483e10b047ab9277f62de86723230f9308d425::e1c9eea9035bc5460f48c1fea2c12c57fa7b8fcc::8a748e75c7d10b849f9ac482809139f4ed451802::7efded336b0d600a1dabec32d0c6e21508ad3f4a::8c0e89273b24a3859e7ccf1542f2cb71e2624224::44c10810ef1bffcd26a7086fef6a5dc3a1902602::d02ac4180fb3f7de01760d9df1c974e8d094f578::c0f3d9e1b5b9c6f70e0dd247070e7b59296c7d99::2de100d4233ead706089f9cdaa34e7436897dee6::da4c0b40f5fba13919fe210be09e8224ac8fd462::38975e2706492e42aa85ca1cbba5b9353baca016::87a7a3520940b83d6488ea0e7ad875156038e790::6634df3e2257cd621447fb45dcf2d3c6ecd34bea::c08506c752b4db92c9da67415636fc513eb09286::e2ce741e0fcf78af69805c4712e28587ab819212::53f1ebdb224ef7bd8215763403f6c3376d3b42b7::aa41e38d382996a43b2f246239f04daccb7a89ea::15eb80bf355cbadd3d0124dafb2aafe31ea4a4b3::3c2147dc567b82752d9652f79e1908b76ce4e767::ef40953e374034ec203baeb88ac54e40e0f0e816::6806477befc8751e06e0a19d7e8e2cd0f4f84968::6cd701667370e701cd6a095da585b3f868bacab3::d8a9ed9bb834817d4497c24847ad15e5d45b90db::dfd16c68686b13714c5a75a08b250f4ee268cade::e004a604b21d6ae4df8968a27b357bae59527ff7::18465ff195ba38306c50a5ea807b002bc869481c::663b94b31bf0570f64b781ba886ab3df1323e6d4::2092f87de18e0c1dd2029044a32c04f777626394::bf8d8b041471fad0fdb80e01fb706743f1924af8::b94b064f7ddb8c9a68976889b8b9523eff9fb6ce::8d2a7869d1008502daceb5deb774368e8d633381::fb308ada4ed6c06014a4d3ced2162f7a0996c94b::eb8866cea1b709010d9b0736f26eb0a7aa4cc80b::b6b266140890a3c77b0fbee0ebd27087536bde04::15b7de345557dc5ec7b373cb397f23082856ee6b::ca32e8fecae3882ff57fcfe972e81bedca4152ca::9a598fa13371d0e38991d7bf95c67a1dc38526df::f276e5755c889c5002018a19022fbdeaca01d2bc::c780ab17872b00a678b741b96ee869bc8ab0a4da::69f65d60510d411c4c2e124aecdd4c8aa8c93033::bd5b0cf4f3ecfa08fb78c09e9d2e69300fdb19b7::e7376da572a27d29cbee93dafd5d4be3c2348444::cf8f3362369257d92bc011ef24b3cd02e8acc3a3::0c96c39e51ae3fec49bc06f8c9838db4c1d0a46c::6d43ca220df6c67d8b7ed44582266973560c88e6::16522f665e93f885b37b660f4326bf014d663bdf::8e76bd86fb080f6fa88279fd77a099c12aa28ffd::f90fef65416bd8687663c99b6c3b99ed937a9433::00c3e1f216a6eaa6242d4cc9f223ad552179df49::01039f854f722210584ea3565592fa1fd89e7b3c::90a9f67df20913c53b0d92ecb2c3a07b0c195ec9::cb0a941eccf4e06392f5cb42dd2b313738b78e93::879de8acc316d4f27bfce620fc2c1f0dd97cdbf1::ffb1347f233023fed248afd64405bab64518c26b::3571cde2904b8ae6dbe0ee4397e88220ef945744::e3bd56aaf87eebfecbfcc6a3147e7e694bfbf3a0::b771d19d5b875cefd57d9961dbe1f601bac5d48f::4a586870c5247df23dc36ff2493919cd3ae857ff::b2ffc357410ad5e09d84698fda9aa2e8f51ffa49::82f883a70e036c5043b7c76ece3dec8aff9154ef::85b603f4721a881204b931aefddb9a1dd4476d81::caba8491e878f21e287e56bfe414f49023964027::1c97dbc41d4025a5ebfee933a56cd2326f7d4292::5613c053eb420aca11940c137cccd51fbf2b9795::d6b19375670bfcd37dbf5dab9004bc97d63a8208::672db67f720e5d6c85f063c12ea159ffaa32d1c0::15ad03f4b437799a5aabc61bdfe139604bae2ca9::bc3fe77db7574f0e053524ea2651f84c2891614f::31821c1296329d348540e2ac2ca36298b5df2ffc::56a12bc83c37d4358ddce71464c8185c2fd54f63::62480c206df19a04ef729afa772ffbc9deb5681d::03dc9d93e3d00b8a2be136353183cbc0b78eb5c7::0e8daecfafad0e0a62b54d3fdf8524779deefe6b::b19086751f9cfdcf7ea35342be7f6cc4dc64a94e::d5a2044f12ae4878d84018d9afbaec04dbc5d770::97355f8b34a3626828e799010c2432f86d4bc2b1::7747df562134ef8daef22af1168a06bc9295c0e8::eafbcb12a4e0c3f086c91b87ba02609f3f7536b8::2d29f23daff7682f98ff0f26cc155289e731e2ea::1745cf1a3f2a415274898b5334656022fc343d69::88a33d7b2de0fa937720907a42d85e4e3c6b92ba::d7bcd739969a88b1771a1781c329ae86d02f0496::feae4bc08c7a6d135dfd5967e37445de950e1096::0e62924138a8548b8ec9044a842740e0e4b535c0::2c0dd014182980861b8822b39b6142dddc7feab0::47d3f82a66842f50b81e8f647747be48937ec9ed::4979bc0914f1a2e306b1f2264ef9f2ba2c7ac4f2::e99670cac1baa64799d98d799dfc628efa8ebe28::3ec2ce801c589bd4d68e8057e3c63924c5d507e5::5f8d3c93189d3daa835a022a546d5dda60db4eb6::ccb483b86cb717d07090a8155d0e6579fa9c6020::2d6b07d9fd8d783c60e911e798e9eeb2c15d438e::a0455ed33893334519543cc651d81f5bc689512d::813278f01f95fb83796e1fe9cfeb97d935a53154::bbbd2e81d873e901eb0c9681fd61a40bc4452f28::3787161d195b8271f775951587ed1993afde73c8::efc7f7ebcf19362c71fcd1b94fe77ca36021689b::757b32147a6934eb4c56a9ce29e2b494459181fb::1e9ed48cf7e31ba8d7c62719ef3b679d2b8aec96::9b0119b706e53fbd67b447381fe80f71b9996893::ebfe13938309cbb2cc48a443698720b422e9cb87::68300a8a8017da5924da2196e6c80ee3eeca9c0b::51bad956121dab83231de30dc22531c2c47cf4c9::efe77791abf07aa5b36dda42d132ac2db1abbda3::658b6acfddd5f61ed20f68ff210d0e789b168235::d2af8a157e6d295207dbffe89e440c133515bf49::e0827ef614d6a9b11e037a9ffd579a2dfa04d765::d5ce576ca3f2b299392a65ea61933915908c62a6::c31941692b2c519e2fff003ebeddce02155257e5::ff76f652a578a949de7f02230cee57bc8d49fc71::abbcc1ac6e5892c1836630050be2dc09616c6bd4::03953ddae5c505842cc39d2df349b7e35f30ee5b::9ac5a62668497446fe4c726d66bc76629e43792e::4dd0cebb90fdae9c8c893a76e34b7d52677e2462::54fb0c65dbb75a102233f36087a97b911182cc58::d87af8936d9991aa4c98c6a2495f5da5d0f398a6::06887c33ec81bd5c55e4b8b4ed11df28222fca28::ed8e4b10092b8f691e13110f54a6502f8216a8c5::15bfb2ed015a556b780ca5bcb62f7a3fbf3bb450::3ebb3b1644f60b60811787d9d509c7c71604506b::12c7f489dfbfafa7305e94dff8e9196e9a49b798::dd6cb4a34e3520f0a6fc807d798dd1b799df2811::5ece8ea35420b7cdd6c37cf9612e63ad2c6cc536::4b7eae3f947e0c06e2efca016b50517d2e110be1::
https://api.github.com/repos/elastic/kibana,10481,status-api-5.x::5.x,0,merged,review::v5.4.0::,"This is an opt-in backport of https://github.com/elastic/kibana/pull/10180, returning only the latest metrics from the status api.  It can be enabled by setting `status.v6ApiFormat: true` in kibana.yml::This return should be legacy format with without the nested version information. Metrics also needs to be of the legacy format. ::What are your thoughts on swapping this, creating `kbnServer.legacyMetrics`. Reason being is we are exposing the cgroup information via this interface.::We should default this to false.::",d3fcebe91e64913a15b8f751ef9923479c9eb69f::7aec256a8580b726b98384ca428a842e990ff4b1::91a342f96e4172b006b558df0bcececdd4014ba6::873a7659d70d4a01a816eff2c6ae22fe35eb86f2::
https://api.github.com/repos/elastic/kibana,10415,build/do-not-watch-coverage-dir::master,0,merged,Team:Operations::build::review::,Running test coverage and running Kibana should not interfere with each other. I will backport this to every 5.x branch.::,4216d4482eaf0428b98a01b54c20173b5694c1b9::
https://api.github.com/repos/elastic/kibana,10267,5.x::5.x,0,merged,,backports #10152::,48d076e9ee61104f62515176f0c688156fa7d394::
https://api.github.com/repos/elastic/kibana,10265,master::master,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",1c0a20b2a628c5d7d4a5a8928cec182096b31b84::3fbf5a55c05fc1be0021039dff559d63f4895583::
https://api.github.com/repos/elastic/kibana,10133,5.x::5.x,0,merged,,"Backports #10074 * Dashboard clean up - Stop storing the grid element on the panel which caused a circular reference and required special code to make it serializable. - Call state.save directly rather than broadcasting change:vis This is in prep for possibly making grid scope isolate and view/edit mode implementation. * Make dashboard grid scope isolate This will help prepare for state changes for view/edit mode in dashboard.js * Remove unnecessary uses of findPanelByPanelIndex can just use the panelElement directly * Only need the panelIndex stored on the inner element * Remove memory leak Clean up panelElementMapping <!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",600e1b99b65f7c6ebadcbc05e89ad4dc62a0f4cb::
https://api.github.com/repos/elastic/kibana,10130,master::master,0,closed,review::v5.2.0::,This patch documents support for the `xpack.monitoring.*` settings when using the Docker image. The corresponding [code is in elastic/kibana-docker](https://github.com/elastic/kibana-docker/compare/055707855eb8d83484f49f14ba5e0298646c8a57...8930a48efff46420617ce38e99837ce5b4bfd806). Please backport to 5.2 if it LGTY.::,f154897f62351364d7151b14d6a3f6eae10c54f2::
https://api.github.com/repos/elastic/kibana,10048,5.x::5.x,0,merged,,backports #9984 * Use better confirm button text. rename safe confirm. Use confirm_modal_promise only when it’s easier than using confirm_modal directly. change all native confirmations to the new dialog * address code review comments * Be consistent with the confirm button text pattern Address other code review comments * remove default option for confirmButtonText Require onConfirm and confirmButtonText for confirmModal * fix tests for no longer using alertText * address code review comments Round 2 ::,0ff2cba2feebc571231335cdbc0701d91b001af0::77aa732f79375db8309339fad68d8e801f47a2ef::53bf1527e84ac6eff2ccc6865f28b2b0f1911989::
https://api.github.com/repos/elastic/kibana,9996,master::4.6,0,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",10be38465276b89356d9912956902b681c3256f2::1504a9ec21d9fe46817644eb6132ec819339c95c::e232e0766050ddb2cfca5592f189ed6a89d67bd9::7af3e7e64dada344aefc97bc8db23a8b3bb94bc5::273c3499cefb0815825b911e05b0b97f9e3cfe1e::ced2a21de30043d6e7f418009ff8ac549a60e911::5fe4a6bd3015012f2f61cd22f985c5f816efe761::7b61123288ab13ac90fa83cf5d4602c5cd50eb39::658d5f54186e4393c75ef92cc62ff915811229f3::56d03d9f8a712fd71c1659f0ba5a9958cb28fd13::83681d980d36d6e54976c630ca0c299a66c04112::e81e1f25cdd5450d821f94aa7b23447d68b85263::bd3cca9efaf9ddaae8a779513320965884248dc6::314e095441af0c2f2f8c491f2586968104ed96c7::b32949dfcd58c4a40d85a39fbd3208a6954164cf::a1672537e48627c90b1107dc6713bb8465f48bbd::a8084a3cbc1e8f05ba90bb4cda30343c7f2df536::622272934ecb51c723f83fd48669e26d8c7ea544::5b385a532cdb346bf6c701e8892882a46eb99f13::725c2c11423917052d42e5499e04b571f3a3c0fb::3ec1c513a55147a235e46f480a9a7140e5aba035::d4914a3cff3031ab5470f35628cd7f42a4e9ac3a::97144848a974f38c9aa8a58682c69600499c7bbd::bfcb875c77fd22dbc3c1a9915a43d112c9985a33::c650ab9513596d8062e25ac2cec2c1e92b80178c::ac9f59fcedd72f2929d85330322b136adf87aa32::8531d9bf01384e38db1e046058419317716c0ff8::72496c4fce44e2865a02123db4b819904c28786d::739b00581ed28b6de9b35ea6aad039f3b9242ed9::14b7d3a9e239653e1d7bd3e7631da5b7db506d0a::52238006ad6b024dd6a187632a61230bd58cefd0::1febea9da613936624182730d385324b7fd1664f::643ae1b78cdbe9915c6557327b7345bd1fc65c17::e037140866a569e6b919defaa1f47510d1412f56::7eaa1915f4b46ee35680238deacecfc3cf03ecb6::475220a129c5e64ea38b727c462d19cd226db9f9::aedcdf716d6834cfe9476c2e2f6ec7cf56e49be1::49c3401864697b15f82f5a8c3ee1c79c40f4479c::6b98215833c3da97d71ba1cc8af320d8b9c20efe::65f74e08b9944b7e0181e807d1143894776d32b6::3d546336b15d5cb370ff79ca97f5cc1cb61d9867::f6196cf6623f39fd1223c938c5958dcbcb92177d::5b195343140663dd732ff12dff2d1dab1078b4e9::4234c9f6e31318cd336f993f0c60bb84ef4a04bf::c46172d79f5bca950b3324c3987a197f633924c8::0065fbaa9b92f2be93a2f2dc7c1042856bbd2634::f36cb6524a3805b90ac86c6bb2bd0e80758754c7::bb042f767b648caff4084efd02dcfed429f21805::c992d0c401403515ea7e60d0f10710b00275dbdf::54af670045085ec8d6910df7928657300ad603e7::b853d89139bf3599de3b3d532227f548fcdef5cd::ae56c13583a8e95d48da2f440d810d5907244b92::83595aecd534b924963017c7070e352a3128cec8::6419e5a814e5f50a81704f747ce1f51d1f7d2f6f::e558f00c42607cf96b35e906d3a82662c8cbe550::570f54c73757154178a1624d9d1fe685facd8fe3::c550bbcc958d74d0e5456d5cebfc81750dd2d54e::55c499395718ed46f131f9a57927468494b9e35e::16e8975f3a9cba463e12ecb1e557939448dfee75::b727ccbb7008bb7c3cf3aa968df47a1301546e40::b7e18730a7607e5a5f54b73f4377b1b546bd4d69::596198276b95be8106c03974be38af18ad08df92::1e2c953f16ab6234d8be7a85be17205d714a77ca::ef3c49aae5aa072d309af51157d8cb84335b5162::20741959e0d2f716dbb03d4e4013cfa5a7bf6291::e2ff6bb7a51c2f6aa792c88189ea0b0ba2dfbecb::15a4fa1cdd9da83a9bab4fe96fe6ded18318799d::f46fa877b09aea774c15ecd2cb39fb18ea6e49ab::abda2f6934218da5424d9f9736e248a034e57033::653e83f1c34838fb1de8f4a468b74f489bcbf1ee::41276772afa6c67bc5a4815a5ab3545c8fcde0ab::d69d60f02dd09a55a7aa9c78804190dd4745d1a6::a16e7203967ba5cb69bf11f54aa4d06e8ec697f5::41a84d2e9f2706c0cb80390df25bf2272baa102c::34b32c0b4e80b48d7d921d5ad289a5c6119fcbb2::e666cde9cadd9a6896a90df7628eedb134e2db56::a0630a63b69219d4105a76a73f56449fcf9a5825::8c6cdd91b1c6798272e39fd4f72e9420dc9bac9a::8ee0a4b1e8601b1c53d76e50705f59faad023dd9::654ddd737a1f8c5a42ea3792ff757b7cac04461c::eacb9484ddbc79f6c79b0b23dd008645da41c28b::4d24a4b316a823cf70d6dbfeb9668cac9089d612::706b4d9c956fa88037d296beadd12f706923cf9b::e30b7b672fc5748dc412741aca7a327a713b1c62::5b0a0d2595e0b12728592b431232965f8bcb3bc3::78279deea09f28d678fdcd187e4299c6c0fd3b84::62f258b83ccfd1a2f1053b509a7b788c77513cd5::c6f5963e315ebedd9225e0dd2d3569024d1bfd8f::0761ad430a991c3eff366b214826f8e0da59e67b::5985252beec0a86ea0b083d3b5a14b596b74dcc6::173c8bc2c9e76c0be1bfb6dab68b3ba464906b77::895aabc3a3d842f0699d3b4de7a4db4ff2d43eb7::70b75f10cb0a21f2f2772753d19df32666b63ecc::a5220c0bce6ab9713bece30f7567ae083fabc4dc::45437de0ba397000f95ef6d94a1316fe27f27bc0::e1ef581747068d2477d1ee7c9cd0197924e48a70::832cfd0d422285c0d7b36be9ab05b6c9ae8e4559::2694a84ea979bde7258adfe145e70ba60b95c191::ca9b085ef0c98d17401db589dd3b8dba1afccacf::5caa6c0626b635f883243461d247a362ec901b20::6d6ab4ab5ebeeaa09d29dae12a15a333f2abc399::ded0ee0a034c93ac9506817d453501230ffd21b0::37f82f146f297db36f9c7cba1c5729403c73389c::14ef79717c40b34944ec69d1fa93c66b34a90a11::9a242cf8f53b6c2e4b6af57b01ce38a587e49584::a36c997ff379b49b7932fb94634e2bfb0c9a2a85::af84452b6fdee4a55d3866fad4165509baa92f1c::d4036dc6cbc80118993b39320b7d883d13fdcafd::b4c39915884de87739e70275b86bcf1c69c93e14::31137131f3a8834538cb3ea92d14be25933c28d5::2c7394b033d1791ccbead15e6a4394427be61ff2::64828f12ec807415f4052c87f505d9b712b8c2ec::22103a5f6198863e79c9ecdb27b23e0e6d671e3c::5ca4ea1185a1ee4fa9e57eacfe22f81f119539fd::36a88bc165d79588bf98ca550bcb522c7ce9a595::1dba2ad1eab659295e3cb90c48587873dc4c49bd::4cc4252230b42d45d4333f693c2c588a63609075::e5a60ef707fabb82cdb6d72f8e76d7e043e33b16::007606e24ae51e0cff41ded34bc7637e5359c1ea::0a501b3b70a3060eb6477b1484034a5c4410cae7::5ab2a102e8ec72a3c6c92c3c5713c249e8e36530::4cc868c932359b0b4149900254a0e7e88e5dae4a::e7189e5349f91887e7eb1a0861e2613755075365::dc51ad098f26236411ab6683abd443ef49d52c83::0f397f2bc4445d61c46d245a4310df024a0a7c88::91e919d1c57c57a745722ea966d9109448463f6c::2b5f50ec13e9d1edc49981810ac73b3620f79cf7::c19459b2009f0790db78cdbb36d89c9032c3fa35::8192b9c01799e785d0a17f4f7398ef0b1bc4759c::477f8cd19bddd76b36fed261b30c55eb78ae3ee0::99464dfe3adb7607b2cb04cd8470cbee1c767ca5::b74022786f528bf51548a2404656f7002032125d::537b6db0229a5325a68b419d6bef4b6596d0f8f6::10ad36e94739dc07c3c8ba107b81b2252dc4a1d3::0883956e3d0ca951f2c9a5c75b774b28ba44c757::52f6922b01e648cbd3838cfe9fe4280c8880d213::dc1539fcfbf2a79973ff0f79e1db318809e03eb5::de802124c4067d0244a5db34e991a5fcb81faf0d::32849f5cfb9ec250606c39bda8c7e6a752ab49cd::6c7ed370107cac54d1dab1fb01cafa5aabb5315d::143e733e9a653f4bf67460ab2a97fc74e80b7aaa::7b8be0503dec7c827a31734bfa0f145458b85e5e::046872635a731eb963ea02537723287faa548d80::1248b2fc576c89401759b3e4e415ec7a54a3244b::499e659adb90b08bfb192c846564d35d5c6cf6cb::08a6f401666c96580d3dbb63cb620a6a641176a3::2cdb0f9148ad14a0061376e989f1d2343dde93a5::e33fa407aeee2c04d65d5b308e355ebda14a22e5::271aa697075bc2c8f931a1310b20a4ced119bcd5::dda84e9920450c43e9f5e3367641f6462e15b936::733a52d00a9c091779862878c9dcdab551e5c9c9::117581ffe2ec910ea90e68d99b37f845614e4391::41b06517d2f45ab767b02a3f81e80e8e745c01d5::4854f2d9673a1d1e8244338d8d82f29151fddad5::791fe3810044f606656543e91e27a93b94c6a2f4::8b49815ef26aaf52d5dc3b498ec3802857f50c79::4425bfdca0734d1401376191af0e653a2b40a7cf::e8a776e30a0d3dd546694af65078e190d53f084d::323a3a951e77eee4d633bd9253bec299406fe748::261a50a7a19b168f2cb49fa1e385d15a90e5a360::9a21e542cb4a238c26b06f53c96c5e8cd2a6c880::007f54f433cb35c41f44c083682ccea68746e930::34568f59f519ab9be58612bf2aa01f96d41a3af1::9b89b8e7bd576052663806386d7daff85daf5aa7::ff5f1ec7285debe62ac45771d9f5a1e2d0a9af0f::ec4f5e405a05d0e17d2deda5371d30534e0d598b::5bd0598e6a8d514557ad26fea58fc8e6457051df::cc04c580e36bd4924629d792cfa6d18e2fba4bb1::44ce775ec8a25907e547bf70f0b44caf52415153::19ad7d211117e7b622edff0bf8fbfaffe5898ba4::efe0676d628173a439ba06529e0a97e0b8f6520c::a9013a5b88c9c59f8e6d7292b5ea8ebe5c1cf945::5f5a7bebc94bbd7b72bcee1a74515d97c78e9f5c::333f2ac333b0c4872e8f9c76307abfaaa0d1fe54::61dd6e1fbf0d34a7c2ae538409e7a3ccceb69080::80772679c2b6b1f09775248a503ba882b68d5291::c9554811dabfb83cf4a0cbdb1ebbc64cc614d6df::7711fcd77628b761eadcaa96732d73374a9ca1a1::d8953f620d61de76118e8c02cf5dc5d31394c7f0::a97184d0edbe2fb5cd480a14e3f0d0dae02cc33d::01cf4c51582a677804d7f092c3d7a1f18596b7ce::ce9efff5114fc65ead6503c914e2772df4b634ff::55bd8c02e53db08a9fa44c39f2f3a4b43431dd5e::f781c8035875ca866da8725f5d3736f69ba7bbb6::cb0659f98df5553023bd2d50decb787d924cfb34::995c4084107b65f56869eea27d94e52c9cb31ed9::931d5a0c9d3797f5a88516176b1c8cc26738e439::8df249beec21f1cc7e3ed0a39dccda435f379446::27122034c93b9470858d6b86d81c03e92e7785ab::96588bd12f2af6f9e1f5d45db710d0f44f2ba129::b25456a3c904ab44045241b7b887efc4219d6881::1d800845e2cce11c36cc3504db410a1b242e4390::0b1acad99cc1b2505006b9d64d0367b76f464782::9161c0c170b5c76fd3f45e51f102e0eb05c6f831::bb45a390f8801301feaa7860a738a44c9152ad0e::921533a05402f4caf61adadf620413e0416ce782::7e931bd3a3a0899610bee66d7f3640da581adb6d::8148e66e346f12eb9b03b5c58ae07409ab1f193d::7268eb7fbdd4426ced08ede6cba6e257de7909e3::a8995e3f53da96928d6c8a87e6824afc58bc2269::7df604053628ab6701d217046ce1785ef58d9d5b::a376c031159e9d7329fc1147b6822ebcc41435c5::f4390baae21425c15d4990d4d3140ff32ac15f93::30032c52b43d09b859ba6c8b39a2f8252fb89830::55d95790eaab88758d668bd8e5383f46761765e3::fd699cb0a3e6ee8c15afadbb91f038b6c2e0ce60::b583bf6bc2bba699a75ca0e79e68aa44fe4a01db::8dac9c3a0a07796d2b7298b9d7169e6863299488::46c1118e30219db8f0c4e01823b7b6326e93a68d::2601fcfea7105b376282486a82332552097deb90::d54e0d52932b5446f63be55ff18172fc4cc278d8::5f61d48a1bcabba8088177139a4a282276557a3c::ce9eb95901321bd15ddc27e2f0517e3b0068c6e5::c68400432434f839055807bc68681d77e8374fb5::7d9f7adcf9f96230b76374da7d21f03cd8a98834::b7c8db694a5e47df0c5a56adf70b3be16009b5a2::ee29dc6d02e770a540e6fb515bae06d16b3fdfb8::42cc3013667146462a07ee236c53e0dd8064dfe0::de1ea90a846d1f2be66976ec3bc6d3d5096631ee::81072ad5c20e04456197f4dc5f1c4812ee2a106d::b940966471b07c25b7c2fa023eef7d646a8d835f::b86d78043eebfdeaa5d95f8bacab6c3887f01cdf::d9cf54f119d57448e4042ac9205c4ef40ad68992::058475fa9ca9bec12ab48547d96c73d7b70594f1::e98c3d4c4200a009fe89ecf3bbfe11f76af0c46c::935f597971c703f827d87c978e76ce5cad8cffd4::55889833861a4233100d84ea9029d2ede8cff191::28f30f8b7308b7765457457f28a8ae352937cbb5::a30cae3316f57b3320af37f555beef39a49d3690::81efe3b73419acef3c6fc11062511ce4d7e08d60::08f5061247ce017faf9e38f239063b7da69e79b2::90ed8249be9051364d0c20d7750b5da82b1c2212::b556ccc0e2275f6a9a4519dd61778bcd0ea674a1::b08f016cc6af2e96b43d8a02fa4f1e33e05e9b06::37cc438a40ffccccd94742b05b48ad536a981e95::8adaecb9be22f9ba784825bbf6f0ac3bd52d1fa7::03eebadc2bab2dc57d1c957bcce8acab9578acd6::3a8948f0cd62a9a72694e3f25910681d4c7b56a9::2cf49428a57f4c77b1fa4fdcb51222debd42beeb::00efd32166a3ff8380a7444bf637eb27fe32043c::832e5151f4c72c16a021de669e413c668bb6fac5::03866c129241299c1a66aa9f1eabaffd745da179::315fc5dc91d4c389845d1cf1def4e952bebce942::c8b4d2de2166cfe8bb14852921b4eb1503ba11a6::dfaf777eef953a733ce2571a0b38aaf0ee0c36a1::216f610a700bdc7b2dfc380bc8a2cdf503b7087c::016949216beb54dd92d359c7655eca31aa9a5a33::2cf2218782d3c91e5a280baa2276eeb102621763::f23d98e7dbbc3e08bc37e82f56cf87796eb96dc7::5d853da11e7b18a2da68b798b6acfa1376538e83::
https://api.github.com/repos/elastic/kibana,9951,fix/run-tasks-on-windows::master,0,merged,review::v5.2.0::v5.3.0::v6.0.0::,This checks for Windows machines and runs a slower variant to get the build number. I am going to backport this to every 5.x branch for convenience.::,01be6c5262f9516bb2bf132046ddadc12a202fe2::
https://api.github.com/repos/elastic/kibana,9896,5.2_backport_e1b79a3ec1f23c4a683e6ae969bd9e9e07e7cd47::5.2,0,merged,,"use hardcoded zoom-values for WMS, just as in pre 5.2 manual backport due to failure of https://github.com/elastic/kibana/pull/9892::",324027da1199e6020f193c99bbc89442d0a88acb::
https://api.github.com/repos/elastic/kibana,9895,5.x_backport_e1b79a3ec1f23c4a683e6ae969bd9e9e07e7cd47::5.x,0,merged,,"use hardcoded zoom-values for WMS, just as in pre 5.2 Manual backport, due to failure of https://github.com/elastic/kibana/pull/9893. ::",3aba9ed346665ca79e028c84fed866c8a0dd2dab::
https://api.github.com/repos/elastic/kibana,9878,5.2::master,1,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",533ac981f5ec7d7127d70be44f6015ccaa1833e6::13432d3084f5f3f4ab691e9cc64e454a1a022d2d::07b645372058aefe1a5b7d60d5785525534c1d82::4561162d8f2abe0893e81b0b93710cd6b89c66d0::d7957a5f1bb8e794d62cf0e71336b51afe3e2a52::8e5a9dd37a4895929aa25ef869ba911b911f6d94::2ca0c1960342d4a483c189ee601571d8ff680ce9::6326821da1d172114658f8db686a2aa8c734e940::a5080ee76b8627648db9bfd6712bd76506a54aca::d1e53cf6156ab43215073cc9e12aa76cbfac5b36::48c3da71b907d38a2181b8584f1398c0dee4054b::4a59a7c93c9f58641f5330454152f98ea1fdabc8::ac2b1270ba4f46b8de5b2c179880aab0c1e10b67::1c089a318511c5f371d4522693664fb9d60c3f9f::4088887fb7e9f8baa59a2a1bfb518064c7f39795::3f33c37c7f5c4e4ef39eb66b1692fe51a41998bc::afe395fe7954248c58689672f85f22dd57784df7::74afa9000bca224dfce268f884dad4ebe73ce9ec::7281bca38f31f21be9bc4b816eb4a748ec3e870f::bf2de50c2e51c8ab1839fb2f8c3a6fc4f31f2758::b9d7d4df6141626146de2cb03ac49221c9f6f746::e25528e0f48874a705d5a118660dcde2c3a20e2b::62c604d9f61ffc44aaf668e50af4c4aa9f8306cf::e51dfeb3489b752a9020b50b7edb55762abcf9a0::4b520e0f7179f4dfa6125949f5c983b636feb459::d6d751a9bfbbf27a21b372b938123edf9a8a3930::3045c3b8e3adfe19230c7e76e79428b8bc6106d6::fd05ea45a339130c113244334d147f256b731adf::06ce84f2c0ddae68cb47780415b2c2083f0575c6::19b27d5f0ceb113d5ddfc351f74c64e258a658f0::47277e994de5785439fe9cbfcc270cecfd3ddb90::cfb469b33e6f7e8e4e65a8b281d0f49a4e3260cf::9e7afe57cb8804bb786e5db22c3f6e08850fc661::32432d5bd83c72e477b95c518265393d95b5c4a7::df1830787d06c36a0158b8c7f74aa93384f722f9::97336b5e6753957b749ce22b77e0e9039464498f::247f241f84cdf7938f2458e5081edbf59cc3fdeb::3b7747c59b72023d42a7ecc85bf9bebcc4e4ab35::25bf76869a96dfe1e8400a919b1ae15df0301e0f::86bc3c3efe6196b0c84c600de2a8e8f565ba855c::a4f7d4e992e7504c5156b3a11b29ee4e5f268c7b::f9320886f2a6becddc069225ea9da0c5e6e9369c::01ca5dd8e597a46bf93cb6f257cb46d47a879907::239f7b2402848e23df15c589ba7493740501d7ab::098ca2abb2246b54afe53e8ffa4752704006377c::9dcc32a506499d9c430b6b9e0f21b57b74d9881a::f0c43b1935ac2599faa4b42d969cfeb8254cc6ba::fa11c034c91427fbebb07a99079b2f763954120f::8d26546ebcb62aedffe75cf950d7073cfef5b066::f2e35284981131a3ec3ffd1976d4b27edf8b6bee::236557b349c40efe2bc33427b87ae91e98937d3b::2fdf95a1cf215739c6f351d3667e69baa14dc92c::2991900e855d378658fe122d55d338bc61cd75af::8e22a9e03984813b0a08e20d2b5692dc8313562f::ad43652e4a74d5a9f15e5d2dbeca685bd3cd5848::ddccd8a485e89cf2c367548b269e19a1d29d819c::e4de00da1990fea6b5c2e7d6682a3caa5ea8868e::181221822e09ae3756a1b6a89d6603dd164e9b66::405b54158662709064b7840bf84a08f21a3aeaf7::c834ee74b12c0579beebdcb5c3df87042d9aaaaf::9eb4f5bbba7c558c081916fc5b723bd1ebfeec33::b3e0138d66b4939a14235c6924d7d902996a3aca::0652bab8f79ddcb686318eff857814f3454351bf::e9671530ba61d7c324c4cafed05d26715fb34705::9b5c7f3cf941234cf74b84bc4daced819b044b47::df4ba650674e6fc855042c9626ee4fd4760dede0::2508a42cb2cbe28456ac1bc8165685309ef0da7c::e57608b19db9a23bdd903ae1d3dac2b6bc8880c3::6ddafd2a2dde65892f8436749a32a10057661974::bbd645334cd0b4bacc75b23134b9ab77e39a86c5::21d2d7fdd24d13e674b877b3fa497e04d50c030e::838b16eda53e00c2e310ded6ea086b46a84ce757::446cf1f4edbeb4598c9bf24bfe3a1927807d0e78::c228915f437639be77106266db88720f4b0521b9::799061777411ba6ad42e36908297ae235ed0f5c2::5b2bb402a0715b1e718af5728b5dca68d11d15f6::fc8cef75a69d9d9a8ed6c24c20ef30aecb19a662::3cf5df3be1b705879306a2dc749dc7279ebcbed1::ac3cccf3d2991a7dc8d43184eee1884f66e16cf8::4a76abcca710b2018f819fe8b1c72e6284a8f319::321e7e53f2d2d04b8d0a1876858e23577732524f::b3db3e6db53c0f598485ea6286e3085fd84718fd::19723a66c9de0f52e6cca239c176845d5a1ab65b::574da97c36cd0de9caaad561b6f4aa2b78280ccf::cc969c376ef8b09668a7f6eafe0eb218347afbf1::785dce008578add9d17d49420c8d14a6e4141e99::37895918914d8f92a4ffd11978112ef76ca69d64::379abee09bf1a0541457cf90640008f80b53f11f::1cce23cbd918916871096ec02cede766bc2d900b::80880a758a4e1dd9455ef6dab1c2e3f605c098e0::c02d2d132010129a46cfdd9f8b67c2327946e863::2ee5df9f0a4085014b514313153e2c8fd3f6d4c0::c190e5876396b83502801b20498cf1c5bac58dac::f522641f28bc15614e7279696ad88b8ce672682a::3396233d116e485b0645950c5370b3c579190e1b::6d0cee0434e6e661742e5a8de377eb5f5638a5e2::f0dfa906c69f12af6980e1197dda05e620b7714b::ac93aba3a3f78a434539c4f78c164f2cab0e6755::ece1272d85c336bb87740e50ddbb06119cd1db11::239332918cf4fbbc0b7261e578403fbfa0563ab3::24840a930c459e858598835b885992312ab7108f::6eb9b26d6b567b238faa13fcc89ce13fcdbf8e71::d58ba76cc15b6c54039b5fa7e891736778fdd334::ba0d301903981a9245c365d298656f4b85e9df20::2b04dde70f0d5be35e88ac10d0b3d56074f913af::d8fda1e201c6134ede72d901f0880342ac2773f2::02fd1f0aa5b2f9b0ac4c91d0593501e6ce4a1e77::1150ea39e34813ef279b8ff3b2f575c4d3f127c7::567d63630f9a795547935639fa91438b042d5e1f::269ee065848ca0542e36760ddd668572340ad12b::a529c47ce800c5932e508140e827e5002f443d47::29240b62726e97892ac9a39308b4aa93b8cc63a8::0eea19525f25b4b1b774aea91a71cb3884f18b32::fb367aa44605e38a906b09133b5dd8088f317543::8b47723c6ed4829a05b6e5bc6f3c89d44cba9e48::2b0b320c8343ec3a1ed61e5f5575b0cc3b6a8971::76897e1eb6b8953119fcf445d18c523143b246c5::3ca49d089aadcbeb1508551307dc89f6c2f27e62::5b300075a4df721e2951e285aadc830429117ac5::5120270ef42900d6a4a2da2626f1a186f0184366::1c37948b10884e30f4d61bc893845eff3258afa2::c3b67ef2cdca9014772c27b51fa6c3c53a537597::512e6bd3f021715fd29268ffbf5bc55e13b038c5::325940d83845f6564834643c2d4a303f9af51fed::e08041a93d590831340152b10ed5a2d4a0d4e8f2::1c8a6bb69e81f03cbaf6e456626180ab38b4387d::9fa81ecbc66ddb44475574758552f7f7e51ab724::ece9e031f9e22765f233ef0ad949f660453eed07::520d6467602d528dd70f57d4c00b8dbce8e3d43d::c64abe37ea40f0c52df33a5c37825b99240cb72a::5fa6006011091f2d4a0363684bd04b5c38469ac7::c7675b1c8e4d1b0fe434215947876ec4b3d78b54::c36e636e9bdd9eba6863b509d82475aa38eba82e::76175e6b30a8f4285f03de5dd8520488ad4b88b1::e1456a8936aae930d0e66291aa5e35b8ec7e29e9::17df55c5da4215aa144c2f0cdff550bec9a829d1::851ba237154b6b2c6a49082fa4e30d93c1d41354::422cbd2281242fe0a31cb1f431c7288531983685::a94ba3d23168fd6a8a12b61ba5bc49cdb457acf7::f7cc22c6ce1625ed0d5c73a3d8381dfefb9857d2::2735a32c8b1346b101eb38ed88f963f1a29b9a1c::5689997a5a9bfc111ac72507da5123aa8741c01f::6ae80730d75610d1067909a27b7b146375969797::5cb1e203412b78af1e06d11ff03eb994c37b189e::37a62943bec2112b3df0bc8d85639c59e8cde057::93f1282f7d89aef938c7d093329588c22129ef33::84a4a0df57bce421f2e2ff2c8d3aa91c116267d6::64799faf67827732567c9a7bf1bfed567372b14a::5a4a1e4d8f9dc4f0d2691f4cd1e3e46b65b2805b::75114b342d6094562e1c099fc9bf63f1b466736f::1787c7e7806a0cf288d247516984be013eb5375c::4b66537e3106767d51fcd9ef2b5e1cd904c8f0a7::df2644273b5119ffd205082fa7f5051826a11ed9::b891267b3735b98f5e0fdd917af246f00660b702::ff8aabbc7a4d0b408365b27272fb1cc6ba87efe9::a62c91bc4615012980fe018367b9bc4bb52f436e::7ee81ad5fc6535311fa48a0690d308f83676a512::187b63a2a951cea1d477c2b6ef0e371fdb0dc26a::9eea6a5769ed2f3b466e55350dd6ec8eff494516::be89fc841527267ab79b472be47ef4753589c7c8::a4e201f94db24f932c8636462ffb9722e175fa5b::33d23d0241d5b028242b1384174a91e7008e4557::aa828cde5d45329a36b4ac5469e076af6b2b3d02::1668d740c706d57758986bf3e8819659d970c109::3aea8e23c5b4f5520ccfb0f1b643b49cc74021b4::f9690a6cbc2d5304795b634d4cc279656b9dfa85::e721805c67a7b0d9ec2f450e4900886b2207bbc2::952bf135035d7baabb55b72931e9df5066f8c06c::33f2b8fd21618d14739a3fde2b2ecf5681b67ce0::67655da43b52add13ce50357a257b3ff2af3e965::c0cac0094c8895f09f9a67b54746bd90eb0848e9::9f483e10b047ab9277f62de86723230f9308d425::e1c9eea9035bc5460f48c1fea2c12c57fa7b8fcc::8a748e75c7d10b849f9ac482809139f4ed451802::7efded336b0d600a1dabec32d0c6e21508ad3f4a::8c0e89273b24a3859e7ccf1542f2cb71e2624224::44c10810ef1bffcd26a7086fef6a5dc3a1902602::d02ac4180fb3f7de01760d9df1c974e8d094f578::c0f3d9e1b5b9c6f70e0dd247070e7b59296c7d99::2de100d4233ead706089f9cdaa34e7436897dee6::da4c0b40f5fba13919fe210be09e8224ac8fd462::38975e2706492e42aa85ca1cbba5b9353baca016::87a7a3520940b83d6488ea0e7ad875156038e790::6634df3e2257cd621447fb45dcf2d3c6ecd34bea::c08506c752b4db92c9da67415636fc513eb09286::e2ce741e0fcf78af69805c4712e28587ab819212::53f1ebdb224ef7bd8215763403f6c3376d3b42b7::aa41e38d382996a43b2f246239f04daccb7a89ea::15eb80bf355cbadd3d0124dafb2aafe31ea4a4b3::3c2147dc567b82752d9652f79e1908b76ce4e767::ef40953e374034ec203baeb88ac54e40e0f0e816::6806477befc8751e06e0a19d7e8e2cd0f4f84968::6cd701667370e701cd6a095da585b3f868bacab3::d8a9ed9bb834817d4497c24847ad15e5d45b90db::dfd16c68686b13714c5a75a08b250f4ee268cade::e004a604b21d6ae4df8968a27b357bae59527ff7::18465ff195ba38306c50a5ea807b002bc869481c::663b94b31bf0570f64b781ba886ab3df1323e6d4::2092f87de18e0c1dd2029044a32c04f777626394::bf8d8b041471fad0fdb80e01fb706743f1924af8::b94b064f7ddb8c9a68976889b8b9523eff9fb6ce::8d2a7869d1008502daceb5deb774368e8d633381::fb308ada4ed6c06014a4d3ced2162f7a0996c94b::eb8866cea1b709010d9b0736f26eb0a7aa4cc80b::b6b266140890a3c77b0fbee0ebd27087536bde04::15b7de345557dc5ec7b373cb397f23082856ee6b::ca32e8fecae3882ff57fcfe972e81bedca4152ca::9a598fa13371d0e38991d7bf95c67a1dc38526df::f276e5755c889c5002018a19022fbdeaca01d2bc::c780ab17872b00a678b741b96ee869bc8ab0a4da::69f65d60510d411c4c2e124aecdd4c8aa8c93033::bd5b0cf4f3ecfa08fb78c09e9d2e69300fdb19b7::e7376da572a27d29cbee93dafd5d4be3c2348444::cf8f3362369257d92bc011ef24b3cd02e8acc3a3::0c96c39e51ae3fec49bc06f8c9838db4c1d0a46c::6d43ca220df6c67d8b7ed44582266973560c88e6::16522f665e93f885b37b660f4326bf014d663bdf::8e76bd86fb080f6fa88279fd77a099c12aa28ffd::f90fef65416bd8687663c99b6c3b99ed937a9433::00c3e1f216a6eaa6242d4cc9f223ad552179df49::01039f854f722210584ea3565592fa1fd89e7b3c::90a9f67df20913c53b0d92ecb2c3a07b0c195ec9::cb0a941eccf4e06392f5cb42dd2b313738b78e93::879de8acc316d4f27bfce620fc2c1f0dd97cdbf1::ffb1347f233023fed248afd64405bab64518c26b::3571cde2904b8ae6dbe0ee4397e88220ef945744::e3bd56aaf87eebfecbfcc6a3147e7e694bfbf3a0::b771d19d5b875cefd57d9961dbe1f601bac5d48f::4a586870c5247df23dc36ff2493919cd3ae857ff::b2ffc357410ad5e09d84698fda9aa2e8f51ffa49::82f883a70e036c5043b7c76ece3dec8aff9154ef::85b603f4721a881204b931aefddb9a1dd4476d81::caba8491e878f21e287e56bfe414f49023964027::1c97dbc41d4025a5ebfee933a56cd2326f7d4292::5613c053eb420aca11940c137cccd51fbf2b9795::d6b19375670bfcd37dbf5dab9004bc97d63a8208::672db67f720e5d6c85f063c12ea159ffaa32d1c0::15ad03f4b437799a5aabc61bdfe139604bae2ca9::bc3fe77db7574f0e053524ea2651f84c2891614f::31821c1296329d348540e2ac2ca36298b5df2ffc::56a12bc83c37d4358ddce71464c8185c2fd54f63::62480c206df19a04ef729afa772ffbc9deb5681d::03dc9d93e3d00b8a2be136353183cbc0b78eb5c7::0e8daecfafad0e0a62b54d3fdf8524779deefe6b::b19086751f9cfdcf7ea35342be7f6cc4dc64a94e::d5a2044f12ae4878d84018d9afbaec04dbc5d770::97355f8b34a3626828e799010c2432f86d4bc2b1::7747df562134ef8daef22af1168a06bc9295c0e8::eafbcb12a4e0c3f086c91b87ba02609f3f7536b8::2d29f23daff7682f98ff0f26cc155289e731e2ea::
https://api.github.com/repos/elastic/kibana,9778,fix_typo_5.x::5.x,0,merged,review::,minor merge conflicts in automated backport (https://github.com/elastic/kibana/pull/9736) Manual backport instead.::,b8e26c065069e0bbf896028ce10d47f5739aaa39::
https://api.github.com/repos/elastic/kibana,9759,jasper/backport/7302/5.x::jasper/backport/7302/5.x,0,closed,,"Backports PR #7302 **Commit 1:** add top_hits aggregation * Original sha: 22bab6246e21820094aacc5c17c2db191235fe97 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-05-26T22:02:08Z **Commit 2:** support nested fields * Original sha: 8aef2b8f42d8b9be916b793c90468b08e0aaa3bc * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-06-11T14:57:35Z **Commit 3:** added choice of the order and select by default the index pattern associated time field * Original sha: 9791ac50e4a4822b4ac30ac424bec9f61ec65e0a * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-06-14T21:08:00Z **Commit 4:** improved parameters name and changed aggregation from latest to top to better reflect what this aggregation may accomplish * Original sha: 692f41cc6f0a01597f86f31a7837a522e19f7e07 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-06-22T20:32:12Z **Commit 5:** made variable a constant * Original sha: 39cddab05c43a1d740495d743ef0b7627516416d * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-07-01T22:42:13Z **Commit 6:** use shorter name for variable * Original sha: c6494ccc9c178b4539fda26a0634cdf8873b1102 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-07-27T08:50:44Z **Commit 7:** prevent to sort terms on top_hits * Original sha: b365ddc7977531f6f277ff0c2dadf68f9837f922 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-08-28T09:47:47Z **Commit 8:** Added the top_hits agg to line/pie/tile vis. Added support for function in prop_filter to allow more flexibility when filtering the list of values. The _term order is now the default ordering instead of _custom. * Original sha: be44e905af4ac6217fcab1dc63d6f002cd5ef762 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-09-19T14:53:48Z **Commit 9:** simplified tests * Original sha: 43767f09290a6d46edbb0e87a1dcadf69045809f * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-10-11T09:29:11Z **Commit 10:** changed as per code review * Original sha: 53469d51a62372774e7be098b989b1b798be7171 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-10-11T21:49:36Z **Commit 11:** Top Hit should support all field types on the metric vis * Original sha: 20be95006f07473a1b4cd6515135fa26daf3baa0 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-10-17T21:18:31Z **Commit 12:** renamed metric to top hit * Original sha: 20cbb12e678edf1b17ecc3bc8f453b768f7a9d9f * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-10-17T21:28:30Z **Commit 13:** check if there is any result from buckets * Original sha: b99d6c76dd1bb4b8290f708cf9fd02a5f77df818 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-10-18T09:13:19Z **Commit 14:** support scripted fields * Original sha: f79cdc153149a8feea157b68db5a945d5e7796a2 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-10-23T20:58:55Z **Commit 15:** Merge branch 'master' of github.com:elastic/kibana into latest-value * Original sha: 82060ce91f436005bfa81ac0742f2b2e7f29650b * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-01T09:47:19Z **Commit 16:** Merge branch 'master' of github.com:elastic/kibana into latest-value * Original sha: 257729868c57e67df1b44b561d57f8387685452e * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-12T11:30:42Z **Commit 17:** - added logic for trying to get the field value from the source or from a doc_values field. - added onlyAggregatable option for a field agg param to decide whether or not to retain only aggregatable fields. * Original sha: 6a2bc0188c70e9a9a944fb5f931e47690591b9d5 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-13T12:34:10Z **Commit 18:** improved loops in getValuesAtPath method * Original sha: 991864cdd3c792c3be33e9acc7b342bbfe98385e * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-16T10:10:28Z **Commit 19:** Merge branch 'master' of github.com:elastic/kibana into latest-value * Original sha: bc1c90ac066225cc5c5cf35637030ac483bbb7b7 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-17T23:51:13Z **Commit 20:** do not try to get the doc_values field of an IP field * Original sha: d697f11ca1c08de8204ee0f64c766a15fcf6eee2 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-18T00:49:34Z **Commit 21:** improved field tests on the onlyAggregatable option * Original sha: c2249e525f4e09bf428be73c0299e5f13c308d15 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-18T01:08:34Z **Commit 22:** use indexPattern.formatField to get all the values at a given path * Original sha: f4200e1bc09724fb9b7e89488006ca4d1fb503b6 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-19T23:02:18Z **Commit 23:** do not show the analyzed warning * Original sha: 2dda53dfb71f1ed006824500bb6321ec790b76b8 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-19T23:30:59Z **Commit 24:** support to sort on scripted field * Original sha: eda9610fa2c74a9db80796e7310720d6681492e6 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-19T23:52:15Z **Commit 25:** corrected tests and rely on the field's formatter instead of trying to return a nice string * Original sha: b465438176cd7e0f3ab2b012a00235ecbba1302e * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-20T14:40:43Z **Commit 26:** do not rely on init_default_field_props to set the doc_values property * Original sha: 19e2104745e7d2eb8a315c8607a6f3217b444d54 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-21T23:11:29Z **Commit 27:** added test for the doc_values property * Original sha: fd323f3c2a8979912806dd120ca0176a833a9627 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-11-23T10:04:16Z **Commit 28:** Merge branch 'master' of github.com:elastic/kibana into latest-value * Original sha: cfed72ec950e16513bc6a62291ecba07c148aa71 * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-12-05T15:47:45Z **Commit 29:** - corrected source formatter - add option to show/hide analyzed warning of a field * Original sha: 30901820de5533b5a68ec3ced0607a4f4f8f015d * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-12-05T22:40:14Z **Commit 30:** set the default value of the showAnalyzedWarning in fieldparam * Original sha: 0d924fc73d6ebc907ce3ff6a73b2b5950a1ca9ec * Authored by Stéphane Campinas <stephane.campinas@gmail.com> on 2016-12-08T16:29:46Z <!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",d3856f567680edc9962eb5a67a3eeb42ffaf116a::
https://api.github.com/repos/elastic/kibana,9725,metrics::master,0,merged,Feature:Visualizations::review::v5.4.0::v6.0.0::,"This PR is for adding a new time series metrics editor and visualizations to Kibana. It supports the current set of pipeline aggregations and is gear towards time series data sets. It comes with 5 visualization types: Histogram, Gauge, Metric, Top N, and Markdown (with variable substitution). ![screenshot from 2017-01-04 12-46-47](https://cloud.githubusercontent.com/assets/41702/21657262/ac0f6d2a-d27e-11e6-9e32-0fd0ed4443cf.png) Feature list: - Full pipeline aggregation support (including sibling aggs) - Multiple Y-Axes - Fully customization histograms (line, area, bar) - Circle Gauges and Half Circle Gauges with customizable styles - Percentile bands - Standard deviation bands - Time shifting - Custom index patterns for each series - Customizable background colors - Rule based background and text colors for metrics visualization - Rule based gauge and text colors - Rule based bars for Top N visualization - Custom CSS for Markdown visualization - Markdown variable substitution with live aggregation data - Annotations for time series histograms with multiple sources - Ratios based on query strings ::planning to use this ? ::unused import ... and why api sub directory ? seems unnecessary nesting::most of the import here seems unused ... i guess after removing them you could also refine the folder structure here as files in vis_data are importing from `./`, `../`, `../../../` .. ::maybe you could break this out to another function to make it clearer what it does ?::currently on dashboard chart rerenders when you mouse over (as size gets changed when edit buttons are added ... this doesnt happen if the title is there) just setting visibility to hidden should solve it, but i am wondering do we really want to hide the title ?::`$scope.$watch('esResponse', fetch($scope));` should work::i think this whole lib folder could use further separation to make it clearer what each of the files is for and have only top level files (which are imported by other parts of the code) on this level::i think this file belongs to `components/vis_editor/lib` as well as some other files in this folder. i would try to keep the files that are imported only by some part as close to the import as possible, to make it easier to understand the structure of the code. in this folder i would only put what is actually shared across everything on this level. ::Yes, we want to hide the title for guages, markdown and metrics. The title is redundant for those visualizations and looks very out of place. Keeping the element there but changing the opacity forces the visualizations to be off center. Basically the title is a design flaw with the current dashboard system, it should only be included for visualizations that require it.::The `calculateLabel` is used on both the front-end and back-end so either there will be a large directory traversal on the front-end or on the back-end.::The resizing happens because the controls should really be positioned using `absolute` in the upper right hand corner of the screen instead of `static` which pushes the content around.::is this comment for the `vis.params` watch of all the watches following? I copied this from Timelion since he figured out all the spots that we needed to hook into.::for the ones following (so what this comment is talking about)::would prefer to see this implemented on the dashboard side, something that could be used across all visualizations.::sorry, i am not talking about calculateLabel, just wanted to put comment on the beginning of this file.::I agree... Having that code in here is essentially a hack. I'm not sure how we should proceed with stuff like this. Part of me thinks we should leave it as is; create an issue for the dashboard team to fix; then have a issue to come back and fix these.::Cool... I'm moving a bunch of stuff around today that will take care of most of the file layout issues you mentioned.::Use ES6 style `export`::Does this still work after rebasing master? I thought the Babel 6 upgrade went in recently, which I suspect breaks this as it's not following the standard (`import` doesn't follow ""destructuring rules"" as it sets up bindings, so you can't import an object like this. Maybe change to `export function getParams(...) { ... }` in the implementation?::-1 from me on this `~x.indexOf` stuff. I know what it does, but it just increases mental overhead.::We should _definitely_ have an eslint that warns on all of these unused things ...::i put a pr up that should greatly simplify this #10175 however even without that pr i am wondering, why are you setting the position to absolute ? generally with this hack you should hide the visualization and disable the max-width on the sidebar.::$scope.$watch('esResponse', fetch($scope)); should work (instead of all of this ) it should work in the visualization controller as well.::with that pr i put up you could probably also get rid of this as the visualize component wont be rendered at all (only your editor will)::I tried this and it didn't work.::This is for the dashboard panel.::thats weird ... as all vislib visualizations and tagcloud are relying on that ...::unused::have you tried removing this ?::unused::unused::can you explain this to me ?::ehm ... maybe i don't understand this correctly ... but all other components are using class syntax. dont you want to create a base class Legend and then extend it with HorizontalLegend and VerticalLegend ?::can you explain gauge vs gauge_vis ?::could/would you extract this out ? (for all components ?)::this should be a separate function::getPrimaryLabel and getSecondayLabel functions ?::seems this file (and few others in this folder?) is only used from vis_data folder ... so maybe it belongs there ?::so some of the components are functions and some use the class syntax ... should we unify this ? or is there a reason behind this ?::put style in the css::unused::I might be misunderstanding this, but why not just use regular classes here? This seems a bit more difficult to read to me. I'd just do: ``` const classes = classnames('custom-color-picker', { 'custom-color-picker--no-alpha': this.props.disableAlpha }) ``` or something like that (using [`classnames`](https://www.npmjs.com/package/classnames) here, which was extracted from React core). (I don't have anything against css in JS, though — this is just for consistency with the rest of the code base)::Not a fan of this aligning. This is something that easily breaks unless eslint or something like that automatically fixes it on every commit (e.g. let's say you search and replace a variable name etc)::Just use `PureComponent` instead? See https://facebook.github.io/react/docs/react-api.html#react.purecomponent And if not, this is difficult to read, so I'd rather implement it as we normally define lifecycle events (e.g. if you're not used to the lifecycle events it's difficult to remember that `arguments[0]` is props etc). Unless purecomponent, I'd do: ``` shouldComponentUpdate(nextProps, nextState) { return shallowCompare(nextProps, nextState) } ```::missing `()` at the end::In general not a fan of using uncontrolled components. I feel it's an ""escape hatch"", and that controlled components should be preferred unless there are very good reasons to not use them. Also, we should try to stay away from string refs. It's very likely they will go away: > We advise against it because string refs have some issues, are considered legacy, and are likely to be removed in one of the future releases. See https://facebook.github.io/react/docs/refs-and-the-dom.html#legacy-api-string-refs Another thing I think you could do is have an `<input name='label' ...>` and within `handleFieldChange` use `e.target.name` and `e.target.value`. That would remove a whole lot of the unnecessary `refs` use.::Which one is unused? They all seemed to be used.::This is using jQuery to create an  event bus, it's being used to synchronize the crosshairs on the time series chart::Composition over inheritance. Also the stateless function is suppose to be more efficient.::Gauge is responsible for handling just the metrics (text portion) of the visualization where the GaugeVis is responsible for handling the SVG portion.::This file was copied in from the react-color project so I left is as is as much as possible.::do we use this two anywhere ? i can just see the getFields get called from the routes/ ?::hmm i think i asked you before, maybe you answered and i didn't notice .... why is this file in /lib/ folder ? it seems its only imported from /lib/vis_data  (import ../bucket_transform) if thats the case it should probably be in that folder (along with other files many other files in this folder) as far as i can see only get_vis_data.js and get_fields.js actually belong here (top level imports that code from outside of this folder is importing ?)::this seems to be only used from lib/vis_data/response_processors/series .... so should it be there ? `import SeriesAgg from '../../../series_agg';`::also only used from lib/vis_data .... also i think (as you have a few ... `extended_stat_types.js`, maybe `parse_settings.js` and others of this simple structure) deserve a special folder ... `helpers` or something ? i think it makes it a looot easier to understand the code if the folder structure is clear, and right now there is a ton of files in the lib (and vis data folder), and some are really not important (as this one) and is just getting in the way.::i think we can do something about naming in this file to improve readability `getPanelData()` seems like its returning data, but variable is named `reqs` ... so should it be getPanelRequest() or const panelsData ?::is there a reason you are creating new acc object everytime or could this be just `return _.assign(acc, data)` ?::Yes... it's used to expose those functions via the tests.::It's mapping panels to a set of promises (which is requesting the data for each panel) then waiting for them to resolve then joining together the results in the response object. I'm changing `reqs` to `promises` to make that more clear.::remove unused::remove::remove unused::Change to Time Series Visual Builder (?)::typo ,::Is 'absolute' a .less feature?::typo::typo::flex-direction instead?::`to.be.empty()` ?::I've seen this before in React-code, returning null in the constructor. Is there a way to avoid this?::reverse :) ? `return row.id !== doc.id`::remove $ and numeral::not sure what this is. Component is not used?::Name has to match the plugin path.::It's used on line 19::This is so it won't add anything to the DOM, Field selects for type count it needs not add an element to the DOM ::Both giving LGTMs and merging while tests are commented out? -1 from me. I'm hoping there is an issue created already to fix this? If we can't get tests to run we have to either fix them or delete them.::(Oh, saw the comment in the backport. I still think this should have been fixed first though. Broken windows and all that.)::I agree with your sentiment but we (team) wanted to get this commit in this week so it would be available via snapshots for Elastic{ON} and allow more time for people to use it before 5.4 ships. Luckily this is ""soft""ware and we can work towards getting Enzyme working again. It broke when the Babel upgrade occurred; had this been merged before that upgrade it would hve been addressed by that team. The issue I have with keeping PR's  like this separate for too long is you keep having to chase master as they change things; the PR keeps getting bigger and never seems to finish. With this merged we can now focus on creating smaller more manageable PR's to fix anything that needs addressed between now and code freeze.::",f9d527ecada83f9c0c1d368773ce591c32cd14cd::c5e936f27287e3ecab56193b4e47d4b6fdc7910a::0d0f4c6aa8c37612ff6a3a3a92ba66c64ab6713c::2fb42d0e5d18cbc53691c7e2a373ac60ee7cd4eb::63a736aa21f59519af54a76e8cac1eccd2218ca8::6ede79b8e425d11b2371d9669cc95910b0ce6f1e::1cb28600fba0d22eae18109e2d566b59c18a2475::4efe0ecd92d42679955ee7dcd6697e4b552094c0::33f4d535b880132c55a2856289c7c91a8b6f3789::51ff9f8fa93b50e4656b38490a7d9169b92e75ec::2ba046372137d41d88245276c79f4b8fd79bc41b::09b6ada25de3a30152938876363ec968e6bde5b1::985ec1c02c9cd27e33f478048efa88c4698120e8::bd87e894ccbbb12a4858bb04669331066340307d::5ce7d856fb2bde6a2f20f12a6c8a1fb382aa94fc::0b72290f6a5ec9b659bd7c913d62f7f96061a2ba::a6e91ba86e8102a58ac1ba0565e0334d790fa6db::5ee12ac7e278861fcec1726ef802663b67e1af53::ee52e34456ee1a725f5bb9318eb20170ecfa7b9d::16b7469d41012f120acee236c2e5f61d40f20a02::1e64c7cc70398513e37db56475e269d51ea49041::b4ce642e6826afb6741577893e10ec3c4acfbfa8::b5ff6c6f46617d1a1a0c41633ab0955f488036ea::6641c8e6e420063bafa0d1d88a7374955a94e44a::b7822ecb5cb3edb69184ffcbee2c7f34f5e0ff3d::74dc57f4608dcf4e7c41d4b5034b9a7d12e9ac7f::95e58b0c86287ff660db43214f25b6c9b5c13a9f::5d2bf4268063bca92f2d9272f313e46cf314ce6e::f1ff1988ce7d9e08cd2a53975eba649c418c33c5::23821b52bdcd1a3cd96a762a1842686dc1b0d56e::efd39d977b4b346ccf3db24249eccfbb4c172f78::23f6bc7626be5048cd9da27ac7297ca92dc0ab75::940a0961be5ac6b0f68b678f5339e55d799a3d56::1d0f9aa446043ab3487441cd55b387a190d859fe::a2add21051f3595f744872f84651353753ff6f1b::c1af796aef87375039635fa62aeda5d51ffbf07f::bd05f9b9089bf6273dfae64137989072b12233c2::47969cd243b378ca359250213673435ca8d8d904::426b2755aa09ad5000db91af16164a105a6495ea::b1d1adb8dc96d945bef45c95cb25f201cc8491f7::a991c38dd15b39a60cff8187957d57b6a381f97d::551eba6c12c53887469d59bc664ffa5c348363a1::396053590966a2bd984bd09b8b5a461643f4aa14::ed1550c3c6eeb75c3aeb9ca9c5ff619aed947275::4111b38fb2cd66a3fbe353a837474b9197a698e7::ff5c79d4ab6c959fbcac06a4b1d632d00b6e33f5::61ac01a63c524f70b9fdf39f7be32dd8260cae28::76ff3631aa3a87b949264351ed41b437bb4c2464::95235d67f5910fdbc5e1c563038d9bed5f28e57a::525c59a1c924c39acd89148e473875dada3a8041::94cc7871ceb30cfa242923354722045592523d79::347493f4f6acaadc5f554d1d71c8bb577788f434::abf0f144773531fefe5f0ef00bf5a878c17f16c0::bc2aadc28c4ab0c3fbc6cace459ab05d466e6f8a::6d5bb616cc89536cd39e13065127ef28953a5b8a::60a3fd01938b8f4a1f257dce9a6c71a63fb849e0::5fbd364a4055df6d5064af0ab1360d4df9dc921d::9d558e3ab1f1604b7ff4ba45f21779f634f084ab::e7deeba51ee627a2d003977c89861344a46571a0::1c3a3ea606aab3d79fe4ab2005599cad82849430::cf4d4cf52ebc67115cc0121e4cfa489cc630cdd3::c859926771d745a0367f1949bdb0ab28074b4e64::50ff3e88537925afeaf8c029d2295d60307ea3ac::19cae0f941890f4cef1f318173d9562652d8e46e::2e4f8bc61b3cd86470c6bbda1fb1e038c1661d2d::9a392d30149dcdc91b5b99247e858ae5f29934af::bc1e53da6df804e785f6f3e52a8759294bfbc08a::ea15490b22f3cf14f5a0ed589aa43253f475c314::c9e3bcb737f3e547618dda779d1eb21f90ae44ed::5483ed16c4671831bfb2b80170feb62c740e334a::8eff9377d794ce9a117ff028a2579307fd862063::277b2c98db0373a94d90f2ef3bde6c6ab0d33220::ba552602eef91715972d52419578fb00c13cc859::b437f728e2ba47e4479281371c586893f0175557::d8fd02ff4a506d454ae841066c07a5e1da0f99dc::ab40b043509d97f9cc7b4f70289df27d77377e0f::c1f76b9c400fb7b5e854dc910fe094d33edb55d0::af2fdb8cb93c04d9b98ae6b97e4df0b1e50f1bab::6a8ae4cec055459aebe3776d00e377589b1693e1::ac3796c5a1ad38fcae7717918ed6cc1aec9bf596::1e39f32703fb56ed8ecea3b6b0fd2617c20ecf17::38cd134d0628d6b3cf095f23d359bcfd396cd685::9eaa4558d419c09726b6c8898054a061971c93be::e375c8fa90fcb07e714382725f45df51b6e7e740::84e8445a960d2a208b8ada88858be2a7ff8c23bc::a610601f0ff2e7b17190f815a3833e4b052f2e5b::f81191d13c1dcfda8ee7d4bf9e5a1f7312eacdb6::041c7a142240afdbfc3d3e628452b05655b15023::6eb03d4059b00357b55a9c03679101b8c41d56b3::d6ed86f534331f52e5f7951d075ba409378cb7b5::a099f3a32577baa6b038a07fca55ee414d30bef2::f03189345b75da7c69d6417896507d7da97a793a::fdd43577edde033f0b2d232315f27aeac0b57ed8::cf7a3f9d39f53e406d9cd1b37b5923c4e191af3d::984983382861cbe0f20a15f0c5db2b4c96647d26::ddf863e310650903df9ea7670249b621d189d5df::e413425cc5b0d15474852e41f01b965c68ecb32b::8321f8c9c5af4c6750e92dbe8c7297d36813c5c6::c1f3649ca2ee8d0d8fc3c914b69aeae9588a7693::bae79c118d5ec0c0a8785f070631e9b3ad216516::8e0b003ce2cc675747e03119699b2874b7e20222::cd7d9a05365ec72049b83771184d185c0d596ef2::61af8623ac7878bcf2fc153890c570c131702379::399cdaf3acbe55bfed1fd2044b5985928edec71d::9aab6853747e2a39c1441d25a0e127103306b1d7::61c5a6cdfb47b6d31891352c78ddcd52adc22dba::43a3551ae4cba743adb4cdf042865aa6f195f084::ea0d37febe6f52d20957ab80cd1d2149d2d45f53::6037c136cddbe62e3e2c8e0d7e01a484b78d050c::93bfc8902a1b020062158ad483b9caa316eec9ef::46316118fd7f041065cff9b21793b4287cd92857::415159691eb78a645a1d379337eecfd1f7541a42::a32fa6ead4c996671f735fbeb48e0008120f37de::6038305958161192e3d09d990b1b34faac442bf9::2c5e35652380a900c50100c24323b759e8f3625c::ddd90db54e30c11a08dac14c995bbae20c27fed1::c47a407b6f53cfee61f7a9397bfb25703cf74230::a2aef22cb9ef0ccd67331b23f99157b9e3e81101::140093c2a4a0875e59dd53a47fe5c2612a00d98c::6bbe6ef6346d124dd0a1b56d77509cb2c195ed5f::dcb44feb7160e775df843fcd81558523eae1aeab::e65528cd9c4cdfd74f6eb7c131173a7af3330e14::766005d1c9fc8400b2d5eed682ce621584e22a50::e497a36586775e4f137989955e070d4a316894a6::4eba511db6ec6674938e3dd0991d0838527cf9ab::92765f7cb02ccabe2ded458a05ff88c194bcc472::1629ed3c8f9df242f4a322aa4218f4d1f91bf361::ebfad5c75dd9347ec4a8d4238ff0719839769ec9::0d69732500f3de9c0ad5ebcff0da6b917d85ec84::111128bbd31a24553a49bbd5abe615c25c69ef45::7b930cf994d60dbe3768527e60fcdffc7d2d0d7c::
https://api.github.com/repos/elastic/kibana,9717,patch-5::master,0,merged,review::v5.3.0::,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",e7839674be5a640014f5ee2382a2ff9ad0f4f4ba::
https://api.github.com/repos/elastic/kibana,9714,patch-3::master,0,merged,v5.3.0::v6.0.0::,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",a050ef3f8a7ba7bce5c1ef834d046917d1f69e9d::
https://api.github.com/repos/elastic/kibana,9518,master::master,0,merged,Team:Docs::Team:Operations::review::v5.0.0::v5.0.1::v5.0.2::v5.1.1::,"Document support in the Docker image for setting X-Pack options via environment variables. See: elastic/kibana-docker#10 Please backport to 5.x, 5.0, 5.1.::",ed955302611239669dba28508215dc58043a839f::
https://api.github.com/repos/elastic/kibana,8985,patch-1::master,0,closed,Awaiting CLA::,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",016788ea29d661248a0298c5a8a99ed3ff429ea4::
https://api.github.com/repos/elastic/kibana,8581,enh/8565::master,0,closed,Feature:Visualizations::blocked::,Closes #8565 Note: this should NOT be backported before 5.0 release. ::,bab94866cd98ca8101b238918b9408a496f9798a::801b99c2c07abaece428c87077a43fe0ff2b96ef::
https://api.github.com/repos/elastic/kibana,8521,revert-8497-removecsv::master,1,closed,,"I'm having a hell of a time trying to backport this PR of thousands of changes across multiple commits with a merge commit in between.  I'm going to revert it, reissue it, and then when it goes green I'll do a squash/merge.  Backporting a single commit at HEAD should be much easier. Reverts #8497 ::",f7533700add1bf9caaf5edf2d1478e7ee342f5d9::
https://api.github.com/repos/elastic/kibana,8325,experiment/refactor-visualize-wizard::master,0,closed,release_note:enhancement::updates_needed::,"## What and why This experiment implements some proposed ""best practices"": - Migrate from absolute imports to relative imports, for clearer relationships between modules. - Reorganize files for clearer hierarchy. - Represent one concern per file. - Aggregate route definitions in one place. - Clarify entry points into code, with clear dependencies. I'd like to implement these practices throughout our codebase, to make it easier to migrate to the new Kibana architecture (whatever that ends up being). **These changes _should_ also make code easier to follow and maintain, so please assess this PR from that standpoint.** ## Next step For now, my immediate goal is to apply these practices to only the Visualize app, and use it as a test case for migrating an app to various new Kibana architectural prototypes. After this PR is merged, I'll move on to the ""saved_visualizations"" and ""editor"" sections of Visualize. ## Impact If we move forward and merge these changes, we'll need to backport them to 5.x and 5.0, to support easy backporting of future bug fixes in this code. ::This file remains unchanged, except for the addition of a new root element. ::This file remains unchanged, except for the addition of a new root element. ::",48fbdcd3f8571c10af5890e500928c2129e2cbbf::
https://api.github.com/repos/elastic/kibana,8273,backport/4.6/smallerState::4.6,0,merged,review::v4.6.4::,This is an attempt to backport the changes from #8022 to the 4.6 branch. Closes #8262 ::,bdd39eadf77f2015f2a081c439659a7699e02332::7fbd3894d07b13770a102b560f9a7830b29b2840::
https://api.github.com/repos/elastic/kibana,8199,8191backport6.0::master,0,merged,Team:Docs::,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",9090116d1e3a3b4b02737424f9711d0c5d34ff4c::
https://api.github.com/repos/elastic/kibana,8198,4.0::master,1,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",96a495c57a51c6076ee7571213e4a06bd175026b::c93bee818b0644b1a3c9fd7a0d0ab241d99e63d3::0fa6a9fbddfbce87f01c38877e9f151ef1bbd29f::5496f700ad1ddcc721d5b8772139fa9be9e1fd31::c1b288d998c865d26acdefb322b8e546326974c9::fe330b41671deba5334fb0302355569e67d89357::6862f57d931927bef1dfc76e97c72b60ff99a9a6::afe7871d11861503bdea225bd5ac83c754272470::1fa3896b43f5d75c28621a5d3ec18fd284ec5e24::fca4d9b4916310a55312daaa139ae5e8c92bab0b::91ccc5d4cd0fae8120b6d4761c2104de6108eef8::9a10248174353303cc7ae58f3e358dc708a36db0::c4573b46b88fef10fd8a527ba806abb2e8f8eb1f::43ec2748a42015b5b39e8b61e1cf53a208172147::dd128917de9cf10ef7888973044fea55346e0145::34f93b52288103838c6c57274f1d69c5d031a4e6::ecb7334157b3d1e195218f199157fea9806d76f7::acd713d766103eeb4197a88d8c9c006d0cb12c6f::6ac1a31c1d1d25e44d4e6d44107963731a94125d::d0bc227c0934184de3b6a1f55b825e26ccbcc273::6df68d6034c99f4db868e320c8292aed3e7d6077::9f903d383eb14727fa446e49fcb2469d094bf527::e0e1aa1d1dae2fdfffbc25505cafd7422fa19051::de0893d7d6ece8c577b7a4897fd79f3817ff401c::cd88929530bea7017e6be159a784854151ee2a19::d2acd67afd584c6a5d063543169f70c75c2282f2::f860634943a65f47137b5533186df4f70b80429a::1892e06c3642ef09084e21aa0bfa944d22ed7268::a3e7fec38a7dcd13c198e23663b3e9623c515b67::52f258f04a627db41c3a78594d42a5dfa549d733::4c34e25aaed68267c459ebc05c520d9d5eafbf72::2925d951ca8e07ce5a361b43bebeb292e252014f::df25598be611887ee84f7486858f294fe05cd93e::d2d563064c4dcba3962e47e32340084cd2be19e7::be86f32e95f4af80d3b3723af1426dd06eed2882::f4bda8926911a98f4577795dfff553878a7fdc86::af02e962936644f30b6651b8d9b319ab50e636d7::4d0c94f9da0992723f0938374a4319c1056d9af2::c996f18ebe36069b9736d3d056989f450fe96d39::75aa605243c682cad0b4e8ca52ad99386e2bf404::0c88afd24c71ae4f8bb2dec3a26b7035440d36e3::dc93fea72f6889e71ed9805a6f443e75d7dbed4e::1ff29ff30bcb2551d29bc533a5e525971d8260c2::df80d76a7b9ffd15a4fe2f61a15611d97565b371::b46c7b1d7021cc2c06ce246b28a376e9a21370fa::8ff3141f147ccacd9207b118921e47818c2ade73::7785100ad2b6ef6dab3b2d72a7d6220f10226aaf::c0543568f59b5548ffb3e53d2c4c8b637003a596::4d77398877e4a146fe34cdcb52e7dfb8f236c932::a5c49eaea315cabfc50a013cd8bff4365650b7e3::0c6f73fdc403676d352013320eb6d86cda4d847a::f9ca568fdab67bfdeece9b74ee66f2295c2d7728::5f2e429ce0fc8c40caefe71b1d8c34fa9a02183b::9c582b8f0f51928817a55b3bf9c1e60422e34f80::c6d2653b610fadc47e94c11abfbf5edd09f25298::ccccb696e9a4379dab5c2eec760fa3748fa2366b::5c064ea441c3614f4e7b5050a10512815bfe8b13::96dca32e8dd0156eda1ded2b3942e84f98a63436::74ccc28c05f0f82c8047a4fb247426d2c4400931::f1d8bc7a2151fc728ec0bc24a8f295ab02d476ff::1307b3485c1149cca2154ce0ffce717f00e9c7ad::9773a38f38ed5d8c35aded0d2f873d0354d5927f::1826be2ff64658f1b389588090bd0153ec4a2dbd::7ebabda32021a250cd7f8e53c0c8cded9862585f::dc315907230b2c24a1ee37be3955c4dc0658aefc::de95b2d6387be48888159c72df454a71f083ec71::f947538b51af892aec7c1d1bf1f49060e4bc5bfc::2112f465b4e3a7e2291701ad58cf896483ba4294::6caac19ec27b1d5454207461782576f26ce5826c::b0a8d23196076ed15bdaa5c0f6da36be562b30dc::901b9b26d6d1403acf0eb3059a26ea59c9f3eb22::7dc458c24d64160cabb31bd8da6a4a495e3193a9::358d6aecc59fbdceebbebaddebc434748d3b51bd::52dc025de40970b52d690fc87007d74cb96ad823::3a860e7aa082bae73c2b3d98a31657ddb12cba74::bd5f90dacd36338645ae9c62cb4b8c87aba1d770::a18799daa6962b159ba2acd49a6f6ee841593951::955ac1379058cea5c861d372d16f1b4baa7869b6::71c09e94497b84768a290e5d833c7fd41a649ae7::467e1eeb633ff2be91aa9cb50d6664c7707ac5c4::de6a13b6109ff8a6438489282a7a895e877a9ad2::e41c9a790c120b81f4230d322fc3fb957a5bee26::b59150e5f11149b7dd96109b5d67b3a3efa74c89::438f1e942c3104d6e710d6983126626e1e914c9c::8b35e50595b8ddfb88f5cd8d66ef062a161432a5::90d809dc37a575ca2351bf195a9ca05b69a39425::9635d19b8fc0794fd56b421394b4b15bc7e4ea0e::abf288b2f6b24a5153a28a83d1991359db11c53a::246b379d45d96f2043ead9700e6b96ef3f4c3a41::397611e25e753b7f8e5b32976a85624c3ce78709::56ae7d9a1338a9b1ba2b1986fc7d2afab8d34d86::2a6f0484151d8c017c0ed8f94661f5d9f38e4460::6daed90586be4e67ab87b7e6accbddc008ecbeda::59d40261cd8e2e3a850c662caaf9912d472299a3::12f425497d880428a6509c071bdcb3cfe4d8b644::a1f4c001a70c5e555983df2696539b1e26f7f68c::8432674c6236c34120cc734b92522657fc952c6f::b9df85c8f5af0ba6446a3d999e0531787b628e3d::f2101b9c059c82d0514a3daeb5fb2e6a46fd1579::d160338c1ffdb2babaab5c855aa81e71b54e15fe::b014f638ccb025beb5f682a14c81d2de2a2195f4::18683be706aee6e05c73f4a80b027568f84cd526::a286f5284f266a76f412156363f1d64faf125317::c192c3f0dbad29f1a47479707caef95f8d8206ef::795bb08254684bdc1a84f85f2c83a67bdb3dce9b::cf7b24035ba7e500bd0617e9b511972ccecda14e::6b6576194bbe25bfd31735edcadb61c0d8b01f56::d338cdc4d932d4a90c9219ac0b940c9fc47eb786::f0b81910e581806c6e600a786ebef7f4282b640f::7a215d7a5871f79b2b389a78c718cc72ebf24359::54d8cfe98670b888ef5fc482853165d39c8115d9::0c6e7ba87f0392d482bd35a3e06c10fa56c366ea::46a08b10a8e6f206dc2923bc2851ce5171987b9d::56bb646c7ff5bf82b93b14c6e9aee501b8d0eb95::b2861167bf39066c91556fc03298c38b89ad28a3::cd8ae2a6d183bfed1e2581c438c64634044ea5d0::a0b86e04581e2570184156db8e1343646107bd33::9f4c782e3d127faa0b60227e3dee21e1a5fe5171::75c3896621436f0d37dd3543ee5ce65f6d353789::1baf65900540b2e512c66a96cda5d89c12c8851e::921e7d78a9d2887ba9b22d4416ea14489f1c2aaf::4de47838a42fb48e6a98a1340a1ab809ed756433::fd5af08f9a8daacbf306cd3d1491fe021af2d845::cdbd186f9ebc577e69ece4118997a38480dfc377::34ed80dd9a2ae39286a59baab136e786b60e9d8a::2cebbd30da7d9242193b8b62edad68991b58f026::1adb1aaf7f604acd586e13d3df830ed51b7b8136::fe529adbc5b2a5838c07e5bc92003000b0a31b29::043fc9e9803db59d4d4a1da2efb1b174dbddc4b5::0f10796dbdf9a9cb12097160eeb40b8a499be4e6::609fd3a1f1c157583b7fae4f8833358b33936154::3e1c99926f7548f24a61077ccd0a7ac392626205::4d26dd7ba3ce173ea61a047d9a2b357da6432682::5448470ae43c27d28525bc76a197a1fb3cfd02ca::fbb2989d391c4b6c8d2c52f7ed56c5dba198a276::9fe2281160c87b39ba661c701fb89f878e47cfc6::7718acded149283929b8b6d1d27fd4e7daf777e8::6b84cc4e388e7b80459675762ff7511666999079::e3cc5a7ca9f2fefec023f4a8ee537a4b484c3edb::b5858c1090166178bd152d103bf425f8da1db9df::f909db223b8977c97a5cc1638cd179455da49f34::c26457cc066e289bfec72886b138efe1076a3224::6903591ea951e7ccd3096e75d6e2b134db6ed3cd::4633f48ae7db263c7c33bfb224798beb1456dd21::4c9cd274e8429b6d285551934f87726045ea4419::d37f90b8c0dddaa8639034350479050311a8d353::b4be0cc47e5c874775960d6f11b916e3f3127c4a::35aff2d69e2c714cba3ff74a2e5a4c9ecee50fae::0ae338605d8f7ae36f8e4ba7629cabcbbc8a3882::167055b5de5110ee28eedda23dedfa9ec52cbd50::7fbf00085f96125b96736762e9071441d98033f0::7d716867c395a14834bf29a69958f4b7166c288a::abcfc588988500d41316b7d509f2fb8969b35518::d1516ada4d401ae2ec425c579d1b15855ddf2889::17640bdb12d522ac9d2643bf75109c76392fbd4f::94b88fd5325db720f4de3805bf1f4fa56adbf856::8c8d68154c793c2f7c35fda8b7a3333f8715e281::ee7b3bd1c5a2341522ad16b23fc6c0e94e5d1ee5::2b10689c8cceeea2575ba33c8c1289c0b6f46df3::a106c3da73175d02cf6430f2a63514ce1e6f0584::b74d6934cb05be80e80729965784da47c10682dd::008ba30012293042754a2dab5858282d48edb657::05a5ff3903b76fa9b10869c3ac64d86c6774dfad::2801370f2cc6cefe552ac966395294b04ed9c866::0caac4e6fba86372888037ff6a9b89c873f0ad44::59e94c33a985c1fbcf27b1fc6b1b3f0cd495abbb::628ba3468cebc7a685b76abb9e021dbd5cc0dc85::da736cdfde4b7070d862915f6e43709d08103e13::e9a40f87f2197be2517c3aeb4623893bf437a4c5::b55a45f70c80ef85e3bdcef7323178535c718443::9d12ab57ff6d45947e8661c160c3697dc5c53c56::eef3ee05e90fd7e94dad4fa7f0eab5e3f57d275f::0950ce3f544dc2aa908e866a9913a85b04773c9e::8d0a1b4dbbbf168a97211c4ecf0ffa9094013cbb::7554fd5ec6837f0a582bfc60816057b8ca36ba9d::ffd8a2178a2fcc83b8b818a2c30ff9b34a523106::2f7060bee577d873e80df4f5a470fa586a337764::03ce19bf1a5655144f5f73b583f266891981e7da::98a4eb53daf6f74f19c3a5660a340b99e30f046f::16be57e245e1036f8b704199cd94f869c5726d32::defa8db39cc1243b32957d00c05e915f39e39cb6::ac5493606b56742358746fb289699bcd4c847c3a::f4fdec3febaf9514ff3a31ab7e2cae787e83d14f::9d700f55867639cab66953dae42bc19d38aa7e38::2d50117e06e87638addb5a266d3b3784c304ee69::02ddc8b6c7bac54f0b64281583ae7ee675bd40ea::f86589b8ff9c69226700338582acfaa41d5d18fd::c6faefc2ba9162e6ea54e9cf157072cd7821d7aa::9547122340bc22224c81b6ec147b55fabc94d41c::805f42a2a9237b0327e9a9605d21845d0b6394cd::00d011a52a4cbbf212fc7b96338120b9b053bfa2::9323684e0911e0a243b88fa4194098e3f9a822f8::071cd5e24a04e6813ffc41520f1051f8a669d359::fded6c6e993491d7502e8f39a551bb6b69bca9e1::7357794b575f117fdcd8164ecc262da5ccecea06::b9f2bc095f59fde02bc0f87f57d6a5ebff83abf3::19f4034eeb9d1719dd5488b5d2793b54b9fe2c51::c6875cbad4a2cd4b34c2d5f1d9da67a0f679c8f7::048a636b5d44975e85161ed56135253f80bd7f62::6acc47140cacf518fb2fbadf7043160174c3378f::02ade8c0551905b84d26adbc3f11b5e691943d43::4f424d9fb5ca5782c0998a13c170e98513d65047::8340a0838d90120313d80bb9b216039676f0360a::92129b8f8da516a213d6ba7601f2d5cbb3c90787::95f0f3f6134cbaedb0c31bfb86108c16b0d013a9::42736d1f8173a5e68756d6722d45f397162944fb::a9b6e0c9eafccd067ea3202fa086dbcb5aa30617::bb79b7f4ab81ddebd5be8a7a8fa822463ef3ffbc::6292f7a711331098e12dd78b1a6965de12b5aacd::c7db6d02c303b832448abcc42a0865f9457bcef0::5620390413c31f373941743cf319f0d81d40c114::e1634faaf0a1e2fb39545caee7389e5ba7e48c07::e44740a59ef240641b3f34eb39c5850e5c88813b::c3487fb0fd59a2807be4c707e0ecf05af636a3f7::d6da4b83e98298ef082449aaa8bf43a0efafb0ad::a3175c0454c70341010d1b291caaa889a4c7b17d::666701d44196cf90de81018a65abff5fa3a38dfc::216253c5124bca44cb4a92fc7f9589616917ec8f::15d5152d8413aa566924e391632c6fc8226b43ff::40c29047f5077264e6849329fbf62aa9d25e6d2b::cd0dc430e686a81eaaf5ca5cb78f99de301f027d::
https://api.github.com/repos/elastic/kibana,8155,testOrderAggsByTerm8141::4.6,0,merged,review::test::v4.6.1::,"Manual backport of #8154 to 4.6. Added new test to _line_chart.js that changes Order By to Term.  It passes on 4.6 branch master with the fix (4.6.1), but fails on 4.6.0 with these messages (I trimmed out some stack trace); ``` >> FAIL: chrome on any platform - visualize app - visualize app - line charts - should show correct chart order by Term (2772ms) Error: expected false to be truthy 10:53:29.029: Taking screenshot ""C:\git\4.x\test\screenshots\failure\failure_1472831609029_line charts_should show correct data, ordered by Term.png"" >> FAIL: chrome on any platform - visualize app - visualize app - line charts - should show correct data, ordered by Term (935ms) Error: Error: expected [ 'jpg 9,109', 'css 2,159', 'png 1,373', 'gif 918', 'php 445' ] to sort of equal [ 'png 1,373', 'php 445', 'jpg 9,109', 'gif 918', 'css 2,159' ] 10:53:29.399: Start of testLineChartVisualization 10:53:30.455: saveButton button clicked ``` This line would normally be the successful save notification but shows the error instead; ``` 10:53:30.708: Saved viz message = Visualize: Cannot read property 'type' of undefined ``` ``` 10:53:30.710: Taking screenshot ""C:\git\4.x\test\screenshots\failure\failure_1472831610710_line charts_should be able to save and load.png"" >> FAIL: chrome on any platform - visualize app - visualize app - line charts - should be able to save and load (1849ms) ``` ::this is more personal opinion, so whatever you do with this is totally at your discretion. IMHO, I find the logging statements not necessary. The tests are quite constrained in scope, and a failure should very quickly point to the spot where things go wrong. To me, they help at dev-time, but can be removed once checked in. ::consider removing unused var ::",ed9ef1f87e1bc6c303e10fd2d92033fbc5c5737a::acbb484daf737b242c200390e01e4ff71aa07529::
https://api.github.com/repos/elastic/kibana,8108,4.5::master,1,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",746fb019d32200ad407ff96c6d78c7b8169c62c9::3d703e48e846a755136cdeeaa27a0d6f06a06bfc::4fbdb63b4968a67dd8eeea5f6168482061ad1835::f1d2d9f75c3cc698ceeafba9b0f9f575b69962e6::7dadb0cd6ec3cd8dfaa8eb1e8f37dc6e44957d43::97662f2a607de6d8dd192ac0a5d8cbd8358fe8ff::3eb1598efd1c72c039dc34d95eade6350b2751f1::39a7330d580eedab42502681f3ad3240bb9c35ef::98b15dbefa7cc1f79181212062db5c713e1de057::e954d2eda379901ccad4a1f44ed22b78fef10b45::b6ed9a261a01deba48a34b5bf97acc5213142ae5::87be63fa89a8963dbc29573d451f681458fe9e26::a03f67ade5bb27944296a41d017d2871c0c1acd2::fad4b935274cde1d459afd41e7135c6c8021cd5d::ee81bb612eb6166dc8c8aa04a574fd32d3fba631::e5615c9cbc45c335d662bc6fb7da3c7fdaf201fd::ebf954a050eabe424b5c08a0ecf3dda7e1b35d8f::7b6bf2e68aab39fbaa249b899eeab2c22a8a65f1::61a5883d56b98adea6de3c1d9e59ff108e81c25f::a2dd4e8aba28fb5d8ad97371ca7501b6ebf428b4::ce6fb7f0a14cb49d2fab8a2a6a1d920fb82c5d12::c665daab0ae68a404845c42850a1f21d6b09db33::4c61892894255c59844b88fd249e111894b7dae9::30e7d5a3ed9548ec044c22131ef8c2a01af54246::5e812485c6654e196e8c5876b6e4353c99bab446::43d34167fd02d61287efbf60882a1a35865c1f98::736b46050ccc791f8e3030509301c4e5bda6416a::f89de6bc047e161401aeb2ac75ff6ac47523ded7::bd1e23b0fba8d57ddd6b16b552b82caa35888f41::4a0396ca8f4affcd31e576e84364dde77539e9aa::78cb6aa7a183ed0c4239fa6fb9ae58fa00003318::44700a683c906105ceb16a3b8c23445af8e50411::6b61e49fb488b366671760822a60632078a119c0::f29b7af45448a279704bd5cd73f5532c906cd255::4fb5e48502e0239e077b4699496efa9a2e046433::0ec2dcfd90c18e3b0e2df5e7841362cd9ebd8111::b27633626a92869f655319174d0e9965a07f1c73::0af5708837e0afb5ad0fc77c81b92b96b624fadd::271baaa8c7d05b36fecdff12eb9f0c6f4b64aca0::e5be6a8c909589b2eaf8a55f3ed8fa5fded1e166::febff9005563d31604119bda9f982cf61ff793b1::b9a4582bec26a5ab847752fb104c73b7e183b3b1::eeb35810142a98b78be987d434b315f74e10eade::b2068a45b633cfc2e26814edb193de99d94fb22d::ce80eb845a03027229a25a5ba6d8a4d9af60fbe0::54d7e5119d0644da1c413894127a4eb12c498360::5556f1ad323092d892a011c45548f2086dc6eddf::5ad249ab99127c64a6b7d1096b098d24f51f78bb::7ef94078284d131bbf97f1567aadd498c8a78bc4::91111be70bc89b2d1cb2af7056259941e4b95953::d951a87337809ffb60fed51dae0d70b5c96ff7c1::094c49593b19e703b49b08eda0d13cfb64157f87::d821b5ba3c4f4e62cd3d14aa6319436eb7893a49::28ee92f1249c94cdad79e95bdb1eec37106d449d::7524d81eca73d4684acf0553d05054b17af8a414::62bfef9324a8022a76275f05418a3c1a10abe63a::8fa59c3823ebe795ac48c241509238f12561a136::e769f2515b34d8a9c6102608558d80e14e39f236::c4c6fe35cdfe17eb2ef9aff74fdd30a3be8f65fd::700842d9fe4c82c1b3d6207eacd0b21500095520::7f71cae1b1e10374ea1db50fa3ab2885ee780d93::c5ced4ed13ddf013da91084e978cecd28170c4b1::de464872585e1d218ad675be0a3f57c945851b8d::0e99e7d1534bfd6fbef6b5f5165274bb2b798552::93feb511d6a12fed0e780d0b15dec180c964c51e::a752d367a949d5fc42e95c1af44affa18dc437d7::c6e522c3f8ca63263169839e8b76a816d4010893::a5ca3f1063bd4595f2de301e8395112974b584a8::54137fa7d0fd1f60daa1b0a11a61b2eea5cb2e38::758146ae883a76fb7bc120c6e4e9f5c7aa5ea261::214d3c45b9e8d57ddf18c0abb3ecac632671e642::e84af32f42bf06c7c0791bb3b6c2eda79f4e1adc::09da3d2e6102e108fb1e2650922b7dbf8d4faec5::58f5317cff35673f1615eb832bf1b008a4942582::8f1882bb41a759a71059e955857c7b0a0af251d0::ce5e8b007665dc3e62b3ced0c3f89eafa4698094::8ffc8f54b354736a5eff3cd9e4d1fe7b34b2c643::45589d96018fa369b96afd2686cd4d3cadf56671::75f5ece979036f4fc98adda090903c5a10a4f7c6::e20c0a244555776ae0b8e7e12e2bba4b3c9ea16d::97e9cafaaf768252ef968ec36d7f73dd63e5e993::1b5ee4a8f043a696970d4cf4108760bd99f0eb94::f405b9a3b191accd26a9d97be45cb53119fd71a1::8fbb2b84ac9153458842e971d42277ad8389c613::abb329adceb480736f80504db75f2bddc12a4c11::f4388f9c5027c81a8900e0d198d7b195803386d7::a20b65a6c46a6a893181ecdadcc3c9d3107ff89b::41b32cdaa1953396862ad7b566e4641f15f5e668::5f52d74edea833661dbeb5c886f77eeeb61ad20c::988dedd7df4a5787be57041e73fdb796b1ee1cdf::b968cc9e3e169838038020c8a15304deb25154ef::5776eecef57d7f7826fc3e8836525b890ef3bef1::0bfeeea9f8d6b6ab5ac859282b745cfbba3dbc15::f3830d9d7a5a57210efdf19a589203fdfae785b7::0dc2b332cb4df0f05d9c7b931d94575b44f618aa::7f4b54842b99099838f618ecb1df3c06d9f6d8de::c91a17e144e63b5ff50638cdaa8d9104c7f8306c::4f2e328577412fa6de3d2cd53e21d2b4740bf7e5::53805de33e74e27b79d625dd405f4926f32d7cb3::60a0167573439af2e87c27981a358f481ca263de::139d8ac77eddd676087d1b15b31c420658e1d1b0::59caf9daa51a3f98d340bae06a7c84393d0630be::db03aef4d36fd3d5d9102dd3c80214f8d883b83e::e5dfebf91b2cadd5aa8730fb4772c1e3de479f51::5b27588f1ad8c4cf98ca3ac2f8ca319731eeaba0::6069b364055f81e8db160895edc429aadd702121::c73692065eca189af931310348f62df3dc7462c7::cd65d09035f6744e5830d5b99589e7721f5e61f1::6cfa3af374f61120e1273751ce23348d0f6a9c19::dc1cc2cf8dff5ec09ca4c0d4d423d150784e2729::273ff94535bec103572b01ccc1d7d7f412d36969::335a276f7af8356b8bc76f529f7a6e766a43de80::420d5fbd127b19fbfe8ab953bcd3a31fa0b44ef1::d3f5bf886d00624d60f01a4d1f99d1eb42ac29e1::95f15a2db49bc6da131cc51053d4766eb8e69f37::537aac024ef9ff26de3a7ef6376c12712c41a0ed::92dea05e9f9b83ca839516f3b807c11de56cf2ed::a59204454529a9e89364a3c081022d7f2cea9ad6::4ddf76bc9772ade2a51cc32433ab5e2cfe9fb3d8::d6a580983586b413844a0fb18614c9c69f98bc9f::ca8d72cb77e31f706543b9ab4c394cd633b105ba::993a0157460cb405714a4acf95e8ae0a23e0a78d::6827cdbc98455cd62f01b74a9e7cc60f8b7f94bf::4ee7baa4bde0f3b44e02bd8b40b5f3e73a78ba9c::389db13cfdf886fc032858666e561f516b98ac8a::7ec9b6aaae348853620e677ef77cab76cdecf185::462099e0df5e9fc0ae261e41b2ada7a9741912ba::1085100333c6e16d7384dfd94ff6de8fda547791::86875af67db991f98c8a85cef825e7dee16c2b3d::4c0657ad503d22b871666a4d8ffc403e80d02d7b::2f964b7ccaa75b40959d19e81c542ae512c6cdff::4e261e23e42c43e5bf3a5e7fc64def1647b6d9ca::e3575d14758b674f400a50cdae81e54e4d3ec95d::d2cb6aec653da9ed4c87528e909462311acc2138::fe1101e03a83797d0de46beb0aa7d970d23678ea::7a5a7ac03be884bba8f265fb2ccb136ad82b2198::7fe9e9c0627b7a99db73cd47f7399a4b1339a0d2::60d8a88ae574dbeb72a8917a6871960b9ba08820::23b1d01e166a8adbe88bcbfcd58f2d71c80ef843::411a33debd8be93d8b5960500ca48cd6475b0689::c0b69217cbafb30739e8a7c0f96be75bd7332378::95049aba90787e2e7d425f1c163b7da5ebb49cbd::4afd8e6657a5535ccc13ec184621b134b94f18b8::1353fb0cd9daea8d454cc12d3d3b150e068c031a::60de9e40c2312ae1fb50a51c53963f7a7e36f883::bbbb5a62023603560e9c923b12e674c4729b3309::7c610b134fed0236647a761fc2a524aaeecebb9a::5412663fab463f4462afd74db3e241cb292f2f29::0b79b805344b058f7c84316c7c2253239aea3c6d::f054795132aa152dfcb73ecc42cbd1560f6eb105::6ef64bd69997ab3227cf0f872fcaa53c743f263d::aed583dd9d56102adaacc45d1aa8a44d1b53e138::5bc2539f471e187ddef45b449fb8fb0f0470c6c2::4bacb26309d25292ad65d996d52b358bf889506b::834ac05d19331539bb78ff27e0e807341898c917::881211aa82d42874f5d8c0b8305515b5c8c7ecfb::6369da866a39e15173fa3781b6352dafde8b350f::f00851176da290d978027abd38de57228b3f9e8a::be7a95c92eae327d62dc9301f0c57f4ead9cda26::090f242d4a13014344cb1d9f2daf3f0e4a869f38::86ec090a2cbadb7e1b7d8a3510b919ab8f42e105::fab8b0815b9341ea451e982b553363181303ff5c::4840c03203650a561625d26463a2447015815974::4dac2874030166d274acf820e98228f7b0cc3904::eee9406d6ecbfd1a442200b638fc2d2cef53ffda::03fc728a924ed161539855b4991738e218467a26::d6494717f0a84b630a041e86cdf523f4b50ec7b3::e10f8216441e2651cdf0ab3ba6a2d3126014c47f::8930ce3ca6d9a44997858f9516b9d768cce85430::f84d3affc66468d755dd97d0b78131f0062c7450::4bcb406b1079a0ae1d30bf0dc6c786b302645d92::cae1ef39fcec2216719df8b74f21cd6b7745e81b::2bb71817cbc4d88969762a5ea400d937feaec3ed::4c346d58847e1b6898b161788aecff0e9c07478f::1388c4c70aada32627ce688befb699c454055c1e::6f3f56096ad79cbf6ae87a93c22c984e73f0819f::23889d0c65fdecaba40710e1f11415102bda0391::fdb10e4b5d40e7d05ae07064d3d0fa4ae80a0413::fca21247de4a482a3ca8d71bcc61504809df6ee8::0b8335af301f771703667a644a77136e186c52f8::4c66071b0fd497fdd2a4751d10d2a9177d5c3e11::c494deab47f6edc6d7372edbe14bb564db6d439e::2aaceeb271ab597df03e666d4273be36caa74910::80d27ab1afe875c429be34de4814421fe25d6af6::9707e33553210a27ad84eee2f8c079043ffe5f6b::a3cc3f253fe4efdbe1c34e049134b8a74d9367b0::520aa00cbd7be80cdd30002b89127c162f770663::6763d7e654721b38b62f1833f5c45cb27ad92b9c::05e232bc879570869216457dcda779e1c4cc8395::6e5835a86c561061744260c75206b00ffac53134::5847228d2be8da09322b15eebf7564dfd053ba91::a8684929c21ca6b2202f33d90d5e2ca09bfc65d6::852426374e639977966b178cdb9bfe7c6b85c3f0::b0da370929614c733d3e12d82118215bb38b5fbf::41472076e33c2835d9218d4916c41c19e04c48f3::e19395b7822897a0d18566940e463b2a4fb32e78::f43bf40888bf7d8fb6ba573f5ba0dfdfcfb8feb7::e178fe14f94aa5caa9b3407425a2d0ab67976419::523892c3e9b514709820b3f3fc766b2f0824f778::385bf8ed4a479b5ca5a288d73b46b5975e07fc74::d3a5e42ec0e8de33fbf5e07f9f114c5cdc45c9b1::de9f9424a11e252fb062a3639bb281afa6da806d::cf111e480e598c0fb18e45a8528f933941803124::1ea2b8514a9a4bfbb35a03c078194bc2a68006ec::ddd06fdb59654321a19d7147fdf762172d6f0f85::3fc6b7965ab9ae32c7f4b208c7d69dda06907bf2::ddddfac0a1bfb4318220f90821a8bd69be2fd9cf::e74d8c05a49a35f040045740c1f2c68cd2946473::1b10aa11f73194eacac68218d361c28f661e3475::47734d67e5222d5fb6da253f9c8d697f309a2f28::fd5432c0f282cb33aa64a44cdba050a5fce0dbc1::a11bf2db89be16bf4e908f7e95efe932d903f078::22781e9935642db82dc8b6a05405cd008f4091d9::90cb5788bc6d03a9fab4ad146530310301dea536::f5460c0f187f05c0dfa441d01ba877f70f1df867::7690695d4e202184c1abcbd83a1dcac2b570731f::48fd8b5775cc8fd099e335ce26b1ddd2b306f343::abda88de5fb6a6ed643202a73a34328c0f0ae578::97af604bff3e4e31f694c07e47ea001d239f1636::ff33f52f565a6280f1f3c76908b7b096eb4d1b71::5e75ebb65f764212668846cb5a54dfcb85f6ace7::30a415d46cead072be538a7eb9af1dfcba54832f::065cd11fc033234f5b6fcfdf6cc8d87c052c050b::790202b1fe9d39d88a51c80ac4d7dfd730bbc5e6::38b01170577c3a5818fe5f38c14d06905b82140d::ac822f1ada0675920677a24e11cf77cf80a56955::005c20e1694746e0704991860a8b863f0378ea95::de438a09e5c25e3105f5897c795c2e69523859b0::40ba6946a5fd36f527edd262633f302fea7ac950::15e72ef69e30037576a67864ec7115dd4d261265::6d5282ff15175fafa50aa252516682b456dda4e4::052307e23a37b8bc6b37d4897600372a41933ac5::365096b05aaef59cd149d6be833dfd84ad5e9330::ff438619046b88ceb17a18b886a83ef4266b10f6::9d973db01b9e7c43592679c0ef5aa44dec730f66::f0d369f30dbf73d872790872344f2e5e0e9149c9::e268ac8ff48ad65fe016a6474f46c0677163f291::2309c306af7e89afd50a282aabe4e1cf913440d8::3acdc05527f5f8f11cb1fc4b6fa21a2ae5c657a7::87e070bd9d7196aa2946bb8fc596d80be9fa6990::dd60767ddb19c938ac6c75f5cf7f260a991940cb::fe790b60f77434e394775f44520762686f77d798::3b93705b7d0edcc5116e17c59a7036f90567b604::117eadd5798d1db026159467eda24f0489a8f464::f255f3812dacdd94d3b8b30fe3693ff4a25828eb::aaf421405b5ad4477d4b43325ad632f15eccfe76::566773b722315f6bc06b34e33379b625afc2eb3b::8c99184a53b1e69dfdbc87020a1b35319db86ca4::d921b15a103ff7989b6efe9c80f2b62ee72eb95f::73d7dc6cbf71e63cf7cc3175a10f2a80fedcdeee::
https://api.github.com/repos/elastic/kibana,8095,8093-revertabitofheadermagic::4.x,0,closed,,"There's a bug with the elasticsearch customHeader configuration logic in the hapi proxy that causes issues when elasticsearch is behind ssl but Kibana is not, which is a common situation when there's a reverse proxy in front of Kibana that is doing ssl termination. Rather than revert all of the changes in that entire commit, this simply undoes the custom header logic to the proxy itself and removes the public documentation for it since the feature isn't particularly useful in this form. The original configurable header backport PR is https://github.com/elastic/kibana/pull/8032 Fixes #8093 ::",43e17c56a6a6a544b8c096064f1c12ccf8ee3a26::
https://api.github.com/repos/elastic/kibana,7944,fix/4.x/allow-head::4.x,0,merged,review::v4.6.0::,Simple backport of https://github.com/elastic/kibana/pull/7696 to 4.x. ::,f73a848168ab443daa0046059d5406c291da0b57::3727e0ac682a167b4516544e6cb9504b48d0f029::cea41cd47bd5c8d26dea134f4111a72bea77f1fc::
https://api.github.com/repos/elastic/kibana,7838,fixRemoveIndexPattern::4.x,0,closed,test::,"This is one part of [backport] PR #7598. In this PR I've only changed the tryForTime logic in removeIndexPattern.  Without this fix we sometimes get in the loop where we click the delete but miss the alert.  Then we try to click the delete again but complain that there's an unexpected alert open. ``` 14:17:07.040: tryForTime failure: [GET http://localhost:4444/wd/hub/session/220e6f2a10e9a3ca86a35ad97cf56482/alert_text] unknown error: cannot determine loading status from unexpected alert open (Session info: chrome=51.0.2704.106) (Driver info: chromedriver=2.21.371461 (633e689b520b25f3e264a2ede6b74ccc23cb636a),platform=Linux 3.13.0-74-generic x86_64) 14:17:07.549: tryForTime failure: [POST http://localhost:4444/wd/hub/session/220e6f2a10e9a3ca86a35ad97cf56482/element / {""using"":""css selector"",""value"":""button.btn.btn-danger.ng-scope""}] unexpected alert open: {Alert text : Are you sure you want to remove this index pattern?} (Session info: chrome=51.0.2704.106) (Driver info: chromedriver=2.21.371461 (633e689b520b25f3e264a2ede6b74ccc23cb636a),platform=Linux 3.13.0-74-generic x86_64) 14:17:08.058: tryForTime failure: [POST http://localhost:4444/wd/hub/session/220e6f2a10e9a3ca86a35ad97cf56482/element / {""using"":""css selector"",""value"":""button.btn.btn-danger.ng-scope""}] unexpected alert open: {Alert text : Are you sure you want to remove this index pattern?} (Session info: chrome=51.0.2704.106) (Driver info: chromedriver=2.21.371461 (633e689b520b25f3e264a2ede6b74ccc23cb636a),platform=Linux 3.13.0-74-generic x86_64) 14:17:08.569: tryForTime failure: [POST http://localhost:4444/wd/hub/session/220e6f2a10e9a3ca86a35ad97cf56482/element / {""using"":""css selector"",""value"":""button.btn.btn-danger.ng-scope""}] unexpected alert open: {Alert text : Are you sure you want to remove this index pattern?} (Session info: chrome=51.0.2704.106) (Driver info: chromedriver=2.21.371461 (633e689b520b25f3e264a2ede6b74ccc23cb636a),platform=Linux 3.13.0-74-generic x86_64) 14:17:09.078: tryForTime failure: [POST http://localhost:4444/wd/hub/session/220e6f2a10e9a3ca86a35ad97cf56482/element / {""using"":""css selector"",""value"":""button.btn.btn-danger.ng-scope""}] unexpected alert open: {Alert text : Are you sure you want to remove this index pattern?} (Session info: chrome=51.0.2704.106) (Driver info: chromedriver=2.21.371461 (633e689b520b25f3e264a2ede6b74ccc23cb636a),platform=Linux 3.13.0-74-generic x86_64) ``` ::",23a3c8e9b9ad8f4f94fc8cfbb7628495d0a77636::
https://api.github.com/repos/elastic/kibana,7800,backport-6896-whitelist-headers::4.x,0,closed,,"Backport of #6896 I really just needed `filter_headers`, but I figured I might as well backport the rest of the changes as well. The only part missing is the docs page for the `kibana.yml` settings, but it looks like that page doesn't exist in 4.x. ::",3939ab16292284e08cfa922a12165b092afd785a::
https://api.github.com/repos/elastic/kibana,7743,backport/hacks-to-4.x::4.x,0,merged,review::v4.6.0::,"This backports the ""hacks"" functionality into `4.x` from `master`. Specifically, it backports commits from PRs #6122 and #6222. ::",c298a5bf038db9e1e2e3b42cc764798ce0702861::de925f2d84621c99bc01c03f7178e60f82513f62::
https://api.github.com/repos/elastic/kibana,7712,4.5::master,1,closed,,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",5462788eb6387f1c0c50fa622aa15cda34a92725::cf314f95770cedb81ef2b49f6895c61edcc3e7c5::ef684931aa716e4b1941bc99270f2d46b0ce02b5::f3df973ff981723bf5974c6230b60b6a8a290d8f::b5b13ffec34c00ac52bfdb645399ff425ff7bf2e::9300eda7307c500c85df5a26beb9b468f7458b67::9a0be4e543375f03f97c0605dc980f959a9d5a7a::f80ef7068d3a7ab01fd856d3fd0b9982aae7c2fa::ff8f18dc6212e9773bf56d73f57997dbe252e24d::16fe5ab49191880eb0d5178ad7f7ef946234e7cb::5ec4923b7e6b3504438dbf7f6e42211059d8f413::09de1506486935aefff30ce9ffe1a6df3f43d06b::208d374ca36517f2fafcf0070ccd1de067eb12e8::a64f2cbd471f4c0a723aff2d32c3a8aff09bc1b3::904d91ada636fcfd458ffdcca181c790501b0edb::e2c93e2aaa93840517a59b2d514c4316e5a3e167::1a9817997d3e732b037baa2d8c4c448e4f3a11d9::2c47d34ea00490058ee37ae3007d13ebff3d858e::623985bc0065cb420b8e5884b521200bff7e9255::cdb236839419c9a571d67751b7890d759dfd8a75::1b1320429cd6ed9611143e75ab61f556a7fe38a9::bc9ffa36eeba0d6671bb6264530d1d7bde58e4b2::c9f9ad56a384aa4c4f8f8378142ad6fc0e0fc28d::c25bc1f0e3b0c80a5a8c94a15b77ef281093a116::ff033eb8c6c4c55124d557a03d0048f26edb1578::1f7936c3f71c52f05d027ef7f3556dcad7fdfbdc::a9d2d832c7c9bba97754a9878c76140a814ea5b5::6654e50b2f69a4cf81326a8402cb0d0a9a93f64f::f68c78b179f1b591649f8ceba21cfeab1ce7066c::38578ad23a7a37a539de844ae6aa713d7d90866a::55c46f357046e7165b2b0044dfef6a7a4df5c1c4::42b186f02fd2f19bd7d5f1a54afaa162261fb4a8::b496b4dda3c47bf416136117291d684e76a907f6::e81585415bb466a86d1abe3cce2ed38740f1bdaa::a99fd76434a4908e1d5d63b7f4da86d94fc5b42b::5e9df5240ecf884ddcfb1c725456de28272ebd41::6d2a11cd23df078fcfb42c526db17735681d3131::a070252b5ce32ef524f5d7472e1b22b1b24e503d::9dc5d55f42bd2ef7997cdfd5501ee020725a0420::37a10160c8fea12a114e7a5bcd8f7b63b9ff5f53::45ed4a229bbf28fad328575562eb50505beac036::48662fd74aed858674e37bb978ab79245be07317::cfce1be939af60cea0b98e965094ffe39a97abaa::fa6b59c58536eb3bd6d7d165ac2af872d55e8467::746fb019d32200ad407ff96c6d78c7b8169c62c9::3d703e48e846a755136cdeeaa27a0d6f06a06bfc::4fbdb63b4968a67dd8eeea5f6168482061ad1835::f1d2d9f75c3cc698ceeafba9b0f9f575b69962e6::7dadb0cd6ec3cd8dfaa8eb1e8f37dc6e44957d43::97662f2a607de6d8dd192ac0a5d8cbd8358fe8ff::3eb1598efd1c72c039dc34d95eade6350b2751f1::39a7330d580eedab42502681f3ad3240bb9c35ef::98b15dbefa7cc1f79181212062db5c713e1de057::e954d2eda379901ccad4a1f44ed22b78fef10b45::b6ed9a261a01deba48a34b5bf97acc5213142ae5::87be63fa89a8963dbc29573d451f681458fe9e26::a03f67ade5bb27944296a41d017d2871c0c1acd2::fad4b935274cde1d459afd41e7135c6c8021cd5d::ee81bb612eb6166dc8c8aa04a574fd32d3fba631::e5615c9cbc45c335d662bc6fb7da3c7fdaf201fd::ebf954a050eabe424b5c08a0ecf3dda7e1b35d8f::7b6bf2e68aab39fbaa249b899eeab2c22a8a65f1::61a5883d56b98adea6de3c1d9e59ff108e81c25f::a2dd4e8aba28fb5d8ad97371ca7501b6ebf428b4::ce6fb7f0a14cb49d2fab8a2a6a1d920fb82c5d12::c665daab0ae68a404845c42850a1f21d6b09db33::4c61892894255c59844b88fd249e111894b7dae9::30e7d5a3ed9548ec044c22131ef8c2a01af54246::5e812485c6654e196e8c5876b6e4353c99bab446::43d34167fd02d61287efbf60882a1a35865c1f98::736b46050ccc791f8e3030509301c4e5bda6416a::f89de6bc047e161401aeb2ac75ff6ac47523ded7::bd1e23b0fba8d57ddd6b16b552b82caa35888f41::4a0396ca8f4affcd31e576e84364dde77539e9aa::78cb6aa7a183ed0c4239fa6fb9ae58fa00003318::44700a683c906105ceb16a3b8c23445af8e50411::6b61e49fb488b366671760822a60632078a119c0::f29b7af45448a279704bd5cd73f5532c906cd255::4fb5e48502e0239e077b4699496efa9a2e046433::0ec2dcfd90c18e3b0e2df5e7841362cd9ebd8111::b27633626a92869f655319174d0e9965a07f1c73::0af5708837e0afb5ad0fc77c81b92b96b624fadd::271baaa8c7d05b36fecdff12eb9f0c6f4b64aca0::e5be6a8c909589b2eaf8a55f3ed8fa5fded1e166::febff9005563d31604119bda9f982cf61ff793b1::b9a4582bec26a5ab847752fb104c73b7e183b3b1::eeb35810142a98b78be987d434b315f74e10eade::b2068a45b633cfc2e26814edb193de99d94fb22d::ce80eb845a03027229a25a5ba6d8a4d9af60fbe0::54d7e5119d0644da1c413894127a4eb12c498360::5556f1ad323092d892a011c45548f2086dc6eddf::5ad249ab99127c64a6b7d1096b098d24f51f78bb::7ef94078284d131bbf97f1567aadd498c8a78bc4::91111be70bc89b2d1cb2af7056259941e4b95953::d951a87337809ffb60fed51dae0d70b5c96ff7c1::094c49593b19e703b49b08eda0d13cfb64157f87::d821b5ba3c4f4e62cd3d14aa6319436eb7893a49::28ee92f1249c94cdad79e95bdb1eec37106d449d::7524d81eca73d4684acf0553d05054b17af8a414::62bfef9324a8022a76275f05418a3c1a10abe63a::8fa59c3823ebe795ac48c241509238f12561a136::e769f2515b34d8a9c6102608558d80e14e39f236::c4c6fe35cdfe17eb2ef9aff74fdd30a3be8f65fd::700842d9fe4c82c1b3d6207eacd0b21500095520::7f71cae1b1e10374ea1db50fa3ab2885ee780d93::c5ced4ed13ddf013da91084e978cecd28170c4b1::de464872585e1d218ad675be0a3f57c945851b8d::0e99e7d1534bfd6fbef6b5f5165274bb2b798552::93feb511d6a12fed0e780d0b15dec180c964c51e::a752d367a949d5fc42e95c1af44affa18dc437d7::c6e522c3f8ca63263169839e8b76a816d4010893::a5ca3f1063bd4595f2de301e8395112974b584a8::54137fa7d0fd1f60daa1b0a11a61b2eea5cb2e38::758146ae883a76fb7bc120c6e4e9f5c7aa5ea261::214d3c45b9e8d57ddf18c0abb3ecac632671e642::e84af32f42bf06c7c0791bb3b6c2eda79f4e1adc::09da3d2e6102e108fb1e2650922b7dbf8d4faec5::58f5317cff35673f1615eb832bf1b008a4942582::8f1882bb41a759a71059e955857c7b0a0af251d0::ce5e8b007665dc3e62b3ced0c3f89eafa4698094::8ffc8f54b354736a5eff3cd9e4d1fe7b34b2c643::45589d96018fa369b96afd2686cd4d3cadf56671::75f5ece979036f4fc98adda090903c5a10a4f7c6::e20c0a244555776ae0b8e7e12e2bba4b3c9ea16d::97e9cafaaf768252ef968ec36d7f73dd63e5e993::1b5ee4a8f043a696970d4cf4108760bd99f0eb94::f405b9a3b191accd26a9d97be45cb53119fd71a1::8fbb2b84ac9153458842e971d42277ad8389c613::abb329adceb480736f80504db75f2bddc12a4c11::f4388f9c5027c81a8900e0d198d7b195803386d7::a20b65a6c46a6a893181ecdadcc3c9d3107ff89b::41b32cdaa1953396862ad7b566e4641f15f5e668::5f52d74edea833661dbeb5c886f77eeeb61ad20c::988dedd7df4a5787be57041e73fdb796b1ee1cdf::b968cc9e3e169838038020c8a15304deb25154ef::5776eecef57d7f7826fc3e8836525b890ef3bef1::0bfeeea9f8d6b6ab5ac859282b745cfbba3dbc15::f3830d9d7a5a57210efdf19a589203fdfae785b7::0dc2b332cb4df0f05d9c7b931d94575b44f618aa::7f4b54842b99099838f618ecb1df3c06d9f6d8de::c91a17e144e63b5ff50638cdaa8d9104c7f8306c::4f2e328577412fa6de3d2cd53e21d2b4740bf7e5::53805de33e74e27b79d625dd405f4926f32d7cb3::60a0167573439af2e87c27981a358f481ca263de::139d8ac77eddd676087d1b15b31c420658e1d1b0::59caf9daa51a3f98d340bae06a7c84393d0630be::db03aef4d36fd3d5d9102dd3c80214f8d883b83e::e5dfebf91b2cadd5aa8730fb4772c1e3de479f51::5b27588f1ad8c4cf98ca3ac2f8ca319731eeaba0::6069b364055f81e8db160895edc429aadd702121::c73692065eca189af931310348f62df3dc7462c7::cd65d09035f6744e5830d5b99589e7721f5e61f1::6cfa3af374f61120e1273751ce23348d0f6a9c19::dc1cc2cf8dff5ec09ca4c0d4d423d150784e2729::273ff94535bec103572b01ccc1d7d7f412d36969::335a276f7af8356b8bc76f529f7a6e766a43de80::420d5fbd127b19fbfe8ab953bcd3a31fa0b44ef1::d3f5bf886d00624d60f01a4d1f99d1eb42ac29e1::95f15a2db49bc6da131cc51053d4766eb8e69f37::537aac024ef9ff26de3a7ef6376c12712c41a0ed::92dea05e9f9b83ca839516f3b807c11de56cf2ed::a59204454529a9e89364a3c081022d7f2cea9ad6::4ddf76bc9772ade2a51cc32433ab5e2cfe9fb3d8::d6a580983586b413844a0fb18614c9c69f98bc9f::ca8d72cb77e31f706543b9ab4c394cd633b105ba::993a0157460cb405714a4acf95e8ae0a23e0a78d::6827cdbc98455cd62f01b74a9e7cc60f8b7f94bf::4ee7baa4bde0f3b44e02bd8b40b5f3e73a78ba9c::389db13cfdf886fc032858666e561f516b98ac8a::7ec9b6aaae348853620e677ef77cab76cdecf185::462099e0df5e9fc0ae261e41b2ada7a9741912ba::1085100333c6e16d7384dfd94ff6de8fda547791::86875af67db991f98c8a85cef825e7dee16c2b3d::4c0657ad503d22b871666a4d8ffc403e80d02d7b::2f964b7ccaa75b40959d19e81c542ae512c6cdff::4e261e23e42c43e5bf3a5e7fc64def1647b6d9ca::e3575d14758b674f400a50cdae81e54e4d3ec95d::d2cb6aec653da9ed4c87528e909462311acc2138::fe1101e03a83797d0de46beb0aa7d970d23678ea::7a5a7ac03be884bba8f265fb2ccb136ad82b2198::7fe9e9c0627b7a99db73cd47f7399a4b1339a0d2::60d8a88ae574dbeb72a8917a6871960b9ba08820::23b1d01e166a8adbe88bcbfcd58f2d71c80ef843::411a33debd8be93d8b5960500ca48cd6475b0689::c0b69217cbafb30739e8a7c0f96be75bd7332378::95049aba90787e2e7d425f1c163b7da5ebb49cbd::4afd8e6657a5535ccc13ec184621b134b94f18b8::1353fb0cd9daea8d454cc12d3d3b150e068c031a::60de9e40c2312ae1fb50a51c53963f7a7e36f883::bbbb5a62023603560e9c923b12e674c4729b3309::7c610b134fed0236647a761fc2a524aaeecebb9a::5412663fab463f4462afd74db3e241cb292f2f29::0b79b805344b058f7c84316c7c2253239aea3c6d::f054795132aa152dfcb73ecc42cbd1560f6eb105::6ef64bd69997ab3227cf0f872fcaa53c743f263d::aed583dd9d56102adaacc45d1aa8a44d1b53e138::5bc2539f471e187ddef45b449fb8fb0f0470c6c2::4bacb26309d25292ad65d996d52b358bf889506b::834ac05d19331539bb78ff27e0e807341898c917::881211aa82d42874f5d8c0b8305515b5c8c7ecfb::6369da866a39e15173fa3781b6352dafde8b350f::f00851176da290d978027abd38de57228b3f9e8a::be7a95c92eae327d62dc9301f0c57f4ead9cda26::090f242d4a13014344cb1d9f2daf3f0e4a869f38::86ec090a2cbadb7e1b7d8a3510b919ab8f42e105::fab8b0815b9341ea451e982b553363181303ff5c::4840c03203650a561625d26463a2447015815974::4dac2874030166d274acf820e98228f7b0cc3904::eee9406d6ecbfd1a442200b638fc2d2cef53ffda::03fc728a924ed161539855b4991738e218467a26::d6494717f0a84b630a041e86cdf523f4b50ec7b3::e10f8216441e2651cdf0ab3ba6a2d3126014c47f::8930ce3ca6d9a44997858f9516b9d768cce85430::f84d3affc66468d755dd97d0b78131f0062c7450::4bcb406b1079a0ae1d30bf0dc6c786b302645d92::cae1ef39fcec2216719df8b74f21cd6b7745e81b::2bb71817cbc4d88969762a5ea400d937feaec3ed::4c346d58847e1b6898b161788aecff0e9c07478f::1388c4c70aada32627ce688befb699c454055c1e::6f3f56096ad79cbf6ae87a93c22c984e73f0819f::23889d0c65fdecaba40710e1f11415102bda0391::fdb10e4b5d40e7d05ae07064d3d0fa4ae80a0413::fca21247de4a482a3ca8d71bcc61504809df6ee8::0b8335af301f771703667a644a77136e186c52f8::4c66071b0fd497fdd2a4751d10d2a9177d5c3e11::c494deab47f6edc6d7372edbe14bb564db6d439e::2aaceeb271ab597df03e666d4273be36caa74910::80d27ab1afe875c429be34de4814421fe25d6af6::9707e33553210a27ad84eee2f8c079043ffe5f6b::a3cc3f253fe4efdbe1c34e049134b8a74d9367b0::520aa00cbd7be80cdd30002b89127c162f770663::6763d7e654721b38b62f1833f5c45cb27ad92b9c::05e232bc879570869216457dcda779e1c4cc8395::6e5835a86c561061744260c75206b00ffac53134::5847228d2be8da09322b15eebf7564dfd053ba91::a8684929c21ca6b2202f33d90d5e2ca09bfc65d6::852426374e639977966b178cdb9bfe7c6b85c3f0::b0da370929614c733d3e12d82118215bb38b5fbf::41472076e33c2835d9218d4916c41c19e04c48f3::e19395b7822897a0d18566940e463b2a4fb32e78::f43bf40888bf7d8fb6ba573f5ba0dfdfcfb8feb7::e178fe14f94aa5caa9b3407425a2d0ab67976419::523892c3e9b514709820b3f3fc766b2f0824f778::385bf8ed4a479b5ca5a288d73b46b5975e07fc74::d3a5e42ec0e8de33fbf5e07f9f114c5cdc45c9b1::de9f9424a11e252fb062a3639bb281afa6da806d::cf111e480e598c0fb18e45a8528f933941803124::1ea2b8514a9a4bfbb35a03c078194bc2a68006ec::ddd06fdb59654321a19d7147fdf762172d6f0f85::3fc6b7965ab9ae32c7f4b208c7d69dda06907bf2::
https://api.github.com/repos/elastic/kibana,7655,master::master,0,closed,,Also strips whitespaces throughout the docs. Needs backport to the alpha-4 docs if they don't generate straight off master. ::,78e41c3b689d4a92adce124a0182ccbebe28e2d2::325fd319a1f5e82bf0abeb3854610daff8590d3c::d5bf6cd2f91b390f817b81f5d4ebc8642c8606e0::
https://api.github.com/repos/elastic/kibana,7576,master::master,0,closed,,"Have run npm run build and npm run test on ppc64le, everything passes Only change needed is to use correct node version <!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. …ilds and all test suites pass on ppc64le ::",9a8e8f44e10e9d4d062459c19205418a3ef7fc16::
https://api.github.com/repos/elastic/kibana,7502,chromeMerge7442To4x::4.x,0,merged,review::test::v4.6.0::,Manual backport of PR 7442 switching the browser for functional tests from Firefox to Chrome. The latest update to Firefox 47 broke selenium and we wanted to switch to Chrome anyway. ::,677a6c1d3f849ade58ec9aceb304e4219d0cf59b::589cb71cbbcb8343241d1654074cdaf1bb7df5dc::056294b7e91114b8c5aa635a51d7e24151c4109e::b85d919f68401724c929f91103eb42c24017a5f0::8a9178ca0d700ac856e230825d47c5d37786b3dc::929f30c8ccb8677f3272e23ebf1929fe42f38be7::dfacedb27bea355e3f2199d5442ac75889df132b::fe9f34cb6843921fdae0525253406dc96e5ddbbd::06d70e6a637d1961d668cfc5ac0bbd4a15679414::603f5035ac8705017ec352578ed16bab7f52235f::
https://api.github.com/repos/elastic/kibana,7484,backport-package-config::4.x,0,merged,review::v4.6.0::,"This is a backport of #7308, and then a revert of the 5.x package path changes.  This should install to /opt/kibana as previous 4.x packages have. ::",888e720a6aa9ece3e88a3eebe72a1dbfbb3e868e::6c71dbd03724b06ec8f6a11c943482ed13cc68a2::
https://api.github.com/repos/elastic/kibana,7447,patch-1::4.4,0,closed,Awaiting CLA::,"<!-- Thank you for your interest in and contributing to Kibana! There are a few simple things to check before submitting your pull request that can help with the review process. You should delete these items from your submission, but they are here to help bring them to your attention. --> - Have you signed the [contributor license agreement](https://www.elastic.co/contributor-agreement)? - Have you followed the [contributor guidelines](https://github.com/elastic/kibana/blob/master/CONTRIBUTING.md)? - If submitting code, have you included unit tests that cover the changes? - If submitting code, have you tested and built your code locally prior to submission with `npm test && npm run build`? - If submitting code, is your pull request against master? Unless there is a good reason otherwise, we prefer pull requests against master and will backport as needed. ::",3d7595c173aa1201b47fc7913986d8f2ec813eaf::
https://api.github.com/repos/elastic/kibana,7205,fix/status-allow-anonymous::master,0,merged,review::v4.6.0::v5.0.0-alpha3::,"As I was backporting #7085, I realized that naming the setting ""statusPage.allowAnonymous"" was conflicting with the ""statusPage"" plugin (it wasn't a problem in master as it has been renamed ""status_page""). As I thought about it, I realized that the setting really applied to more than just the status page, but the status API as well. We discussed on IRC and decided simply to rename it ""status.allowAnonymous"" instead. This will make backporting #7085 easier anyway because it won't conflict. ::",d8d1a1a65cfeecb43ff3de817ba02e09c86719c4::
https://api.github.com/repos/elastic/kibana,6692,reject-rej-files::master,0,merged,review::v4.5.4::v4.6.0::v5.0.0::v5.0.0-alpha1::,.rej are the byproduct of failed patches via git-apply or artifacts of the backporting process through jasper. Any build that has them should be rejected early. ::,55e429cc4ff4fd3e3c711e9962e68ac92d965f23::
https://api.github.com/repos/elastic/kibana,6654,issue/6556::master,0,merged,review::v4.5.4::v4.6.0::v5.0.0::v5.0.0-alpha1::,"Closes #6556. It fixes the issue where chart titles on the dashboard change based on the resizing of other charts on the dashboard. This is the result of a global selection of all x and y axis containing DOM elements. This pull request fixes the issue by making the selection local and not global. This pull request will need to be backported. ::does this need to be wrapped in d3.select?  can we use only jquery, or d3 instead? ::",81a9f29b364c99aef39c407e580c540169948815::f628114f3e17c79a633dc547b94693e0974336da::152f2b6f380d57e1f06b5ba4ed94a15e356cdc9a::2ffbb76d7a49a8b3b35f9a6ef6a95f40f03e620f::da025aaca92783cb10fda1dc48c13ea532136aba::cf4a152a976584b61833198775ab1bc7301de762::b2f26e7924e23c471044d240404ef18637839ab5::a56c5d5f3535fa52cf4b83a4fefd51985664883e::b42f5bfa2f2bd87dc7315e2219302cffbaacdb11::7f96a111b75557f24b45df0343352362c3c5ec08::
https://api.github.com/repos/elastic/kibana,6194,4.3-bumpselenium::4.3,0,closed,v4.3.2::,"Necessary to work with latest Firefox 43. Add more debug logging around get url. Without this, our integration tests do not run, so it needs to be backported. ::",90fb0f1e87fe4ed48f5bd7e5f7e50e7c6ebb2daa::
https://api.github.com/repos/elastic/kibana,5942,issue/5860::master,0,closed,review::v4.4.2::v4.5.0::v5.0.0::v5.0.0-alpha1::,"Closes #5860. **This fix will need to be backported.** #### Issue: When opening the spy panel in the `Visualize` tab, after creating a visualization, the save button is disabled. This occurs because the initial opening of the spy panel renders the vis state as dirty. The underlying problem is that the parameter `spyPerPage` for the spy panel gets added to the `editableVis` state, but is not transferred to the actual vis state. And since there is a check [here](https://github.com/elastic/kibana/blob/master/src/plugins/kibana/public/visualize/editor/editor.js#L133) that determines whether the `editableVis` state and the actual vis state are equal, it returns `false` therefore rendering the vis state as dirty, causing the save button to be disabled. For a more detailed explanation, see #5860. #### Proposed solution: The parameter `spyPerPage` should not be placed as a `vis` parameter since it is apart of the spy panel. The `spyPerPage` parameter is moved to the `$scope.spy.params` object from the `$scope.vis.params` object. It seems that the `spyPerPage` parameter is not actually saved in the state across visualizations or within the same visualization. What I mean by that is, if I change the `spyPerPage` parameter in the UI to 25 and then close the spy panel; when I open it back up, the `spyPerPage` parameter is reset to 10. <img width=""983"" alt=""screen shot 2016-01-19 at 2 56 12 pm"" src=""https://cloud.githubusercontent.com/assets/3149785/12434654/f3af278c-bebc-11e5-930e-bbb92ceae2f4.png""> This behavior doesn't change with this pull request and allows me to move the parameter to the `$scope.spy` object without having to worry about state changes. However, I believe this should be thoroughly tested in the UI. ::",5209fa41ca85b2dcc0b910f22675c41c5653881b::7d55ebed8ed2ec35906b485d674b5b3f3a3e1476::712ce580549522e0703b437a3ed6944ffa44c04d::
https://api.github.com/repos/elastic/kibana,5835,issue-5824::master,0,merged,review::v4.3.2::v4.4.0::v5.0.0::v5.0.0-alpha1::,This fix can be backported to 4.3.1. ::,98bb27b1753e5d2bc888d8453b7efa02bdd54693::
https://api.github.com/repos/elastic/kibana,5780,backport-colors::4.x,0,merged,review::v4.4.0::v4.5.0::,This just backports a change where certain colors were added by [this commit](https://github.com/elastic/kibana/commit/6c196ea6eaf4c8e95ffe50e3f882dbc201c84f9a). ::,3015cb3c7ad270d78300a2a16e756ddfe8bcde15::c61ccd718734e84b2f80e9a27c3a5ac3b1cad69c::
https://api.github.com/repos/elastic/kibana,5755,plugin-installer-4.x-shoehorn::4.x,0,merged,review::v4.4.0::,"Major shoehorn attempt to merge the commits from #5438 #5668 #5592 and get them to play nice in 4.x ::can we lock this version? ::Since that is in master, can we address that in a follow-up PR?  This is just a backport, and it's already pretty monolithic. ::yep ::",33b8a84ad5f8cdbdaa066afc5e333763462df7ca::b293a8cb346265c0471863e66f9f373fb3240811::8e68f9a4a00faf0f247746819bf30b227e259da7::637c02131575444ca477577e657461e83cdd7bff::625fb4cf269699d6cd7b48c87e03e4c6ad6b94a4::
https://api.github.com/repos/elastic/kibana,5653,backport/5443::4.x,0,merged,review::v4.4.0::,"This was a pretty straight forward backport, but enough work that I want a set of eyes on it. Edit: Backports #5443 ::",6e11fd3de4fae3de89550eb432fde1718c9d8225::deaabba7fd918c78df8d39bafac2e4e651a799b2::2acb1b256273609b6b901c5bebd9dcf2e70c35d3::a68e2f81c7e386508dda8c442065b0c54fbe3298::59dd8fc12297686533391c8d2d4c11526c9f594a::eb4f862912c483ec625fb6749e428eb5823bc1fa::06d64d1e874c02e152ee1562dbd8fe24629c5b2c::6b4247683a2bb0cb3c8eb25e1a98d95a707cba93::d076b17ccd75e85087a674512b6e6bbd80a7e4e4::2167a02de11f45e20a98d26ee5193c9f596181fa::a5d3975a4276796b023c5f6608199ebe0e58b0b2::8a1b2df7c5c3dca248b659b79587f9b89b12c4dd::d4966b4cb99dd16787ddf26c9dd43cafdba7a3a2::927f0e335b84efd880d60fe3428300c11e79a785::8e1a63f0261189bcadaf25d4160ef2c9e2093c15::c1b31ea9ebb200860e5f7f45c26f86352f3587ce::f64062457223e41a0a17ae9fe16ae1670c1f6142::f9b39b807fe7ee95742465cd601ecf3d6fbd8f76::38c9929d18aed0c196510be6aa13ddc3116d011e::1d96daa9f808d0246a425d4bfdcce6b6fd94dbc9::4399f89f43ab7ad182dede4708b08f191f3d2b0f::c0e3628f979fcaa614536812b59c0d9bfc4f256e::
https://api.github.com/repos/elastic/kibana,5622,use-json-loader::4.2,0,merged,review::v4.2.0::,"This change went into master/4.x/4.3 with the xsrf kbn-version stuff, but it didn't make the backport into 4.2. ::",abf1c52b068134254698f65196b1930cdc2ca5a2::
https://api.github.com/repos/elastic/kibana,5621,index-has-time-field::4.2,0,merged,review::v4.2.2::,"**NOTE: ONLY FOR 4.2 BRANCH** While testing #5618, we noticed that visualizations no longer loaded, thanks to the backporting of #5560 #5560 is using the `indexPattern.hasTimeField()` method, which was added in 4.3 via #5183. This PR simply backports that single method. ::",7e42f3da5d5ebb7e6157ab7c0e998eff3c364834::
https://api.github.com/repos/elastic/kibana,5618,4.2-5524::4.2,0,merged,review::v4.2.2::,"The conflict was from a newline.  Backport of #5524, original PR is #5586. Also backports https://github.com/elastic/kibana/pull/5288 to 4.2, fixing a similar issue in another area of the application. ::",b53d48b49abb7216092d6ed85f7c78072ed08383::7acd69563c17b3e5b2cbea76b14cb763033ac3da::43f883979bde63a98090be42232ee02b8b4fc28e::f5d9127d4a7f4cbf23a39fe20f925b46721830fb::bf292fe440517c0c4f0b837d9b0631bdf20e0821::8f1f1ac49e487575385e35d63b45df1e5dc23bdd::ca6b50fc7792a99a5c09e0aa23d2eb2e77f99f87::
https://api.github.com/repos/elastic/kibana,5434,5432-format-field-stats::master,0,merged,review::v4.3.0::,"Elasticsearch 2.1 requires this property on constraints in order to parse the value into a usable constraint regardless of what format is used in the time fields of the underlying documents. For #5432 ::I guess using an ES6 feature here (computed property names) is OK since this fix won't have to be backported ::Correct, this is all 4.3+ ::I should have noticed there is a fair amount of pre-existing ES6 in this file :) ::",bf621f5df651fcced7f8755eb118fff5346e78f3::ca93dbb0867ff58eceddfb1a56105ac7f16f85ac::
https://api.github.com/repos/elastic/kibana,5391,backport/5363::4.2,0,merged,review::v4.2.1::,Seems like #5363 should have been backported... ::,1aca7d7457301de86d340179978368046a0d27d0::377a4ac3c070ef784524c428cb171c0c6226743c::
https://api.github.com/repos/elastic/kibana,5102,backport-5074::4.1,0,merged,review::v4.1.3::,This is a simple backport of #5074. ::,de48fdfcb06b9b4dd25d53575ac4eb191c7cf83d::
https://api.github.com/repos/elastic/kibana,4081,fix/d3-axis-errors::master,0,merged,review::v4.1.0::,"d3 was generating errors in the line chart tests, which were not being reported. ![screenshot 2015-06-02 11 11 43](https://cloud.githubusercontent.com/assets/404731/7949142/fbb00312-093f-11e5-8bab-9f601d9dd80e.png) I tracked it down to the `histogram/_columns` tests, and ultimately to the point series endzone code. The issue boiled down to this - The mock data had an `ordered` property, but no `min` or `max` properties in it - `ordered.endzones` was not `=== false`, so the endzone code proceeded as normal - When calling `xScale` on `ordered.min` and `ordered.max`, it would return undefined - Later, _math would happen_, resulting in `NaN` - d3 would eventually be asked to render an SVG element using `NaN` The fix I went with is related to the endzone code - If `ordered.min` or `ordered.max` are undefined, don't try to render endzones I also took the liberty of reorganizing the line chart tests, since I needed to isolate the histogram tests and it was cumbersome before. Sorry for all the line changes - [the first 3 commits in isolation do a pretty good job of showing the real changes here though](https://github.com/elastic/kibana/compare/master...012e114), the last commit just wraps all the line chart tests in a single suite. ### NOTE If this doesn't cleanly backport to 4.0, simply cherry-pick 4a339ec ::",4a339ec7ef72d3a5f76e25461fb2261d97f8dd0d::e5ae2db9ee52c165e994943e600ddc86dc9e20c1::012e1143309e8c82d9c3eea78fa30337c6903f85::7f33034f83f90b097d085ca80fe03099c1abf3a9::
