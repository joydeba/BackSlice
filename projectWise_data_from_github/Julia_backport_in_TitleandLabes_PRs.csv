https://api.github.com/repos/JuliaLang/julia,40252,tb/merge_nonconst_globals::master,1,merged,backport 1.6::gpu::regression::,"https://github.com/JuliaLang/julia/pull/36260 introduced a change in `jl_merge_modules`, now requiring const-ness of global variable declarations: https://github.com/JuliaLang/julia/blob/40267bb03d9a6fa3406d84ed3a932e1f55b3cb4d/src/jitlayers.cpp#L947-L948 Meanwhile, in GPU land we don't really have proper globals (suggestions on how to implement those are appreciated, but with NVPTX we can't use LLVM's JITs), so we use functions emitting `weak` GVs to emulate globals like such: ```julia @eval @inline exception_flag() = Base.llvmcall( $(""""""@exception_flag = weak externally_initialized global i$(WORD_SIZE) 0 define i64 @entry() #0 { %ptr = load i$(WORD_SIZE), i$(WORD_SIZE)* @exception_flag, align 8 ret i$(WORD_SIZE) %ptr } attributes #0 = { alwaysinline } """""", ""entry""), Ptr{Cvoid}, Tuple{}) ``` We can have multiple calls to these kind of functions, emitting duplicate globals, which LLVM's IRMover happily links together when we finish emitting a function: https://github.com/JuliaLang/julia/blob/40267bb03d9a6fa3406d84ed3a932e1f55b3cb4d/src/codegen.cpp#L7380-L7387 However, when the calls originate from different methods, `jl_compile_workqueue` ends up calling `jl_merge_modules` which doesn't support linking these together, triggering the assertion at the top of this issue instead. Solutions that come to mind: - relax the assertion (this PR): I assume this would be the simplest change, especially wrt. backporting for 1.6.1 - switch `jl_merge_modules` over to LLVM's IRMover, although there's probably a reason we aren't already doing that (@vtjnash?) - emit globals differently: suggestions welcome. I do realize that the assertion is specific to how Base Julia emits LLVM global variables, but it'd be nice to get existing code working again, and I'm happy to work on a better fix after that.",d0ab30b78a2c551f033e3eefc1ada6169b985297::
https://api.github.com/repos/JuliaLang/julia,40208,kc/toml_parse_fix::master,1,merged,TOML::backport 1.6::bugfix::,,eb96dd07f0482f399e95d3081ef71527d76c89d4::54c4bd08cc0d92acbf415800eb90e310553f146d::8899ab2a4025149483c4d7747661be90f3addbd6::
https://api.github.com/repos/JuliaLang/julia,40203,kc/markdown_line_rendering::master,1,merged,backport 1.6::bugfix::markdown::,"Fixes https://github.com/JuliaLang/julia/issues/37232 Fixes https://github.com/JuliaDebug/Debugger.jl/issues/287 Before, the `wrapped_lines` put things on different lines onto the same line: ```jl julia> using Markdown julia> md = @md_str """""" Misc:\\ - `o`: open the current line in an editor\\ """"""; julia> str = sprint(io->Markdown.terminline(io, md.content[end].content)) ""Misc:\n- o: open the current line in an editor\n"" julia> Markdown.wrapped_lines(stdout, str) 1-element Vector{AbstractString}: ""Misc: - o: open the current line in an editor"" ``` Now: ```jl 2-element Vector{String}: ""Misc:"" ""- o: open the current line in an editor"" ```",f6692582c26fd8d8f01df997e8f3f8a60ed2e6a7::
https://api.github.com/repos/JuliaLang/julia,40181,fe/readme::master,1,merged,backport 1.6::,,c6d5c406974268c6f402ce036da4c0d70b849fd0::
https://api.github.com/repos/JuliaLang/julia,40176,sf/arm32_trampoline_fix::master,1,merged,arm::backport 1.6::,"We copy-pasted the wrong macro here, should have used `CNAMEADDR()` not `CNAME()`.  This causes segfaults on armv7l processors by trying to read from an incorrect address when loading the trampoline target address value. Fixes https://github.com/JuliaLang/julia/issues/39293",09528a74868f454a942d2d164535d23a80eb91be::
https://api.github.com/repos/JuliaLang/julia,40174,pa/sparseti::master,0,merged,backport 1.6::bugfix::linear algebra::sparse::,Closes #40171,fc6cc650ca1ccb8067eb2cc9871f7785ac72fc8b::4dbe8421c493831038102d080a6d2b16a06b86f2::
https://api.github.com/repos/JuliaLang/julia,40163,patch-1::master,0,merged,backport 1.6::merge me::,"Should fix #40004.  Have the uninstall key to be ""{#AppNameLong}_is1"" where AppNameLong contains the Julia version to prevent Windows from overwriting the uninstall information for different Julia versions. Inno Setup documentation about the AppId https://jrsoftware.org/ishelp/topic_setup_appid.htm copied here for convenience > ### [Setup]: AppId > > #### Default value: AppName > #### Description: > > The value of AppId is stored inside uninstall log files (unins???.dat), and is checked by subsequent installations to determine whether it may append to a particular existing uninstall log. Setup will only append to an uninstall log if the AppId of the existing uninstall log is the same as the current installation's AppId. For a practical example, say you have two installations -- one entitled My Program and the other entitled My Program 1.1 Update. To get My Program 1.1 Update to append to My Program's uninstall log, you would have to set AppId to the same value in both installations. > > AppId also determines the actual name of the Uninstall registry key, to which Inno Setup tacks on ""_is1"" at the end. (Therefore, if AppId is ""MyProgram"", the key will be named ""MyProgram_is1"".) Pre-1.3 versions of Inno Setup based the key name on the value of AppVerName. > > AppId is a not used for display anywhere, so feel free to make it as cryptic as you desire. The value may include constants. > > If you use a {code:..} constant to allow your user to customize AppId, you do not need to return the real value until just before the installation starts: if necessary you may return an empty or generic value at earlier times. If not empty, this value will only be used to attempt to restore previous install settings (like the settings stored by [Setup] section directive UsePreviousAppDir). If empty, it isn't used for anything. > > The length of AppId with all constants evaluated should never exceed 127 characters. > > #### Example: > > `AppId=MyProgram` closes https://github.com/JuliaLang/julia/issues/36933```suggestion #define AppId DirName OR #define AppId AppName + ""-"" + AppVersion ``` to avoid the space in the reg key? I think that might make it easier to parse if in the future we add an auto-uninstaller. ::You'll need to delete one of the two options.::",7b60ed47532f3fa1821e6e9f2a6f3d95e9365709::5370517aee9d7cbeff0999c99848ad6cc43d809f::0861925a250d3304df2a1ed1d8fd44f70ce218d2::
https://api.github.com/repos/JuliaLang/julia,40161,cv/git-cred-helper-store-fix::master,1,merged,backport 1.0::backport 1.5::backport 1.6::bugfix::libgit2::,"If a Julia user was setup to use [git credential helpers](https://git-scm.com/book/en/v2/Git-Tools-Credential-Storage) then Julia was supposed to interact with the credential helpers such that if a user was prompted for credentials those credentials would be send to the helper and stored appropriately. Due to this bug a user would be repeated asked for credentials which is annoying. Unfortunately, only if a user had used `git` or another tool that properly interacted with the helpers would the prompts be avoided. Essentially Julia was interacting with the helpers in a read-only mode. This is a long standing issue that was introduced in: https://github.com/JuliaLang/julia/commit/8abc616fb0#diff-c023d2e7a114f660901703fc5bec91bcff1215f598f6126561a050defeced5d1R31.",744ea1ed0b0ac6277d630021fd22fc2e7b6ade46::cc7108a4656b4e8297e039a1c258890b8621bb49::
https://api.github.com/repos/JuliaLang/julia,40095,jb/fix40050::master,1,merged,backport 1.6::bugfix::,"Hopefully this works as kind of a quick fix. It would be nice to do better, maybe by computing layouts more lazily, but that would be more involved. fix #40050",42b9c6ca8d323b9902a22d25b4cd437c69c039ac::
https://api.github.com/repos/JuliaLang/julia,39891,kf/aarch64llvmpatch::master,1,merged,backport 1.6::,Fixes #39818 Fixes #39820 Fixes #39823ah nice! I have been using `git format-patch -1 --no-prefix` but this is cleaner::,3f5e5b1f18480e18941d6c4b0bfd6054d6c4d5b3::
https://api.github.com/repos/JuliaLang/julia,39548,backports-release-1.6::release-1.6,1,merged,,,1dacf6686fbea3519d4b042a1abd53c5b7153077::
https://api.github.com/repos/JuliaLang/julia,39495,backports-release-1.6::release-1.6,1,merged,,Is this the only one? I guess the other platforms need to be updated too?::,62fe04c81e68889d6de9fa8225c2d9e2c14912d6::edb5a5dcc0a61675f0d19654dcbb3585fb08face::81329da85fcc956ae2c463aa5547841bff86c6e8::
https://api.github.com/repos/JuliaLang/julia,39488,backports-release-1.6::release-1.6,1,merged,,Missed https://github.com/JuliaLang/julia/pull/39404,28a6984d53e9eb73331d1d606266b002d0c94adb::
https://api.github.com/repos/JuliaLang/julia,39372,patch-1::master,0,merged,backport 1.5::backport 1.6::doc::merge me::,"Changed ""assymmetry"" to ""asymmetry"".",1bf0f2a9a817a342edc1313e12afcd14f57ff37f::
https://api.github.com/repos/JuliaLang/julia,39356,nhd-backports-release-1.5-manual::backports-release-1.5,0,merged,,Perform some manual backports for https://github.com/JuliaLang/julia/pull/39351 - Backport #38679 into release-1.5,4f70156cb81413d841aa53a90da72a6e1ce8e52c::
https://api.github.com/repos/JuliaLang/julia,39287,ib/bump_pkg_16::backports-release-1.6,0,closed,,Adds - New precomp during Pkg.test https://github.com/JuliaLang/Pkg.jl/pull/2343 - Consistent alignment of status printing https://github.com/JuliaLang/Pkg.jl/pull/2342,d95cacb37b424467a3ad9264c5700cd7907e51bf::
https://api.github.com/repos/JuliaLang/julia,39216,cv/openblas-0.3.13::master,1,merged,backport 1.6::external dependencies::linear algebra::,Fixes https://github.com/JuliaLang/julia/issues/39201. Requires https://github.com/JuliaPackaging/Yggdrasil/pull/2385. ~~Possibly this PR also should include the `neoverse-generic-kernels.patch` used with the BinaryBuilder version.~~ (the additional patches are for GCC and don't apply here),b63dc10baa7aee22a3b84b6249548cc35bcb806c::914c56172c73b7bd5bebfa72e4a3b51edce2deb3::647dc90c1009884589b72842d664dcc3ff9eb94d::2af8d00333944d962014998623db140c374ebc4f::e06ca245ad2096b4ccf316a1fc0b07a236aa0b1c::
https://api.github.com/repos/JuliaLang/julia,39038,sf/libuv_delete::master,1,merged,backport 1.5::,"This bump to LibUV adds an important permission to files which should allow them to be deleted more reliably when created in ""system""-like locations such as `C:\`.",9d5371672ce87d94655438085e0fe698f910d2d8::
https://api.github.com/repos/JuliaLang/julia,38981,fix38491::master,0,merged,backport 1.6::merge me::windows::,"Fixes #38491.I think there's some opportunity to minimize code duplication, as follows. This also handles looking at ENV when necessary, matching my observations of how `realpath` would handle these paths. ```suggestion if !isabspath(a) cwd = pwd() a_drive, a_nodrive = splitdrive(a) if a_drive != """" && lowercase(splitdrive(cwd)[1]) != lowercase(a_drive) cwd = get(ENV, ""="" * a_drive, nothing) # check DOS directory if cwd === nothing || !endswith(cwd, '\\') || !isabspath(cwd) cwd = a_drive * path_separator end a = joinpath(cwd, a_nodrive) else a = joinpath(cwd, a) end end return normpath(a) ```::```suggestion @testset ""issue #38491"" begin withenv(""=X:"" => nothing, ""=Y:"" => nothing) do ```::```suggestion end; end ```::```suggestion drive = (pwd_drive == ""X:"") ? ""Y:"" : ""X:"" ``` optional style nit: this is a somewhat more canonical form::Why do we have to bother with DOS directories? :: It would also be good to avoid   accessing environment variables, unless necessary. ::@vtjnash  I just rereviewed your suggested changes.  I like the proposed updates, as they consolidate the code and is more readable. My only concern, do we really need to bother with the DOS checks (at a quick search I couldn't find a reference on them)? If they are not necessary, I think it would be good to remove them as it would avoid any issues checking environment variables with, e.g., race conditions etc. ``` cwd = get(ENV, ""="" * a_drive, nothing) # check DOS directory if cwd === nothing || !endswith(cwd, '\\') || !isabspath(cwd) cwd = a_drive * path_separator end ```::We could assume `cwd = nothing` there (nothing in ENV). It won't match the Win32 system behavior, but it wouldn't necessarily be wrong either, since we don't claim that this function does.::```suggestion cwd = a_drive * path_separator a = joinpath(cwd, a_nodrive) ```::",1d5c34f6aa04a25fcfc524db13a179a277b524d9::d580960f8c49a9a050942a685de5dbeec857ce86::2bca0e9411abd56395a2b9e425f7c7d37e960b0e::b37e29057e643e21760afbd0231d275c10694e86::
https://api.github.com/repos/JuliaLang/julia,38969,sv-tarball-stdlib-art-bp::backports-release-1.6,1,merged,,Title says it all :). Best!,033b878fba93d4f14ce890fc7a285b16c2563b49::
https://api.github.com/repos/JuliaLang/julia,38968,sv-mbedtls-cmake-findpy-bp::backports-release-1.6,1,merged,,Title says it all :). Best!,88ea2a17272dd9ba770da8e0e3ba644e7b174704::
https://api.github.com/repos/JuliaLang/julia,38678,kc/pkg_16_2::master,1,merged,,Fixes https://github.com/JuliaLang/julia/issues/38654,577812cb7dd64574e30557299afa853705e50379::
https://api.github.com/repos/JuliaLang/julia,38655,kc/pkg_16::master,1,merged,,https://github.com/JuliaLang/Pkg.jl/pull/2255,be6da0be8d0256945c35ae71e9f233cd68835aa3::
https://api.github.com/repos/JuliaLang/julia,38053,parent::master,0,merged,backport 1.6::doc::,[skip ci],520a03e96ef99903c5e37eedbf601ae8765c6f35::
https://api.github.com/repos/JuliaLang/julia,37896,jb/fix37872::master,1,merged,backport 1.5::bugfix::codegen::,"fix #37872The old implementation avoids this by calling `emit_box_compare` for pointer fields so I think a better fix to make sure there's no regression is to do the check in `emit_bits_compare` on `fldty` instead when the field is a pointer.::```suggestion answer = ctx.builder.CreateAnd(answer,  emit_box_compare(ctx, fld1, fld2, nullcheck1, nullcheck2)); ```::ooooooops::",57e2ac9da97747b574180c4846998cb0b1411bd7::
https://api.github.com/repos/JuliaLang/julia,37891,jb/fix37880::master,1,merged,backport 1.5::bugfix::codegen::,fix #37880,b160df6e64e3f0c587cbe475aa98809f54f889f8::
https://api.github.com/repos/JuliaLang/julia,37557,yyc/codegen/cmp::master,1,merged,backport 1.5::codegen::,"An undef field should always be treated equal to another undef field of the same type since there's no other way for the user to tell the difference between these. These could previously cause inconsistent comparison results or crashes. * Mark these types as `haspadding` so that they'll not hit the `memcmp` fast path. * Make sure `jl_egal` and `jl_object_id_` doesn't read bits fields in undef inline immutable field * Use `emit_getfield_knownidx` in `emit_bits_compare` so that the check can be done more easily Handle union fields of the same type in `emit_f_isa` to avoid regression. * Allow input to `emit_f_isa` to be NULL and lazily emit NULL check if necessary ```suggestion if (arg1.TIndex && arg2.TIndex && jl_egal(arg1.typ, arg2.typ) && ```::I assume so is the assert in the callee.::",ba2f681de4b7fa1de04032bdf2309f126ac4ab96::
https://api.github.com/repos/JuliaLang/julia,37243,jn/36462+36825::master,1,merged,backport 1.5::,,42a1d348553bd052807361cc44c2dd6a46884e87::8aaf971a35399e239c54311e37476f66b0916ba6::
https://api.github.com/repos/JuliaLang/julia,36850,alluniquefix::master,0,merged,arrays::backport 1.0::bugfix::,Fixes #36849.,4d215e4b55238c9cd5815b9bdac493a723560d14::
https://api.github.com/repos/JuliaLang/julia,36841,master::master,0,merged,backport 1.0::linear algebra::,"I have added a dimension check for the specific multiplication of diagonal matrix and vector, which was missing as reported by #36746.This method needs the same treatment -- can you add that too?::Sure, I pushed another commit::I don't think that Diagonal*Diagonal needs it. It falls back to the element wise product of vectors which has a dimensionality check.::It seems that a single-element vector behaves as a scalar when doing the element-wise product: ``` julia> randn(1) .* randn(5) 5-element Vector{Float64}: -0.09149628486880286 -0.20889567435214648 0.09612350337701256 0.08092068173428073 0.06652421890696196 ```::Ah, nice catch.::",08cc47d41d3b0318da48f58e7aeec2eac78843d9::3b7393e4bf22bc010eb1114cafc75ca9cfb6edbe::
https://api.github.com/repos/JuliaLang/julia,36835,libgit2-cacert-july-2020::master,0,merged,backport 1.0::,"@staticfloat The [curl project](https://curl.haxx.se/docs/caextract.html) has updated the Mozilla CA certificate store earlier last week (07/22/2020). This update coincides with CA certificate list changes to [Mozilla NSS 3.54](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.54_release_notes). 4 CA certificates were added: - Microsoft ECC Root Certificate Authority 2017 - Microsoft RSA Root Certificate Authority 2017 - e-Szigno Root CA 2017 - certSIGN Root CA G2 4 CA certificates were removed: - Verisign Class 3 Public Primary Certification Authority - G3 - AddTrust External Root - Staat der Nederlanden Root CA - G2 - LuxTrust Global Root 2 In addition, the curl project specifies that the CA certificate store file was changed on 06/24/2019 with 138 certificates from the previous 138 certificates in January 2020. However, using the `diff` tool generated the following output: ```diff --- cacert-2020-01-01.pem	2020-07-28 07:04:58.284267941 -0400 +++ cacert-2020-06-24.pem	2020-07-28 07:04:31.343974510 -0400 @@ -1,7 +1,7 @@ ## ## Bundle of CA Root Certificates ## -## Certificate data from Mozilla as of: Wed Jan  1 04:12:10 2020 GMT +## Certificate data from Mozilla as of: Wed Jun 24 03:12:10 2020 GMT ## ## This is a bundle of X.509 certificates of public Certificate Authorities ## (CA). These were automatically extracted from Mozilla's root certificates @@ -13,8 +13,8 @@ ## an Apache+mod_ssl webserver for SSL client authentication. ## Just configure this file as the SSLCACertificateFile. ## -## Conversion done with mk-ca-bundle.pl version 1.27. -## SHA256: f3bdcd74612952da8476a9d4147f50b29ad0710b7dd95b4c8690500209986d70 +## Conversion done with mk-ca-bundle.pl version 1.28. +## SHA256: 5796295533cad5a648a20a115b0894dc9b318c41501796e7158e824c323f11c3 ## ```",0f537cd02c81b931c9deef5c53e0bc31f26427ff::
https://api.github.com/repos/JuliaLang/julia,36755,backports-release-1.5::release-1.5,1,merged,,Includes: #36738 #36727 #36725 #36715 #36657 #36650 #36641 #36610 #36679 #36739 #36757 #36763 #36785 #36781,01881afb689168a149fd4636c0abd4a1e3845639::73da74eddbc31d195018f10009de63dbde642e00::8ac1a3aa6aff19cf09c41d0701bcd4c3c6919a7f::cfcffae3cfbb5da1cf985cd248ff1a97f2404e5e::b0c6e2b8bde09746ca781569e008fb5516b9c112::2567aaf5ad9b731d6a7b40f85363caad71ebe015::4a2830a548af3398c5b7088cd51deac92f78e35b::e326256a19412e85e1f7ed9a7bf8519f0a6a59ac::eae3216416453b53631afa6c803591cf2c5ae5b3::b16a987238310433d99ad34922e5e546afc4dc9b::81b53a787370d1d6b273f576f4b8677131268330::eccf77683b56bed051d28d75f0714513e16c76f9::9b37634dc3c1cb657fa9c32c9823877c770c9112::76659169cc5b778c1a1cba90a04117cebeb58257::d24e088da4035565bccf397022a7d4beea8865c8::bb0800bee8e2a990dd4d8b8b2570f6dfd2c8fb76::75de80b0d013be195a7e84463eeb22eb0e2190f3::76c232bd4413bd0dc7fd1d17f99defe886475d81::e0555db89eed56db0f93b55e31ac2811acac2da6::98df0d5ad3d4aa96825b22660e35551e74c40a33::445545455c3cc8e00b2990da3a06822d1e773b06::
https://api.github.com/repos/JuliaLang/julia,36543,doq::master,0,merged,backport 1.0::bugfix::dates::,"`dayofquarter()` is off by one for leap years when `month > 3`. Before: ```julia julia> dayofquarter(Date(2019,4,1)) 1 julia> dayofquarter(Date(2020,4,1)) 2 ``` After: ```julia julia> dayofquarter(Date(2019,4,1)) 1 julia> dayofquarter(Date(2020,4,1)) 1 ```",805523b440f9877bc9cb143ea95ae00df610abb5::
https://api.github.com/repos/JuliaLang/julia,36233,rem2piTestCases::master,0,merged,backport 1.0::bugfix::maths::,"Fix for #36232 We just need to pass absolute value to `rem_pio2_kernel`. The function `rem2pi(x::Float64, ::RoundingMode{:ToZero})` gives wrong answer for negative numbers. The tests cases were limited so it was missed. ``` julia> rem2pi(Float64(-8), RoundToZero) -4.566370614359173 # wrong answer julia> rem2pi(BigFloat(-8), RoundToZero) # correct answer -1.716814692820413523074713233440994231605661201249788358050110815384367187427604 ``` Answer for rem2pi(8, RoundToZero) should be `-8 - 2pi*round(-8/(2π),RoundToZero)` which evaluates to -1.7168146928204138 The answer for rem2pi(Float64(-8), RoundToZero)  & rem2pi(BigFloat(-8), RoundToZero) are different because the definition for BigFloat fn is different. https://github.com/JuliaLang/julia/blob/38f2c594c49cec46d38be6dd614a5592582a3016/base/mpfr.jl#L713 https://github.com/JuliaLang/julia/blob/38f2c594c49cec46d38be6dd614a5592582a3016/base/math.jl#L1000",3d554d5046b5e50cdbf756fae06a6d070c877db5::e3c3a74596cd6d722ddd9c92b45253c49b7dae1d::
https://api.github.com/repos/JuliaLang/julia,36046,pop_testset::master,0,merged,backport 1.0::bugfix::testsystem::,fix #32937 fix #36045,581702e2e5a0116189edf3915ffe1edb083115e5::
https://api.github.com/repos/JuliaLang/julia,35758,matrix-sqrt::master,0,merged,backport 1.0::bugfix::linear algebra::,"# Description Tries to Fix #35058 Add a check when `R[i,i]` and `R[j,j]` is 0 to not call `sylvester(0,0,-r)` # Testing ``` julia> sqrt(A*B*A') 4×4 Array{Complex{Float64},2}: 0.307265+0.0im     0.0455076+0.0im   2.29019e-16+0.0im  -2.01045e-16+0.0im 0.0455076+0.0im      0.209085+0.0im  -2.37063e-16+0.0im  -7.04933e-17+0.0im 2.29019e-16+0.0im  -2.37063e-16+0.0im   5.33599e-31+0.0im  -9.53187e-32+0.0im -2.01045e-16+0.0im  -7.04933e-17+0.0im  -9.53187e-32+0.0im   1.39738e-31+0.0im ``` Where previously it returned ``` julia> sqrt(A*B*A') 4×4 Array{Complex{Float64},2}: NaN+NaN*im  NaN+NaN*im  NaN+NaN*im  NaN+NaN*im NaN+NaN*im  NaN+NaN*im  NaN+NaN*im  NaN+NaN*im NaN+NaN*im  NaN+NaN*im  NaN+NaN*im  NaN+NaN*im NaN+NaN*im  NaN+NaN*im  NaN+NaN*im  NaN+NaN*im ```extra space before `&&`::Isn't `R[i,j]` already zero?::Better ```jl @test C^2 ≈ A*B*A' ``` which will also fail if there are NaN values in `C`.::updated in 573d006::removed in 573d006::yes you're right, fixed the ifelse in 573d006::Would be clearer to combine all of the `if` statements: ```jl if !(iszero(r) || (iszero(R[i,i]) && iszero(R[j,j]))) R[i,j] = sylvester(R[i,i],R[j,j],-r) end ```::I would declare these as locals with a `let` statement, and compactify the matrices a bit. ```jl # Issue #35058 let A = [0.9999999999999998 4.649058915617843e-16 -1.3149405273715513e-16 9.9959579317056e-17; -8.326672684688674e-16 1.0000000000000004 2.9280733590254494e-16 -2.9993900031619594e-16; 9.43689570931383e-16 -1.339206523454095e-15 1.0000000000000007 -8.550505126287743e-16; -6.245004513516506e-16 -2.0122792321330962e-16 1.183061278035052e-16 1.0000000000000002], B = [0.09648289218436859 0.023497875751503007 0.0 0.0; 0.023497875751503007 0.045787575150300804 0.0 0.0; 0.0 0.0 0.0 0.0; 0.0 0.0 0.0 0.0] @test sqrt(A*B*A')^2 ≈ A*B*A' end ```::changed to this in faa95fd::addressed in faa95fd::",e9f88f915de88027259b697032e3c89c50dd44fe::a83b58b5f64ea7fb95ce0d95891cca028fcedbc8::0e60c5b95b1db19b19eda9a4f76996365c364ae9::573d006a573229db07405d37ea70eceffeb36012::faa95fdae08d4fd84e4067869e7028ce506064b2::
https://api.github.com/repos/JuliaLang/julia,35590,rf/fix-randomdevice-bool::master,1,merged,RNG::backport 1.0::embarrassing-bugfix::,"The tests might seem overkill for this particular bug, but I was writing them for #33721, so they will still be useful. An alternative fix might be to define `read(s::IO, ::Type{Bool}) = read(s, UInt8) % Bool` instead of `read(s, UInt8) != 0`. Both definitions coincide if `Bool`s are stored in ""canonical binary representation"", and the definition of `read` seems to leave the result unspecified for non-canonical `Bool`.",2093e8715cca22e6b41f19276db69d5c9d1999e5::
https://api.github.com/repos/JuliaLang/julia,35579,aa/string-fault::master,1,merged,backport 1.0::bugfix::strings::,"Currently the case where `r == 0` falls through the same logic as every other non-negative value of `r` (aside from 1). This works for signed integers. However, this does not work for unsigned integers: in the loop where we unsafely fill in the output string, we're looping from 0 to `r - 1`, which for unsigned integers wraps around and causes us to request the address of the output string at a location that is well beyond what was allocated. To get around this, we can just fast-path `r == 0` to return the empty string. Fixes #35578.",77ced8e2092067a47ee49d2d432aa6016e645b97::
https://api.github.com/repos/JuliaLang/julia,35435,rf/backport-35274::backports-release-1.4.1,1,merged,,cc @KristofferC,429457db94cf933c3c6fa1337449e03c15a2df40::
https://api.github.com/repos/JuliaLang/julia,35383,sf/version_unicode_data::master,1,merged,backport 1.0::,We've been downloading multiple different versions of `UnicodeData.txt` across different branches and trying to keep a consistent checksum.,e2a40cae34eee9bf8a661f6cdccf10510dfe04d2::
https://api.github.com/repos/JuliaLang/julia,35356,sf/fix_unicode_checksum::master,1,merged,backport 1.0::,"Upstream has apparently modified this file as of March 30th 2020, which is annoying as it has broken all older builds of Julia attempting to download and check this file.",81f9c74b30c0d61fc3b0cd22ec3351cef2b142cb::
https://api.github.com/repos/JuliaLang/julia,35298,teh/collectto::master,1,merged,backport 1.0::,The final argument of `copyto!` is a count; subtracting 1 from the current index works only if indexing starts at 1. This also explicitly uses `LinearIndices` just as occurs in [upstream callers](https://github.com/JuliaLang/julia/blob/b637cb786a644979f6ad2752e11206d08c8ce683/base/array.jl#L686).,1da24809378ab7c849f59c09270769e24d15a7b4::7a63269c56d96736acefa3606cbe8bd397757a58::
https://api.github.com/repos/JuliaLang/julia,35244,rf/issubset-empty-range::master,1,merged,backport 1.0::bugfix::collections::,,162818412cec8fc17994c7b85f659b22d19635b4::
https://api.github.com/repos/JuliaLang/julia,34986,jn/getpeername-failed-fail::master,1,merged,I/O::backport 1.0::,"I don't really know what triggers this, I just saw it happen on https://build.julialang.org/#/builders/69/builds/8634/steps/3/logs/stdio",43988a7a2d945d186a6b9d719b1817c8b3a710d9::
https://api.github.com/repos/JuliaLang/julia,34777,jps/processor-arm-musl::master,0,merged,arm::backport 1.5::build::musl::,"Can you change this name to `USE_DYN_GETAUXVAL`, so it's clear it's our variable and not affecting the headers? Otherwise, LGTM.::I'm just moving around the preprocessor statements, not adding new variables. I'm not actually sure what that variable does :smile:::It just defines later for us whether we've got the sys/auxv header, so that we can link against `getauxval` directly, or should try to get it dynamically.::Sorry about the delay! The change has been made :slightly_smiling_face: ::",529bdd14beca889a801cd18d77960d6747985f89::985a82e9909b6e1839911578c81277f7c0c2edc1::ac2ed9b8b26fc19af0609ff76735903a031becbb::
https://api.github.com/repos/JuliaLang/julia,34770,teh/oa92::master,1,merged,backport 1.0::,"**BACKPORTING NOTE**: consensus is to backport the first commit but not the second. The `reduced_indices` and `reduced_indices0` methods *sometimes* assert that the return axes type is the same as the input. Consequently, the implementation of `reduced_index` had better return a range of the same type as the input. This corrects the error in https://github.com/JuliaArrays/OffsetArrays.jl/issues/92. I'll put a workaround in OffsetArrays.jl too. The second commit consistently asserts type-equality in `reduced_indices`. This is a bit more aggressive, and if we backport it's possible we should backport the first but not the second. The potential problem is that it makes these methods more fragile in cases where `reduced_index` is broken. IMO, this is a good thing because it increases the odds that errors will be caught early. Moreover, it ensures that the return type is inferrable in cases where the reduction is over the first dimension but constant-propagation fails to detect this. However, for the LTS release this should be tested for trouble.Should we backport this without these assertions?  That is, I think this patch is good for master (and perhaps even back porting to 1.4) but I don't think we should _add_ assertions in a back port — especially not for a backport to 1.0.::",eda4131859229c7d9de4461e154a73bb89a6b783::55dab67dcd0c1034622e63227fa54961ff783905::
https://api.github.com/repos/JuliaLang/julia,34546,an/suitesparsethreads::master,1,merged,backport 1.0::bugfix::linear algebra::multithreading::sparse::,By storing an instance of the `cholmod_common` struct per thread. We might be able to utilize a similar approach to support `Int32` indices. Fixes #34500,65ca43c5308e7ab3bea0f78040e160151032f086::
https://api.github.com/repos/JuliaLang/julia,34319,libgit2-cacert-january-2020::master,0,merged,backport 1.0::,"@staticfloat The [curl project](https://curl.haxx.se/docs/caextract.html) has updated the Mozilla CA certificate store earlier last week (01/01/2020). This update coincides with CA certificate list changes to [Mozilla NSS 3.48](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.48_release_notes). The following CA certificate was added: - Entrust Root Certification Authority - G4 Cert The curl project specifies that the CA certificate store file was changed on 11/27/2019 with 137 certificates from the previous 137 certificates in October 2019. A quick check using the `diff` tool (`diff -u cacert-2019-10-16.pem cacert-2019-11-27.pem`) generated the following output: ```diff --- cacert-2019-10-16.pem	2019-10-20 09:35:38.271642200 -0400 +++ cacert-2019-11-27.pem	2019-12-03 10:18:41.532003300 -0500 @@ -1,7 +1,7 @@ ## ## Bundle of CA Root Certificates ## -## Certificate data from Mozilla as of: Wed Oct 16 03:12:09 2019 GMT +## Certificate data from Mozilla as of: Wed Nov 27 04:12:10 2019 GMT ## ## This is a bundle of X.509 certificates of public Certificate Authorities ## (CA). These were automatically extracted from Mozilla's root certificates @@ -14,7 +14,7 @@ ## Just configure this file as the SSLCACertificateFile. ## ## Conversion done with mk-ca-bundle.pl version 1.27. -## SHA256: c979c6f35714a0fedb17d9e5ba37adecbbc91a8faf4186b4e23d6f9ca44fd6cb +## SHA256: 607309057d0ec70f8e4e97b03906bafb2fcebb24cd37b5e8293e681ae26ceae0 ## ``` The only lines that changed between CA certificate file revisions were comments.",6ee291290ca5fb82688a063aea0577b2210d5a9d::
https://api.github.com/repos/JuliaLang/julia,34257,vs/sprandn::master,1,merged,backport 1.0::doc::sparse::,Fix #31283,8a4edc42f0ecc407792f99b4fdb0faabae294c74::
https://api.github.com/repos/JuliaLang/julia,34106,teh/fix33977::master,1,merged,backport 1.0::,"Fixes #33977 I've tested that `÷2` is as fast as a shift locally, but let's see what nanosoldier says: @nanosoldier `runbenchmarks(ALL, vs="":master"")` 😱 ::Should I add a comment? :smiling_imp: It's actually pretty simple: `div` rounds down; if both are odd and have the same sign, you need to bump the result by one in the proper direction.::Statistics uses `a/2 + b/2` for this. Maybe better for avoiding overflow.::",fe7006d2cc0a95a5facc3cd4ce0013071b0c19a5::
https://api.github.com/repos/JuliaLang/julia,34012,vc/llvm8wasm::master,1,merged,,Still needed for LLVM 8.,9d35462b3ce8b3d0a7ab8e7ac5c750c9c242f11b::
https://api.github.com/repos/JuliaLang/julia,34005,jb/fix33974::master,1,merged,arrays::backport 1.0::bugfix::,fix #33974 I used `@test_skip` here since they use a lot of memory. But if it's ok to allocate several GB I can enable them.,b1cd75a20de8e1b7b16238188a633bd68c5738e8::
https://api.github.com/repos/JuliaLang/julia,33966,patch-22::master,0,merged,backport 1.0::sparse::,[skip ci],87c7fac55672be961d59ad249893a3496f1ebc09::df53ccffcbc33d81710f4ce496ddbb3c585eb568::
https://api.github.com/repos/JuliaLang/julia,33942,jn/33899::master,1,merged,I/O::backport 1.0::bugfix::embarrassing-bugfix::,"I'm not quite sure why these weren't caught in the original PR, but basically all the same as those. fixes #33899",e1086fec3e1ec7b1e168143fd89d2723633e8ce8::60ec5f3700253f942ff9178e36828fe01ca9cf20::
https://api.github.com/repos/JuliaLang/julia,33926,krc/lcmcheckedwide::master,0,merged,backport 1.0::,"Solves #33911 . Define new functions `checked_lcm` and `widelcm` analogously to `checked_mul` and `widemul`. The behaviour of `lcm` is not changed, and the user can switch to the appropriate variant at his own discretion. I think you can revert the changes to this file now.::done::",17f2b42119961b1e0ee7cf101b19e9ec6a29a87f::faf72c42428588062deef7555bb28897cd9b4f54::bc9b7952cbbbc8d0623c28fece36885234d77bf7::b79a24cdc867551cf3bacdfafbcdc59d5b033aa6::bf179ae40bfe5ddf522fd110e824c41e0b14b5c0::c7ba83a4de7d406de18739317ba4534a06af914e::ade34f64c6093fc68510c5218a14f194b8a4f840::
https://api.github.com/repos/JuliaLang/julia,33890,teh/fix33614::master,1,merged,backport 1.0::bugfix::,Fixes #33614,a21f096214ea2300d96677b3985afe03b6376854::43b3395e9861aea8e57fd96ee400153335f38f6e::
https://api.github.com/repos/JuliaLang/julia,33889,sf/busybox_cached::master,1,merged,backport 1.0::,"This should hopefully fix the issues we've been having with downloading `busybox.exe` on the windows buildbots recently; I believe those IP addresses may have been blacklisted, as we successfully connect to the `frippery.org` server, but get an `HTTP 403` on 3/4 of the windows buildbots.  By using our own caching server we are better netizens both by not hitting someone else's server a bunch, but also by keeping our CI traffic datacenter-local!",9235f4500fd4c5780f09a2197315ac7c8fa98ad2::
https://api.github.com/repos/JuliaLang/julia,33825,jn/hps/wkdfix::master,1,merged,backport 1.0::bugfix::,"This was a hold-over from the old iteration protocol, which needed to maintain state between `done` and `next`. The `iteration` function of `Dict` has since been re-written to be safe for concurrent deletions. Replaces: #33756 Co-Authored-By: @swissr",ff0876db7eeb554e3bada8a1e2a5861db00ba0b7::
https://api.github.com/repos/JuliaLang/julia,33809,fix_33808::master,0,merged,backport 1.0::,"Fixes #33808 `findfirst` assumed increasing step size for `StepRange`.maybe add a test where the range is empty, now that this is specifically addressed in the code?::",bd26f670dda4aff690e2fd6d178316cf2dd0de30::1d54c123b4d0c692f4dc56d3b487a96757ab68a6::
https://api.github.com/repos/JuliaLang/julia,33745,sf/patchelf_alignment::master,1,merged,arm::backport 1.0::build::power::,"This fixes problems with binaries on these two platforms that often use these large page sizes. This probably needs some tweaking, we'll see what CI says.  This isn't going to fix everything, we need to [pass the same flags within BinaryBuilder](https://github.com/JuliaPackaging/BinaryBuilder.jl/commit/cce4f8fdbb16425d245ab87a50f60d1a16d04948), then rebuild the world so that Julia can work on AArch64.",5ceed9216e7ad9d101579338f7841474f3bb9e41::ffb3ed0e746b82b9aa62654680646ae5c6506829::
https://api.github.com/repos/JuliaLang/julia,33713,jb/fix33675::master,1,merged,backport 1.0::bugfix::,fix #33675,62ac172f2bcfc2c43218c3839016960b36a27a94::
https://api.github.com/repos/JuliaLang/julia,33706,jn/33590::master,1,merged,backport 1.0::bugfix::codegen::,This avoids cases where getMostGenericTBAA could return broken answers. fix #33590,39aec3b113dfbaa66eabe7fc6442607d2022945d::
https://api.github.com/repos/JuliaLang/julia,33617,libgit2-cacert-october-2019::master,0,merged,backport 1.0::priority::security::,"@staticfloat The [curl project](https://curl.haxx.se/docs/caextract.html) has updated the Mozilla CA certificate store earlier last week (10/16/2019). This update coincides with CA certificate list changes to [Mozilla NSS 3.46](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.46_release_notes). 2 CA certificates were removed: - Certplus Class 2 Primary CA - Deutsche Telekom Root CA 2 Although my pull request (#33106) from August was approved, the commits within that pull request were not merged upstream. So I decided to merge the commits from the previous pull request into this pull request to prevent merge conflicts in the event both pull requests are merged upstream.",d0298c7238b776d401fa0ca6ff84f9b0ea35f4a7::1ec7022946658177507f0db5a29b3b39297f406c::58651bb99f9f94c11186f4faff16f05d2cee3c2e::
https://api.github.com/repos/JuliaLang/julia,33284,jn/jlmalloc-threads::master,1,merged,backport 1.0::bugfix::multithreading::,"Better align the API of the jl_ wrappers for malloc/realloc/free with the libc namesakes, including being safe to use on threads. fix #33223",5e038cdd7bdb78e9815f30651028d1084601e0f7::
https://api.github.com/repos/JuliaLang/julia,33283,jb/nonpow2elt::master,1,merged,arrays::backport 1.0::bugfix::,"Before: ``` julia> primitive type TypeWith24Bits 24 end julia> x = Core.Intrinsics.trunc_int(TypeWith24Bits, 0x112233); a = [x,x]; julia> Core.arrayset(true, a, x, 2) 2-element Array{TypeWith24Bits,1}: TypeWith24Bits(0x112233) TypeWith24Bits(0x111122) ``` After: works. Fixes https://github.com/JuliaComputing/JuliaDB.jl/issues/287#issuecomment-507281028`a[2] = x`, or are you intentionally trying to avoid this being compiled (could use a comment)? Can you add a test for `a = [(x, x), (x, x)]` also? Might be good to use something other than `x` here also, so that the mutation here is observable.::OK. Yes, I was trying to avoid the compiled form since I believe it does the right thing.::",6c13b63f8822ca0a97d231272d26302271478aa5::
https://api.github.com/repos/JuliaLang/julia,33228,sf/parameterized_codesigning::master,1,merged,backport 1.0::build::mac::,This has the following advantages: * It allows our buildbots to pass in which code signing identity they want to use (rather than having the identity hash hardcoded in our build system) * It stops blindly attempting to codesign on random user's machines * It causes codesign failure to stop the build,1ddcd231297396e1f7826c9f944bc152fc2a07cc::
https://api.github.com/repos/JuliaLang/julia,33150,fix-which::master,0,merged,backport 1.0::,"Currently when passed an argument that is the empty string Sys.which() returns the path of a directory. For example: ``` julia> Sys.which("""") ""/usr/local/sbin"" ``` This is not correct since the empty string is not a valid path component on any OS of which I am aware. This PR fixes this issue so that Sys.which("""") returns nothing in accord with its documentation.Let's nip things like `"" ""` in the bud as well; do `isempty(strip(program_name))`::Let's test `isnothing(Base.Sys.which("" ""))` as well::So it turns out that this already works with the current code (at least on Linux). The reason is that ```isexecutable(""/usr/bin/ "") == false``` while ```isexecutable(""/usr/bin/"") == true```. It makes sense to add the test though.::In that case, I think it makes more sense to change `isexecutable()` to `isfile() && isexecutable()`.  What do you think?::Yes, I agree that makes sense. I think we might as well keep the early exit for an empty string though.  There's no point in searching a bunch of directories for something they can't possibly contain. ::While """" isn't a valid file name, "" "" is perfectly legal (if a bit insane) as an executable name.::Yep, though I think it's OK to include a test for that because the odds of there being such a file on a test system is very low. There are currently no other tests for Sys.which and in general it's a bit complicated to write them because it would require controlling environment variables as well as the filesystem.  However testing that Sys.which("" "") == nothing is easy and almost certain to be right.::FWIW, it's not so hard to make bulletproof tests for this: ``` mktempdir() do temp_dir my_bin = joinpath(temp_dir, ""my_bin"") touch(my_bin) chmod(my_bin, 0o755) withenv(""PATH"" => temp_dir) do @test abspath(Sys.which(""my_bin"")) == abspath(my_bin) @test Sys.which("" "") == nothing @test Sys.which("""") == nothing end end ``` Something like that should work, modulo `chmod()` issues on Windows.  (E.g. don't try to do test creating non-executable files on windows.... everything is executable on windows from Julia's perspective ;) )::We already have tests for that (in test/spawn.jl), we just need tests for the new code (empty string case).::Great.  Good to merge from my perspective then.::@vtjnash I'm not clear on why the tests are there.  I thought the convention was that functions in base/foo.jl were tested in test/foo.jl. But since that's where the other which tests are I should probably move the new ones into test/spawn.jl which will also allow using the existing testing framework to ensure that the blank filename test is correct.::I'm a bit late to the party, but should we also test that when there actually is an executable named ` ` in the path we can find it?::There are existing tests for that.  I just added a test for a blank string and made sure that the tests that should return nothing are independent of what's on the filesystem.::",b47d0b0b6894eb3bea31dff8b31254a0f4123a16::76bf01f6565dbf24ee12d43874199a1872022cad::2c8ba62c0b89e817bc73afe58da9efec0ea52029::31e7d7aab3fc3f6afbf5ad77834f1b0c4b6158b3::0198ad917e7d8612cd5ae3356fb9115febfe2eac::a264f017549ae1214656415498fd92b2f4b3061f::
https://api.github.com/repos/JuliaLang/julia,33106,libgit2-cacert-august-2019::master,0,merged,backport 1.0::priority::,@staticfloat The [curl project](https://curl.haxx.se/docs/caextract.html) has updated the Mozilla CA certificate store earlier today (08/28/2019). This update coincides with CA certificate list changes to [Mozilla NSS 3.45](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS/NSS_3.45_release_notes). 1 CA certificate was removed: - Certinomis - Root CA,6797cb37963939b727797a8e5e216caa7a088374::
https://api.github.com/repos/JuliaLang/julia,33080,mb/33020::master,1,merged,backport 1.0::broadcast::,"We avoid computing axes for tuples -- which is a valuable optimization -- but when we explicitly construct a tuple broadcast with axes pre-set (for, e.g., broadcasted assignment), we need to check that those axes are compatible with the ones inside the broadcasted expression before accepting them. This should cleanly backport into all releases (I only checked against 1.0 and master, but if those two work, then I'd imagine 1.2 and 1.3 to work as well).",502e1c058a48633b45ce662870ee0ab8ab3b83c0::6a9621a2285050765707141a04c5881de54fef3d::
https://api.github.com/repos/JuliaLang/julia,32979,qr_matrix_conversion::master,0,merged,backport 1.0::linear algebra::,"In current julia master ```julia T = Float32 Matrix{T}(qr(randn(real(T), 3, 3)).Q) ``` succeeds, but an `AbstractQ` to `Matrix` conversion also changing type, e.g. ```julia T = ComplexF32 Matrix{T}(qr(randn(real(T), 3, 3)).Q) ``` fails. This PR adds an extra explicit conversion of the matrix type to avoid this problem.",fac82f37259194b656b0e185c5f664f05c6f6651::
https://api.github.com/repos/JuliaLang/julia,32895,sgj/crand::master,1,merged,RNG::backport 1.0::bugfix::,"Fixes a bug noted by @mschauer in https://github.com/JuliaLang/julia/issues/32894#issuecomment-521284511, which seems to originate in #24874 by @rfourquet, where the code used a `/ 2^32` expression that overflows on 32-bit machines.  This PR uses `* 2.0^-32` instead, which constant folds and is exact in `Float64`. Also fixes another problem in the same code on Windows — the code assumed that `RAND_MAX` is at least `2^16-1`, which seems to be true on supported Unix systems (GNU and BSD), but [on Windows](https://docs.microsoft.com/en-us/previous-versions/398ax69y(v%3Dvs.140)) it is `2^15-1` so we need a third `rand` call to get 32 bits of randomness (or ""randomness""). Use `ldexp`?::`@code_native g(UInt32(3))` reports an enormous amount of code for `g(x) = ldexp(Float64(x), -32)` for some reason… (`ldexp(x, n)` only currently supports floating-point `x`.)::I think `ldexp` is probably slower here here because it doesn't seem to constant-propagate the exponent?::",fc58c84371c6c5cb84305cce7d66370ff198e3e1::bfae1dd4783c9b217ff8b2360d7d809ab66a7143::
https://api.github.com/repos/JuliaLang/julia,32830,kf/32820::master,1,merged,backport 1.0::bugfix::optimizer::,Fixes #32820,0e740d05149bc8fecde5372029dfcdc4b5807f3a::
https://api.github.com/repos/JuliaLang/julia,32826,sk/issetequal::master,1,merged,backport 1.0::,"- add tests that set ops fail for non-sets (#32550) - issubset(l, r::AbstractSet): optimize early exit case - reorganize definitions in base/abstractsets.jl",971d18b6e1ef45d6d63887345f209b1d61a21caf::e4456d0e66b7f1db138b86fb84a29845937326e9::a1350402142bffc9e346f48711943721a5ff2b0e::
https://api.github.com/repos/JuliaLang/julia,32476,jb/fix32467::master,1,merged,backport 1.0::bugfix::parser::,fix #32467,58fb9b7b6e0a95700faeaa199cca156f7caf11e4::
https://api.github.com/repos/JuliaLang/julia,32469,kf/emscriptenlongjmp::master,1,merged,wasm::,A couple of small backports from kf/wasm3. Trying to reduce the delta between that branch and master. See individual commits.,acacde42de798829aca7633e387dffb0e15d6618::6589e63589faaa80a77906d17c08491ccb9f5541::da5a38409075beb122633b1ad1535130709a7c5f::
https://api.github.com/repos/JuliaLang/julia,32327,sgj/logfix::master,1,merged,backport 1.0::bugfix::linear algebra::,Fixes #32313,fa16d7899899a41a4c6309ffe6269afa0772f993::db1cd3513bc4aabe0c57502e53bf9160e298673f::
https://api.github.com/repos/JuliaLang/julia,32326,jb/fix32325::master,1,merged,backport 1.0::bugfix::lowering::,"Fixes #32325. It's a bit ambiguous whether the function definition is meant to be a local variable, but if you replace `struct` with `abstract type` or `primitive type` the function is taken to be a constructor, so this just makes `struct` work the same way. That is almost certainly the intended/more useful behavior.",f30356861b35d6ed797e5a8056b5bbb8b322b958::
https://api.github.com/repos/JuliaLang/julia,32321,jn/32215::master,1,merged,backport 1.0::,"fix #32215 unfortunately, while LLVM has a pass for exactly this purpose (RewriteStatepointsForGC::stripNonValidData), C++ access rules prohibit us from using it and would require us to be named ""coreclr"" to avoid an assertion error :/ See also https://reviews.llvm.org/D33756 for a more detailed explanation of the problem here.",7e79017bee110d3b78e43a5210997f5d4b2d9403::
https://api.github.com/repos/JuliaLang/julia,32263,jb/backports-1.0.5::release-1.0,1,closed,DO NOT MERGE::release::,,51495d3294f37f906d23e43d4b699311012d1b36::9834bfadaffe81bf9f91ef7ee689f954f602c1cd::77162f9bf9ffdadd2203177650d5bbfc12386a3b::1197b353a82e74f0c3b5414968839f640eed7277::50f7de12a89009af0ffceb4e8cb1b01dd4771739::d128ca108d828682f4cde6601bafcbaca9e164b0::c85b608c25d1c7085d92a0ae5ef57884e491f10c::3674d54b1e1a25fea67edb253bf0b95ccfecca39::238ccf620c976f6923abe1bd322783e3d99a18cb::7419f09d7281f574e689483ad189e4d9c5dabf68::
https://api.github.com/repos/JuliaLang/julia,32161,cjf/fix-alloc-string-len-overflow::master,1,merged,backport 1.0::bugfix::,Fixes #32160,3fceaa0b05f5fbc2f458b29aef77a854febf0cd0::
https://api.github.com/repos/JuliaLang/julia,32108,teh/fix_32080::master,1,merged,backport 1.0::bugfix::linear algebra::,Ref #32080. Thanks to @RalphAS and @stevengj.,7b921cf991add51d37957814f1b2e2519bdbee3a::
https://api.github.com/repos/JuliaLang/julia,32100,cv/quote-path::master,1,merged,backport 1.0::build::,"When compiling [`master`](https://github.com/JuliaLang/julia/commit/bf916970501145743e642ea6ed3d8dd8ed36204f) the `fixup-libgfortran.sh` fails to execute if the provided `PATH` contains a space. Issue was introduced in: https://github.com/JuliaLang/julia/pull/29522 The error which is ignored looks like: ``` /Users/omus/Development/Julia/latest/contrib/install.sh 755 /Users/omus/Development/Julia/latest/contrib/julia-config.jl /Users/omus/Development/Julia/latest/usr/share/julia/ PATH=/Users/omus/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Applications/Sublime Text.app/Contents/SharedSupport/bin:/usr/local/opt/git/share/git-core/contrib/diff-highlight:/Users/omus/Development/Julia/latest/usr/tools /Users/omus/Development/Julia/latest/contrib/fixup-libgfortran.sh --verbose /Users/omus/Development/Julia/latest/usr/lib /bin/sh: Text.app/Contents/SharedSupport/bin:/usr/local/opt/git/share/git-core/contrib/diff-highlight:/Users/omus/Development/Julia/latest/usr/tools: No such file or directory make: [/Users/omus/Development/Julia/latest/usr/lib/libgfortran*.dylib*] Error 127 (ignored) ``` When compiling the SparseArrays stdlib then compilation would fail with: ``` error during bootstrap: LoadError(""sysimg.jl"", 16, LoadError(""/Users/omus/Development/Julia/latest/usr/share/julia/stdlib/v1.3/SuiteSparse/src/SuiteSparse.jl"", 24, LoadError(""/Users/omus/Development/Julia/latest/usr/share/julia/stdlib/v1.3/SuiteSparse/src/umfpack.jl"", 66, ErrorException(""error compiling top-level scope: could not load library \""libsuitesparse_wrapper\""\ndlopen(libsuitesparse_wrapper.dylib, 1): Library not loaded: @rpath/libgfortran.5.dylib\n  Referenced from: /Users/omus/Development/Julia/latest/usr/lib/./libopenblas64_.0.3.5.dylib\n  Reason: image not found"")))) rec_backtrace at /Users/omus/Development/Julia/latest/src/stackwalk.c:94 record_backtrace at /Users/omus/Development/Julia/latest/src/task.c:217 jl_throw at /Users/omus/Development/Julia/latest/src/task.c:443 jl_rethrow_with_add at /Users/omus/Development/Julia/latest/src/codegen.cpp:793 jl_compile_linfo at /Users/omus/Development/Julia/latest/src/codegen.cpp:1207 jl_compile_method_internal at /Users/omus/Development/Julia/latest/src/gf.c:1778 _jl_invoke at /Users/omus/Development/Julia/latest/src/gf.c:2048 [inlined] jl_invoke at /Users/omus/Development/Julia/latest/src/gf.c:2056 jl_toplevel_eval_flex at /Users/omus/Development/Julia/latest/src/toplevel.c:808 jl_eval_module_expr at /Users/omus/Development/Julia/latest/src/toplevel.c:181 jl_toplevel_eval_flex at /Users/omus/Development/Julia/latest/src/toplevel.c:640 jl_parse_eval_all at /Users/omus/Development/Julia/latest/src/ast.c:873 jl_load at /Users/omus/Development/Julia/latest/src/toplevel.c:878 [inlined] jl_load_ at /Users/omus/Development/Julia/latest/src/toplevel.c:885 include at ./boot.jl:328 [inlined] include_relative at ./loading.jl:1094 include at ./Base.jl:31 [inlined] include at /Users/omus/Development/Julia/latest/usr/share/julia/stdlib/v1.3/SuiteSparse/src/SuiteSparse.jl:3 jl_apply at /Users/omus/Development/Julia/latest/src/./julia.h:1624 [inlined] do_call at /Users/omus/Development/Julia/latest/src/interpreter.c:328 eval_stmt_value at /Users/omus/Development/Julia/latest/src/interpreter.c:368 [inlined] eval_body at /Users/omus/Development/Julia/latest/src/interpreter.c:764 jl_interpret_toplevel_thunk_callback at /Users/omus/Development/Julia/latest/src/interpreter.c:892 Interpreter frame (ip: 2) Core.CodeInfo(code=Array{Any, (7,)}[ Expr(:call, Base.getproperty, :Base, :(:USE_GPL_LIBS)), Expr(:gotoifnot, SSAValue(1), 7), Expr(:call, :include, ""umfpack.jl""), Expr(:call, :include, ""cholmod.jl""), Expr(:call, :include, ""spqr.jl""), Expr(:call, :include, ""deprecated.jl""), Expr(:return, nothing)], codelocs=Array{Int32, (7,)}[1, 1, 2, 3, 4, 5, 5], ssavaluetypes=7, ssaflags=Array{UInt8, (0,)}[], method_for_inference_limit_heuristics=nothing, linetable=Array{Any, (5,)}[ Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""/Users/omus/Development/Julia/latest/usr/share/julia/stdlib/v1.3/SuiteSparse/src/SuiteSparse.jl""), line=24, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""/Users/omus/Development/Julia/latest/usr/share/julia/stdlib/v1.3/SuiteSparse/src/SuiteSparse.jl""), line=25, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""/Users/omus/Development/Julia/latest/usr/share/julia/stdlib/v1.3/SuiteSparse/src/SuiteSparse.jl""), line=26, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""/Users/omus/Development/Julia/latest/usr/share/julia/stdlib/v1.3/SuiteSparse/src/SuiteSparse.jl""), line=27, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""/Users/omus/Development/Julia/latest/usr/share/julia/stdlib/v1.3/SuiteSparse/src/SuiteSparse.jl""), line=28, inlined_at=0)], slotnames=Array{Symbol, (0,)}[], slotflags=Array{UInt8, (0,)}[], slottypes=nothing, rettype=Any, parent=nothing, min_world=1, max_world=-1, inferred=false, inlineable=false, propagate_inbounds=false, pure=false)jl_interpret_toplevel_thunk at /Users/omus/Development/Julia/latest/src/interpreter.c:901 jl_toplevel_eval_flex at /Users/omus/Development/Julia/latest/src/toplevel.c:814 jl_eval_module_expr at /Users/omus/Development/Julia/latest/src/toplevel.c:181 jl_toplevel_eval_flex at /Users/omus/Development/Julia/latest/src/toplevel.c:640 jl_parse_eval_all at /Users/omus/Development/Julia/latest/src/ast.c:873 jl_load at /Users/omus/Development/Julia/latest/src/toplevel.c:878 [inlined] jl_load_ at /Users/omus/Development/Julia/latest/src/toplevel.c:885 include at ./boot.jl:328 [inlined] include_relative at ./loading.jl:1094 _require at ./loading.jl:1042 require at ./loading.jl:911 require at ./loading.jl:906 jl_apply at /Users/omus/Development/Julia/latest/src/./julia.h:1624 [inlined] do_call at /Users/omus/Development/Julia/latest/src/interpreter.c:328 eval_body at /Users/omus/Development/Julia/latest/src/interpreter.c:641 jl_interpret_toplevel_thunk_callback at /Users/omus/Development/Julia/latest/src/interpreter.c:892 Interpreter frame (ip: 40) Core.CodeInfo(code=Array{Any, (88,)}[ Expr(:call, Base.getproperty, :Base, :(:is_primary_base_module)), Expr(:gotoifnot, SSAValue(1), 88), <newvar #<3>>, <newvar #<8>>, Core.SlotNumber(id=4) = Expr(:call, Base.vect, :(:Base64), :(:CRC32c), :(:SHA), :(:FileWatching), :(:Unicode), :(:Mmap), :(:Serialization), :(:Libdl), :(:Markdown), :(:LibGit2), :(:Logging), :(:Sockets), :(:Printf), :(:Profile), :(:Dates), :(:DelimitedFiles), :(:Random), :(:UUIDs), :(:Future), :(:LinearAlgebra), :(:SparseArrays), :(:SuiteSparse), :(:Distributed), :(:SharedArrays), :(:Pkg), :(:Test), :(:REPL), :(:Statistics)), Expr(:call, Base.broadcasted, :string, Core.SlotNumber(id=4)), Expr(:call, Base.broadcasted, :textwidth, SSAValue(6)), Expr(:call, Base.materialize, SSAValue(7)), Core.SlotNumber(id=5) = Expr(:call, :maximum, SSAValue(8)), Expr(:thunk, Core.CodeInfo(code=Array{Any, (5,)}[ Expr(:global, Symbol(""##1#2"")), Expr(:const, Symbol(""##1#2"")), Expr(:call, Core.TypeVar, :(:maxlen), Core.Any), Expr(:struct_type, Symbol(""##1#2""), Expr(:call, Core.svec, SSAValue(3)), Expr(:call, Core.svec, :(:maxlen)), Core.Function, Expr(:call, Core.svec, SSAValue(3)), false, 1), Expr(:return, nothing)], codelocs=Array{Int32, (5,)}[1, 1, 1, 1, 1], ssavaluetypes=5, ssaflags=Array{UInt8, (0,)}[], method_for_inference_limit_heuristics=nothing, linetable=Array{Any, (1,)}[Core.LineInfoNode(method=Symbol(""top-level scope""), file=:none, line=0, inlined_at=0)], slotnames=Array{Symbol, (0,)}[], slotflags=Array{UInt8, (0,)}[], slottypes=nothing, rettype=Any, parent=nothing, min_world=1, max_world=-1, inferred=false, inlineable=false, propagate_inbounds=false, pure=false)), Expr(:call, Core.svec, Symbol(""##1#2""), Core.Any, Core.Any), Expr(:call, Core.svec), Expr(:call, Core.svec, SSAValue(11), SSAValue(12)), Expr(:method, false, SSAValue(13), Core.CodeInfo(code=Array{Any, (14,)}[ Expr(:call, Main.string, Core.SlotNumber(id=2)), Expr(:call, Main.:(*), SSAValue(1), ""  ""), Expr(:call, Core.getfield, Core.SlotNumber(id=1), :(:maxlen)), Expr(:call, Main.:(+), SSAValue(3), 3), Expr(:call, Main.rpad, SSAValue(2), SSAValue(4), ""─""), Expr(:call, Main.print, SSAValue(5)), Expr(:call, Base.getproperty, Main.Base, :(:time_print)), Expr(:call, Core.apply_type, Base.Val, 9), Expr(:call, SSAValue(8)), Expr(:call, Base.literal_pow, Main.:(^), 10, SSAValue(9)), Expr(:call, Main.:(*), Core.SlotNumber(id=3), SSAValue(10)), Expr(:call, SSAValue(7), SSAValue(11)), Expr(:call, Main.println), Expr(:return, SSAValue(13))], codelocs=Array{Int32, (14,)}[1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3], ssavaluetypes=14, ssaflags=Array{UInt8, (0,)}[], method_for_inference_limit_heuristics=nothing, linetable=Array{Any, (3,)}[ Core.LineInfoNode(method=Symbol(""#1""), file=Symbol(""sysimg.jl""), line=54, inlined_at=0), Core.LineInfoNode(method=Symbol(""#1""), file=Symbol(""sysimg.jl""), line=54, inlined_at=0), Core.LineInfoNode(method=Symbol(""#1""), file=Symbol(""sysimg.jl""), line=54, inlined_at=0)], slotnames=Array{Symbol, (3,)}[ Symbol(""#self#""), :mod, :t], slotflags=Array{UInt8, (3,)}[0x00, 0x08, 0x08], slottypes=nothing, rettype=Any, parent=nothing, min_world=1, max_world=-1, inferred=false, inlineable=false, propagate_inbounds=false, pure=false)), Symbol(""##1#2""), Expr(:call, Core.typeof, Core.SlotNumber(id=5)), Expr(:call, Core.apply_type, SSAValue(15), SSAValue(16)), Core.SlotNumber(id=1) = Expr(:new, SSAValue(17), Core.SlotNumber(id=5)), Core.SlotNumber(id=6) = Core.SlotNumber(id=1), Expr(:call, Base.getproperty, :Base, :(:end_base_include)), Expr(:call, Base.gejl_interpret_toplevel_thunk at /Users/omus/Development/Julia/latest/src/interpreter.c:901 jl_toplevel_eval_flex at /Users/omus/Development/Julia/latest/src/toplevel.c:814 jl_parse_eval_all at /Users/omus/Development/Julia/latest/src/ast.c:873 jl_load at /Users/omus/Development/Julia/latest/src/toplevel.c:878 exec_program at /Users/omus/Development/Julia/latest/usr/bin/julia (unknown line) true_main at /Users/omus/Development/Julia/latest/usr/bin/julia (unknown line) main at /Users/omus/Development/Julia/latest/usr/bin/julia (unknown line) tproperty, :Base, :(:start_base_include)), Expr(:call, :-, SSAValue(20), SSAValue(21)), Expr(:call, Core.apply_type, Base.Val, -9), Expr(:call, SSAValue(23)), Expr(:call, Base.literal_pow, :^, 10, SSAValue(24)), Expr(:call, :*, SSAValue(22), SSAValue(25)), Expr(:call, Core.SlotNumber(id=6), :Base, SSAValue(26)), Expr(:call, Base.getproperty, :Base, :(:_track_dependencies)), Expr(:call, Base.setindex!, SSAValue(28), true), Core.SlotNumber(id=2) = Expr(:call, Base.time_ns), Core.SlotNumber(id=4), Core.SlotNumber(id=7) = Expr(:call, Base.iterate, SSAValue(31)), Expr(:call, Core.:(===), Core.SlotNumber(id=7), nothing), Expr(:call, Base.not_int, SSAValue(33)), Expr(:gotoifnot, SSAValue(34), 51), Core.SlotNumber(id=7), Core.SlotNumber(id=9) = Expr(:call, Core.getfield, SSAValue(36), 1), Expr(:call, Core.getfield, SSAValue(36), 2), Core.SlotNumber(id=10) = Expr(:call, Base.time_ns), Expr(:call, Base.getproperty, :Base, :(:require)), Core.SlotNumber(id=11) = Expr(:call, SSAValue(40), :Base, Core.SlotNumber(id=9)), Expr(:call, Base.time_ns), Expr(:call, Base.:(-), SSAValue(42), Core.SlotNumber(id=10)), Core.SlotNumber(id=12) = Expr(:call, Base.:(/), SSAValue(43), 1e+09), Expr(:call, Core.SlotNumber(id=6), Core.SlotNumber(id=9), Core.SlotNumber(id=12)), Core.SlotNumber(id=7) = Expr(:call, Base.iterate, SSAValue(31), SSAValue(38)), Expr(:call, Core.:(===), Core.SlotNumber(id=7), nothing), Expr(:call, Base.not_int, SSAValue(47)), Expr(:gotoifnot, SSAValue(48), 51), goto 36, Core.SlotNumber(id=3) = nothing, Expr(:call, Base.time_ns), Expr(:call, Base.:(-), SSAValue(52), Core.SlotNumber(id=2)), Expr(:call, Base.:(/), SSAValue(53), 1e+09), Expr(:call, Base.getproperty, :Base, :(:tot_time_stdlib)), Expr(:call, Base.setindex!, SSAValue(55), SSAValue(54)), Expr(:call, Base.getproperty, :Base, :(:_require_dependencies)), Core.SlotNumber(id=8) = Expr(:call, Base.iterate, SSAValue(57)), Expr(:call, Core.:(===), Core.SlotNumber(id=8), nothing), Expr(:call, Base.not_int, SSAValue(59)), Expr(:gotoifnot, SSAValue(60), 81), Core.SlotNumber(id=8), Core.SlotNumber(id=13) = Expr(:call, Core.getfield, SSAValue(62), 1), Expr(:call, Core.getfield, SSAValue(62), 2), Expr(:call, Base.getindex, Core.SlotNumber(id=13), 3), Expr(:call, :==, SSAValue(65), 0), Expr(:gotoifnot, SSAValue(66), 70), goto 76, goto 71, false, Expr(:call, Base.getproperty, :Base, :(:_included_files)), Core.SlotNumber(id=13), Expr(:call, ::, 1, 2), Expr(:call, Base.getindex, SSAValue(72), SSAValue(73)), Expr(:call, :push!, SSAValue(71), SSAValue(74)), Core.SlotNumber(id=8) = Expr(:call, Base.iterate, SSAValue(57), SSAValue(64)), Expr(:call, Core.:(===), Core.SlotNumber(id=8), nothing), Expr(:call, Base.not_int, SSAValue(77)), Expr(:gotoifnot, SSAValue(78), 81), goto 62, Expr(:call, Base.getproperty, :Base, :(:_require_dependencies)), Expr(:call, :empty!, SSAValue(81)), Expr(:call, Base.getproperty, :Base, :(:_track_dependencies)), Expr(:call, Base.setindex!, SSAValue(83), false), Expr(:call, Base.getproperty, :Base, :(:tot_time_stdlib)), Expr(:call, Base.getindex, SSAValue(85)), Expr(:call, Core.SlotNumber(id=6), ""Stdlibs total"", SSAValue(86)), Expr(:return, nothing)], codelocs=Array{Int32, (88,)}[1, 1, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 9, 10, 10, 10, 10, 10, 10, 10, 10, 12, 13, 13, 14, 14, 11, 15, 10, 10, 10, 10, 10, 10, 16, 16, 8, 8, 8, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 21, 21, 22, 22, 22, 22], ssavaluetypes=88, ssaflags=Array{UInt8, (0,)}[], method_for_inference_limit_heuristics=nothing, linetable=Array{Any, (22,)}[ Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=16, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=18, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=20, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=52, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=54, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=55, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=57, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=58, inlined_at=0), Core.LineInfoNode(method=Symbol(""macro expansion""), file=Symbol(""util.jl""), line=212, inlined_at=8), Core.LineInfoNode(method=Symbol(""macro expansion""), file=Symbol(""util.jl""), line=213, inlined_at=8), Core.LineInfoNode(method=Symbol(""macro expansion""), file=Symbol(""sysimg.jl""), line=59, inlined_at=10), Core.LineInfoNode(method=Symbol(""macro expansion""), file=Symbol(""util.jl""), line=212, inlined_at=11), Core.LineInfoNode(method=Symbol(""macro expansion""), file=Symbol(""util.jl""), line=213, inlined_at=11), Core.LineInfoNode(method=Symbol(""macro expansion""), file=Symbol(""util.jl""), line=214, inlined_at=11), Core.LineInfoNode(method=Symbol(""macro expansion""), file=Symbol(""sysimg.jl""), line=60, inlined_at=10), Core.LineInfoNode(method=Symbol(""macro expansion""), file=Symbol(""util.jl""), line=214, inlined_at=8), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=62, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=63, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=64, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=66, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=67, inlined_at=0), Core.LineInfoNode(method=Symbol(""top-level scope""), file=Symbol(""sysimg.jl""), line=69, inlined_at=0)], slotnames=Array{Symbol, (13,)}[ Symbol(""#1""), :t0, :val, :stdlibs, :maxlen, :print_time, Symbol(""""), Symbol(""""), :stdlib, :t0, :val, :tt, :dep], slotflags=Array{UInt8, (13,)}[0x18, 0x18, 0x18, 0x18, 0x18, 0x58, 0x08, 0x08, 0x18, 0x18, 0x18, 0x18, 0x18], slottypes=nothing, rettype=Any, parent=nothing, min_world=1, max_world=-1, inferred=false, inlineable=false, propagate_inbounds=false, pure=false) *** This error might be fixed by running `make clean`. If the error persists, try `make cleanall`. *** make[1]: *** [/Users/omus/Development/Julia/latest/usr/lib/julia/sys.ji] Error 1 make: *** [julia-sysimg-ji] Error 2 ```",d3a45ee675c3a49609356fd97e1879a17ae1bc7f::
https://api.github.com/repos/JuliaLang/julia,32088,rb/gc-callback-nullptr::master,0,merged,GC::backport 1.0::,"It is possible when marking task objects in the GC for the associated jl_ptls_t reference to be NULL. To determine whether a task is a root task, we therefore also have to check if that reference is valid. This is a fix for a bug in the old ""GC Extensions"" [changes added last year](https://github.com/JuliaLang/julia/pull/28368) that did not manifest until now, because it was triggered by a combination of unusual circumstances. It should be fairly straightforward, as it only adds a missing null pointer check.",028ac0746af8df0b260da4cfd74eac77e2eb2abd::
https://api.github.com/repos/JuliaLang/julia,32062,cjf/fix-embedded-main-include::master,1,merged,backport 1.0::bugfix::embedding::,"These two functions need to be added to Main as part of `jl_init()`, but only when Base is present to avoid bootstrap issues. Fixes #28825 Obviously `__preinit_threads__` is a weirdly named function to be moving this to, but this part of the init stage seems to be appropriate (ie, right after `jl_add_standard_imports(jl_main_module)`). Renaming/cleanup suggestions welcome.Looks like windows CI can't find this file from here.::Ah, appveyor.yml is running the embedding test with a different working directory. I pushed a tweak to make that consistent.::",0791d3621beb197b94a33de0758dede419983b6c::
https://api.github.com/repos/JuliaLang/julia,31776,sf/libssh2_backport_1.1::backport-1.1.1,1,merged,external dependencies::security::,(cherry picked from commit d5e365cfe275479c4eacd2fc14402f396b50bcf7),5e6cb142c82328121b390176e68995f60661f23b::
https://api.github.com/repos/JuliaLang/julia,31775,sf/libssh2_backport_1.0::backport-1.0.4,1,merged,external dependencies::security::,X-ref: https://github.com/JuliaLang/julia/pull/31745,c9de44dc8597b92be17d2059b600353415fff4c6::
https://api.github.com/repos/JuliaLang/julia,31670,jn/31666::master,1,merged,backport 1.0::bugfix::inference::,"fix #31666 and add some tests for nothrow computationIs `exact` enough here? What about types that are `==`, but not `===`?::for `Const` I mean. I do agree that we can at least say `Type{ft}` with this condition.::This is overly conservative --- for example `fieldtype(Union{Int,Tuple{Any}}, 1)` doesn't throw.::Ah, OK, I need to start propagating the ""exact"" flag from instanceof_tfunc then::Good point. I think `Const` is actually almost always the wrong answer here::",1c831fc5cd3147670562bc94158e748a8b6df41c::0961751df27b31055bef587fbca47c48bc575caf::
https://api.github.com/repos/JuliaLang/julia,31585,jn/31583::master,1,merged,backport 1.0::bugfix::,"Note that String is pretty much the only case we have where `==` is actually faster than `===`. We could perhaps consider importing the code for `==` into codegen, if we consider that to be an important consideration.",318e1874ba2220c93b8e9faa135fc6f93623c6f8::bd6964830a8449e77bd2a0ab4b42beff1ea601b4::
https://api.github.com/repos/JuliaLang/julia,31464,kf/memcpyrt::master,1,merged,backport 1.0::,"POSIX specifies that memcpy returns its first argument, which is a bit of a useless feature (e.g. the llvm intrinsic just returns `void`). Nevertheless, since we're intercepting the ccall here, we should allow it. For convenience, still allow the Cvoid return though. Fixes #31073",7ca4bc5574e821ce2b33c411cb1c8fe1eb781d5b::
https://api.github.com/repos/JuliaLang/julia,31446,amitm/31252::master,1,merged,backport 1.0::bugfix::parallel::,Fixes issue #31252 .,fb17eeb2c2174b6effde34e1513e1536bf353f57::
https://api.github.com/repos/JuliaLang/julia,31405,jn/typeof-tfunc::master,1,merged,backport 1.0::bugfix::,,3fe9c99a98e779e0df4b4fedd3f9401950aa3b6b::
https://api.github.com/repos/JuliaLang/julia,31064,kf/31062::master,1,merged,backport 1.0::bugfix::,"jl_concrete_subtype was recursing into the vararg element of a tuple, which I don't think is correct (because it could be zero-length and thus be constructible even if the element type is not). Fix that and as a bonus get we are now able to get rid of the previous condition that (accidentally) special cased tuples to have that behavior. Fixes #31062",abd48cd675b8a1951e4133c5949f88030458b2ef::
https://api.github.com/repos/JuliaLang/julia,31061,fix_atanh::master,0,merged,backport 1.0::bugfix::maths::,"In the case that x==-1, we have to flip the sign of ξ. Fixes the problem noticed in #31054. Update: The current Julia implementation was mistranscribed from the reference: The multiplication with the sign of x is missing (see [#31061 (comment)](https://github.com/JuliaLang/julia/pull/31061#issuecomment-463653341)). This PR currently adds that multiplication, fixing both the original sign issue and the problems (DomainError) near `z=-1+0im`.```suggestion ξ = copysign(log(sqrt(sqrt(4+y*y))/sqrt(ym)), x) ```::Test all four combinations?: ```suggestion @test tanh(atanh(complex(1.0,1.0))) == complex(1.0,1.0) @test tanh(atanh(complex(1.0,-1.0))) == complex(1.0,-1.0) @test tanh(atanh(complex(-1.0,1.0))) == complex(-1.0,1.0) @test tanh(atanh(complex(-1.0,-1.0))) == complex(-1.0,-1.0) ```::one(T)?::",c445183d0d6a16ad0c17df835a72a424db4a9c80::d987fed2a821e4847fe55eba10c8893afb8e753a::b30bf57782b1c823cd035340ef25af824c9d3209::a2f09987e06a9abb43cd4be68d8c002a80609c21::2149a68f95cb366335dee882cb2a7ffb9b53ae9b::aa1c3489b2fbbcbe7d1c056bdf7147b2d61059c7::e3598fef26f2c37ee3e54fe899dcdebceb130e90::f8eacdb94d4033fe0baf2b0f0c015cced51b9dd1::f9cef28305352a33b32b8a4f6c02b156ed16c473::e4f0326b2621f0051fbf96b1469cf558b89e8acc::
https://api.github.com/repos/JuliaLang/julia,30952,ranges::master,0,merged,backport 1.0::,"This pull request adds a fallback for the creation of a range (using the `range` function) where `start` and `step` promote to an `AbstractFloat` that is not one of `Float16`, `Float32` or `Float64`. See  the explanation in #30944: the IEEE types are caught in `twiceprecision.jl`, but other floating point types are never caught leading to a stack overflow. I've added tests that would trigger a stack overflow without the fix, and which also test the promotion of `start` and `step` to a joined type (which seems like it wasn't tested before). I'm not sure about these tests, and in fact not about the fix either: the code in `range.jl` looks like it carefully sidesteps many issues I'm not aware of, so I may well have missed something... Since a promotion rule is present in the code, but the fallback isn't, it seems that it was at least at one point intended.",e3d1d1b6d60050f852f676705e8018e040fea60c::
https://api.github.com/repos/JuliaLang/julia,30929,sb/empty-matrix-repr::master,1,merged,backport 1.0::display and printing::,fixes #30927.,5c1f7406be4fb783599b55609920e680972eb18d::
https://api.github.com/repos/JuliaLang/julia,30918,jb/stringreprdoc::master,1,merged,backport 1.0::doc::,,14d08a67dfee752a2e778b214771a294058ebdad::
https://api.github.com/repos/JuliaLang/julia,30700,jb/fix30633::master,1,merged,backport 1.0::display and printing::error handling::,,6f7993137808602291e5066e0800d190daba2dcb::
https://api.github.com/repos/JuliaLang/julia,29721,jn/interpret-intrinsics::master,1,merged,backport 1.0::bugfix::,"closes #29379This seems strictly less informative than the previous text.::Yes, but it's an error message—how much do we want to care?::If we don't care then why change it at all?::This isn't the text that you would usually see. That's text was emitted at https://github.com/JuliaLang/julia/pull/29721/files#diff-7a4c9160e84426f92c6790c4e8b14efaL2432::> but it's an error message—how much do we want to care? This is a terrible attitude. The quality of error messages is one of the primary things that makes people feel that a programming language is ""helpful"". For example, Elm gets rave reviews for the quality of the error messages. Similarly, in the past few years there's been a huge push to improve Rust's error messages with the very visible effect that what is still a fairly hard-to-learn language is considered to be much more usable than it once was. If the other place where this message can be emitted from has a worse version of this message, then can we please change them both to be the better message instead of to the worse one?::Yes, yes, I strongly agree with that. But everything has a cost. On balance, this didn't seem like a place where knowing the type name was particularly useful information (especially since we routinely haven't been giving it, and nobody seems to have noticed).::",9707410bfa00980fe3cf51b0491d195d078711fd::500d669e84cad3ce8d1af90e79c9390396a464c7::abc6654ce57673efe2eda3d57f6bf62cfd1ba630::386a8c24924ce63efccddb8238fcdc7871bcb18d::
https://api.github.com/repos/JuliaLang/julia,29442,teh/oneunit_cartindex::master,1,merged,backport 1.0::,"Ideally we should deprecate `one(::CartesianIndex)`, but I am uncertain about the strategy for deprecations in 1.x. I tried to set it up so that it will be easy to do when the time comes, but I can change this given feedback.",27a45f5836f1c2565263d7d41c780d71e9cf504b::1e2bed42a859dcb05a7ebcec3c1a4ddc783b9bfe::
https://api.github.com/repos/JuliaLang/julia,28508,aa/more-0.7-backports::release-0.7,1,merged,,,13d295cdf03844dfc9dc3c97b78c25b95650c72f::26e2ee41e7bb210446b6d9418bd267f1f7897b19::717832f67759f6881b19bc3ecd2e685127ea2dbe::b426525beb7eb18e9da39402e57fa76c29105846::e8aa6a165c33734890aa111ca1347da0607d8bc9::60a6485886afdff73eed95b3daa10f82f5917c63::
https://api.github.com/repos/JuliaLang/julia,27921,patch-1::aa/backports-0.6.4,0,closed,needs tests::,for issue [#27848](https://github.com/JuliaLang/julia/issues/27848),be29d6e0f41818d6cfa89d0815cc418aaf06c66b::
https://api.github.com/repos/JuliaLang/julia,27739,jn/release-0.6-26982::aa/backports-0.6.4,1,merged,,"Commit from @vtjnash. > some lookup functions (most notably, jl_get_specialization1) > were bypassing the initial cache lookup, > resulting in repeatedly trying to re-cache them, > and wasting a small amount memory > > also remove some fast-path code for threading race conditions: > the benefit is too negligible to be worth the extra code maintenance > > (cherry-pick of e36ad5c5151d13a97a51d2ddb5ac1c50555c5595, PR #26982)",4fc783aa9eeb7e0a39d16a1dbc511d5e4a4a56c8::
https://api.github.com/repos/JuliaLang/julia,26392,anj/spqr2::master,1,merged,backport 1.0::bugfix::linear algebra::sparse::,"Fixes #26367Seems easier to define this as: ```jl size(Q::Union{QRCompactWYQ,QRPackedQ}, dim::Integer) = size(getfield(Q, :factors), dim == 2 ? 1 : dim) ```::Also needs a test for the `QRCompactWYQ` case?::Are there cases possible, where Q is not a square? So ``` size(A::AbstractQ, dim::Integer) = 0 < dim ? (dim <= 2 ? size(getfield(A, :factors), 1) : 1) : throw(BoundsError()) ``` was correct in my opinion. The definition of `Matrix` could make use of `size` in this way: ``` Matrix(Q::AbstractQ{T}) where {T} = lmul!(Q, Matrix{T}(I, size(Q, 1), size(Q, 2))) ``` The changes in `SuiteSparse` are not needed in this case. ::Line 530 now produces a runtime error in the dense case. Also test case is missing to reveal that.::It's unclear what ""Line 530 now produces a runtime error in the dense case."" means. If you have a specific example that fails then please post it.::Regarding your first comment then Steve's version gives the same result as yours and mine. Steve's just reuses as much of `size(Matrix)` as possible which is nicer that my two if statements.::The problem in line 530 is, that `T` in `Matrx{T}` is not defined: ``` julia> A = [1 2 1 1 1 1 ; 1 2 0 1 1 1; 1 2 0 1 1 1; 0 0 0 0 0 0]; julia> F = qrfact((Float64.(A)), Val(true)) QRPivoted{Float64,Array{Float64,2}} Q factor: 4×4 LinearAlgebra.QRPackedQ{Float64,Array{Float64,2}}: -0.57735   0.816497  -8.75605e-17  0.0 -0.57735  -0.408248  -0.707107     0.0 -0.57735  -0.408248   0.707107     0.0 0.0       0.0        0.0          1.0 R factor: 4×6 Array{Float64,2}: -3.4641  -0.57735   -1.73205  -1.73205  -1.73205  -1.73205 0.0      0.816497   0.0       0.0       0.0       0.0 0.0      0.0        0.0       0.0       0.0       0.0 0.0      0.0        0.0       0.0       0.0       0.0 permutation: 6-element Array{Int64,1}: 2 3 1 4 5 6 julia> Matrix(F.Q) ERROR: UndefVarError: T not defined Stacktrace: [1] Array{T,2} where T(::LinearAlgebra.QRPackedQ{Float64,Array{Float64,2}}) at /home/julia/julia/usr/share/julia/site/v0.7/LinearAlgebra/src/qr.jl:530 [2] top-level scope julia> VERSION v""0.7.0-DEV.4516"" julia> versioninfo() Julia Version 0.7.0-DEV.4516 Commit 1886be7a83 (2018-03-09 14:38 UTC) Platform Info: OS: Linux (x86_64-redhat-linux) CPU: Intel(R) Core(TM) i7-3610QM CPU @ 2.30GHz WORD_SIZE: 64 LIBM: libopenlibm LLVM: libLLVM-3.9.1 (ORCJIT, ivybridge) Environment: ```::Thanks. > Also test case is missing to reveal that. The tests did reveal this though.::That case should already be covered by the tests in LinearAlgebra::",6eac6787a19c927efdae8be51d39cfa915960fbb::667a72d15da11818b4c06316481b9a5a4baa4b89::
https://api.github.com/repos/JuliaLang/julia,26272,vc/ppc_ctr::master,1,merged,external dependencies::power::,fixes #26249,f7bf6b00752ee76bfab79f0268557d01e85617dc::
https://api.github.com/repos/JuliaLang/julia,26213,vc/fixup_soverpath40::master,1,merged,external dependencies::,noticed that the patch for #25597 also needed to be applied to LLVM 4.0,348b67ff5afdb5522317385bf5371f92ee9466af::
https://api.github.com/repos/JuliaLang/julia,24265,aa/revert::release-0.6,1,merged,bugfix::,Reverts commit 4aa8d72bcdf162de33d663f4519b4d30d8d374a2. This change was causing SIGABRT in certain cases of ambiguous method definitions or serialization.,d7f0924dde83ab2e5f088c4390538092307a26a0::
https://api.github.com/repos/JuliaLang/julia,23683,jn/release0.6-isa_tfunc_bugfix::release-0.6,1,merged,,"previously, isa_tfunc(DataType, Type{...}) might return Const(false) (cherry picked from commit cd959a25e0eebcda0406573def0ec401caacde15, PR #22779)",873152bd774b6a185f0e0852ffa40f7d1f4409e2::
https://api.github.com/repos/JuliaLang/julia,22398,tk/backports-0.6.0::release-0.6,1,merged,,"- [x] pkgeval - [x] @nanosoldier `runbenchmarks(ALL, vs = "":release-0.6"")` vs rc3 - [x] fix appveyor - [ ] build:dog: #jlbuild !nuke ``` Base.runtests() Base.runtests(""pkg libgit2-online download"") ```",306d2ad8a781c63068647b93262dd4192a462537::440799c98ba51ce0ba48175accb04218d93c67dd::f9aaacc5e63a70e5a90a23ab7773aebc83bbc7a3::7d1ece47489dbaf3568ab15258fcdd914db61fa0::25d8c3a00948a90a582cfa918b5660f6426870f5::716cf0291b9ead63fa23ef17e05a3f8cb1f60056::e8e417b7d3488358eeb63164ae341cc0196d02ce::06dd3e0d02404c406c7c5be32e6a88b3591243c9::e11880e9f9df3a645831f91fdb53cb4dfb93bd84::91d83c30a7a5108ed2cc133777c110f528fa852b::3fb6535b382953bd1e775ac6ed2ac15f9ee2820c::97fb5b1b57d3e98f98142fb121e7d3258e73afb6::b629d03515d0b4c2f0be393ddef749f6a118b92b::3f02ae4a7dee235016a888687872770611772f4e::2c2cc86978d10cc8505aec25346a5dc75d0c1257::b48343278dde51831cab3b9626efacb2771d3437::82c25d9b9151f27bf56659a6371d90a58c3b6e66::7e8c0d32ea8b26ff98d3b21c6b63ec842ce3c65a::23043ce5fc391a234a09e91d6842bbbe96ab6aa6::4e442ec2fda0bc0c8a9b4332a4f57133fa57a641::436e16619a65a3abc5d57e78b4412b93cfb08c36::26e47d4397aa0d38787b372617a885d10647c101::6d0de374897c525ad6daae9e93ab9ec73c3d2bd8::5f8df4354b393d694601976a4a7f286db22c8b7d::afaf174e7bddd6e8d6e51192287a259b6d1baf74::a93d4a49946ef227d1c7cc36432fd615facaedff::eafaae7a3a6724940dc24e652fc2aeff0a207ec9::722bcae4528dffbfea788f0ef00e5ad00d0935b4::fe65eb478205dcdc9870bcf51de180533c4d84c8::4a9354209a21557e05cb41584bba09fd5607eabb::4e067736db2324a2070342fdb727a8771248fb4f::
https://api.github.com/repos/JuliaLang/julia,22199,tk/backports-0.6.0-rc3::release-0.6,1,merged,,"- [x] @nanosoldier `runbenchmarks(ALL, vs = "":release-0.6"")` vs rc2 - [x] build:dog: - [x] pkgeval",1508d44243712a217360e0d0a4e882ff6c36edda::9f699bac2d12bbedc3bfca92e336f22abb298efa::5c1a88c203a57f7ab7211a525a7b87484d7898c9::758c817d4488b13a99add6a0fc8c570890bc3470::fb3cdff80dadfa64caa8148be372506dc72cb42c::effa3bb1e6ef17947fdc7936258213dce180bb8f::2ec983d7651549a1029440c860db1dc027fa9680::2b4d7fe2be18a8546dd3a7d79b8b32477c2f1924::2d9d5d30e4085b1c137199002c4994e3bf2c1c9e::dda1373680a15dab34744ca4fad1981034ac0f86::787bf7b60be63577b8deac3ca5a05ccaba6459a3::6b1f2574e1feeb3ba4ba50c0a5c929fc5f217820::0b1e4eff8ada1818d3d1590d11129d8c8382e86b::544694ab9cce817465f38e35a00e14e90f1de63a::a8c6e6d5138edaf550b871ed44f5b1d852873057::8d66dbd0ee71ba6fe5d0746ad01de238f2ee3527::76125023d622fe73582954139d605b3a496981d7::cb78b63f7cd32b33d721c383f612df42da816e57::acf0c7c3c676591a277c7d7aa591302cce5fc141::9129a3c4060686b3b1866f12b98f419f832d7f1b::6b7f68bf9caa0004191536b59fefe1a007051c2c::aea6a50a7ef5dfd22c42866944fb868f118786dc::57ea815cbe3a76d19a76660efbc07b3f8ce25259::9851e7962310ec371804b1f9c8d9609e94ae9bf8::8479b7b47250530219c5a2db4530442c27a191c6::f9fb392ba5ac36e86dce17dabdbda2e4ad1cd5c5::eda7690a684cc9d0352dd47fa98b45375509ccb2::8520a55814ac865818fbbc9bf1114bf61d93c795::da8185829c87a1506677a5c5ca0df7e0c73c703e::a4f54e811284fc843778f4dfcc94c05a49494a75::0750dde6e2fa6135e3396d64577625f1b2014f47::c133bd9618ca88a772ca92eb72cbae06052a9b19::2ad58d4bd59e58516ff2d81362b463f4fc3bba02::f33534cab14f06f5023759b31eda62c79f7c9ff7::a3bd7ad5dd59d892b6a9bff7ef9b499793372594::1267d7531cef50dae92d074ff632b254321982ad::24a8eefa8a69f8ce11600c93c3d4f5dcfa1ff0a2::78696ae635beaad917e26f01288ffc742d8955dc::50d53bb1261058c0683d1aaf420a8f3bea650c35::40ac20bdaad7fba890ffbad47ed12cd0e94fdb20::f8b85191799d07e9551499eb3c827e8a4f353bfa::01e89146bd05634b7e34e460c80db037e06ff106::88bf391f538785c5ef9903c4f2ce1b44c0f23249::9dc9c074c459cfbe6f20874398dabd3882fe15b2::969505e4f836448ec3db13985751396298d85ef3::7cac84229cc72153a90b230b95e67e19361c2e46::bc9c8a87738ebe31add17e63707c96a372613a7e::456198f87d6bf8ab271d3c55744b41da3f0e8f51::e7aaab00cc4f644d4b7a0dd90ed6adc2bc0d810a::53ffb9b409867e6606d7c5815916b980b0ff302d::1fa6c1c31d6e1b24ea0b6c664c719c08b8af0d1f::a2473d8dd253a767f2385466efeb888db482a2e0::d1428c81d822536b933aa6fe650efec6f4035565::3d762e7279c9677cff15b92aef570fc23431882f::2b177596df0d4a9b2d9b0fb854097ef64709922d::9e8f3ae7a1687d5a884ba25fac4080dca0e260f9::e6ffb7eee68cf57012bfcaf0ffd17f1cd4d76b8d::6e677297757e2d64436d24dee23960f46c25a671::5dc6c0300028f442993ede3d6f3af74de2f928bc::39d24bb9871dfc5facbb32ce330efa12775c7938::f25461311a15f9ffb7e3a4de64b9075ec7a70b34::85c0c2e56bf84de413063d3d1aec32c0c5af3446::b98fdd5d3aca881e6f85af8f1fc3cdaeac3b3857::341364f4a32acc74cf1a0f89180a782fbc122283::8b5a8443ba1c0a511dfd298fdee4b4e431f93045::ac35d0ff5372f56c474c1435b0dd73641b9a94a8::56b68d9d1aab338d6308ffd3d72c4c86742b275b::567488c718bd630eb944957ad34974913d2e8c93::afb642e01d38afd73479c0e251d623d94ca521bc::8cd6ad2258a798061e5b61fb38264617825be303::7c0a1b7c2523e823e8812d0edec2246fb213b5be::917f80e4c7ef7132dcd99acda770e39c52b92384::73b5504ad43463d65044a77ce1686dc517cbebc2::
https://api.github.com/repos/JuliaLang/julia,21878,tk/backports-0.6.0-rc2::release-0.6,1,merged,,"- [x] pkgeval - [x] @nanosoldier `runbenchmarks(ALL, vs = ""@6bdb3950bdf64152"")` vs 0.6.0-rc1",7593289b5e4a7f5b72bdd7c0fbb9741cc4e5b697::e585dc8cf20b0c8e7d171456765c5cf139c1415d::dbf2a1eb335bf8a93fcf1c5a13f9fa3f7a4a59be::b05b8c91cc527afd717a7cfa86b917084f542d65::24591459370a428308d9b3222a463436718e1718::d3a25b9e590353e163a45edbb1c3a94f37298709::9a4737654da50d8968be0626be7021227aa5b3d2::886f20f64ad64c768f105513460b750bfc5831dd::fd590b0df189a9f24d6071553e25e01f80a9aaaa::de4ccaf05bb989d2e44d506f46608e88d83c357e::700159811fb9f56e4f9cc8f33959333a447f49f5::5cc688177061d157176b9514422b737f116d5e2e::ecae3a726f5e75a8d972c5fc4674e2cc6046772a::19ed3498ef9e2a6755222202df7ff389b32b2f75::e2e21c55a04ef13bb33ed51fb79523ba0de16f3d::205bf779fd299bfec04b3a663d1bbdc626e5b62e::2cfe3b1b7ba4727b082e635596bd5d1f0913e1e4::7b2875391d6586e37d5b53300a73700d3ebc9493::54d68e8b8a2162fa4aa12ed5321db44e28a1aa3e::c15639a819566f16aaf583c1006e6eb9e16c6af1::e83527ed8985d584ca729a72710de1737a73d4aa::3cb69eafad37c02b77bf812d20f614d2b4125ec0::55bb92789815775c5909a66db2cda6387f09803b::a461fb511408b700b41785fdf6f43fe7e361cd26::2b09f779c59bfcb90064d10bc2bc1c1921394676::844ef37ed4b92cda7ca03079de4fb0fcff399c73::b523b1e190a85505c6a23a0b42acedcf26dd42c5::0f1aa847937751287d52af612d5b3bd00d2390ab::0222855e36f99cfb8d9d17bbdda2c52d59b72efa::2a929449621b65fedc4453997f91cd7bf7345570::5c5f9a0caabe5ddf893e22e365198735f2ccc50c::bf4cf71cf1ecc0d5c3d9285241f6f6b1c1b200ec::208087048190287bec6adec6b9855296f646b234::56800375f76b437588916e1f300d7acfdd011cba::f8985590df2d5ffff5ea7deb1aedd428e481f472::8832b7603fe5f09269abfeae41dacc316b7fb6e8::1c6287670b9c8ab2441a990f262c1fae5badc23a::e88a1199e623bf5d8b624b80fe3b76cf918f6b14::694e69da9d1da809d156709ff750794953559eb8::7b0d528b5cdfd22bc036ddcae84810f358392ab4::04398a2880c1796808eeba9a0cec306828b11720::dcac2b23a7eb074d8df2817ce7a3e0849cde7d5e::2c07a43e6df24e4e335d10199aed90f932cb8f9b::65cc820958b0bdb0771041c371f829d30274efd1::95dfeb5a156393513afdfbcb78cb032719a5748d::6ffccfa42f926c14aa95aa0540badedcaf18b15f::c7e4da6ab5cf039fde7ca7a95b4b35bed14e8892::784c47eb48bea528ff7dc0cfb3f440b929f3325b::c360038380ad33307862346ca6932f8741d51882::a43bee5f44759bf784abe91752b324d24b538e71::72cf3fe1ef9f82a547d53bf1ef6c15549df0a92e::f2fcc035d144c9584bfee6fe46a037bb68d3a1ee::21d0cbe3ae21d7b3dac4c070ff5a8aaba0fae393::5f7c9bad8ebd58cc88bc85f27d3dfeb60d26994d::6cf7892561121132a9b21250c336a7e2f1269db7::22aec09c796f35e982400c9a79000d70a7562e79::d13f3e9e9d8b4cda8536800b1c9d28e473eb45d8::91d0f09e768550980d5b68c30137fb8da125e86c::d552789619f3f2c6f9043bc1707d6e9cb03e10ef::d818788033e81e9991ad19fec9db2b1ad6096de4::ecde5bb580c0ec76b43de2a565a1f452a9dda008::3b4a1a3326ee585b0f12a426aa67c9fc3a67d427::d19cd5e194ec4deec9333f9e582e7454ca397cc9::92c95c0ba7fefd57c48e363fb3bf7ce57977c96c::be5689f9e34b6e229008a4fe61e49bfd24fec7e8::94f73eba8cfd97a9d5987ef98e09b6318b41d8d4::8654afdad264c67d1f221c38fc22f18dc5a7445d::4feba43b32463ec1842debf7d1e2c6f070502ff8::ecae6e8c16aacbedda7d4e4b686a6a35c1a1b7a4::e6f1f3480e3414acb141452b0a41faef035aeacd::5f9a9bba64711d9076adfab653210c452802239a::f445c6a163470596b14dfb6560d6f1afce97d6d4::a42d4d9745195e89ab60048757f3f1e12e926390::9564404a05286481552d3fb0f14fe03864efc51b::09d3b2600506f30356d27e47f0efb7349c0389f5::a9d418eba943162e13046b4eddb09bf0dd6c0da9::be004c1bfebb585932c78c8922b06bde049fb2cb::
https://api.github.com/repos/JuliaLang/julia,21694,tk/backports-0.6.0-rc1::release-0.6,1,merged,,"will run pkgeval here, make sure we aren't introducing any regressions relative to beta (5d609ec44c3f3c2a3bc40d47e0979ebbf1ba5d29 is a non-backport commit, for this reason)",8b5a2e7c088c74efdcf1a64faa73c5d7fa655629::a31ac053d5d59e2bf82a741fde268377210beeb3::e45bb727549594bf8a1c9e9cfd83d16a7bb4d54c::f71c09913ea05f40a77ac16f5f8459d07ad72930::a482cc2d46209cbddc5ef20dd69ceb540ebb8586::be46bc8f5ad21f7718c7c2cf819fa9d8c33d987b::e40c972067a0689ed306d683c8909195a960acf4::b63ab724a4cb3d41aa707f9ef22bae0cf084cd36::5d609ec44c3f3c2a3bc40d47e0979ebbf1ba5d29::5602e9e7f571441675409487399d2d94ddfee9b2::0a21816973eef396daa4ffbab1a518f4d432d962::dbd6628f662f5e2e8b2ae8da59692e62fa876f1d::7e19aa3bad2b74e0eb7d14ee48f6f9188a4fdbd6::
https://api.github.com/repos/JuliaLang/julia,21685,backport_mapreduce_fix::tk/backports-0.5.2,0,merged,,"Backport #19325 and #21167 to 0.5 branch (I hope it's not too late for #21684): - fix `mapreduce_impl()` for 1-element ranges - avoid `@inbounds` propagating into user-specified `f` - the backport doesn't include the changes of `mapreduce(f, min/max)` behaviour introduced in 0.6",613a24499b5287d4f0f8310557603868776ed22d::a334c0012af06a69a131e749a59ce09b80495622::
https://api.github.com/repos/JuliaLang/julia,21684,tk/backports-0.5.2::release-0.5,1,merged,,,7d2d2111d300800b236bbc500fbb00a2eb089a0b::4d418458a736b6d1fcf569e84f347cd6237902d0::9127ccaebfc561de0227850aef07903991496165::aa3907c5734b1a0292678c2b3c8ed77e8c18f40b::8a4e1be6ce822069489ca68730318a19817285fb::c250310783151f0fafd4a199ef7cb9365dd84a94::e9fc37aefa00a1bf0680c1fc1677bdf9b01c1a21::70e5b5667771e644bf5b52c402526eb2bb532979::5c1972bce74df223a286e1674ae710a46c670770::633993f5cbdb1e1238639542006853330c8da4b2::32e26e19c0d436fc8c42d81c784e2a5b279ebfde::b004efaa3c2d704b0056b2dd3bbea8d67d66efe4::ea015b89f6d14c49136cd0d97bc1b233676b63a8::b044f745b10ff75b58e04f0f1daf89e3fa41ccad::0f9d4409f9bb8554ae52455e74dbae5decc60724::468974c4c2a4b4a64ed28d4edc887f7c37fb9c55::8619307ca94e5a30f5be0a3aaeabf6f64f5a6e7a::4be8a3f4ba4ae6f370a6b0375e4165895e315139::5fc644a714055c45f289bd4f1b3159a6b485c230::39cd805589d02016191b4b3b7c8407d01aaf624a::a67663635d55d54377243f9b43456e97ed1b3322::2a5dd2a2f5c5f34e89229cd4b4ef9b0700072676::b428e47971a0e5aabbdab41b90c4472778aecb6c::d13cb5fe6b8fc0d5d942726d85e584bd06d62512::b54c343dc6c2a4b3562af89b9350a074115c895b::f907b5716805013fcd65b1720d1ff940e11ed815::f7c3d0ffe0724483e141f0123fcac4a2c69e5ea8::e556deee3b4e54b41f52ef298c00d6a000534e5d::a0a2cda13a139ee1d50c09bd7466f74eb8a8e6ce::ec79250be50fd319d4b7481817d0a6cd967bbc9e::c1b8f9a2af1571e61fe80f85cdf32646bff8799d::957041e97dc2822e28be08870851590bb72cc13c::c686385015400b77a1f48fdd9e6c4da6ed22157e::2745f8f96ed5fa3c817a7c2b861af67b33dd6e38::88ab8437af8228270560316d192d6dfc2491c82c::416fd0ced4101f9bd3dbe297d67ca026204086da::ea795ec72b949a359876a64b82fb809781c8e400::0d5acbaa602eec2b1b4a9f4ed8c647d324ea85f5::742160cf3b8519f6645f849f0380c5d9271ba77c::eeafeb047e1b79b4c59e415db71ffa5aeea1ac33::3e86b46e1437fdc2055651c5769a09d61bc21ea6::302f8cb2a2f01f89b55a53fbe7267c832a075606::14523c22e23356ad13061cd37df045cbe7ff01b9::bb726dba188e3256144d1fc6ea77261957f6a000::009bf9955224683fbd45e90d6a632078a6ceb23b::98441925f9733a1b972f661240e19d201d871da0::c282224834a04d8d8487d8f0dec585e9cad6d56f::f797f92465e59893ae8f51ac1a6dd30605b26cf2::31130a7437a7cc81871499cc8e95e25b4cd46d04::754ae078cfa0eb48d0bb33389a70f464c97fbc49::357286e14073b4efa45134a02d649b342a0eaeb2::e6f48c31ae458e5b5e3cb30d41f205edcc08f04d::87746274eb249a7e81c04437f37e9d9999636f34::613a24499b5287d4f0f8310557603868776ed22d::a334c0012af06a69a131e749a59ce09b80495622::98479af54034aa813f03f24a93b5760d22f48db6::e1c9a4b522ce75f8c742cb4255e66ab8adebd5cc::a36d4afa3776d22ae237615433826f37ad335671::8b8a274ef8a9904d2f04207889b74f6f89c07aa4::4504215ca7abdfdaaa1b7a958be9ade11e23ef61::86bdc39714d7bd4c92161debc4fb2fb0367fcb74::3a873fea5ceaf234317e084d9967d61db69c8519::6accda38c4f5d2783580b46db0254838fc928bc6::87448f2f882e1dd91e141d6657a21b7c5b0bedde::
https://api.github.com/repos/JuliaLang/julia,20825,sh/backport-18583::tk/backports-0.5.1,1,merged,,Hope I'm doing this right.,c577b62a8986b89c986246951672a20bac00f09d::
https://api.github.com/repos/JuliaLang/julia,20736,tk/backports-0.5.1::release-0.5,1,merged,,"this is way overdue, ~~and still in progress making my way through the list of pending backports~~ will run pkgeval and nanosoldier here when ready",0cc35585d23bf117d737c4891d44bde304501869::03f5df7693def3ff32fcf099cae604e1e49cda78::c1c297340ccda3697cbc64a88a66173a258e4591::883b55a532fc53bba3e1e78743cf079e25bc9254::62563b8116c8eaed89721fe7d205b2095a3f06c0::bbd1d29f3d94d6d6bc71e10beb18b921bfdeee77::3f963664a18c1a906d362b754b9ce48ec645786d::b62b934e041fa46f19661976f5204e1861fe40d0::417aed3485537e0f415321016b5ee278f5123c11::a97fbdaae5066cad3447579a8e2a04808651b8cb::1bbc846f6ff710def11e976c518e9b047779f02a::92b16b81a96b3f9f4a80959fdb09954d2e5bbbb9::0633cc7aa0c87f0423a84c0ebf3b00259a10f178::8015177d939c0f082c06225b47192c386a1585d1::f32c0ed6b8c060b4012f8957bc9d52d1761eac4b::6956c0c9fb8049f4297bc853febb9fccfb972126::a84fdaffeb5d11d011a0a36f3181192198ebd4a9::dabaa2aae8956aa60978e4ee129fc0a13d1f7aa9::87a79cf2ab8b65266c670bb89653ac22a9dbe48c::7c4d4b84011802d1443c67751b363c683c6a6faa::c5a68975742cf18ad41d64455c38e68802de9831::496b7787517e231a2396ef927ba894cbc1f2adde::6b987c088feacf9d854eb8e73d2af8c933bc9fce::c8b42f37e91802604d24ec842d0f5d4637226899::3b51150cab30909c2df8581d859a91e01465a9c3::5e18ffcc8ae79c3b3d544c2c606c09cc540533be::02d00d0a51d1993dbb32f2d62cdb7a1a4e1250dd::0320521a052ef8230390098d6b4b62c18e90231d::d410cecbf60f206b282d2c98e7d68a7d8e21e075::c330c1284b56f1f64c81bafe723d0178c087e056::731ed27ea843c210ec9f6331964f8eb83b701ab4::10ded495635c9b413838935d801d42521e4cfbd8::3bb4cf376a7d6f992f855560c67d2354f1bb5341::059f1e84e1dd3dc3b80754c5e5f30291eff59d48::12c1af3b95ff1e0488339c65fe2c2efdb77a83de::c378dee654f9907df7339faf620df5f91f5b8ad2::55125539f5e39af512156ed0d03b8dcf2abd7b57::ea37c3c35eb3fe6bbaa0962a048c6b26e11e5ac7::8accd2a5da8d35189cc81f7e3530d5da9c22ea8c::81b201a24742226486e4f19b8c4f05e0f04137f3::42a5af07f25a65dae5eb90ea08093eb474cf0f4e::086126b1340b49ec3ac2634f790beabe8f812ea6::525904e521db838c576f0446f8da5d15cff6a202::24b64a3b625c2ae84df3802112423760ec9475d2::c427de0feede554e93caf0369cea3b1b48a8ea96::e776d78deafb3a5341233f1f77157a44628d940a::fabf35ee3b0b07b3ba39d2d8204493bd229d6610::f4f3486e2207a4ff8bf6dd492f38e36d3c6bbe53::3d2b8a55770a8d720c8e5f3f8df3c63c4bba8328::7676605573ccfbeebe138ef7187956a7dba1ac05::98b8321bd75ebb43a26502cf170f13b644b6f954::87503c9174a0278c030019bd096e53f357ea537b::07395f4ad47b373742ec13b0867f82c396712137::d56fb3b5b3a6b07946a4efd6866793565bc75f1e::b730778bd92fd4c531c382555d7889a0131fa940::226bb8a77e71218e671521d6f869804c1166fee4::d4f3964d5ea19a0ac6660062c1691e08b2db21be::6906d7dc3a688836b9b6ac6f99cf60be9f5038dd::7c49b4aa99083cee2c3d9a1522fb83d9e2b826bb::3053b589b74676a228303895c4edc81bf9b22aac::399a1b703a37c23079139b8583a8b5c5211ab33a::835ede6ccfb85618dc2fe1b167ec0855b91addd2::eafaf13b1c0717cb294e2ecea675c3d05f0ddfa4::a7c6c6ec81000a9a0b606ebe2e8c18ecac396488::7c280a4e0912d2623b579c7c9b2a1e4207165d25::15399799d4bb6ee908a021aab68d31565b06623c::4dbe24538823ab0268885c0cb3a2bac9e3e7cd7f::ac5725c4dc9997b9e2faa4c0dff67198d866519e::14a1232e62f1f02eacb5223a8dd3d099aec8af6f::7da02da4ba35119a4640f017ab8bc82daad64312::43e73f2a8a74688e84c48af3ce4a5246f56e3f37::d943b0bb3f23bbd1f228c05f92d6ef6f9699873a::4db2e252dd0d465a34dc49e8061a9009fda129fc::afad4707b3b9a4a097527a3cd7c66c25d9e77cf9::76249b197089f55339da31fe59632ac974a49718::35f7fcba69db9fd4dd30efbd44f4cb417fcf8da3::df8a99755f380bca28e338de35b2aa73d9fa1547::5c9edd0ba2308e2216eeb6837c652e626854ebbc::b9a5d3200bccb7fb524b774d55276c8e3a02ad84::419653f5947652fc3e2933577ff734b7bd2a9a66::47f6e508e4be0fd39295cf93e474cb64eca2817f::49e13003b8d60a7e32ba9e9bfbd4baad1e019001::fbff50423cc90f47905a88ded7ee3f0c879c4fb2::c577b62a8986b89c986246951672a20bac00f09d::68070380e44f4dff1240eafa17a379fa0334c30b::260b1f8b69ae002d79f6482bfbaed71130c1fe3b::1f16e63d2b633d86eb2e4d21c16e6ed95c9a3e08::5766dbc41d362823a00c4d27cf79e7a531724f86::f5f4ab018ae39fb0376b4831e52fb89fff107b92::27df04b5bec57ac5222773d93d7266c06b1472c3::060016ae6423c967b82f7b72a8683b67ae1b0fd7::eac77de5512d90238ac3a04fc892057cc1284758::5986d0ec74de1b42fee5af74590cb72ce6b2b6c6::9d6b6405591244bc7bed3f4b673a9a0dfa3e5736::78a11328f95f44d6f8edbc261845ab5820aa2fd3::ea8b6238ab14239a601cd2ab1b343d85adf2f401::cea08182875e5095778d9de7301029593b1f76c9::4efacb69a4da0bdb4742b10885220f49595d4adf::1cf504da58de9bd083bbcdd9e79facb03b103650::70515e99fc97a0f258048e066702e71ab06833f0::73052e60933f07441b4787d4fcd0a60336d6c252::9fcfcdad09f417c9ba6c42cbc41a15674a8ba1a3::0e97a9128acbe7c404be23fb99c76091952d3b15::fe93beeee81a7c89c2972f1dfc7dde4788ab0285::1512ae0a555cf5d2445d7cdbe1add5a955b8554c::bd26938ce64dcf23df56a12e1cfb0fa8b88e4818::49d0d4838dac3263d1de55ff2fe15712e89f0ecf::0b120b12e845b6e46cda96bc03827be2e84071aa::b8677968c26c7b30ae6dba8295f454aca1f1a3bd::40143f08bb4468443716b79ba09c93e2abe40cdb::53538e7111f386900f9f141af9ea7f3257e8c07a::957c10c41b0bb6bbaf20a8654186ef85482ec5e6::a3982a73e33213d4368926bc0bbcd60320a4fc32::dea17b4dc923f4a1e082741ec689951e4b31168b::22dad18664897239131756778b706ea924fe41e9::98025cc191d9888e1f779b2d0472b0c31d831b99::3d23f4f2c0ea3378577a90f6e1d1e997f7f36d16::e8ff2068118af1f1318e5df26df338446b44ab15::0f39ffe4a1d1bdcd61981240e39d0e5a9d7a0db5::649714d21e8975678198049fa1a28ad78e2970c8::b08227b24619737d0e5966e3863268267ecb9ad5::7f1e1a056a355731ced24e519774d11444d8c356::b386767fd8b44df4da518218a89ed075cb4d4bc8::a8fbf31094a769ffd01da0253695ea61c4dfb727::fa145633dceb49864343c1e88343742abbc89161::bee5dce6d099f9f74d602c8759f9f5458d843b6c::23aef0c0e7d628960d7fc29ea2fb5ab78042dcaa::2f0a10de6e998355001f86d3c71bdfabebfd9e4e::0cc7d79d93cfea534e585aa13327b4751257c1d5::
https://api.github.com/repos/JuliaLang/julia,20583,tk/backport-19196::release-0.5,1,merged,,"fixes e.g. `MethodError: no method matching reduced_dims(::Tuple{Base.OneTo{Int64},Base.OneTo{Int64}}, ::Int64)` on `Pkg.test(""BlackBoxOptim"")` cc @timholy",a36a5ad42bcabb87dc10c619fbd3e0df1a0d1597::c0d4bc8e7239e14fe7f08aeab4ce381f4390feb0::
https://api.github.com/repos/JuliaLang/julia,20483,jn/release-0.5-pipe-ulimit::release-0.5,1,merged,build::test::,"to try making travis happiershould put the definition of this type under the `if LibGit2.version() >= v""0.25.0""` as well, it shouldn't be added to the module unless you're building in a non-default configuration and absolutely need it::It's not an API issue. I'm just attempting to roughly match whatever we have on master, not actually redesign that commit.::release-0.5 shouldn't match what's on master, it should remain close to 0.5.0. just change msys_build.sh to download 0.5-latest and you won't need to touch libgit2 at all::I don't think semver cares about internal names. This is non-breaking at the API level to keep this slightly closer to master. ::I don't want to be defining an unused type in the default build configuration.::",7fad97ff29731a57c8ee76b5c1ee296b328c39d5::8c59447296f08378659993bee979ee21afac2a2a::5bf5a7431e7877bede15b9ad23c89075c85f954a::8dcd331f960f59d7ffb9bb392c2b7d0f006b33fc::b8740400de428fca6fecb225f5de9def4aeee272::b39d11421459a5339b1dd830375daaef730872fb::0111175ff78f6810b639349c8ba85d0b74b0c551::d50b0c995280e856f6ffe10cc9a2a41110b13d5d::0946a75aa6ca2d7e8be2d6e2c9087bfb9900c5f2::f1a32342452c293e11a3c1f65d17fab4293b5ab9::d7ecb1b0967361c9f64fa78cfb9171599b8e4062::5ad11562b0aab5906aa5da3fe19adda323ad99f2::d679cf785febd7423be545fce0f38a1f71107dff::
https://api.github.com/repos/JuliaLang/julia,19983,teh/linspace-0.5::release-0.5,1,closed,,"#18777 is failing at either build or test time on 32 bit, in ways that do not seem entirely deterministic. There are at least 2 hypotheses: - the PR is broken - the PR exposes a bug in the compiler This is an attempt to distinguish these (since I don't have access to 32-bit, I'm relying on CI). It's not a perfect test, but if it passes when backported to 0.5, that increases the likelihood that it's a compiler bug.",2c3f6af8a9619b52c0773e9de80e270936e6ca8f::
https://api.github.com/repos/JuliaLang/julia,18811,jn/backports265.2::master,1,merged,,trying to cut down on the diff a bit & bugfixes on the wrong branch,6876dd77f3e5c719221a6dd65224e08ccfd6f97f::4c666027d4ce9a23a443a08976641a0cf07896c5::b4d49e5616d58cf9e39bd87bd4fd845969c54625::
https://api.github.com/repos/JuliaLang/julia,18679,jn/backports265.1::master,1,merged,,"Fixes some method definition orderings, and other `@generated` functions, that will be broken by PR #17057 should this 10 be given a name? ::this causes a method overwrite warning, why is it needed? ::""too closely"" don't end a sentence with "", however."" - just delete that ::why the rewording from ""compile-time cost"" to ""overhead"" ? is this not strictly a compile time difference? ::different quoted expressions ::it's just a random round-ish number ::for the same reason the other method overwrite warning happens in searchsorted ::no, it's adds overhead in many places ::any horizon for not needing that? ::The one in this case might not be needed --- calling a kwarg function with no keyword arguments is fast. The problem in searchsorted was that computing the keyword arg default values required dynamic dispatch. ::True, the problem in this case is actually just that lowering won't apply `@pure` to the kwargs functions, and that's quite fixable. ::add a TODO comment saying to fix pure for kwargs so the no-kwargs method can be deleted then? ::original issue should be corrected by 3f2213f4e74ed3070045da139f659694b7c071a8 now ::But this is not pure.  This is mentioned way later, but coming after the new point ""4."" this is just odd.  Maybe state that doing `println` is ok? ::To go with the later ""they""s, start with ""4. Generated functions must not..."" ::""was defined _before_ the definition of the generated function."" ::As `@mauro3` suggested in https://github.com/JuliaLang/julia/pull/18679/files#r80905058, perhaps also mention the issues immediately alongside the corresponding examples? ::for -> of (""now that we have a better understanding of how generated functions work""). ::`println` isn't OK, it's just a convenient function for showing how they work (and along the way demonstrating why it isn't OK) ::rst, so double backticks ::Just FYI, this change doesn't fix the ASAN issue I mentioned. ::",469031eedb205add9b7a7e28acdf56a45143a0fb::d5baf6a614712a67ac2456e3a89ac3e1aefc4982::8e39436155fcf3bb8088dd61908f51a86d7b7fd3::d8ea82ebf6e507a53b86e8d50e88a5400264bba4::785adcae18a5e89007a666205ce3f9c24d0502cc::39d36991dc9596bd0b2b7aaad78077464d67f89e::f64fa84d6b7887d88bf19bace0e0e9076379fcac::f299848202f84587cb437105fe03165ba250a288::d7902754ca24943ad3976a9f678fa054ed07ad12::
https://api.github.com/repos/JuliaLang/julia,18557,vc/power_atomic::master,1,merged,power::,This backports a fix for #18555. The patch does not apply cleanly to LLVM 3.8 so I bumped the required version for Power support. I will try and nominate this patch as a backport to 3.9.1. cc: @ViralBShah,9926ef7b49cb89cc1c8225a016749bd5f1dbf926::c0eedf06c6a5290fafd02b1c77ead98af5250e36::f8cd8675c1b73c345dc4aeb96625723695b1b4ad::af13585e9d4cc7ebcf2cbe466b8fe41e4fbac7ba::2f4cb25cb6616390180721aa1cc92e243a17e8b8::e01eb548edc595bb428273fd3e370cfc8672f398::bbca3b4156ae634956741cd973a2ac6a3e883974::c38d1f8b77bfc030c0fd6015639277143380847c::
https://api.github.com/repos/JuliaLang/julia,18546,tk/backports-0.5.0::release-0.5,1,merged,,"closes #17418 will run pkgeval, and @nanosoldier `runbenchmarks(ALL, vs = "":release-0.5"")`",b90f1a2b38604ea38b65ff0e82822cf56e0ade8a::cfbb42f67a1ac2fce0507f649c7376b8ef46538d::1666d7c232a6c68afd254eaef9365f46880caabc::9ac7312efd9cf62425ebe1e9f45b04bb2588e659::aa1b84020ab113ac147033e7a9024e03def66de1::3b7d29a3cb5234d4f17163b77354c5b694dcb026::8af23c3473121d644efc4ebfe6caefdab5d82408::4a681b7d914c46f52db565c3c4b4733b9054267f::21e0998952671689d9e84be6a760fa351a609355::68ad8d806757f5b737fadce7e03078ddcafddff9::a0fc08da9f0f11d499b192c9fc88a80de133f40a::ff6cf2cd61ee24bcac33fac6979fa7211e8bf458::b6ff8a6a4598a0a353e340ff2b20bc7fc5d31510::6d33adca2c4f5578a536f590a72ba6ba6650a2b7::99df77082e658b31e031652e9cb482421ce0c187::69550921d0bac55c7c1e34764e2ed7ae09a3aea6::2b4c0405170f670ac1f5d736e34f45743532393b::4de501d76d2e56c6ec9b1b24896dddbab856437a::de37d5d5b52283f32d4640e4442ca46f530568b4::b7be1c055d6f165ba6ac86b7a47f217912d57a8b::682a397b7092685fb260824b131ac47bd31f55d9::a62e15bacbab8313862a1f79dc0c56368ae04a1d::cf6395f3621893ee88f88c6c167ec8a16c2fba90::b9ec73c89f97f0a8e8242297329dae4ceb22e055::7919b44b4fb40b08b79f21caacbfe8320e154482::d62d212abc1dfed7eda125fea350609fd25b1001::fb96ca7c6680f1ce312015a87289c0642ab4e342::8ee99a54ee4c55ef6a261ebb113ebf77dd094eb4::aad30468c21caca84ef58f94821d43d3ce133f80::15096f04a6d521c76a535ee642a745b40f5085de::58e163cad4a803df07443669f5b8bb50b45d0a62::feb57e6109b739cd8dc7e9d3345d8b262526595c::
https://api.github.com/repos/JuliaLang/julia,18478,tk/backports-0.4.7::release-0.4,1,merged,,"@nanosoldier `runbenchmarks(ALL, vs = ""@2e358ce975029ec97aba5994c17d4a2169c3b085"")` vs v0.4.6 will also run pkgeval (32 bit linux travis hit an intermittent failure due to a fixed-on-0.5 race condition during bootstrap, log backed up to https://gist.github.com/caa5dcd3cfd4af0081c79b6648926e1c and restarted)",b63bd3392c2bfa8d76760902ed7113df989a3c72::634204e7dc36156836ef0d282a58ad07df753409::e30c796fba9c1943278ca3b08090ed01e753d8d3::46b080e664513f686efb27770cbad9ef584c4f6b::aba3de2da4d1a303f39931dc8ef485bbd08de0d3::f03f44d7b4e5bc0eef344104350535edd3a79f78::c68c9c031e044d2b9463b0688de57d4131da4b55::3461e860da95bb7caec19a52e2537710d300ac37::6e239ac91a9f68bfafc5e3d8d28a60c0a421e69e::9348c2afdec87d05376663ffd160b8e0179304e4::9290c4662a25fef471b7f2e9570507c60e0757d6::9d6006cbda8ca6f9538db61af0fdddc3c86c6f60::d45443f189d3f15ad5fa185948c5987cbfd493a2::7cb9cda07fd4b32bb130f7c7ae1be7ca999696dd::e14fe8e1069ed95942b0b291bb4f2169daade495::bf25dcda4074e4b8881ca10a438b22976fdc3e47::46ab18abfc07f101a7db773b9532493d5f8c2e2c::9c6e8bd02565d9e77525369962f02c91b59a5170::740fe85cc4891c5f53e9210644ec7f5ebd99c505::25339241f90db2e84e8b478a67a2d981aa2a4e5b::cf87b561caaf931ceffe6b206829ebe92281b647::7b2bcd448986df9af3bdc626ec5c11f68cd48e22::93dbee31b00cb472374bb11a28ff712e2a2019e2::58eb3b31fc580628378c6f329c3d429ce8a7fb4e::b11e4794569e7496d535f98b5b619bc05ae7c02a::bf118b77ce11a3abe7e1fd777245794b2cc36684::08358b0dbc7e7157c086cf43b69509bec17f9b89::d1cae506ebd14a2363e6fdb2863c3539424e7abe::a0dc8e709b718f7230f44b5526f1794ff19e2321::7da826f83f1d04e61f7ee0e1bbd8a9e09f5309fa::ac54480d5c087f94a2a7f9210c275e447a678482::3db409f7cfcb0d202a6237cd8073e96b0644594d::4247e814b21d02790802484fd9aa105f1e590d67::9b7d308a032172a4fb2043ae15576ed3e586db67::d25162d4bdaa72ee7a560551a9c54c3f4555c46b::015eec092698b67c63db07fcbe84540ac78f81a1::a5bc279118e1ac17cb35bfe3752c6885b432d43a::bff701147f910c9451ba8a0b1ea3fc4da8c4a826::e770e922b919495c8cf866fe488b14ce4e0a8914::6975bd8e93309f1230925df0d1fde84a19baef29::
https://api.github.com/repos/JuliaLang/julia,18169,tb/backport-asan::tk/backports-0.5.0-rc3,1,merged,,"@tkelman: as requested, ref https://github.com/JuliaLang/julia/commit/467e18120d71f999b2b0528126dcc7d084bad84c#commitcomment-18714901",bfa4e6200f5ba019984aa13deeb3c518a7e21d2d::fa24dff5812644d0f2acdd72e9899866f915359b::51d38f57aa68c9c35a520dbcaf570eb15ca6934e::be350f2bf8b0329a2ccacfaf0db6b8495546c6f7::727daa6e0ad2d52e83b8da1447068187e193e689::f3566be11da0cb16d8b8a2cadb554dc8445896aa::
https://api.github.com/repos/JuliaLang/julia,18156,tk/backports-0.5.0-rc3::release-0.5,1,merged,,"@nanosoldier `runbenchmarks(ALL, vs = ""@0350e5769b43f56c4c570741b0f5b2edf9399dc7"")` (vs rc2 tag) will be running pkgeval here to check for any regressions",4160a8a2485ed59c9d55e94784beda0e88252e62::b9d7579f62490fa358d8aeacf5c4ba7fd73bdccd::19b4222e473f62ba2524e5c25f159cb3cc81c8cc::4364deda7d8f709b8ed4fd15b8f6de40feddcaa5::65aa0b05b281f0b085e831d8ee0c217c1f4d896e::56623061dad10df82d9317c74b3e75aca553ad81::9a6f03584dca103a5fd586bb6ac2c60bee388050::a36da57dbd46dc423c06ea1cbfc21f8984ca1908::05197a51fa015dfcbec05ddba9f2e2e2a2945150::14a5744fcbbcb90e83cb42550c014e2244bd4100::df5286a8b317d7e33b3a2da21d6a3720c4ee56fe::6dd9e814a0f5d5f2d40ecf7c54b93743e2ce59cc::dcea839384bbcb5484736aa5134b6d604cab1cad::721c6b7125b2aa72cf468678a352d54f14d6b088::0c4397da2c519324d15a7194b5799fb18bc84814::a062d65659bb696fedab29306a9f07b14fff8ae8::5cea4568263fcc7937b4dcfb1e954446730de57c::b68e76043846b8612194a46adfc82d2645d5927f::e8db99420f258c9bc1c550b6320ee43f036e419a::6def1e690b1433273a881af5a8706152f9a0d136::6538aad0b82735cf8435fbfdf7a8bd5131c7db83::ede72312f4a052049f520570c4ec6cee6aa48389::e1fab8366d026b533d0c3fb2af07555290f4bb4a::39c7c7faffa86318d93f74afa14abe5fdee28071::9d56d578c61a7f58e9379e43179aa80d56f92a82::ff6d640bd11ca7997e45d9f9db29e5517b06f9e1::1d3d115a79b9002e72164b576a7bb697ce10666b::aeb04aeb1b9214529247fb417e0e2a44c7007c01::5381a438997f7950c929e4e0b2af4f0b5b3d1e28::a0ead964518b19a6f894b3ff26dabb6018fcf9f1::14854d7e2f02bc13526a39300cd5aa4c5eb3fbae::9a6e884f9f1bcee065fdb2705a687d521f2e4aa6::cd44917d5777400093141e70e9e320bbb574d622::1d566a977d730a027e3a7c1a53f3eb57958c22c9::20673d9caa4e40219d516435404dcd3f059251dd::bc19ea404ecc726e32cf95d8acf105cf19fca88d::c308b91bbcb50f189d5d3af4768f83e91f5905d6::1c255479e33d9489ac76eac19c7babaf3c3d4514::c144c184766b682acfdc9f6adde631c8dba22f83::0136e4f72a6649c64d64ecb0e9faa0741ce237c8::18aa36ebd4d13cad347f9068ff57167a7e9c9e73::109a43fd53953c5e28fc055f9ea46d3877356897::c2a20e10577eacb828f1fb65d28d6ff214a15ed0::5562759698c6c3012c5c0e154b86e98e0f360e61::7c3adf77fb37e076945a56d4015ac024e348c120::27fadb44be87148d1519046d061e880e5f4af479::1aa11750c693ac9e6e4eedc112f2b9b784b364f5::42a32623b64362f89c82e165987ccb8527c213f1::bc7f384cb3e465ec80014d154b1c70dae6a61885::0388e37bb462a4b0ddf1e3e34ba930c2b39181ae::a3e144e57f3f7a378585861cc4f0016813f5725d::96ef8f23430f1683b77518a4c37b37b08ff7abfd::e5f7f5cf344968bc17378e27d212a9d405fe7ced::9a89ff9b81294efdc97348e768a4f5e0bed6db03::32610e288bf9f534ac3eaa4d9fa2bfff495fa048::caac5818d22f010d57b6f4e8cfd5996360469807::c776bbc74b73c9df546b11284ca230cdb3e0e878::2cb13f31ed36bd062e7ef246a1bb13dfe4c50ac5::190064fd9b446a8c6a34c424bf7b282e1d32e0d8::beeb6c051709c1c0291a219cead3dd474c2b24a1::25be0c160dc0a12e70b08a8224c348282ea61568::dd604d2cbad3ebe45786d3f0fd0eea659429bb34::e313fc9d3b0a63308f97dff05b77fdb63db97f15::cb1e04d191555c88dc13986d6f51898e942b4337::ddddd4dac3fc437ca3473d4758ec1bb262c6b405::24c98c2c1351046856ac1cbe7fe4a1fbb3d0cf44::edcd7f905e4c2876ca5a608e92e2af73f0cd1183::95acc0f0d492430f6e69493c8d043dc2438311e7::a48ce1697af849548a2c2c0e065635e357401ac2::e7d3848d3bed27b9ea62210cff40d0feeeec57a2::f703e65f5e442a7b221c1289f7c9eeca4a695293::5920a4710ea1da3b13b337eadf1e54ce89b1e662::738f5caf5056f219b22967f1826906576d4ca652::01c76ea366710dd5dba36f13b966a0cae8af7022::22a73dd4c2e1e9cf6260190776e683342f04e938::962a2cc2555c4408ea5e1e36d5fe1cf54a98682f::6d0aa14594b83ffd500a4dadac52f048a249891f::51aadfec4f0dd51e986608ef9057674c3d07f573::ac9627ce208d61b45ec880debb2696d41bdef7eb::6dfbbfd4608a96095d1191a9a540d8bd7810372c::a61909d5af2c95ac5cd2411bdd43ee49d95e216d::fd5bfed331634e244bb77364cd4d48cd87939c8b::ca5c823bb34fd4dbd511aa8b022f5b52d177fe06::bd679a346bbb79925c8f6b7f05ca31e83616057b::782cf362d31a0aeac9f0d02cf79b7deab1096373::09f7005d48e3390333cfd2d381b6b34aa5a5bece::1fb052e34e004e4251a67e7005176c2d31aeac0d::3239e25acbe5fc6877be4990eb94308c5dd3cf51::add64d9e4a53a59df8df93b0290bf6b2e43904cb::293f63ac2dab274152f9b929236d5e092e8e5d09::e576c87fdb04eb00ba20a14e7ec28b5de86775b1::d0a632b50be3d20cf863340f6c1c7ab0ae6d41f1::6da641f35796f51078085859064052e4c0f05262::f5ed7678ffa3abfd835ec6513aab1fbfd534d7d3::bfa4e6200f5ba019984aa13deeb3c518a7e21d2d::fa24dff5812644d0f2acdd72e9899866f915359b::51d38f57aa68c9c35a520dbcaf570eb15ca6934e::be350f2bf8b0329a2ccacfaf0db6b8495546c6f7::727daa6e0ad2d52e83b8da1447068187e193e689::f3566be11da0cb16d8b8a2cadb554dc8445896aa::d8f5ea946a72d18ed779b9f8aba2e996e226a485::9e1dbfd0dc2c6014b4a7f5872ffe7423b63a65b2::2082241a539d092f65b0ed218af911302d488fff::458c832428c6b79084f9b4e02ebe0905eb560b84::55a5b12f0dcac086b6fafa6d6273a0c45ffa483f::38bec84842d52a5e5b06fc83f3b1d1249b80b165::285ef3e64a8b3e122a379556ec38dd0c10944a74::a6a7fd2c6286ba44c1dde54a7ec76210e3407f17::69a605bad0d0e0be00eb545a14e1385a732533e4::fafdc7b8a3d365f03325f8fbb145e4ccf883c85e::d45bcaeb76c2693834520f8f39785903ab85efd3::f06e0f1271dddaeeaf4f8782f8d5ea0a971f9b75::2406ed91a2f0ab9e81b21f30eba769816b7d4553::fe17200dc305e6b1e1b0e2ea54135e7f04bb4d40::e5b833266c3d17d82c00584bd235fa773d9a4905::
https://api.github.com/repos/JuliaLang/julia,17960,tk/backports-0.5.0-rc2::release-0.5,1,merged,,"A few things aren't here yet. The curl build still needs a bit more work on master and might have to wait until rc3, and the SSH tests are disabled here with a commit that we'll hopefully be able to revert at some point, since they're causing issues on the buildbots.",762a2a99fce0b5799a067ef597310cd9296b24fc::c7cc66f1f6d25d47cc97c5b6d75dcb54fc71c754::7306033603e6cfdc0f09e001f5bffc005d3b73d9::c573b7b5fd623202ab7a1b6215dd49cb984d8952::3d91b01c0d8ecde9bf2a1c3e6e6643925f2ad888::48f726730dc9eef4f1f2695d67a0411b4fe5dd95::0e7933d0f51c216a0bbb155fcc0583e419e38cfe::aee17b6dcfbc6ae2544160ee7bc537be26228273::730c0a3f2f69be1f937b4ba5a8cdafc13016909f::1debda49e660ef19c98e69ae66ae3b33e07bf7fa::bee5a347bb0f01aa154589fd8521e07c29606e36::3d980ca2db5a984cc093f0d628d96c8cec3bdf08::631ff0088bf41875d7a2433fbf189d5eaab48d84::d594e10032e19045cc6191b92a0943a29816f348::0bbe0276807780dc964e5e43a1c5b52525ce5a29::df8dcf3fc0634019e083ba2b85fe081fd08cc914::a403819e0a4781ad3c87e23d34cae90752a26058::630b862c0004b5d82365f92724f119b6e74358d2::ea617ec8595ca678f3f69f9182fe33d2da7d4094::775c34e36c9392f1947d9ced0ae413709f3e53b6::6903268ddb51b85ec737bc0e89b3df0607784e8d::b9982cdb77d595c4819ce7d4c1d258f3445bcc46::907db9f78e37b4eac43736efa47e38699aef77fd::203c34d6c4dc3eec0489620ade8094d6da9a376d::bb4053856a9e747de157cbc58807f1a7b73603ef::87f160cd98796c8504527488d90a4a96a63739eb::eb2f488e1ebab9fe65853bac8940e49c3f14ce14::8f06a6cc73844eb56ff219080ae810e973189707::7a5e180d1c7f6a24d5016c06b1f84caa0c5e6843::5b1edb5eaaa705447a2b5ca391511a2a50017c9d::91a3c42021911240589ed3b36ec936df2ccfd9c5::87565d3a889caa5a80a0ff29adfbbde9f30f78f2::df978c3f45a922c01eb780691e81496cde331ed3::d09dafbf986552627eb0dbd045204dca9481879b::7b5782bddc993343b2ae2263ae5632fdc05b23fa::96af21a548347c934f61e821ceb41687ecd8079d::0a8b9a24b7901b7a7a4e6e7ccf58518682ad5a5e::3d9c3d180f79f40f7c0aff951e0f5c75776a15f8::25c23b721573ac0a1c26dd2d782c4ecf8f3f6b02::7db1cd9bec043f9c21ab273901daa0b6c6337dbd::b6737487d626c2f2465eb35c55adf001c73b158f::d5a51e983e2e54e4d50fe768eb4c2224d4b67635::c0936b721e6c19888edfde4839cfc588a09b34b7::66b8bfedf05d068c5d81e3adf6002c970c7ecee9::8a1cf9b88ae178a250efd9afb1beedd5943881e7::d02d911dad6f818fd5dc0440a950e384ef20349c::4adaeee81cb31d56d0b2bbc3417802f0eb41ef3f::43d9f068073ef4723e1f08d16a33ca6c69aa53dc::9e896c9f68367e834e32eeb632da2b86a4e93775::fe1c733f181a9b21d2431b3ef034350455649746::3f2a09dcf8e60a3dd07440d9f2c5a625741c3281::9bc9a479de067ad94d8c014d70852a6b75413260::916d894f8cc535f9c9463633825368e8b3089779::45c90ef0a67917873c3cd96f630da2e479035aa4::c0bf5731c2e173bcfdf5a351321d3125a836968f::b6372abb2cf08faac4259a60cb0fc200672bc4a9::d986e8f89a2b30d07d5368eacfb7faddfe0e2d5a::f54dec2732d2ebe422cd02d649bd315f6866710d::1c7c90553f738ac72f912dca32bf90c4adbc5742::1662aaeb51fbb250cc600cb0b3f67e2c2baa0da7::a4ee378376872b34108e7ce8f83f32897f1d5ed9::203a8f01274636e8cf2c8538c0a1447990b0d61c::032db5fdcbac08c3d5b7eac792bbb3248d63b3dc::b3fd7955a87ac9c93bcb1e35675e40659a6d46b1::b39e59dccdd9e80f87d84f2a491c3ec77c745cf1::1c5cdfee91473bc5733479b578d975f1f1eb2044::d992f3dd10602ef52d8c297ebb7c7396a579c963::b311b03479ac8c3d1e636f9b538468ee5063464b::1bd4fbbff1da27d1c7c6118cbb8ee022e11330b5::058dcea24c53f1bd747618c5aae86a0752eefbf5::c3cd268558a3e54ddbf25037b2116e8b45f21253::03cf9272360a1410c3d48cfb2fb387e5b9c93663::826f27b101086ea220689a1691ef6553b5c72a4e::aa59b4201e702ff6bacbf77d1e140bc4588741b9::84ad7c720cb0aaaecb226388eb9c00a5a2ba2041::799af802daa5ae14713ae3f85ca8a4fab5b1d875::a228a7aa6a9a16ac1d2ec53fa0aae5ab9070b208::0eabf45486b2cf5f59939b51433b5669ce4ab11d::dccf0cca11d7dbdc1dbb365db6bce4acc7f71ed9::688c3d6639f86bfcb2626317b7e547c21a021e3e::
https://api.github.com/repos/JuliaLang/julia,16992,cv/backport-edit-dir::tk/backports-0.4.6,0,merged,,Clean backport-able version of #13500.,8a7fc704a8947d243502a5cfb78015848c2b838c::816bf181d4223fe51222867ec691594e08bf953a::67fe80b0f55354789e9d95a29d7ca149dafbba76::a4e56253195f3bdbc6af2e3fd5419a57cce61c10::
https://api.github.com/repos/JuliaLang/julia,16991,cv/backport-pkg-build-fix::tk/backports-0.4.6,0,merged,,A Julia 0.4 compatible version of #16584. The original PR didn't backport cleanly to 0.4 as `PkgError` was missing and in the tests `readstring` was used.,d5fc7b744302405c95ca409c35e13943f671f5b6::210c59ed6805fab1bdeacc24de2c4b8d295de405::
https://api.github.com/repos/JuliaLang/julia,16990,cv/backports-dateformat-docs::tk/backports-0.4.6,0,merged,,The original PR didn't backport cleanly as `base/docs/helpdb/Dates.jl` didn't exist on 0.4 and Markdown tables were not supported. is this supposed to be data? ::H ... Minute ? ::I clearly messed up my Markdown-to-RST conversion. Thanks for catching this. ::The original PR did switch it from function to data. Worth noting that all those functions do have docstrings attached. ::,3be0d25c9871e3ce17d872e306f97ddc543d6664::
https://api.github.com/repos/JuliaLang/julia,16980,tk/backports-0.4.6::release-0.4,1,merged,,"This is way overdue, primarily because of code signing issues with the windows binaries, ref https://groups.google.com/forum/#!topic/julia-dev/YipJ-uRF-5Q. That issue is still not resolved, but I'm preparing this in the hopes that we can resolve it soon. Worst case we'll put out unsigned binaries that trigger security warnings if need be. ~~Still have a few more commits left to get in here, once it's ready as far as I'm concerned~~ I'll run PkgEval as usual. Speak up if you have bug fixes, doc revisions, simple test additions, or similar that haven't been tagged with the backport pending label yet.",00c1ac387d1eea9c20163537df2ef414c9aef391::e0aa3c4a5c8fbfc014616e4b06aab9760a1db0b8::632e0873574a04b3b3e734f53feec53814826d31::c47090d4bba7415e9b628fd92efee6f446d241a5::a935100e75f604b664ec6a7c64a6cffb94909d2c::3430e5559785135e2b5b6322bfa59c199a4f8b72::606386769e5563788a704407ba809be700329b70::51d8a18eeac20f5c244b23e69ce6e152b530f92d::f9f3726ed8be109fd95c49329b8790bca73b1b43::555d956e53d8871b980efb1269a481216c286acd::85931919f9e8833a6a516197a4beb42b76a9d9d6::80bad000e6eff75e37370377ff8c408ef10f09ce::3846eb4d1d2c5b1db013dd4e577ac845c31343b1::6829f889e32b69658a1a07f14b34bb17364eba46::4cd3271b7fab06eb822ad0938c8db3a4d3cb0713::7ededdc4615088b3c176a0ba8384800483891daf::76083b434aff8198a20fde2afd45aacebf9835d7::6a1fa45a145298682b674ecae1d6b4caf5eaf094::96614fd52d89c0e08c074fd0d737cfed533c96af::e80d56fe79b24f962911d0065d348e6de65514af::3884d7c3ac0ef9ee0a2ace377c55a0c2d18fa3bf::dd1a8f03365c47db0b27496f4e8386312a0ba239::21d7d1842baa530177d1cac547749ab3f5ef5e69::cfd00f569c549f720ca2216beaf10851185dfb27::718e54301eb13d8dba839a11a48718c1d1307b03::eb9ff323cf86909b687283a1a60a32493d967933::668dd1af9345596b51b76fe02a1f464d0fe6ef2f::081c049d282a2ea0c049a6e6d532cd60148232bf::7d5483617e48459b00a6a43cc6624c1333bc369d::8a7fc704a8947d243502a5cfb78015848c2b838c::816bf181d4223fe51222867ec691594e08bf953a::67fe80b0f55354789e9d95a29d7ca149dafbba76::a4e56253195f3bdbc6af2e3fd5419a57cce61c10::3be0d25c9871e3ce17d872e306f97ddc543d6664::d5fc7b744302405c95ca409c35e13943f671f5b6::210c59ed6805fab1bdeacc24de2c4b8d295de405::fd88b57c56845947ebf7f0f93cbe9928d5802dae::67a589285ee10f52a269d4f6d60e4fe21f125228::2c7288e5ecf238cab62e88c7bb02d18b8fe1e05e::03db8fcf597e59472337cddf87f2f4a5c2e623a5::c7c8b0f1d3fdacd40f1fd959f9dfeab644ea5a2a::794245ba9fbf07a9fa811ee41aac115968571f23::ef7b1dd77aa780aea01d89050e1cecf9ddddd672::
https://api.github.com/repos/JuliaLang/julia,15638,tk/armabi0.4::release-0.4,1,merged,arm::,"Backporting #14194 again, but this time in a way that should build correctly on release-0.4.",0b2c097c6b8c0bcbda39c676c55e79c0eba3d3ac::80e9940c68e423e09052a760f8cb2d858bc85169::ecef11454475c0e17f77924ff8dda6aca99a59b7::5d87cadbfb916edda4d0dd17dbaa46eb6d85eec4::
https://api.github.com/repos/JuliaLang/julia,15441,amitm/backport_finalizeshmem::release-0.4,1,merged,,- document use of finalizers to release remote references early. - make remote ref finalizers  robust to multiple invocations.,44cb771d689921e411692cdb32d4ffdcaec8ad43::
https://api.github.com/repos/JuliaLang/julia,15385,tk/backports-0.4.4::release-0.4,1,merged,,"If you'd like to nominate anything that doesn't already have the label go ahead and leave a comment here - especially doc-only or test-only changes are usually fair game. TODO's: - [x] https://github.com/JuliaLang/julia/pull/12429 plus fixes to satisfy sphinx - [ ] https://github.com/JuliaLang/julia/pull/14659 borderline, behavior change - [ ] https://github.com/JuliaLang/julia/pull/14625 also a bit of a behavior change - [ ] https://github.com/JuliaLang/julia/pull/14194 needs to be done carefully to work on old llvm / pre-codegen-rewrite - [x] https://github.com/JuliaLang/julia/pull/15285 need to test whether this works properly with winrpm on release-0.4 (edit: it didn't, see 36089d7713a4f21988369f7e0b22da46f74d403d for temporary workaround) - [ ] https://github.com/JuliaLang/julia/pull/14902 need help with resolving conflicts - [x] https://github.com/JuliaLang/julia/issues/13818 and https://github.com/JuliaLang/julia/issues/13851, possibly could be fixed by backporting the non-breaking part of #13491 but needs to be done carefully - [x] pkgeval",397a781e2d98a22196570391c412a85a47a4f558::d8e25374ac161b371bdc14d5d2d8ea414093ce29::132cb2093588193a56a38952466e0ca43c6a1d97::fa6802d467f33cdc486c201140458911a5cd8991::235fde2e65948cf8df742c2aef3d1ef243a26c81::a437ee9d5873cc1a3329c2644809c0d98e068f1e::9e625f6b3b47c1439e4370f8a75e1174e23159b9::884d2d09f64c167f9c183792601338a3a7a02b36::221e865c4b35d079cfe793e46ba53f5f894e2b2d::2ff37c91c85291341861afd1a453702bb555b550::131a2df183f5464089bc6a53f931857b67418274::148dd779bc9e4943efb6d77825b6082d2bca1ee4::d776ca8ffa25c01764f7420bbe8087f38cc52958::3602b5b7e2eead1ed72a9349551959a88b88a736::66326621d8ef6dfd35aa98b04a717d81de0a019e::f5a38dc36b50406b643394907a88dab2794641ad::d21e9b08bbc095c059b01b9d87bc3f73e0cfe60c::1a706c42e39b0f684dbaf34a7ff61be128435e5b::d214e1cb892c45c7c2e625932be74abdc6bfb266::fd33166c827df738ad6d6aa22762b5505de42d17::119c9bf549a9f9f55c521f5dff81423e19474bdd::9f70f69253204e11ba1380710bc4a81f27b2372b::d7dd76412c9187f6bd91fca3b0632f3fea7d5a7d::910baf8376f2e0bf8f1a4f0ee70e819dd666d6e8::64da48a7123fc159e3f8b1eb2a14709e423775f0::a06f8a580a620a874edb47d63a6aaad037859ecf::83e6732b4221b7d84860ce20be7030f9ac800cb7::b5cd49c1868c4dd269430a6a096a0ee63f6761ec::1a020b06c37d4b88628180144b9abe7c26d08be8::2940a3dca6e1701dd8165e782f7e9e79661b5b9f::129d6463a006d2d9103ce01b7c6f11e5de1dbfe3::4cd482f94672fac24c6c3657940030a98c1c4b6c::8f58a9884759ade0e8a495425a0fbd358ebf2a97::99422341456a50916307fa4b65e6a7df2c45bfba::1727c0f0bd69f3f0390ca0760967e6b3108bf774::62b7e07ff905cb66b9af98bf7b729997065e3847::3770c617b060f467d7c48d102fe258f15392d42a::722463bdb92783e59c69d98a77ec9f751e08c1c0::a86f33c19d0ce04a77044f4c4140e2449fe6119c::675305c635ff07e74316c78e6dfbaf6796d45e04::4e6cf74a04186e3790708c0a7f967ce98a208501::c747915693d137f06f9bc6f2c686e7970c9d0765::c53b24fb51a4412e4881b779a893e7d210dd2186::1d274002e59962a62d9132f6da22b77dafe3da23::ca4f7f336878793777a1b3e188b5543b86ca8561::bc5ea278d7cebbeb64820efe7d2daec48d272278::05b1aedc3aa1e49e91f6cbc6e066d9fceb0ba7e6::93e38d8aaca361ef610a0e262aefc59d577c216f::e4bd7997af27291e52e794fc0b83dea73516b7a3::36089d7713a4f21988369f7e0b22da46f74d403d::84c1be48e253d2e5bb044744bf37d83c51568b9c::e5701a5e3a9094756843e342819150fd627d77a8::a5ba47abeb278dba5fd620f720e102a8aeca1e5e::647cb78d45f864ad30297cef2792ab8fd935903e::7d85e102b98a203c91d32174d6f8cb46b9bad6fd::6fffa590023778100f902832ae0f1384a08dc54b::d4d015664fa1a42285d206791a7bf2dd788f4f4e::fe33ecccd206052edcd3e7e733d091ed843e2641::
https://api.github.com/repos/JuliaLang/julia,15025,teh/union_inference_0.4::release-0.4,1,merged,,"Ref #15024, CC @tkelman. Note this is against `release-0.4`.",ad7f6ca2163749482b3eedab018427ceb5077e57::
https://api.github.com/repos/JuliaLang/julia,14611,tk/backports-0.4.3::release-0.4,1,merged,,"Just starting on the already-labeled pending backports. Will run PkgEval once I finish putting more of them here. If there's anything that doesn't yet have the backport pending label on it that you think would be a good candidate, please point it out with a comment here. Not yet here, but considering them: - [ ] #13803 - [x] #14372 - [x] #14293",93235e85a4b1e9f5d9507a137695143128953d9b::69df85a728af4c3c4989dc233d651cc9c0797591::727d41ae4fc28d1c1401c204621424a4d9d6d601::b06c4aeca9d6cff09232ddfa547f0c383d70ffb2::b901098a3be2acaab7811b23a301c45dd51162cc::1e7853d8f181eaa2d0debc1614f20e56b6618a20::b2a1ebaa967507b80dbde4594281e944fcbfcaa7::6e406210916ec243e861b781caeae876f12e74bd::d78cd3db67b8d8731618c440af90a162dd0e031b::4cd00d136ba02843eb15bc8df277ab572247a35d::93ccda0515a70c90384678f55d30a064de817399::cf1aac9a5407cd5c4de444fc1f822b9b1e795eba::300031917b66a733260e1c94d1dc4437f70aff11::bb2475c859f28cf38424ff1de7ebc8d5bbcd040d::02af545126a9a21a5667302c750372d7a02c4fe6::2fcdcbeb0b9a9c98722cdffe4119c85834991441::3d0a0e0113dff3379022b64a7d4bf22e4b69cb22::275231a74f81800ff0e436c52a1076abb70111fb::e91da1a9f4af8663dc5f06e8ce7b4678b7a29281::ad4ec582dbcb3042b075c1bc97a1203ff7f49d08::407e0722a84488b7ec3e2dbbc5b7e8002debd264::85ae4f852e9bae9534401a013e23bdc9a0d22229::ef55dd64600a43884c83a8cfb8e1a1c610b594c1::693a9d9e365439c255e0b37d8141594f5c0a2961::1232380d0ce2e4b27170f47a2cee7dd43829bab2::b2154331c9f2c84789151229a38271a297251625::152e3e38f7a406142ff5f73115fc11caa62c3314::20af3ead643544924e09059565cf865239ee86ee::11196a0c0971fd097716c0cc3f1c14f15533cb38::90b948aefd24f91a58b1fe794a6945cc391ea780::86d5543ad98156636c19f70658b0de1b0097db2c::0aeffc425cc25ff68caf22ee85bd2e758b93e096::f12b49ca14c7e970b51fe14d22edff8d38ab80b0::147db98a43bc9481d0ebbb68f11f91a02ea24ad8::d2fc2c0f7e223e8d69bade8f827b7edb8900a56d::34af337cf338b0f410be639a379b28f0ef3bde8e::5518051ea2772713a2efd995695d8ccb23c13850::2c365af0b28a260a57cfdd8dc0d162d778ec4b2c::27cbbfd7aec2a3d6cba7bc2eaa9a808b86096356::58b22c21e06f7332761dbdac511054fac8275ee6::2875a58394b0fc3e24cc1c5ee0c0fb9768320e8e::90c39a0002857b8279ea169e37fd9e5184453df4::36567e94ce3da5884dc25914edc76851aeceefe4::b90f488ee9033f31c335dad985ab3b8c7b80f087::b4f7de3a23837e2ff23595685da5bafe44bbf01d::b37abd3dfafe625d988559b252b0dbb751dbe0b6::e472c5afb79799b0b44fa345d325d7955c8f0401::bc35739b369b647f62f9199e6a42cd6c12c0a599::6b59785e452cc496af989a4a035536d80ae93489::a416435a78055f584a3b000def2bbace27022403::62fcf2210b53a67e2d745fc5f7beb6ce6e3b2474::961c8f52759f7ed01631b6d13cf2b1a4e7429ae5::
https://api.github.com/repos/JuliaLang/julia,14186,tk/backports-0.4.2::release-0.4,1,merged,,"cc @viralbshah ~~still working on this, putting up my progress so far~~ more or less ready I think, running PkgEval now",488fb5a5978589fec4e703203d333f27b859a4aa::b8a6d771042add982a6a8739994c6f7dba2f4461::e1a37492ff1053b114f8cb1fc2d135d25e3669a1::617db6b7625acebb22361c63ab1d898fa3f1e1bc::d8b91c6e42d6fa5aaec0f7c302539545db6fd354::a85dd9f9d99bc159bf3d714c7a2f03916d6a6960::f02e71dd2d97a5b7875b25f86056a5ed02d9d9d7::931cfbed4366ad160a5f0a7bab0f7220535d6490::18000c73f43c3368e3d503279a1b72c969985915::d2c63f4263fff109a00c120b6dfbe2a36f8afeae::81a214f70324140cf88794c0a416a94a3a9045ad::6e7268733e3e5de9543e82138b3125aae72af7ed::5efe36c326bced3a704bb729f9590dcc0399c2f0::d460c68316ecf427954dfb96a11829a480c68105::08d9c7f022c768cce0b1bb6398c8138da10b7eb7::ebe11ae74c90f40c1d0a8277c8bcb64ce8c6d335::6d2b7664652de2c4bf053a892a64b7a4795e1a9a::9ee16ff35852f7d64f2652167411e9307e6a1419::fc193543cb986405b991e2700630d36991390d86::1b6b76198a9c9ca58a00a1aede7d4e71672d6944::53706c3e30991d418a241b9d8145584fa1abb4a4::e880b3bdc188e44ae3801dd2ae095946b3be5cb6::cc31d44afe5e713c8b72c92a0b9a94a191984a65::80724ac1ef04e3da7f2d55aa9fe14c0048f7346b::cd06a1fffb039e19da55052d095f5207be75fe68::4affae3adaa01f3500c2012714ac493a4620278c::5b48286996e36bec7324c497cee7d73b31bd3065::11cb84906e657621141b0a0eb45efbf447985a1d::2df6a670779b030fe69564f62444d02f9366ca76::15bf60d40e37fb9ff490d24990ffc9733a29edde::a534db044ad196f3e249fcf879233653da03e9e7::cb2aa46c794c5338178e8753f929d8cbb9ec0b1d::bb90989b504edd9a25f0fbe466a6270ef8ad7c10::2ceec969c38dad2a2902963761af1fa79bb44026::0e5231f725f71399be8723f689aab53c7281006f::3f76dc2b9a8c1cb810864832a6c3f55e7f63b66d::8623f56dd6a5cfb9629836c4240f9cc24e869b60::6f5177cc7b120e9a3edd6f95c6819c4bdce2d0ab::f40a6111f5bc2973abab58f416d8ef270317efec::8662eec429924df77340510556f69db62ae77895::b411724abfa051993e76a302e73a24ff440ff409::51aefcd2e7f3f09455a71bdf3ea7b266d8ae92e6::0958a89ff015bcb9defffa4095cdf6938514ccb3::d4977944704af9191c55c635e3e1a2b5b0f27bec::6462964cc89d953344fda021e28614765077b5d5::231dd4a7faaf44a3c79613eeb601bdc1ba786ade::8d7683e4e96e5f7921ac625bce114d93e8224f0b::1896a57626fadf99a26fc76f0904405492a6c0e8::eccf2316ec689d81bf26dbfbf0d7a1341bebfa5d::6d5a8598fb0d8d0f284376f74ab8a00d5f4178df::0445b3a23614028167d1c71aa532bee22b770876::92ad0611123b72eb88bf25e2782ad14ebdc1e8ff::90584a9ee01ea5c661d3e035e9d7b306139a9431::7704a2a6200019f578856d32bfa43e9543b09786::75c791c64f2fa6c2227002f357e9532442bcd2ca::7afe152793ce2160b54a9db73cfc8f28ad9f1564::f44129f1f807cdf85632145dcf4f6b218faccd7f::a384f8ef21b93abf2df90ad7be3b2e3e19c7018b::38d462589649b459fad3b50d799445f92523f76e::ac98b71e294a4a462fb4f9a85a138a9553c89d4a::735fcbfffab9fb3b39f3fafe4b59223cafba796b::a308e191629f7ab808372069cf588aa97ad69752::13b6b3aa52ccdca19ae7fd23f88751c4e3adc387::5e8effe7763e90b2007175dd21cc15d39fdac4ad::040435b3d5d45a3ac268f0f2f72b63c5aa838cf4::89594489a893acd2bef54be9a305b67c019c200b::cc14a34c65214eed837e9bc51339540d32000cf5::adf54faf126a97c7e67a3604e07eb9eb737090b1::95368ee47e1b4ef011f23027270156862e0b4ac0::5603ced10e5c72eee39f4fb98291d7abe5122129::084a9adf534d5569f08273a5de41caaf543838bc::06c9fe39da094c5c80d534ae8abf1700734708f4::13a68a051e24f54b5680476531c973bad6720f41::dcf67a1b9a104af7d07456538da90bd58aea833d::b3dd88b73139fb957a01ee94c6af2c8d574f00e1::38be33e9c36a836917022f665a0d2bc74fe69546::456f38d43367b47019483344b6f7bb5baeb1d393::bf4eeab288275058dce0658fd45f50e66371f029::8b3c67bc46a093ba50472ec527a677794a3481d0::1085429aef0f1acff0021da1bac7234af822bad7::2cba7572f78ff001d17de5bace20d5364e872271::4d20f125618d099642bdba863ca7848072bc6306::4c33ac6aa66f70c413d20d4ad005c6521bf36ac4::7c7c66f5f050aa1a741740f15565cae6f5df2c94::64f167f3ff81c5beca1c04d001d878469e01a9ba::cbebbb71b58531c6aa00906188363886955acaa0::89386b47c0d27a86cc3c3db82f309039fbef29b0::b8382ea4a9cd32ea7f2245b77c71a57de60c0d4a::af1cd90c33fc40777ed3f0cd501ec21b78b77e71::084c906305f91862ba8867ecb82623d59069fcdd::906288e320330ccb90531b14a5b8730b49182c42::b938804443a1333f3c2b5d5d698f12f7f3974854::74a3188bc0916141dc4d62bb49f5d70b0aa5531e::783c2de7b5119b7ac2aa8630a187879214893a55::10defac13af8d4ab5b0d9beebcb66da5678a914e::fa54d2290aa85f29f78b1a859b88bc04c2ceb902::3202b54f8fdacc086db43518bdb88505dbdc84be::9f8ec24adba6a8360ad4d0a7e0e10d22b9941db7::74dcb330dd76ecad44739dac36229616d71ce557::f9d049bd226f0f754c33dbdc16f51779cf45b449::0a268e7deb791c72bdff5fd90e1f020da074ea67::09b44c2abf9ad7a23766b5916aaedbae6831aa74::bea4d83a67565eafb9b19e98c4bc2835f86cb3d9::d0af15f7249aac0ce4e937e23cf93eef28f62fdf::c49006707ff5707186ee8259e57be9af7dffe6eb::652d1de4aec0ecf19375b1fc412399097936180e::
https://api.github.com/repos/JuliaLang/julia,13834,tk/backports-0.4.1::release-0.4,1,merged,,:steam_locomotive:,0b472307d91d6befdee29a9e75716439ee67c8b1::192e140b8aec7fed0f3685ecf76589560dd122b8::b792604fbf99eb1094fd721af21177ff962f2ebc::8115bcd803aba6fe46923b07b7c7be67ffff7de8::b5ea3e12e1ffe2319c30fb180bf1933df06a3676::600f647405db76c21b5cae670bc270187a1d799f::63de70ab29addf5a9212deef5edee45044edaf22::efdcbf5661b531ee5dd0da89e0d88a16ca87f22e::33e117970801f797b2de6eb6ffd01d693d570e55::78d57013c0ffccc09946ab8da689e739d6859ba6::3b83b4b73936410b0b7972f0f36b3eb6215e97e2::6e02d3c800639942e516cfe891722a58437cd798::a80e901796033bf4444ff7273e49138c7766bd7a::61bd76363f02c627d7d764dbee00a0ca7a7d7749::f26ba6c6e4b599ea70292b4e9b2061d40fc08ee2::20edc62f4b0cdb1c02950e232dbf423dd0a12343::6b074d0eabe633a47a9f3430d0712eb060325bac::925ca743ca3ec7d3f842cba415244a704d291efe::6446a16264b43b21c5aaad33f5d130af3c80191c::fbe97b145866c9f7e04ce61ba43a9c56b920612c::68bae30a9421fbc433c16388245fa9a00df59c09::930d63d39fce59ac14d3339fc307b3920273d0e1::df0647e62987fde546aabd59134321f5219a7636::083a4ca3ea59b9464f4c733deeb0b0a82237be05::144fc26b3f1e7189f6fbbecf6d19b41207c1b4a1::656f3b2735644c15aa1a89bb583100fbfc302b33::76379cb3c428caf4814556bbb0018ad9f6a63b1e::085a98501759b95569563ce46cf9360f4030b57a::57ab2f6621c0f1ad68ad4453c10d173eb7e6410d::94f2a50a0d9f94ae1db501f814887a51c66273d7::664639755861bd04aa1f9878d77c01ab83eefdba::fb728f012a9c4c88f7ac586c7d9afefff6fdeb03::f51d239935b654ce461b0eb4996349ee6ffd69e9::1083a968950ddde58477a6549503fe8234779d29::3087de3c16ebf48d278ab4101608a7c74c33ef34::86d67f80ad505ec74356197660917d0d13dadf98::1f8a9ae616c07bdfc16318c821fb997554ea59ec::05a53d2c1f63cad9101a2a7ef6a45fe13b5a2348::6a02f0a3cbb32f1666089471cf64335cbf5d4ef7::d44e492256e381aa43f297918ea77f62ec863702::fce7beba598e50bb2e14905d276569d94537769a::66f21983fd80708a99dc74eccc929a7ca8e06055::be94078e0012dcd67f692320e61216e57c21807f::52306908f7a197b977e8b77caa246e547dea5a91::5de699bc6a68e0141bf157d6b4a092b4b6c81d4f::d91a6d3410ee21af9ca56e55bfe4b4c40b7d46b8::b6b590d38266fa7953209890f87e5de3e5396fe2::2b8a82741e7ff95083fe20fe2812d93be665c71d::f8b8457d596927fd9fbd933bbb5d45c0e6b1ac1b::d5e154c8d9a050fcf2c3c351fa6275f7dd3b0291::4b5626da90a661468844833829d2924fd761960d::70018be2da560a75fb0712fef3f74c8db7a439bd::4bebc9c6b9f1fe3eac373ab941db9dfa37770790::a3f7c1fb6069c1814eaaa8f250c6ecd07ce53750::1fc2d8e95c9dc1c516a376feeb66399e50a27381::8962141ce66bff8a31c5c73df82fbfc5ed535a85::fc584674bc34c0b75988bd611a81210bf64ad969::cc0760088678b410a6a472200aaff5d4c6b74d87::ecd449d76d32adfdb1e75aec3371f1e4a1525158::dc304293df428d9ede817f7a5ddc449186e17426::a80edbd802040655d9d7d8993d328a8e6c37cd1e::c2838ec3cfdbdba2e82f2f69e14fbd089cea441a::c86fd111c0ba937ae0084562e68fb194eb47479e::c671ba3ce76ca5f388718fb1a7cf1bf015bf0400::f975d61bc8741bb7f55c63af67bce4aa44a7abdc::25ab1445c679ecdebbffa8c3c0fc029023fb0b7f::b067510a20029b8d3ff5a9e1fbe01af585049ab2::5b0385d052b08cb78b8a81ce726eeb6577bc798f::974bf15bbb3e66278d3d71ac74ae19dd19859940::0e883ce605ce658c3277baa57ea9495fe3b85b42::18a5a8812814b2177aefb750137e97126e934baa::bf64d500148fad8880c4bd2dd2b4aace2fbec1d3::4550dd66f7e89762967f5b3fcb5c161ef7ccf9de::e57343606a0945ec7ea5c814012c7214e6a3e963::6c2b4ef3860bb0fba401963d392b669a1d588f77::116a6cee2bed8405f0bb5828f6e187ad3160c605::8b243ec682402e1a594dd39e075d361b059969ff::00db0ff5d790d4ed9f3325895bc7574b7e7d43a7::696771222ab137e892be1250ce5a0ac76b6abdf1::30c5d8c3fdf6829040632114c3152f38de1a4571::fa24a05f7f3421874dfd4bf1ac077a7cfdec3491::db51f983432df1468e9c0dd15bf7dbabc3bd0050::ded13809d194f2ef2e2696d512904545aa605fc9::d52cf62c794266bba9a40a29db298373c55cc83b::4f9cbaaf86dba9aa253c6d8737d313df5396aef3::6fa0f6eb4e1fe0f3110d0bda4e55e442839e0dc8::04f3d15665a0cf4f442fd2fe4bd5c10c62de61a6::c57eb1412437426b3540427b3c703d791e38180c::d01197518a41d2b81e72b5e5f388274826de99ad::61230f20a7674bd76fdd1242cf8be540e893b0e1::5f45e8c316b2380bdb43c34523a114db0c7af0da::cc07e6e38a79a2809357945a66f90ab32c7e1674::d651e4663cc96cbd570b0ba2796d3c751484f32b::dfc19042c117f5579814816ccc9efe4a24036e05::d9ff642a3fd5640b18b35a4821d4fa9991014b11::385ec5af8a9683268a3947bd78549b2b4ac3d653::
https://api.github.com/repos/JuliaLang/julia,13718,tk/backports-0.3.12::release-0.3,1,merged,,"Been a while since 0.3.11, we had a bunch of 0.4.0 release candidates to worry about. Since there are a few commits already on release-0.3 that haven't been released, and a few more tagged for ""backport pending 0.3,"" figured we should probably do one last tag. I'll build test binaries from this branch and run PkgEval to compare with 0.3.11, make sure there are no regressions at least in automatically tested code. If anyone identifies any regression between 0.3.x and 0.3.12 at any point in the future we can put out an 0.3.13 to fix it if we need to. Please do check my backporting work. The only PR with the ""backport pending 0.3"" label that isn't yet included here is #12645, cc @timholy and see my recent comment there. I did just remove that label from #12934 and #12607 due to cherry-picking conflicts, but could be convinced otherwise if someone feels strongly.",2b5649aab4c8bea071271558ccede73687b0a985::4c2e29797729fd0b7b6d7c1247a6a41e20ff721d::ebcc06f1be3a7135f66954e076aa7793d16ecddc::f3323b65e423f0450807f38d4ced841d3afebada::610fd61873083a035fe379184b83e91ba8affdb3::fb032d893bcebafaf6a67b7cecaef6290436caa0::8837f5ac5890f7ec198bfc51a4269320cdd287da::f05085651142f4570fa09d6c36c655c116aca3fd::
https://api.github.com/repos/JuliaLang/julia,13357,tk/backports5::release-0.4,1,merged,,"hopefully final, anyway",bb744fd14f01223961b0d2c74229a0ce001872e5::82e3ac81d6779240a4b00c384953c4d72299d6ab::4a9f00c65e4ec9fa1ed32bf0c615512f69be7bb5::6ec9c2258196cab2915a258c4ac3762bb002bdc3::cbac18e6036737191a0002bca30a5734c2b0f18a::ad00e480266950729a858b062a2fe3dd364532dd::009c368f9fbf4d5f3aacc85cce3b2afca6b8cc83::e97c0f86be39ae069f5b852cbd5c458638768fa8::90732c41c6ba04f4fe43ff7c96bd06ee9f7416e3::13b75de59adaa3daf43f4227fd8c1b7b34b0d0c4::035c10ddbcb6485279863817ff3accd8af7ac460::1128b7e4d5f306966a89942ba6b66edc6ec96937::00fb151c7c05dd544f540f38c6b13773a1f703af::58d4516e5c913120e4cc3fda15c86b84c6af72e0::64c53234a1f006e372b8364b12e0524575cbd748::3b72a695b043b9968e2d80674de3c2a4d79a058e::26388f087a0d221b210f0958d600493a5fc641ad::2d0238719ff309e5bdf8e885ceb4469a491cd7b7::06ec851db49788a92032f7b274d07e87f6404604::c66b2943e1982a209a8c14b17fee07b85c1085cf::0e156e3ec37c0f3aa7dadac54297ad77072e5f31::0f09590490420a78e5d4e50e1e145fc17332c678::a1766aa28302072ab3b05f2b04c175034d02aa38::d3536a390012de2e1f93608becd3741db058a304::3cdc2c662fe3a368d4a9c2407984f69213e16dd0::457071cce8e499c47e7374ea98a63e5d3befbdf7::fef1fb825c7d0775c0d659fbf046f3b1a4fa9783::ce93cfe975f2e5da9be61e496bbac981e0ad1f65::259b2a31bf209a7c633e49b5742238da59e86374::440c8c714052051d164bbc424a26317dceab03d5::1f3a6b713479a54f0ac1a9841dea78b8e9d6e22c::6be2c571a4f8e03cbc0587072a48caeb319332fa::020adbb7561ba91da3c4f250bed13a8ccdbfa838::4fe4fb5c44a2ef546e00f19e67426c2be1f9322f::5f8ff74ac8221c51943fbb8f0d168f8365a42d83::ccb7934e9ee4d38ab78cc5756bf781ce8bed70ba::af573abd92872822215d5ff0f98d04b6f599849c::1acbba289854a3568dd6c47dba69f46e0deeda03::19316816f9dbdc9bb7a8389299651ffae95a87d7::778c5d9055bdc8d4dc61af89050b8b3ee41bd57d::3b45467d89a6a1d1af11a2d831de396c2a9546fb::00579f76bcd61a63119d44fd14c9edf55efdacd1::125509a6687591c9dd4ea0e4dc2845b364b0b5d3::1b4308f87304de576fc058d643ce2b8176ea6691::
https://api.github.com/repos/JuliaLang/julia,13289,tk/backports4::release-0.4,1,merged,,Anything other than #13269 left that's release-blocking?,48cf35e97a20491fb1bdc1949c0f5a0e142fe684::25b4c0f5b9fb2a528c1a93df8c5e2e82a9958ce8::798f59d64d7ec6e3e1aa4f7efad03567df9ceba4::674af6c73aabdcd97cad833b290c3266c3f245f4::675920c21687303291a3b2e2bdac5bdc7d26e864::09f56aa7e7592d1d386b4e4482c8304a2807ca67::f0bc6ddc39dd4cfa5035161a1266ff9892342f49::1bfceb0c38e1a41bf9c5886cbb992334eec33df9::6f8fe41ac3384eb696b2a7cb5e6ef545570570a3::5e4098b04d94bde4ea2997c20e81c3811f2887a9::a27a9aef8d3ec0079bc10427f9c2cbe55a2f6cbd::0cb06e4922f7dcf96bcb9b3d7fd1f28864ff04a6::d57d91561835f69142e604cd0bbb8e06ebef155f::6b88ebec00ac1ac6d8804d919ecd2c51bd671d9e::3be2e00db34d23f5347202555ff308eed326fae2::73a718923f340c98c67df0d15bcbbe6c420e05cc::6916dc216ed41f2893961b4823f32644cb3bff17::14fb0a7177c387afc8cc3df77f368613eb3b9b38::ad4a9615d6d5e9dc8a17ce243033520e7f0e1e9d::ae847dc3b947c306f0422bb168d539efb4472f01::65557497111ec7431aec097ec72ab7891f2bee63::297862195d74b2ef586776656fda6b9742176557::0dcde3b49b435e525c7a29be824f5befccb79206::09db424478eae0104abffaa8141fc57059ba4ef9::71dde8b6583489d4cdfe65689440f6f6bcf8b612::b05849f42d8d7e65a51564395f36e9c6caeed0f4::80e9af6f498d191fc26729682720127251716490::0b09c8acf448a3c8b70054d180c8cbcd9536a8a4::035d559015ea2deadf1e03694ce1f6dccb4d6c86::
https://api.github.com/repos/JuliaLang/julia,13182,tk/backports3::release-0.4,1,merged,,"Will run PackageEvaluator on this, at the time of writing this is everything that looks ready / necessary for RC2.",0dd43a7483cd676e61d82cdae5e67ebe7f181eb5::02a885db549252d6767bd23afc5343501fdbca6e::abba461c1c098841e9064079a694cd04f5c6df5e::2b69ef6662aadda2dd26f2e37168fa4f05559153::dcd7ffc119760c0d542d3f042320f1864ee8cc60::fc83771daeb699108cf01eb1597752aac33fc8ef::fcc4eb7fbd38517e946c1a4878135418324e4fe8::a6cf1d3b0575dfc51d19de9491736674b20d026a::73e132cbd9b759a42d9a93514243dc439658215c::a89c40c59f0ac84d9afe03cfd5af9ea57211c630::f7e35900b63ce46675f28f59905f80e6ab54a2c1::79ffcb6ab9437750225408b8a93d18a31f645a26::18d15076197af8254a6f6aef97d9516a95f41ab4::2ad9701ac94b3fd58b0ae73dd1e822b568cdbf0b::35969652e9df480650fe6064eddb273a7cda73b4::2b71231c83dd3c31148978a03b1f471e8233aa29::0c3dd7709cfec915803a805b13b05d2ff703836b::f972e6ae54213d5b1257249d5a592acb60dfadbd::efe88f37e6b56330af52f20ff27156a99c945549::abcc5fbb4b866a9923e90b24d84a62193a74b90f::da6e9faf5727005490a5c4ff5fd4517d363b8d2a::6457fd3e24fafe65284be7200104a42073c06fa0::1c584eafb90e95a2ab4d8e5c071f660b5cd8939c::df6db8bf95146778bbfddf78b4a68df7c27b4cee::
https://api.github.com/repos/JuliaLang/julia,13159,s/backport-md-fix::release-0.4,1,merged,docsystem::,am I doing it right?,edf33373f45c568f45e3572291f9d5784e5340ed::
https://api.github.com/repos/JuliaLang/julia,13107,tk/backport-rollup2::release-0.4,1,merged,,"~~The fact that we're backporting almost everything might be a sign that we branched too early, but whatever.~~ Will run packageevaluator here too just for kicks.",9212f3d4290716bbde07ac78c4e305e279634a9b::acacc1af1521ddeb94543ca209a07e73be90685c::3b43bd856b4d132d7aacba59ae2e1e0b181fb958::3c02d6bdb2dc9a1afb7053980ff0d77c28c05259::03925135b75c5c2f3b1c2aaa543aac272f03baf0::07e0370796341551241cc0dec1f5fae31f222812::b9ee208d2810941068add3c1f14ad9704241f168::08d9abb1a3b70005b8167d60a2167497253e0400::0b1fc453a0c34672da2295ea4f6eaeb9febaf0d3::20fa35313bcf99a26ebd828f49245e1856bc1132::a8499dfb58c306d9fe557ff9fed3c90164876e9c::f2dc24e3768fabd92d05b53a8ef348353ebec27a::c7bd4eee22dfaea052b1241a33104a086a24588b::0473ed04f68087c47c7b67aa51d58c0bd3110122::ebc24e8b8e1f9fe9d7988d63fc4c1cf74ec8a63b::5369837fd6950d523dedbd59dc13946651afcb55::ed90cb2fa33b121ca5412b3215f7229c7356aa0a::58a18eb6f60eb254d43c749233fdcb67f50414fc::40b7a447d0449b42ad30e6d2baeae3c04b81718b::1ec808d4fac44e2ed40ce30affd1eb1b4731da6e::a265f490d634b0293e369c633df69817f0363c1b::4fad1d9d26de13a8ba1cea0c5dabb895342e3210::5fd1844fb57a157add6a6a220fb1566a568cad83::737ae231aae3ae82a4bbd5fb7758f69b64c903f1::cfb437af4eacb9b2dfd0f7f3365f97e20bb7ddcb::e994ac943114cb89e56e208e945855cae43171f4::27b5d9af268b837a0c9c09ea991fa04da7de5b7c::1a817e6ff777c5bd0e97bd06030740606b871adf::06c10cb6bbae5492882658308841ac77e73ad49d::f6e6a0ebe621734d9eca479ef145608146c8c144::d4701378cdc990fd73837b9e272017553c72866f::
https://api.github.com/repos/JuliaLang/julia,13072,tk/backport-rollup::release-0.4,1,merged,,"Doing this in one PR to consolidate CI - I also want to try running PackageEvaluator on binaries built from this branch, so don't merge until I see how that goes (we shouldn't need to do an RC2 for at least a few more days).",c0be97e75393dd9cb038347fe55f42f22458edda::fe8d92fdbc7a1ffff5fa0c815347f7c37f55affb::4d6ca2f0041b54ddb6a68d9a0111a7595b1e5774::89a7b9573a4fefb737c0d367128a0a40f50257d4::43cccbcb795df344a9fe0e9c4298bdbedb160fa5::d35b1bf8bd4580aa79f0accd55a1269307e65a08::624e558c05932430e2006fed5bac8e61f7b0e8d6::f35a6ff316ea51236ff7f1f6c5c1a13cdc583d24::476c0201a7820ba9dfb32e4aadc20dd3d14dfaa6::efe89d33a585b7e67cd6688605d0d7c05b4e561b::4a701f5da6a5a99c658334e257c312c3e5aa9b00::bf70cbc73c81f08a05d3bd6efa2da73b0d05f852::b614a228ec78d48515bdc2e0858b537421306cbe::2fcb985bdb80973288a44545e77b2ba36021a04c::70650826c2d899d7a51858c0c108af37f0709a5b::cf2002a1c7d49e695f6b4010ecae33c27cbd8cee::b121d8a657834489c9f26d2868a69c140e54c117::c984eb79b00fa35847933dccc8e8d3c001e83938::988595b131441b90336048b3119c8f539c28c565::fa209a733bac02f252bb7181ad022c33aef45de1::baa9bdaedb266a520c94bc2b1d19b5a2edcb7dbd::984522e875c5e5cbd81502b9c341e4010c41745a::52ea0046e5878454b02e54d14802e768a075c8ac::9d5044624f059842d0cfcca64b3b69ca986eb926::b23b11a370954d20ac17872afd2a4c2689c35341::
https://api.github.com/repos/JuliaLang/julia,12258,tk/backportwin64::release-0.3,1,merged,windows::,"give this a few days for people to test it on master, no rush here",6cb45ef99fca7a6a30e6fc992c1da9b19fc11417::4ac97632900004a4234c5b22be67ebe0567db8a9::b0c410a4a1fa95bf21cdc55eab55f9e68250facc::2be4dced5ec7bb33736b6949d25005940b7efe5e::945f4f9d253b8e13ab91c69816afe7b68ff1ba48::f15d6eb6a2766a2a06e336b6a348c82039c56095::
https://api.github.com/repos/JuliaLang/julia,11928,kms/backport_11876_fix::release-0.3,1,merged,,don't print an extra newline to stdout when exiting with an error when we quit on EPIPE this caused us to throw another error (cherry picked from 34ec37d949b899fb4a3adc01aec3c78dbeb1acfc) **Note that this is a PR against release-0.3.**,224c44c11962e404c0d5e23b0dc3e1f0149a82da::
https://api.github.com/repos/JuliaLang/julia,11344,cb/backport_fast_publish::release-0.3,1,merged,packages::performance::,"This is a PR against the release-0.3 branch, to backport the changes which sped up `Pkg.publish`, i.e. #10323, #10396 and #10417. It's a fairly large and not quite trivial batch of changes, but the sluggishness of the publishing process on 0.3 is such that this speed up may well be considered a bug fix. Also, it's been on 0.4 without problems for a while now. Everything seems to work as it should on my machine (about 4s to check the whole metadata...), so unless there are CI surprises or objections I'll merge this in a while.",441f3f27c2794fbe4a9a765a690d34621ae826aa::69910fcd2ad3086c99c633fcb231fd659c554ef1::476d326577a33b89298590237ee2003497ca2671::69ccb34547a626ced32ee1ca2872f2c9a063c778::cd63f274706f4c455f91a9d02d63791777d0b8cf::d26b61768f5ad196292341f90ea942eab3c8671e::1dfb72fc41120d3cc2a817cf69b184d2cc90a87f::
https://api.github.com/repos/JuliaLang/julia,11019,tk/backport-10991::release-0.3,1,merged,,@stevengj can you check that I resolved the conflicts correctly for release-0.3 here? Also want to let this run through CI.,b192bf0e2f0a0c5b232c3352c6e996e5f11053f2::517db08a0aaf6a488dd8be866bd70f0088d9e414::4bcefc074de3176c4ae730d4e8edf3184025c458::8eafd0758999d85686710b0122f63e388abcb18d::
https://api.github.com/repos/JuliaLang/julia,9173,tk/backport-appveyor::release-0.3,1,merged,,"the MSVC parts of the script probably won't work on release-0.3, but that's okay we don't really need them to",91fa026a2cedcd67e4506563ef8aef2f39ca7734::efa2291758060081f87b2d54cc6539af3bd3707f::900e673decf8b571541961375758e5c332792487::ffa1ffc6cf2122b9808eea351a1658ceacb26fc4::
https://api.github.com/repos/JuliaLang/julia,9050,tk/backport-8734::release-0.3,1,merged,,"As far as I can tell this fixed #4923, and aside from a couple of Mac build issues (I've squashed the fixes for those into d297ffb70afce4df9bc865a5664733627bb12e69, and I can squash even further if anyone would prefer that) this seems to be working fairly well on master. Ref #9045",066825ebb3d450ccd1315122d1fd0e473f91798e::12797dbc365a9fc192cfd92bfae0c2836544fb44::bd9b63a9c183a672e962c680b6ce71e7bc181b03::d297ffb70afce4df9bc865a5664733627bb12e69::8243c5b816dd79ff740255edd6af2c9e9cb011ef::
https://api.github.com/repos/JuliaLang/julia,8821,teh/vecmat::release-0.3,1,merged,,"Since the second commit is relatively new, it wouldn't be crazy to let this sit a few days before merging. I'll follow whatever course is suggested by @ivarne, master of all backporting.",a3b380ba19132ffbd7b2655616939d1597005b21::e0224de74bfd7c8720527cc25eadc69f7c584664::
https://api.github.com/repos/JuliaLang/julia,8436,release-0.3::release-0.3,0,merged,,- L42: import `BlasReal` and `BlasComplex` - L143: for `dot`: `BlasFloat` to `BlasReal` - BLAS `dot` only applies to real numbers - L148: for `dotc`: `BlasFloat` to `BlasComplex` - BLAS `dotc` only applies to complex numbers - L153: for `dotu`: `BlasFloat` to `BlasComplex` - BLAS `dotu` only applies to complex numbers - L238: remove line in `iamax` - `x` is not an input variable - cannot compute length of a pointer - L308: fix computation of length of output vector in `gbmv`,1776836ffd3f5817142b0b88477398601f05ac38::
https://api.github.com/repos/JuliaLang/julia,8150,backports2::release-0.3,0,merged,,"- Fixing Mac Travis and changing the IRC notifications - Small Windows build fixes for LLVM 3.5 and `make cleanall` - Suppressing a noisy `which` - Backporting @ihnorton's fix for the Windows uninstaller @staticfloat or others, look good?",ef69c86c79fa0c176f7d1edc982450462be4c1f7::00e4740deca6d5cbd72d5aa78c70d5e3d5c4a254::a9f37b64ef4325da5203007e0d183ed3512c8cc3::33c1369140106a798918e2c827a07ec77b92f77c::4787345da8d03fbb8ffb050d8e9276a022f911e3::71cf832623622584224c119a54e096b770a8eb19::320c6d5048339b83a98fb41263576a66a5a639de::b3d6815b7eefbb09829bdf9cacf35518ea4617c7::bb17911f013e59102d7054aeb1ab76811c669ca5::9e6b228fb0ece349f5cfcd84f4c5651a1c0d94e5::9355e9e11ad2d6920cb27b7248a01c9e8a0f46d6::6fde7df7be6b1cd638004922ef0a2587a1387fab::
https://api.github.com/repos/JuliaLang/julia,7313,jb/instcombine_patch::master,1,merged,,,9d49959ae99379ad7dc652cc0cd8ec496ec38006::c4386f17183ea6684f31c32c6c3b4d742d4663d3::
