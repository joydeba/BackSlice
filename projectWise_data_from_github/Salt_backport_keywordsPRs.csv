https://api.github.com/repos/saltstack/salt,57636,memory_tune::master,0,merged,Feature::Magnesium::Salt-Cloud::,"### What does this PR do? Feature request closes #57639 This PR makes [memory tuning](https://libvirt.org/formatdomain.html#elementsMemoryTuning) option available which allow much greater control of memory allocation. configurable parameters are: -  `hard_limit` - `soft_limit` - `swap_hard_limit` - `min_guarantee` In addition,  `_handle_unit` function is added which uses regex to parse user input into the corresponding size. Fixes a bug on adding sub element to existing XML tree.  `Element.append()` should be used to append an element into existing XML tree.  When using `ElementTree.SubElement()` we must make sure the parent element is from the target domain XML tree. Refactored XML diff code, added a few helper functions to manipulate xml node. More robust check is added  `if 'initrd' in boot and boot.initrd` to ensure `None` object will not cause an exception if it is passed to initialise a new VM . ### Merge requirements satisfied? **[NOTICE] Bug fixes or features added to Salt require tests.** <!-- Please review the [test documentation](https://docs.saltstack.com/en/master/topics/tutorials/writing_tests.html) for details on how to implement tests into Salt's test suite. --> - [x] Docs - [x] Changelog - https://docs.saltstack.com/en/master/topics/development/changelog.html - [x] Tests written/updated ### Commits signed with GPG? Yes/No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/master/topics/development/contributing.html) for best practices. See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG. may be use `{%-` for each if start and end tag to avoid adding too many blank lines in the generated XML. This is cosmetic though. See https://jinja.palletsprojects.com/en/2.11.x/templates/#whitespace-control for reference::Aren't those covered by the `_handle_unit()` test normally? If so there is no need to add them here too IMHO.::We could probably be able to set up `trim_blocks ` in some of the `env` config files. But I added `-` manually for now.::You're right. we don't need these lines. Actually, It won't do any harm to have them, right ? In case, the `caller` in the` virt.update` function made some obvious mistakes, these tests can probably help catching it. What do you think ? ::oh sure it doesn't harm... you can keep them around for sure. No problem to have more tests than the minimum::That looks strange, why not the following? ```suggestion unit = node.get(""unit"", ""b"") ```::This should be moved into its own commit to ease patches backporting if needed in the future.::Please move the test data definition next to the test itself: it helps visualizing where the tests are starting::roger that::",737dac9d64c44e009412b7201b79a04170d5652a::fbeae42dcbd77cc2c46c52a1d4295ac9b9a8d4c4::ff0fc0c5f0d107af6cdd312b1943c7d0735a5fe5::
https://api.github.com/repos/saltstack/salt,56882,bhyve-backport::master,0,merged,Z Release Sodium::master-port::,Port of #47620 to master,31f9f67f649be7f8df4ee10d2dbfee08ee598308::605d3483642f30ee223ed3f7f234542cdeb01c1e::3550223d7ab7fa51c0588ac35462a35e7e30c283::fbe179e544412e6b7595e191e75c5a47d01904da::
https://api.github.com/repos/saltstack/salt,56662,bp-49066::master,0,merged,Z Release Sodium::master-port::,This is a backport of a PR that @pcn got merged into develop before the primary branch was switched to `master`. See: https://github.com/saltstack/salt/pull/49066,de1bbb3a88593c026ac6b46687b7c068dfaf083f::fcf3a2f46694fc60153a0d88b3ffdc526a792015::1d439aa0ea53a3303ba887a7b3a8a0377ff67164::26c64199a523eb89d2357c8500863d7ef622326e::ff8cd5e3e9bd016d6566c6b7d559b2b14c21d80d::b5a897f86e35695fbf7228b37540594d00341c0d::92e7a6f31f83a3bbaea7e90b9f8c699bcbe01b23::24d7760efd13edb8c1a3dcec239ea4b28cc9f2ae::
https://api.github.com/repos/saltstack/salt,56369,master-fix-salt-ext-gen-backports_abc_import-on-python2::master,0,merged,Z Release Sodium::,"### What does this PR do? This PR fixes an issue when running Salt 3000 with Python 2. The vendor `salt.ext.tornado.gen` module makes use of `backports_abc` when is running with Python 2 and produces an error when Salt if `backports_abc` is not part of the system's installed Python modules: ``` 0ab8bfbf4597:~ # salt-master -l debug Traceback (most recent call last): File ""/usr/bin/salt-master"", line 22, in <module> salt_master() File ""/usr/lib/python2.7/site-packages/salt/scripts.py"", line 96, in salt_master import salt.cli.daemons File ""/usr/lib/python2.7/site-packages/salt/cli/daemons.py"", line 48, in <module> import salt.utils.parsers File ""/usr/lib/python2.7/site-packages/salt/utils/parsers.py"", line 40, in <module> import salt.utils.process File ""/usr/lib/python2.7/site-packages/salt/utils/process.py"", line 38, in <module> from salt.ext.tornado import gen File ""/usr/lib/python2.7/site-packages/salt/ext/tornado/gen.py"", line 118, in <module> from backports_abc import Generator as GeneratorType  # type: ignore ImportError: No module named backports_abc ``` Since `backports_abc` is already provided as `salt.ext.backports_abc`, this PR makes the necessary adjustments in order to avoid the issue and makes `salt-master` to successfully starts. ### Tests written? No ### Commits signed with GPG? Yes",7a13b857fca3441e2e123423689ed5c1c13eab28::9c048e0dedd4d7d9db795ce4525d136f6f816b1a::084b3515323d39469cc457fa7fa73141a63dac65::92d4f03e4e4bd0a5ddfdba540dd47c48b1311c5c::
https://api.github.com/repos/saltstack/salt,55843,port-52212::master,0,merged,,"### What does this PR do? Ports #52212 to master This change has been backported to 2018.3, so it should really be fixed for Neon as well. ### What issues does this PR fix or reference? Continues to close #49329 and ports #52212 to master ### Previous Behavior Previous behavior mistakenly made changes when `test=True` was passed. ### New Behavior Wrap changes with a test check ### Tests written? No Previous behavior mistakenly made changes when `test=True` was passed. This PR corrects that behavior, and it seems silly to create tests for expected behavior or to check accidently broken bits. ### Commits signed with GPG? No",f14772660688dcb33766f94a722d9dfd3e2e0466::
https://api.github.com/repos/saltstack/salt,55723,renderer-saltenv::master,0,merged,master-port::,Master backport of https://github.com/saltstack/salt/pull/52293 (support passing a saltenv to slsutil.renderer) ### Tests written? No ### Commits signed with GPG? No,f6187a239d69ae617b6d64ff0d3175cb15ad48d9::
https://api.github.com/repos/saltstack/salt,55685,bp_49826::master,0,merged,ZRELEASED - Neon::master-port::,Master Port #49826 (Neon Deprecation) Note: updated the backport to keep the `force` argument to ensure users don't have to update their states with each feature release.,ffb824c0bfe30d57bc01e4ffcf5f35f67cef6e54::137a7175f45551de906dbe86f87182d739c0d112::2d7378d1f504f5e38774ccdabc82e9e4047397c6::a7cf0ca4fe5b650a8db316e5e9e7e932a29640fb::
https://api.github.com/repos/saltstack/salt,55683,bp_50343::master,0,merged,ZRELEASED - Neon::master-port::,"Master Port #50343 (Neon deprecation) note: updated the backport to not remove `force_masquerade` as i think it makes more sense to keep this argument in case a user does indeed want to masquerade a zone. The default is now False instead of True, but this argument still leaves the user the ability to use this feature.",ca1e30dbb0d2d5ee31b8ba6a057416a11caa8363::27e298f89f96ce4ca30b093e9775c3452942be97::
https://api.github.com/repos/saltstack/salt,55605,module-docs-fix-port::master,0,merged,Documentation::master-port::,Master backport of https://github.com/saltstack/salt/pull/51907 (Minor improvements in module docs) ### Tests written? No (docs only) ### Commits signed with GPG? No,c3667a5f91083963b9fedbc50b94e673cdeef29b::
https://api.github.com/repos/saltstack/salt,55545,issue_49427::master,0,merged,ZRELEASED - Neon::,"### What does this PR do? Add documentation about deprecate keyfile and key args in nacl utils. These args will continue to stay to ensure backwards compatibility but documentation will make its clear what the preferred method is. ### What issues does this PR fix or reference? https://github.com/saltstack/salt/issues/49427 ### Previous Behavior `keyfile` and `key` arguments included a deprecation notice ### New Behavior `keyfile` and `key` will not see a deprecation notice. Users will need to use `sk_file` instead of `keyfile` and `sk` instead of `key` in accordance with the docs. ### Tests written? Yes ### Commits signed with GPG? Yes@s0undt3ch is this normal for pre-commit to remove this? seems like we would want this backports. maybe i ran something wrong?::It's the second time these changes happen. Can you please try `pre-commit clean` and run it again? I know you're on Manjaro, and you probably installed to the system python, that means 3.8. Can you try the above and confirm the other questions please?::i think i was actually using my python2 virtualenv, im running into errors on 3.8 though, what version of python are you running it successfully on?::3.5 or 3.6, can't remember.::We need to recompile the static requirements if we change these `.in` files::Yup, it's waiting on me.::Updated::",094c332a13375d7a7742e3feb1a79709e2fe8882::58e8c2580b07c1faae7da3badac775e23259db48::d68fd3a3cd92643ce1f924aab2fb11eb0f4ff91f::ce80a690550b1def62b400fba79b067ade1bdf96::d3f73607a37deb5f4a7023d2a1eb726098a2bb26::c6303b4e8af4269c4d2cf9eabf3c3daabc182011::46dc1b69c2b9c6486370b25d7b4cb2dae9dabe11::6b021cac49f4a0a153209423260d48658fe75be7::5bd576cbcce9107aa7ef2b0458771fb26a798c89::b2c71a9df49f07836f7336d1a5b6fdc642c8a6b6::3350b96f2cc55054abddb58f547a503f43b6400e::4f3c2d14bcd374bf6d37b00f735b50817cac0c14::c3f5d2daed84eeb935bdbc1d1f4bce48e77563a3::9be994fcff77b867224b0b7e5318aca1a9e1569c::d5ce42c19d1439110c9d83acf5208061ccbec622::5bcf2e475ccbfd8c0a0246d15d3f207e9939e12b::533f9e2f0c3b174cc65643d421486f1c7dfaaa51::686290a0f39ec0859148534326c34dc860432689::59e30e26b2947af112f97947d3ad0e4d23b0a058::e9c108b10fc55eef2cab4f3b8ac7f088d22ac7dd::5399809fd2a07a90da6a10aa667dd012764faa79::050999f0aa24a86ddb358063dbc23188da486420::d426f8d7dbb84eac8cfc940269999d2fca95b1db::7d3d823a590ab564697d6b6c4560b7572af01ad0::6b5cea44a92afea2a2c44a7474e029834e5e4b07::fb062cb052834f94de0c1a14384949165ec7ff38::e6b103e08a0ef93324a20686992e0ed0ec59cf90::
https://api.github.com/repos/saltstack/salt,55516,backport_52962::master,0,merged,master-port::,"### What does this PR do? The current 'set_' family search the entry based on a 'match_on' parameter. If the line is found check that there is no difference between the expectations and the present line. If there are changes this line gets replaced. This default behavior is the correct one in cases where the Salt code owns all the changes made on entries. But in some scenarios we do not want to overwrite the line if is already present, even if there are differences in other parameters, like the option field. This patch add a new parameter, 'not_change', that if is True will not overwrite the present line in any case. Also update the mount state to transfer this new parameter. ### Tests written? Yes (backport #52962, already merged in develop, on top of #54965)",77881bb15aaa47aee7e2d5a1a5bd9fd56fdc425e::07be0baed918f5aa9e0c2da93e61c53a1001b3c5::
https://api.github.com/repos/saltstack/salt,55515,backport_51704::master,0,merged,master-port::,"### What does this PR do? Fix a trivial mistake in a doc comment ### Tests written? Not required, is a comment (backport #51704, already merged in develop, on top of #54966)",d4cd2128807d5ef7b19a99bca93d9bf727ea7ef4::30bbd6a9ee86fc989025e05d5c2426603a7b45de::08a9e449e4d1dd95b98bac9411a2ba9c018fa095::e0456dc6661f960ff479d55e8c20f8956c7f1110::
https://api.github.com/repos/saltstack/salt,55253,jinja-maps::master,0,merged,Needs Testcase::master-port::,Master backport of #51047 (execution module for troubleshooting Jinja map files),4ddf93942f3337be0e80c881dd2c9f1fc885d3aa::296c08beb4150117894aeab808d2bf6bd076b796::38c5e60367bcdd9f01645761a9ff6fae5d3062a2::
https://api.github.com/repos/saltstack/salt,55195,salt-version-module::master,0,merged,master-port::,"Master backport of #49891 (`salt_version` execution module). Also, fixed the `LNAMES` mocks (indexes should be lowercase, the mocked tests passed by accident) and changed the function names and semantics: <img width=""330"" alt=""2019-11-05 at 00 06"" src=""https://user-images.githubusercontent.com/370942/68141484-343f0780-ff60-11e9-86d0-2a946900cc9f.png""> Since we're just moving to a 1-year (minimum) deprecation cycle, we can probably remove this paragraph. The next paragraph may need some tweaking to make it flow better.::Probably should just change this to `Returns the release number of a given codename`.::Quotes from the SEP: > Our plan is to have a typical release cadence of 3 months. We expect to have an intermediate release cadence of 4 months. > With the increased release cadence in order to allow proper planning for feature deprecation, Salt will introduce a minimum 1-year, expected 3 major release cycle. If `neon` ships in January 2020, any new deprecations will not be removed until January 2021 at the earliest. I do not see why the paragraph in question is no longer relevant.::I changed it to > Returns the release number of a given release codename in a ``MAJOR.PATCH`` format. in line with the SEP: > With the `neon` release, to indicate the new change in release process, Salt will change to a new, non-date based version schema beginning at 3000. The version will be MAJOR.PATCH. For a planned release containing features and/or bug fixes the MAJOR version will be incremented::Moving to the 1-year deprecation cycle means we could (should?) only be writing messages like: ""This feature will change after <date>"". This *could* be based on the 3-month release cycle, but we *could* also have more or less releases. Simply using the codename would be less reliable.::@waynew I rephrased the paragraph::",061b2e04e3752e790cab0ed196c9ea4736567e37::61043a14eee08473fad60d4e9144fa9a7defd6dd::089d0bfa825cc933de9a9653129bbd30e970b0e3::3977b3b1edc66bbcd56bcd16738b357a230cc441::
https://api.github.com/repos/saltstack/salt,55140,monit-status-separator::master,0,merged,Needs Testcase::Z Release Sodium::,"### What does this PR do? With the commit [471c4bb](https://bitbucket.org/tildeslash/monit/commits/471c4bbc388c1c536f07ce1dd26b811bd39a9467) on monit, the field size changed from 28 to 33. So splitting hard after 35 chars, new versions of monit break when using `monit.status`. This commit is released since monit 5.17.0. ### What issues does this PR fix or reference? No issue created yet. ### Previous Behavior ``` local: ---------- Process: zabbix-agent children                     5: cpu                          0.0%: cpu total                    0.0%: data collected               Mon,: 28 Oct 2019 04:54:46 disk read                    0 B/s: s [44 kB total] disk write                   0 B/s: s [4 kB total] effective uid                998: gid                          996: memory                       0.0%: [2.3 MB] memory total                 0.3%: [26 MB] monitoring mode              activ: ve monitoring status            Monit: tored on reboot                    start: t parent pid                   1: pid                          1149: port response time           0.263: 3 ms to localhost:10050 type TCP/IP protocol DEFAULT security attribute           (null: l) status                       OK: threads                      1: uid                          998: uptime                       25d 2: 22h 22m ``` ### New Behavior ``` local: ---------- Process: zabbix-agent children: 5 cpu: 0.0% cpu total: 0.0% data collected: Mon, 28 Oct 2019 04:50:16 disk read: 0 B/s [44 kB total] disk write: 0 B/s [4 kB total] effective uid: 998 gid: 996 memory: 0.0% [2.3 MB] memory total: 0.3% [26 MB] monitoring mode: active monitoring status: Monitored on reboot: start parent pid: 1 pid: 1149 port response time: 0.218 ms to localhost:10050 type TCP/IP protocol DEFAULT security attribute: (null) status: OK threads: 1 uid: 998 uptime: 25d 22h 17m ``` ### Tests written? No ### Commits signed with GPG? No --- Can you also please backport the fix onto current release?",e05824a36ca62aa9f3a21854ec8b40a3e0f7a68d::
https://api.github.com/repos/saltstack/salt,55005,backport_52712::master,0,merged,master-port::,"### What does this PR do? Fix the remount command when fstype is not set. Also fix a wrong rebase that happens somewhere when the big forward port dragged changed from the past. ### Tests written? Yes (backport #52712, already merged in develop)",340cf16c3a09b758b4d3e697a7267579217ebb85::
https://api.github.com/repos/saltstack/salt,55004,backport_52698::master,0,closed,,"### What does this PR do? The current conftest.py is using deprecated call to `get_marker()` in the item elements. We need to replace them with the new `get_closest_marker()` call, as documented in: https://docs.pytest.org/en/latest/mark.html#updating-code I didn't use `iter_markers()` iterator as looks like that there is not overwrite. ### Tests written? Is part of the test code (backport #52698, already merged in develop)",3407cfb6559d618d801550b92cb616cddffc5005::e370d95248832daf11f454313357634332a840c7::c1b54d8c79a890e545154de00e35288c27014a66::8633d7fb5ada0937fe34cae107b38e03a460af57::
https://api.github.com/repos/saltstack/salt,55003,backport_52304::master,0,merged,master-port::,"### What does this PR do? Fix DeprecationWarning about using or importing ABCs from collections, instead of from 'collections.abc' ### Tests written? No, as this is a deprecation warning emitted by the interpreter. No behavior change. (backport #52304, already merged in develop)",e6c621bc0f1692b63f78e737dbcca0eb4b700eef::
https://api.github.com/repos/saltstack/salt,55002,backport_52182::master,0,merged,master-port::,"### What does this PR do? Convert the metadata parameter to text, as can be represented as a float in the pillar (0.9, 1.0, 1.2, etc) ### Tests written? Yes (backport #52182, already merged in develop)",6cc6de2effc0419a240c664f83174c9bf252e2cb::
https://api.github.com/repos/saltstack/salt,55001,backport_52150::master,0,merged,master-port::,"### What does this PR do? During the RAID creation, the code examine each device to decide if belongs to an already present array or not. The first time that the RAID is created, is expected that examine will fail. This patch add an optional parameter to examine, to ignore the fail in the logs. Also calls examine with this parameter during the RAID creation. ### Tests written? Yes (backport #52150, already merged in develop)",090778c449132dd8ed34c418ddc0ff36300e6288::f79d0a3b78beab6f0d5564febaa8545e161617ea::df33a3c69555fb81843daa04ca96d9a232db4b79::f34a900cc6a005afcc89744466c32fe0e06f1962::
https://api.github.com/repos/saltstack/salt,54999,backport_51973::master,0,closed,,"### What does this PR do? The virtual module 'pkg' is heavily used by other states, like the 'pkg' state, so differences in the signature of public functions can generate errors like: TypeError: xxx() got an unexpected keyword argument 'yyy' The fix is to add the parameter 'yyy' into all versions of the function 'xxx()' in all the 'pkg' virtual modules, but this approach is cumbersome and not very resilient, as any refactoring on the public interface or in the pkg state module will break again the already agreed contract. This patch append **kwarg in most of the public methods on virtual module pkg where it is missing, fixing the described issue and making more easy the refactoring of the code. Also do the same for 'lowpkg' ### Tests written? No, no change in behavior. Current tests are covering the refactoring. (backport #51973, already merged in develop)",4381a2e8b27fe71d7628062fb2a650b495307fda::ab4217d45867cb2d5c952901f6d4d818fafcf75b::
https://api.github.com/repos/saltstack/salt,54998,backport_51956::master,0,closed,,"### What does this PR do? The function _checkblk is called to detect if the device is already formatted. The first time that we call blkid -o value -s TYPE will will fail, as the device is still not formatted. This patch hide this error from the logs (only the ERROR status, not the stderr output and the retcode), as is an expected error. ### Tests written? No, no change in behavior (backport #51956, already merged in develop)",d001c0c34e8813e801c23348a36574206b491154::
https://api.github.com/repos/saltstack/salt,54997,backport_51929::master,0,merged,master-port::,"### What does this PR do? When we try to create a new pv, lv or vg, there is a chance that is not present in the system. Also when we want to remove it, we expect that is absent and the end of the operation. This patch hide the error messages from pvdisplay, lvdisplay and vgdisplay commands in those cases. ### Tests written? Yes (backport #51929 and #51954, already merged in develop)",25c7386c95d5e8e3029b37a7e2407f51339d3918::8efa40bd8d9e8cdfca704075d59e8b2e79c6a2a4::
https://api.github.com/repos/saltstack/salt,54996,backport_51871::master,0,merged,master-port::,"### What does this PR do? Sometimes we want to export directories from the system to the chroot environment. For example, some services will require the presence of /run inside the chroot, to request some PID information. This patch add a new 'binds' parameter in the run_chroot function, that will export those system directories into the chroot. ### Tests written? Yes, added in this PR (backport #51871, already merged in develop)Should we have a versionadded `Sodium` (i.e. the next major release) here? I don't remember the precise syntax for it.::Indeed. Added. I used the version name, instead the number (https://docs.saltstack.com/en/latest/topics/releases/version_numbers.html have a TBD for the version number in Sodium) Thanks!::",daf7d4bc76247fdd88f575dabb08e3c85d2297f6::933fba5f745eb3195c590e1c0b45c8c066a9031e::
https://api.github.com/repos/saltstack/salt,54967,backport_51074::master,0,closed,,"### What does this PR do? Add new optional parameter `fat` in disk.format_ to specify the FAT size (12, 16 or 32). ### Tests written? Yes (backport #51074, already merged in develop)",ec85703adc4b8ba23a089e7966520130b9198a53::1f774c7ebe6c9dba0fd4703b2049235abf7793c7::ca6ae1d5f875a166234639106ddbc8530f6583c6::83f429cb18a01365481c06fc1736c1bb71eaef9e::42b8d42659de161104efad2d913566512b708d4e::cea3fe0a40815677a6d1387500534a79366a9cd6::c6871f7355790bc3ddeb135c7a48700efb77e3b0::2fc9a757bcf227a75d09697b985e5e8070e334e5::60ae80f749084cf7d8387be840b2d2296ed73173::002c1038f59d8eb48342f4a6da8a9662f4d3a8bb::343311aad85a4591cb6e32bf66956bcdb6f697b0::13df050b644aedb304ae8fab37a2f98c400c4de1::0a41fa9755034d70e6bac7934af1252824f0d40f::6b037f5caf2a1e855a941767e4440a34ba8eba0d::a419182eb1abaca9227c723c5c3bdffc3f81a0ee::3f0bd1a4a35562e6aa08e78acb21c8152607d1e0::5fe495a553cc261a66e9468b4af7be27b1508daa::0c36b95565e089035d895ee62b56187b0dcd5ae4::7aaa314f109b9d2a525a50fe84f41039e9d28d4c::48b5b7e184a8ca07b0d82ce6ece18036bfe1c78d::fdb4d39ec3cfefe0f7bff844a22c1d863a3877c9::48e0dfaaa213a7875d2aa0b8ccf3b25afac2a49e::a1844cfd1022c413c22c1756677c8d3975ff8471::d0fcb9c6c5bb4bca017d9b023acc5e95594681a2::f20889af34dd994fbd70f36e8383d839e1d5857d::d824f09e8073e7cae8bfb42142e4fbf4578e53e6::802385a8fbda5f489d01a193b4f0476a5b416cbe::a6827b72e4db5f75d6d9097961e1b48dee474271::5f009ef739f2b5032b615822cd9653cb4adaa52d::f63f3d8c6c743914ae4a71eada6a7541f92cd78b::d8dc82e0bb872f1b66ceed153647b31b45433be4::ec4fb4f615d9ee3979747624f6e23d77aeccff64::451287e1c6c3f6306c350dfdb2019b573604b902::f6187a239d69ae617b6d64ff0d3175cb15ad48d9::80949f17e8e56a89f3044e63d7430ebe656e268f::8dd8870af6497aa4e4fc2504d483a42cf465d0b3::3c29807ed6888ebe1bb093f0d20e55b948d65d24::0dedbee97f537a8014792cae03ceec08571bc00b::ff8d8a3b87d5f2abe39dcd7960b140dfe10d7963::d48d68d0541652235bcbb6c20ad3480010f66043::a7641500747e66e8806618058493911dca0d1b7d::091cbbdeb10ae002b0247bbf2506a59ef69a13ce::9c4def8dc26df9b42dd396ec5455113a343c56c5::8a0d5c0281499c5af6c629391791822bf08f5a14::29f3f283057da7fa58308294f67660b8a623604d::1de2eceb3971a03c08d3321ae1dbdc755778571d::2d3e7325be8e703cc44295238c2a2fc936cfd4a8::324a20179de6bfa9a4b23c9e6f0912324415a52a::22dec4b168e5a8f530636c9e2c28a76fc27cb5d8::a1a104b47653fc0f4d79facdc02cc938f2827702::24f593ae0738dd93503674411d576865465a32a1::3d6da9fcef9966a59fa1ad62eb166ce7077580d1::58934cda2addc9c5bbc060e97fccf09fc0d7cebe::5ede7a3e259be6eaec7f39c18bb12eb463ec7cad::202257e607d7c0c750a64d35757fc5534a8ad5d7::67e45ecd23af791258386781f3357483d71b92b6::73eb0809dd9fe94f403d2a97689b70f91823fb62::6ad853b8e8181c04b718d41e4b69d8eae961beef::be48a6cb461add46356d27e175f37345f9739d4a::303e038702af8b90fb6bd95dfdbbeebae04a411d::625deacfa5aaa010031eb46eecc9dd9b8fe52194::b6a4e917334fd4630d7abb8bd408aeb079171680::0eb09fc5e4cc99be96ae42d680081d46f891048c::abee54875ed09da1ed850360be7f30eee0bfb724::a82126e52246d16300a56c22f2976d1003c8c6f6::d447d803f81e20ae42085d6e706f8850f5d475f6::dce3e3b46d0d8c757986e1442f547c767a8b13b0::2184bf939fe5e6f4ecc7f5af3151bb167bd98af9::94ae7cf07ffeac2cbaf172b3a4a012c95c4f4b0c::4df9d8b16e78272275e5cbfbb21048c4831a1011::dac73c83765dfadc88d482114fa93f680a24d243::47d8f6d5ca48ec0821df22d5db1f24f63bf24bd0::ff35685ccc2b6adbffdcbec2dce35060db0b281a::98b34b3d665f1b7e4135c492fcf9ecf4828e04e0::7e4ab5e30954d25eb199158515d3afc5ccef3720::15947fcea5959aef59ac7567153199ed89587013::e131fe239878fd2e15344ebfd7e84d02304ba6fa::9ccdd6b217dc95cc1780c45469e164f48c7910a2::92c16ef8ce2e42d8e486ea97506dc59a63f4d3b4::5c49fc4ed01ad2f8611bd517a98849d3aa773285::a58459c016ccaf310547eb52592d0cb46ee0791d::ee13b154bb90f0a0ab271342a9e156ea4afcfdc2::9dc8ce791fafbd6a160f0b0cb753bcfc67038d7d::bc011133b4362bcbcef9743631ef19a274857ef9::899b63f96549d28498dbfe1616472e23a67db789::84d699f3283221776bc4a79ca15a98c3e5c9f01c::81cccd8dc6e71946269e4ed546824fa98900dfa6::d073d608f0bad363efbe8e3ae59a6a0d4b24cd59::26001680a03385e8ade411a1e7480c436dfee78e::84283aba07195ae4a0aa61d517523eb24cc97e4d::28877b6cb867bee42f475931086f8503dcdcfa1c::6df87a572f21a547b5c618b21aa5824d2205c200::767c8183768374c03e50e63f0a1be67efb7122c2::552c07bc96b93022995defbf0d6fd06a0ea649fd::c56ae28d3e14d77ebb33df81b9c121a9c738fbe3::be4eda5f0fd0d5eec69ae65fccd229c90211118e::d2a7c0da4b3029a2d5aa5c1bd09970b825fb422d::43d9b5a52d0802eb15f8f650cd8bf536f02be7a0::2ab56f6cf717ad1f374980b02548bb2fe809ae0b::216d682675a4706d42981a32bd0fb2b25968c68c::4369f68c6e92fcc40670b8490e30148e1e913edc::ddc8c35c1376aebb5cb4af2ad86008554664b32e::78506561571df5b62ad469fab914cb8fdcab1b69::da35f02135e034641e2fcc1aa96d5dfc564f2f77::6c5e7c8a88060d3327d4ae7ad762b78d43c0f0e5::eecd4d008066d68e714dc8ecb043318bb9df7357::4843cde07f761b2abddd278d3d454afc33ae56e4::29d390de93118c617385844580a7d7d6269bfe6f::4f48cf19c2171df4f87933004ac6b6e9f07c0099::aacb3e0c065d95f417caebc87a177c06ade43d9b::1d5b56f1fa02192cd48efc64a35310e76e8be853::ec2cb8030ee4f570be333eb7b83792a40d1e7231::7ed2696a65127be0352959aae842d49d6b8afd84::80c96500fe22f987d6a209a04e7d08701c610545::ad100e28af99492ade3baa9d0d79e54541d9a53b::a00de5bc1dbef6863bafb19e71e6000ab7d16c98::ade639bd89bc45dad3966cf2b7d96bf11d5e287e::2307861d7ae1a31822df38ad6e1e079ee309f669::8a4e0d444e91021278440a29e6fcf3cccb656be1::3548367a2fa1d8d5ec0676b5164664a3b99c3da5::2186c348e9d34737d3261805f6675243b10f0ff7::71991ffba542ec0a31b908fdb6254199f45c87d0::03625b1736e8c315cc02fab0a82ba8f7bbd75bda::334c8726536b6da1b845e262474e28209dd3ef65::de72a6076975ebe5496d822c54e9a9d059fd95e2::6e5b627627f89950e34e02a533ecf5a11d65c768::d4cd526306b7db52663f56c637aa5d3fd788dffb::5617e5dbe014717389615866745c87c8c6cbf848::1607dbfde0b3efc95182780e6fcc42a2f622df9b::c6c4bca412879ac95f60486d9fc7a4576d698aed::8909dcfef408d714e438cca72e58c4faad1fad88::a997386c59fb1ef503b71e2e30fc5371da8af252::a0059dc8ddf91602e9d567fcc82905f70aa0ff0e::e73ff9fb4c4ef67124b0b4c565b63a4dcd01c51b::bae600b0354a2650be0559637a06cbff6a5dc2bc::ee12e98f87c4d458cc3d064153da68e25ddf79e5::d5e0adb1d76c1aec12c0ac05c152362c23aec340::026f136bb9c16fb76b86c7c5451c926df6dae500::6f353cfaa2387deb8c0fcd1b06370e69e9db42f5::6388c96684dd595e447fc1a2c65210525f2ef866::85178d4934d15273233ebe4a1ff134b619633464::4ca6ce23f3268f11348f55a18a3bebf511fd65c2::c33d3d5d51c5b0a0e099c7c2ff8b0ba7c8e1fc84::c9070d0f52da63343263e9a1b19448deeb2e491f::0b5ec43ffa19bb5c607c978ed939ebcd36ca8eb1::e2f32dfec9b2042ac60ec127a6d11bc7e6f7feb0::370eccaf68292bc807cb243297dc65e8ed872834::bccc0ac7da3866857701cc1a6c44c491f2a549d9::38ac98098b94abc0330a531a63d29f9b12858420::774015d894f5c50531ebfd2bb2c94e62bce879af::8914513b64055b794a9a6adf20f3061eafea81e3::dff0ac7dac5c288c24ee9926d0f0cf881be59377::449165e28cf554a7cf4d46d9081507eb083fecf1::b14056fac7e8ecd476539a6579f28c797bb404fd::0b56d3a123c29573d78be5f003a1573600012eca::cb93478757843c3522439f25d712016c4cd8118d::98f88352278c5276ccbe1e7254d6783841f26000::7f00b8e29f82fe84404f502d11a658cba1067c8f::bd57aa654e1af0ba4872f7c862d852bb660c6119::bbe6a3193aabf90b946bd3a346f78c65c0a04a34::e2d74e02d35981c7b2152b453456af36f1a52f31::5f9b6113e605352a2092ae4d42be22f0f7ab894c::4e862c466a0e27618a9de6c046c40b2ddfb38f88::2cf29e9dd409fc0c4e133f99386e9078b293f853::cdf4d20c2c01e05ede1bdbc598042ff712d77089::ea1e3467852f769b799ebb1d4afcd29d82942ba2::56f1c23953b54cf59169480fe6c34ce3adeac183::f7d271b338f66d083bdf43b5c2b5888a8575dacb::4ffb009f92284dd6f3408c3ac8fcb2ff424b146c::e3a00e38718310cee0f80d07a5b13198ed6f37d0::8e31f28f38d96ad4f40eb7f46a2213eaf5d07110::18d012e598ba2b5c9195b2070a0c90b61cb6dfc2::045cf95aac183fec21ecd74e00570dec1d779182::cac378cecbe8df4cc291dd7781a9a4d5380c642c::fd4395e5fa2a2e90b0483a6dc5e85f5fc88c515b::312b75b139ba6ab27cd490565ba8fb583e7769ea::ebb0953bd29a73791ca8f50c93634a7db9574c45::592915719b9d63833cc0ad41470bc0626c453147::a35b217edc0d4bf02771bc29e35d95be09d33953::ccafe0987c18dfe920afb8c3311518670d0ba2dc::527b65201d47ba411e397398baf9133534a9e302::e9c1eebe26858796630ad7a849ccef55539cb8cc::e79462cb4c5e2c7551a5eb981c25f1be4c8330f1::9071f762fb506b2bdbe8ce8fddb1037d3226046c::6ceb5fc73875c37b52408c4bef8deb409d836e8a::a0744ac3d2a5575ac972af23f4d047a316259a05::09b809e64fd06c32005cfb5c9e66e03b474785cd::30542e57a9c15de173c8973f350b8b4255345924::db42caf12bfe479a6a0e1292f4525364023e1dd1::eb6febb816c6c9903c353ceb0dd692bfdc869f93::b4a8788157a6b717ef6e4c84b425f91a475f472c::0b961c2cbb66deaa24c13a278ff25beaef3ef1ed::b43e621ab8c5422b1c40a80e204b26e48e41f8ad::511912d0a3c9f2f468619b4da4d002036bb7cd14::53dd15fc9da8d169a45cc2e33ecc366a632ec866::bf755432faaa2c06a768908e3d0c1e84e7e059f0::d50d7de48dc14be33769c6b8e31b9a2808c0cef0::a0eb7879f12a5fdcf41c4d554ee2efa04cb3dcca::6a873eaa869180dba5af6c997cb9eec1913ae990::be82c10d4edb2279b6e74b2733bd082983345685::6e569481fdcbc4b3139257970425d1f4d10c4f34::2ed357e2dcdd98e7a81f5a7ba96ac0beb4db82cb::310e2d1730deba808303b99d826f622159941765::633b140121dc11de8842e87d465b8d55244c3582::958b3d10843673a197a9ccbbce886088224ef067::4499a081feb37086bf5707898bff6f99d79bf73d::b04198d191b82155e361001ddc3ee40239440a0b::e7b61edf71eeee5668ce63b924856dc701c9758f::fff663ee9d7e7e35aa9c68a4accb0474b797769e::7adfa98561cae1ab9195610c22b1cf44718df907::df9893d1d16600e5ea130a96834a09e234c84b70::d1f806655c95dcbcaaf2f2680fc689395b241115::24fc0d3ea5cc990896f665a3eaa453814b6a5e48::3730c2074ee0c9bdf9c67a161a6f7f716d8807d1::72166d5da36eb6c8c59d64998625c0b998d417ae::e9d75b955773f478d8ad4607f3d25b0431abbcb4::2fb246fd6e9bc7c7b9d8c9391bbbf08ba841dd40::520591876bce057b3f452f9d0daaff057d07ed06::3dc52b3941821b468ee0f9c2930a06ac9f273ea6::d3661d52f6c3010119966dfd338e530fc7dcf5b7::b079fb9cafc0ef6f5a2402eba896871a15edb8e2::aad5c0ad264f3d1c6c534afada5854d1e366a3cd::4c53276fd6e0ae08523c90f89c13a7542293ab18::2953d5585c3a14960154d676fc9d252e83ff526a::711e2d4b6cef736724e7af7691b8bb85fb916629::4dd05bef806924fe0b878c839a2fa0fa5c0502ef::4d8ccf3835ab4c871fa83a851c26b44ebc844ae6::4b1c804be95c068eac73140507795225902fe763::c90447f2eae873d31bec9513297af590dc6180c2::92fbbf1f54fb5b7ebcd2006ff170e5f913f57daa::a657ddc25cbf987545ce00106e3d4670252f8440::da7b776f73874e65b4be794f8035a824305412cd::89d97b24742b942a0e6c04d28f16e2c024f1e73e::bbc6d220b68174072c86c08d4fcba2efb8ea0973::8703de25118bbb6318c4a36fe6ceb02eef50087e::be5811e5525ba469079118e0ca6bcf277a27e0c8::3380ad53993ce47cc9b7db6f3661320b5ada57a0::caec765fd0da0d9fbc87a82002198e9fa771ace2::4ec6117409bf458926afb443b7f3e9ba2ee96cae::d1824c85bec63649d77a15953b94c5f1bd8ab407::e6d953b28b8c5f0121cc7b1aa5f331e3e277c96d::9acd41af304dc742fc3982f2dbd94c8edc0f4e12::7ac44f04c3156f836031ac7d46ae4495a73f7501::f14537a35b09d74f27184b09a1a7df7661758519::90298054f3c9b85c99befa77fb75ca3bbaede783::a09c953a742a481a7653657a4228f9e9442380c0::ba07d5658a8594ac8c9f1f1d4f85dc8ec9fa6b58::c88a4152fe7eb65eb2c5b95272e31296a2c5df87::2b67cd31344a27d1f96704d695790df111925029::3baf032745006298f2ff69fab3fbce1fdf23fac4::
https://api.github.com/repos/saltstack/salt,54966,backport_50834::master,0,closed,,"### What does this PR do? * Add disk_set and disk_toggle parted functions * Update the list of valid flags for partitions, based on parted 3.2 ### Tests written? Yes (backport #50834 already merged in develop)",dc34fb6f1514be749aca0cf49cab7ce339cd7fdf::75f4cf8336749c65fa340bb78e06391b2f50efde::
https://api.github.com/repos/saltstack/salt,54965,backport_50725::master,0,merged,master-port::,"### What does this PR do? Add two new states in mount: * fstab_present: Makes sure that a fstab entry is present, without mounting the device. * fstab_absent: Makes sure that a fstab entry is absent, without unmounting the device. The code is adjusted to work on Linux, MacOS and AIX. ### Tests written? Yes (backport #50725, already merged in develop)",77881bb15aaa47aee7e2d5a1a5bd9fd56fdc425e::
https://api.github.com/repos/saltstack/salt,54964,backport_50706::master,0,merged,Z Release Sodium::master-port::,"### What does this PR do? Add the `token` parameter in `blkid`, to allow extended search. ### Tests written? Yes (backport #50706, already merged in develop) @aplanas Looks like these tests fail on windows, skip them?::Ouch. Yes! The real problem is the interaction with the decorator in the disk module, that search for the blkid binary. I think that is better to skip than to add a new mock for this decorator. Thanks!::",db14378c77eda491a5fbcce8f0621a7cf5508ff8::
https://api.github.com/repos/saltstack/salt,54962,backport_50635::master,0,closed,master-port::,"### What does this PR do? Add a new btrfs state to create and delete subvolumes. ### Tests written? Yes (backport #50635 and #50801, already merged in develop)Copyright should be removed. Also, the windows test failures need to be addressed.::",2f16463ea81b16ab9b0dcf7e9a0e53c6b01900e2::db2645382399960e4d681f62210ac63cbfff645f::9b3fc022204398eab32fa27e609c07f4f54d19d4::1978a833280d6a727327d346f848b5cc3b950504::
https://api.github.com/repos/saltstack/salt,54961,backport_50541::master,0,merged,master-port::,"### What does this PR do? Add all subvolume commands to the btrfs module ### Tests written? Yes (backport #50541, already merged in develop)",1e885fff8eaf8c9e4e4587cb886f3a724445472b::9b28bb0a247373c55946e41549906134a7030d7b::107218abe44f7a907fff923aec8548cfd39307e9::0a2efa8c9391d2f70a4fe7cc834de76aa85bd48e::7e5fa31cd8029aaf5f1e7990146f38f7c0f17589::
https://api.github.com/repos/saltstack/salt,54960,backport_50452::master,0,merged,master-port::,"### What does this PR do? Sometimes we need to have a static picture of the repositories and packages installed in a system, so we can install new transient packages (and the dependencies) and be able to go back to a previous state where those packages are not there anymore. This module allows the user to take this picture, and revert all the changes done after this picture. We can remove package, reinstall packages that are missing, and do the same for repositories. ### Tests written? Yes (backport #50452, already merged in develop) (backport #54022, under review)I'm not sure I understand this comment. Are you just referring to the fact that `pkg` should always be an available module, and is the only dependency? > so we can avoid of loading all modules That's the part I'm most confused about (might just be something lost in translation) 😕 Do you mean that since we're assuming that `pkg` exists we don't have to worry about trying to import it first? Also that we're avoiding the overhead? If so, maybe this could be ``` Return True since the `pkg` module should always exist. This avoids the overhead of loading all modules. ``` (or ""the"" modules?)::I'm not sure that I understand this comment either. ""as both share the same size"" is somewhat confusing. Do you mean that a `freezer` (or whatever the term is) has one or both `-pkgs.yml` and `-reps.yml` for one name? If so, perhaps ```suggestion # Remove the suffix - both files start with the freezer name ``` would be more clear.::Would it be a good idea to just pull each of these out into their own functions? That would make easier to verify that we're following the proposed order: ``` ... = _add_missing_repos(...) ... = _add_missing_packages(...) ... = _remove_extra_packages(...) ... = _remove_extra_repos(...) ``` I don't know if it's *necessary*, but it might make things a bit clearer.::👍 for calling out potential performance gains. Also typo: `s/failled/failed` 🙃 ::@s0undt3ch do I remember correctly that we should be using `with patch` instead of the decorator approach?::As much as possible, there are cases where I remember having to use the decorator, but that was likely because I didn't try harder. https://engblog.nextdoor.com/what-your-mocks-do-when-you-aren-t-looking-b278e0d9e201::We can probably remove this comment here, since the `freezer` module was never released, right?::Ouch yes. Thanks, is more clear now.::I agree. I take your suggestion. Thanks!!::I think that this is a sensitive refactoring. Done!::Ouch. Fixed, thanks!!::I will follow this rule in future tests. I understand some of the potential issues with side-effects when a `with` context is not used, and I am not reusing the mocks on those tests.::You are right. Done::Please remove this copyright.::Done.::",6990cef14203a31d00c31043309c8561137be144::69037b3ec538b3ac9dc6fc94b0abf4f4b690c8b1::b6c061263fc3183c9abcde910e56c295c20cff86::de7a8c3301c18171835d6c241b66e137197e8ce2::4e1501a6637b4736163cadbdb39b4156e43593a3::
https://api.github.com/repos/saltstack/salt,54959,backport_50418::master,0,merged,master-port::,"### What does this PR do? Add a new chroot module in saltstack. Based on dockermod.call, this module implement an way to execute random salt modules inside a chroot environment. ### Tests written? Yes (backport #50418, already merged in develop) (backport #53996, under review)",82fd71daa6054076899da57c7f45d1074e591e8e::a21471a6bc2b91577f4772f585a156e5a8c03734::0643179efd6244cb89995816f24b2c1bb0cb21a1::3c4d06cbe85f530504fb534d69a23ddd985eb729::e1fbec7fd5246177bb4d3ef2f3aaf086ee0213fa::ae1d548ebce386523e5e3424f475bb27c61ded1d::
https://api.github.com/repos/saltstack/salt,54958,backport_50380::master,0,merged,master-port::,"### What does this PR do? With systemctl is possible for certain actions (enable, disable, mask, and others) indicate a different root directory.  If this parameter is specified, systemctl will do the work independently of systemd service. This patch add the optional root parameter to those actions. ### Tests written? Yes, adjusted the current tests. (backport #50380, already merged in develop)",6fbfdf3bdcebf91c31e55bc3377502b05a5cac9b::36f11fe3ce6042b10b83fc6bdb41b5d2d9153982::
https://api.github.com/repos/saltstack/salt,54956,backport_50302::master,0,merged,master-port::,"### What does this PR do? Add root parameter for a chroot environment to `wait` and `run` states. In the case of `run`, we delegate the execution to the `run_chroot` module. ### Tests written? Yes. Were missing in develop, added for master (backport #50302, already merged in develop)Should we be catching all `Exceptions` here? 🤔 ::Yes, this comes from the review of the original PR: https://github.com/saltstack/salt/pull/50302#discussion_r229833477 The logic here is that we are making a call to **any** salt module (e.g mkdir, file.managed, etc), so we can have any kind of exception, including some declared by the user (via a _module)::",59473928b21ec980074e6c20fe14094cf2518a07::
https://api.github.com/repos/saltstack/salt,54955,backport_50175::master,0,merged,master-port::,"### What does this PR do? Add root parameter to useradd and shadow execution modules ### Tests written? Yes (backport #50175, already merged in develop)",405c706f5a40c8a3085ad400dc3c8ab66c5d9885::79a50937422c8c517aa7f5ff0e4305b3ba6c6acb::31761fabb16cd814d82651ea9a992c25cae0d989::773cf94f675edfa7edc76df4cec01b70abd6bb12::0466689837044e4c71d6837483e54930df8a1003::0219776d77cfad6068da467abd0904d2884f38c3::0addf750e51ad5fb65b87d5135b1936da98281b3::c60fbdbb5787bced90f59debb5de57fec85b5ff2::
https://api.github.com/repos/saltstack/salt,54954,backport_50125::master,0,merged,Z Release Sodium::master-port::,"### What does this PR do? (From #50125) Provides a new root parameter in the public interfaces for rpm and zypper (From #50671) In _get_configured_repos if the directory where the repositories are stored is not found, an log error is emitted. Most of the times this is indeed an indication of an error, but is not always the case. For example, when we are creating a chroot environment we do not need to create this directory, as is generated by zypper when a new repository is added. This patch demote the error to a warning, as this directory will be present eventually is most situations after the first call to zypper. (From #51973) The virtual module 'pkg' is heavily used by other states, like the 'pkg' state, so differences in the signature of public functions can generate errors like: TypeError: xxx() got an unexpected keyword argument 'yyy' The fix is to add the parameter 'yyy' into all versions of the function 'xxx()' in all the 'pkg' virtual modules, but this approach is cumbersome and not very resilient, as any refactoring on the public interface or in the pkg state module will break again the already agreed contract. This patch append **kwarg in most of the public methods on virtual module pkg where it is missing, fixing the described issue and making more easy the refactoring of the code. Also do the same for 'lowpkg' (From #52412) In the openSUSE family we have several kind of packages, like patterns, patches and products. Currently we can use the `pkg` state and the `pkg` module to install them, but as they are not listed under any `rpm` command, the module and the state will report a Fail. This patch updates the zypperpkg `list_pkgs` to explicitly include this kind of objects under the list, so the rest of the commands from the same execution module (install, update, etc) will report the correct restul at the end. Because the way that the `installed` state from `pkg` is designed, we cannot be implicit about the kind of objects that we are installing, so we need to indicate in the SLS that at least one object is a pattern or a patch: ```yaml example: pkg.installed: - name: pattern:SUSE-MicroOS - includes: [pattern] ``` The `includes` parameter will be passed to the `list_pkgs` from the zypper execution module, that will return the package list using RPM (for packages) and zypper (for patterns). This more complete report will be used in `pkg.installed` to identify the correct installation of the new object. Closes #52402 (From #52744) Some patters are non-visible, and cannot be detected via zypper se -t pattern unless we know the name. When we are listing all installed patterns, we still do not know the names of the patterns, so we need to use a different approach. This patch use `rpm -q --provides --whatprovides` search to detect the non-visible patters, and complete the result for `list_installed_patterns`. (From #52844) The `rpm -q --provides --whatprovides 'pattern()' command return error code 1 when any pattern is present. This patch ignore the return error code, as a not found pattern is not an error. (From #54024) The cache from pkg.list_pkgs for the zypper installer is too aggresive. Some parameters will deliver different package lists, like root and includes. The current cache do not take those parameters into consideration, so the next time that this function is called, the last list of packages will be returned, without checking if the current parameters match the old one. This patch create a different cache key for each parameter combination, so the cached data will be separated too. (From #54379) When a patch is installed via advisory_ids, we do not want to change the behavior of list_pkgs, via the includes field. Currently, if a patch is installed via advisory_ids (state pkg.patch_installed), it will call zypperpkg.install with this parameter inside kwargs. This parameter is parsed by pkg_resource.parse_targets, and the prefix `patch:` will be added very early, just before taking the list of the current packages. This last step will change the behavior of list_pkgs, as all the other patches will be listed. This sound OK except when we want to maintain the old behavior, when patches are not listed in the `install` function by default. This patch will add the `patch:` prefix in the list of targets later, once we have the list of packages, restoring the old behavior. Note that we can still install a patch as a normal package, if we add the prefix in the name before calling `install`, and we do not use the `advisory_ids` field. ### What issues does this PR fix or reference? New feature ### Tests written? Yes (backport #50125, #50671, #51973, #52412, #52744, #52844 and #54024, already merged in develop) (backport #54379 from develop, under review)",dcbf6b609789e83d05ee93b21f7b93acb06c6b95::533774b94f9ea43996a2f744df03d381791f7a6e::9758fcaac3605b025f0c1bc066c1a410b256998a::bf1f6800569793d4b8232c26ab1bff683a633598::78ec27682e4c23b1fec9d1e1eee02c97f383f1eb::905ec75f7c8f4161ad4931331167b89e70e2f28a::b916c77d7ce5fa7f6f71f0257f68cb6a20fefadc::efccdba82b09eef18bc3a9a8bb5f2df8d00952e7::54d1a3543cf4ee2fe69b3595b91c07ddbda167c0::8ecd7be8573d39e4533c77d143d2fa21531f4dec::c12f27a53a3e3886cfe27395fda22be55eb84500::ede816c950e7b703453ab95989c9e4ac079047e3::7ebf9fb3b04283940ebaa4e4d082a7525d31ca59::ebb3770d745c47eaf7a7b2df344cd86a98b7fceb::c23f4b6f4e06b21bb7e9062e8c13ccf2383a24c0::d612e56a1f4da0afb6f76325b668946e2d72bdca::d232566c4010c3ee6b73c74eda8e3a450ca07834::3b92f2f88731ce8c89e596eacc4eabd30f3c9a4d::
https://api.github.com/repos/saltstack/salt,54876,master_state_doc::master,0,merged,,### What does this PR do? backports https://github.com/saltstack/salt/pull/54037,6d10298377ffad949aad661cede1d2259d4eac80::
https://api.github.com/repos/saltstack/salt,54875,master_add_ads::master,0,merged,,### What does this PR do? it backports the ads for saltconf onto the master branch,2e07c9887bbd7520bea1108029b834d9ebef2478::94b4aa3fe2e9282c314faa5a2b7063cb352fc72c::
https://api.github.com/repos/saltstack/salt,54806,failhard-batch-fix-2019.2.1::2019.2.1,0,merged,,"### What does this PR do? Added proper detection of `failhard` during the orchestration\cli batch logic. This is backport of the https://github.com/saltstack/salt/pull/54700, huge thanks to @mattp- for the original patch. ### What issues does this PR fix or reference? #54521 ### Previous Behavior batch didn't stop upon encountering the error with `failhard` set to `True` ### New Behavior batch stops upon encountering the error with `failhard` set to `True` ### Tests written? Yes ### Commits signed with GPG? Yes",2416516ddc3c30b24fd3b95e703721b79809be93::3e0e9289f56ff65169720a767947bbea169a52fb::6684793bf17f2620259f5a5366481d3986d7853b::
https://api.github.com/repos/saltstack/salt,54701,failhard-batch-fix::2019.2,0,closed,,"### What does this PR do? Added proper detection of `failhard` during the orchestration\batch logic. This is backport of the https://github.com/saltstack/salt/pull/54700, huge thanks to @mattp- for the original patch. ### What issues does this PR fix or reference? #54521 ### Previous Behavior batch didn't stop upon encountering the error with `failhard` set to `True` ### New Behavior batch stops upon encountering the error with `failhard` set to `True` ### Tests written? Yes ### Commits signed with GPG? Yesnot sure if I need to set versions in this PR::",78d80e5663ab6b31bb4d2ff9ff9057fc428b9fb7::866c66646c405254742ec1630e78d0a5a682347b::a0ef958cca60aceb404af69ba2b85dcefd7be6e7::ae78644aadeab8004ab3b0ba304cb5681422d1e3::6281afb5a60e9e8c8a641fb57b38edd585f745ac::31fe6b1c3a866ae83f7fbd6964620480e69f41f4::
https://api.github.com/repos/saltstack/salt,54700,54521::develop,0,closed,Needs Testcase::develop::,"also noticed a bug in cli.batch itself, probably from backport mistake. fixed that as well with the unindent. ### What does this PR do? ### What issues does this PR fix or reference? ### Previous Behavior Remove this section if not relevant ### New Behavior Remove this section if not relevant ### Tests written? **[NOTICE] Bug fixes or features added to Salt require tests.** Please review the [test documentation](https://docs.saltstack.com/en/latest/topics/tutorials/writing_tests.html) for details on how to implement tests into Salt's test suite. Yes/No ### Commits signed with GPG? Yes/No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.",178d2abce630081d6f7e291189902c69be224f91::01eb487608ed54c9417d1b18f9a8e8c0ad8a5045::d643b7a3ad3902ce47321d2dcc4487ae7cb5e2dd::36b8c18dacc41aab5152af936ba3d8ed53ea4e52::
https://api.github.com/repos/saltstack/salt,54025,backport_54024::neon,0,closed,,"### What does this PR do? The cache from pkg.list_pkgs for the zypper installer is too aggresive. Some parameters will deliver different package lists, like root and includes. The current cache do not take those parameters into consideration, so the next time that this function is called, the last list of packages will be returned, without checking if the current parameters match the old one. This patch create a different cache key for each parameter combination, so the cached data will be separated too. ### Tests written? Yes (backport #54024)",40a3798b38ac1197a51525cf9636a803cee8ec8d::
https://api.github.com/repos/saltstack/salt,54023,backport_54022::neon,0,closed,,"### What does this PR do? Fix a bug when the module try to re-create the directory where the package information is stored, and add a new parameter in the restore function to clean the YAML document that contain this information after a successful recovery. ### Tests written? Yes/No (backport #54022)Didn't `exist_ok` get introduce into Python3? We can leave it in the PR for develop, since we're dropping Python2 in Sodium, but Neon will still be supporting Python2::You are 100% right. Let me change the code then.::",61305256625de9e6de6a58ea9ef26aa15b71b223::63fdd4942cc06eb33708df0cdb578f49f2b31095::
https://api.github.com/repos/saltstack/salt,54022,fix_freezer::develop,0,closed,,"### What does this PR do? Fix a bug when the module try to re-create the directory where the package information is stored, and add a new parameter in the restore function to clean the YAML document that contain this information after a successful recovery. ### Tests written? Yes/No Please add a versionadded comment here for the new parameter. I think it's something like this: ``` .. version-added:: Sodium ```::I have the backport to Neon in https://github.com/saltstack/salt/pull/54023, do I need to put Neon just in case?::I also added the release note in neon::",7f70d00bfc790cb6f89b768f996b54542587c822::7ee32bf88875d2b8616068b9e1b14392bf037cfb::
https://api.github.com/repos/saltstack/salt,53997,backport_53996::neon,0,closed,ZRELEASED - Neon::,"### What does this PR do? Fix a bug during the call of the kwargs parameters for chroot.call(). In the original code the iteration was done only on the keys, but the code expect the key and the value too. Simply adding `.items()` fix the issue. ### Tests written? Yes (backport #53996)Would it be a good idea to adjust this to assert that it was called with the proper arguments? That would help ensure that the kwargs iteration doesn't see a regression.::Makes sense, yes.::Done here and in https://github.com/saltstack/salt/pull/53996::",6b091ffe8f33e3a584972c4148c3dcd5c72862e4::10f38dbc12bf3ee5a163808eb772a1c3ccdac86b::d67c57eed83be20d99dab83e00aadda99fb78a12::a37a90c34de1289305bc022c8992a855264f4a6d::
https://api.github.com/repos/saltstack/salt,53993,backport_53992::neon,0,closed,,"The parameters runas and group for cmdmod.run() will change the efective user and group before executing the command. But in a chroot environment is expected that the change happends inside the chroot, not outside, as the user and groups are refering to objects that can only exist inside the environment. This patch add the userspec parameter to the chroot command, to change the user in the correct place. (backport #53992)",61f7cf23b85555eb774528a924e196bfc4d93432::818142daeed45a423b3ca4a3c04235efa9d3bee7::9de8e65598abaa365dd3209d0b5c8eea7061b7e3::
https://api.github.com/repos/saltstack/salt,53941,backport_53447::neon,0,closed,,"The command `blkid -o export` not always provides a 'TYPE' output for all the devices. One example is non-formatted partitions, like for example the BIOS partition. This patch do not force the presence of this field in the blkid output. (cherry picked from commit 42e72265fef5a52cfcd3fe760ce9f1c0c7723ef3) (backport #53447)",d4c8af9918cc552a9c8b7679c671ad48eb321613::
https://api.github.com/repos/saltstack/salt,53898,bp-49133::2018.3,0,closed,,#49133 was never backported after merging.,e45d39f8afe718c540ce10494af573808d38fa03::e80b54fa97d8e530caed6280e726f38e7acd5798::5c8766444ddf56e50ff886ec4264b70926caf9d8::
https://api.github.com/repos/saltstack/salt,53443,backport_53381::master,0,merged,Reviewers Assigned::Z Release Sodium::,"### What does this PR do? systemd-firstboot is a command line tool from systend that will set some basic configuration options, like the locale, keyboard configuration, or the machine-id of the system. ### Tests written? Yes (backport #53381, already merged in develop)",d9b3ce59d191f9389dc2c79f09e8092738cd6c5f::
https://api.github.com/repos/saltstack/salt,53442,backport_53345::neon,0,closed,Reviewers Assigned::,"### What does this PR do? Add initial execution module to support the kubeadm command. ### Tests written? Yes (backport #53345)if ``None`` one will be generated.::services::for::advertise::checks::control::advertise::should::Please remove the license. This will fall under Salt's license::Ouch. Done::done::done::done : (::done::done::done::done::yes, done::",deedf8fc044a34ecd2b942fa5c256ef304692068::389dd66d4655a145db9a9ff35fd0761517332cd0::ed489821918a1e8a897893f54526fa733dfe0dbe::
https://api.github.com/repos/saltstack/salt,53441,backport_53326::neon,0,closed,Reviewers Assigned::,"Some firmwares (like some NUC machines), do not provide valid /sys/class/dmi/id/product_name strings. In those cases an UnicodeDecodeError exception happens. This patch ignore this kind of issue during the grains creation. (backport #53326)",5bee11167ddf37b066bea78b9e7511921739490b::a21105f15f384d27a024c3f541ab839c8fcec06f::
https://api.github.com/repos/saltstack/salt,53440,backport_53167::neon,0,closed,Reviewers Assigned::,"### What does this PR do? The LazyLoader class populate the sys.path array to add the path that contains the Python module that will be executed.  If before this point sys.path gets extended (like when globally the extmods utils directory in added in some places, like after a sync) the code can find all the dependencies. This patch adds a new parameter to the LazyLoader class, extra_module_dirs, that will populate locally the sys.path before executing the the module. This can be used to guarantee that in utils (and other modules) will be available to the modules and states in any circumstances and Python process. ### Tests written? Yes (backport #53167)",fde3d366b5466b5f5d0e945a090522a3fe324bd0::1a8aacdb3ba1d80b740287c71535a2889c605375::0d0e3af40d1f00247cb810101b4b254a86bb1216::90203cd40a2bb1d3ba0ed6882f5c4dd9101045e5::b23f6b4b79eb25c5c9dca97ebd1770e50dc1b636::
https://api.github.com/repos/saltstack/salt,53439,backport_52699::neon,0,closed,Reviewers Assigned::,"### What does this PR do? We can set via `btrfs property` command some properties. This command is used in the btrfs execution module. The current state will leverate this code to make sure that some properties al set or unset in a safe mode. ### Tests written? Yes (backport #52699)I think I have a mild preference for the positive: ```suggestion opts = 'defaults' if use_default else 'subvol=/' ``` Thoughts?::I think you're missing a `ret['result'] = True` in here somewhere, to indicate that a change *would* take place, right?::Shouldn't this only be `True` if there were changes that actually happened?::Could you also add a test mode test in here to ensure that if test is true that it really doesn't call anything that will change the underlying system? Just to protect against future changes.::Why not. Done.::I think that this is not the case, as according to the documentation needs to be `None`: https://docs.saltstack.com/en/latest/ref/states/writing.html#states-are-easy-to-write This done in line 358, just a bit above this line.::According to the documentation `True` is used when no change is needed or when the change was done and was successful. You can see that the default value of `result` is `False`, that is used for all the `return`s that happen during the code, is only if we reach this point that the can move it to `True`, as the conditions of no change or success are meet.::Right. Added here and in https://github.com/saltstack/salt/pull/52699::Ah - I see - you're doing the early return there in the `test` path 😛 ::Ah. You're right. > If step 2 found that changes do need to be made, then check to see if the state was being run in test mode (i.e. with test=True). If so, then exit with a None result, a relevant comment, and (if possible) a changes entry describing what changes would be made. Though you *could* add `ret['changes'] = properties_to_set`, since we've got that information here.::I used the comment section to report about this. Do you think that this is OK or is better to add a new commit to move them to the changes entry?::👍 I like 'em in the changes - it's a better UX because it matches what they'll see when they do it without `test=True`. The closer we can appear to that with test mode, the better.::Makes sense. I will change this one and the original. As this will change code already present in the repo, I will add a new commit that will reflect the change.::Changed!::",22d62ce8ebbfb797dbbfcba8178c1f71754ad834::8e0a4e4c8193e06b3493691e2627078c1157c995::44ca8baca72da72696be235715dc90a69d487287::
https://api.github.com/repos/saltstack/salt,53438,backport_51706::neon,0,closed,Reviewers Assigned::,"Also ignore NO_DATA errors, as this imply an empty field Fixes #52788 (backport #51706)",926b9db1ea8c6304c74a955383a69bbcdd13abf2::
https://api.github.com/repos/saltstack/salt,52477,win_cmd_2019::2019.2,0,merged,,### What does this PR do? backport bugfix #52472 ### Tests written? Yes ### Commits signed with GPG? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.,736a43752094213afefdd00f5ef1ccc5b8e67d62::
https://api.github.com/repos/saltstack/salt,52476,win_cmd_2018::2018.3,0,merged,,### What does this PR do? backport bugfix #52472 ### What issues does this PR fix or reference? see #52472 ### Tests written? Yes ### Commits signed with GPG? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.,0e0c42e204dce003f7da1d4bda14a8331eecf231::
https://api.github.com/repos/saltstack/salt,51905,fix_mount::2018.3,0,merged,,"If 'fstype' parameter is not set in Linux environments, salt will build a mount command with an empty -t value, making the command fail. Note that this code needs to be backported to 2019.2, as this bug is also present there.@aplanas wouldn't it make sense to refactor a bit here? I can see the `if fstype` being duplicated.::Makes sense!::done::great. thanks!::",ac688df875fddaa0d68cbacbbd64b34b190054c8::
https://api.github.com/repos/saltstack/salt,51637,backport_50887_2018.3::2018.3,0,merged,,### What does this PR do? Backports  https://github.com/saltstack/salt/pull/50887 to 2018.3 ### Tests written? Yes ### Commits signed with GPG? Yes,d8d2b863a5c6bdd446728562ee787a5ffe0cffae::
https://api.github.com/repos/saltstack/salt,51599,bp-51510::2018.3,0,merged,,"Note that this also includes a recently-added grain from 5675166, as it also should have been backported.",ed194c7f3c5ad0a349eb53b2c1b52502ed376ebc::
https://api.github.com/repos/saltstack/salt,51475,elasticsearch_fix::develop,0,merged,ZZZBugfix - [Done] back-ported::,"The Elasticsearch returner was broken. @Ch3LL I don't know where you are in terms of freezes, so please backport this as appropriate. cc: @kd8drx",0ae13fa49fa8fc14c64522e418612da758d02eb3::7025772f37d4ec752db90a518a9e0769f366305e::339cc284f6f924fe285c558282ad61d7c3f711a1::b78745e2737deec9c38190e4b1afcb0054fb529b::
https://api.github.com/repos/saltstack/salt,51445,fix-custom-grains-traceback::2018.3.4,0,merged,,"Support for passing the grains data to custom grains modules wasn't added until the `2019.2` release cycle. It seems like this file was included when something else was backported to `2018.3`. This results in the following harmless traceback in the test suite: ```pytb Traceback (most recent call last): File ""/tmp/kitchen/testing/salt/loader.py"", line 778, in grains ret = funcs[key](proxy) File ""/tmp/salt-tests-tmpdir/rootdir/var/cache/salt/minion/extmods/grains/custom_grains.py"", line 5, in test return {'custom_grain_test': 'itworked' if 'os' in grains else 'itdidntwork'} TypeError: argument of type 'NoneType' is not iterable ``` (It's harmless because nothing actually tests this grain until `2019.2`) @garethgreenaway @Ch3LL Please note that this will cause the following test to fail upon being merged into `2019.2`: ``` integration.grains.test_custom.TestGrainsCore.test_grains_passed_to_custom_grain ``` So, when doing a merge-forward, you'll want to do a `git revert <commit_id>`, where `<commit_id>` is the commit ID for this change, and add it to the pull request for the merge from `2018.3` to `2019.2`.",191235d8d31817991035107fb320cc698d9f9bcf::
https://api.github.com/repos/saltstack/salt,51424,backport_51074::2019.2,0,closed,,"### What does this PR do? Add new optional parameter `fat` in disk.format_ to specify the FAT size (12, 16 or 32). ### Tests written? No, current one should be OK (cherry picked from commit 5828aa1730022ce7d46a53507dade94dde44fa67) do we really want this new parameter? What about using fs_type for fat, as in fat12, 16, 32?::We do need it, as mkfs is a frontend for the specific executable mkfs.fs_type. There is not mkfs.fat12, mkfs.fat16 nor mkfs.fat32 executables, only mkfs.fat of mkfs.vfat. They use the -F parameter to indicate the size.::I think it's a wrong route to take, adding each different specific mkfs parameters here. The point of this function is to unify those calls, so probably we should have an abstraction parameter for this, where on ext to mean inode_size and on fat/vfat to mean fat-size. I'm not saying to reuse this particular inode_size, but to avoid adding new parameters for very specific calls. At worst, we should call it fat-size, as their man page describe it - https://linux.die.net/man/8/mkfs.vfat::The code is living in develop, this is a closed backport (so not accepted in this branch). I also note that the salt approach here is always to add explicit variables, with documentation in it. I do not recall any reuse of one variable for multiple purposes in any of the public API for salt. Can be the case tho that there is an instance of it, but any usage of kwargs was deeply reviewed. For the rename, I can agree with you. `fat_size` is more explicit. Feel free to create a PR to develop where this change is living.::",2198c9154a46c5ad7c189dcbfccabc8c2d84a14c::
https://api.github.com/repos/saltstack/salt,51423,backport_50834::2019.2,0,closed,,"### What does this PR do? * Add disk_set and disk_toggle parted functions * Update the list of valid flags for partitions, based on parted 3.2 ### Tests written? Yes, for the new code (backported from #50834)",8b705ad69f3bee84ad034549537d4ed5af4f12b6::2e1253d415836137537d552d754b9c8d75a650f8::
https://api.github.com/repos/saltstack/salt,51420,backport_50635::2019.2,0,closed,,### What does this PR do? Add a new btrfs state to create and delete subvolumes. ### Tests written? Yes (backport from #50635) (backport from #50801),f8f9ad3d84d71ac0e0d72407d05c9d781aef1fbd::4b2f93c2978e939e87dcc38bbb114015704ce717::
https://api.github.com/repos/saltstack/salt,51418,backport_50541::2019.2,0,closed,,### What does this PR do? Add all subvolume commands to the btrfs module ### Tests written? Yes (backport from #50541),ae866afb0ad27e206b59a2979aaba4967d5d5897::e0b97ac9ed8a44f35a27e0c77f5bc8a5fb9aecd4::a3a09b95b4aa725d78be78fac2bc187bb26bca25::
https://api.github.com/repos/saltstack/salt,51411,backport_50175::2019.2,0,closed,,### What does this PR do? Add root parameter to useradd and shadow execution modules (backport from #50175),727327ae4619095e1fcb556af4aa46775f8bb201::634df9895da63465b41082c6a7bedc5e763b0ad8::33c9839dacb0b467326446d657edfdbdef5f5c86::61ad2f43a531ce144cd6785b3c5b8c7d3d05e9d3::af8485fe7172b3aa88017b3ccaf93bb0d21d3b1d::2602bf241d0483b2240c25ab9b8a291ef57e4235::093603e0506f71a80e1cd4695b9933db2895d057::6cb98814e9e02fc59fa86cc650787b64295b29c5::
https://api.github.com/repos/saltstack/salt,51409,backport_50125::2019.2,0,closed,,"### What does this PR do? Provides a new root parameter in the public interfaces for rpm and zypper ### What issues does this PR fix or reference? New feature ### Tests written? For the low level RPM yes, for the zypper level I adjusted the current tests. (backport from #50125) (backport from #50671)",0f6c0741c6919dbeafb329fc7c0aa5072d881898::c79bcb64e15f70f277b61f834948e4194ea8ef35::aba67317e39975e4e988c96dbb6c30bba4a7c196::3825c9b30b9fd018236910339b778cb35263da76::d15559241d2aad26d9a10233a102625625ca8773::14e88f4f439a4a576e5b010d59a21296f0309d4f::3882eb66af8ae0ff11716ba3e4181209ed73e3c6::929eff2daffefdb7f90f25b5a086c8216003bfe2::5d747de3db7e1d69f4004a6b148e594cf5d8fe52::
https://api.github.com/repos/saltstack/salt,51408,backport_49804::2019.2,0,merged,,"The command `parted -m -s {} print` do not print the ""Type"" column, but after the ""File System"" column print the name of the partition. This point that the type of the partition cannot be extracted using parted with machine parseable output. (backported from #49804) (backported from #50473)",da2e6325666b018510cebb67c6ea191c526d30f6::467daf2e4cfeaedf6f6ac447c0f826be71dcccd9::
https://api.github.com/repos/saltstack/salt,51300,merge_context::2019.2.0.rc1,0,merged,,### What does this PR do? Brings the backport to 2018.3 into 2019.2.0.rc1 Fixes case sensitive policy name issue ### Tests written? No ### Commits signed with GPG? Yes,3ed7b847924e67f0244ac29852207c9f4ce6ef25::9d487f20ec5e29c91d47afbabe1f602a8e6b659e::
https://api.github.com/repos/saltstack/salt,51063,develop::develop,0,closed,,"Or, SaltStack is Python 3 only! - Feature Name: Sunset Legacy Python 2 Support - Start Date: 2019-01-04 - RFC PR: (leave this empty) - Salt Issue: (leave this empty) # Summary [summary]: #summary SaltStack is phasing out Python 2 support, with the develop branch of Salt Open dropping Python 2 support effective immediately. We will continue our policy of backporting bug fixes and security patches for the last two releases, but starting with release Neon we will no longer support legacy Python versions. For SaltStack, this means we will support &gt;=Python 3.6. Previous versions of SaltStack, that are able to run on legacy versions of Python will continue to be available on http://repo.saltstack.com as well as https://pypi.org. Older platforms without native Python 3 packages (e.g. RedHat) will be provided SaltStack packages that include Python 3. SaltStack will also fully support the creation of new, Python 3 based packages for all supported platforms. # Motivation [motivation]: #motivation ## Python 2 EOL Python 2 will no longer be [officially supported][1] as of [January 1, 2020][2]. As an organization, we cannot in good faith continue supporting Python 2 - any lingering bugs in unsupported Python versions could cause problems with SaltStack, and thus, our users. ## Python 3 ### New Features! By eliminating Python 2 support, it means we will be able to take advantage of modern Python features, like async/await, async generators, and asyncio (or other async frameworks). Additionally, all improvements to the Python language (speed, additional features, etc.) will come to Python 3. By dropping Python 2 support, SaltStack users will benefit from these improvements simply by keeping their Python installation up-to-date. ### Simplify In addition to the performance benefits, the modern Python features should allow us to simplify our codebase. As SaltStack internally supports Python 3 already, this simplification includes the ability to eliminate our dependency on [six][3]. Additionally, but having only Python 3 to support, we significantly decrease the time it takes to run our tests (having only one version of the language to run tests against). It also reduces the mental overhead of having to consider multiple Python versions when writing code. ### Python 3 Minimum Version In order to take advantage of the new features in Python 3, SaltStack's baseline version of Python will be Python 3.6. ### Availability In the past, native Python 3 packages were difficult to find - one usually needed to compile it themselves. That has changed now with all modern OSes shipping Python 3. ## Alternatives [alternatives]: #alternatives For those who are stuck with Python 2: - Previous versions of SaltStack, with Python 2 support, will continue to be available on http://repo.saltstack.com, as well as https://pypi.org - Enterprise SaltStack customers will be able to make special arrangements to continue to receive Python 2 support for certain platforms. If SaltStack continues to bridge Python 2 and 3 we will continue to incur the significant costs associated with maintaining and testing the combined codebase. We will also suffer the opportunity cost of not being able to take advantage of the more modern features being introduced with new Python 3 versions. # Drawbacks [drawbacks]: #drawbacks By dropping support for Python 2 it's possible that a significant number of installations may be impacted. For those who have custom modules that are Python 2 only, or are stuck on unsupported legacy patforms, they may not be able to upgrade to the newer versions of Salt. While this change won't break communication between master and minion, or change pillars or state files in any way, when SaltStack begins taking advantage of new Python language features (e.g.  async/await keywords, f-strings), it will effectively be broken for those who for whatever reason have not upgraded to modern platforms. However, in some cases, this change may be tipping point that gives them the impetus to upgrade to a more modern OS. # Thank You, Python 2 It wouldn't be right to drop support Python 2 without first saying a hearty, ""Thank you!"" Python 2 was a wonderful language to program in, and has brought us all much joy and success. Though newer versions of SaltStack will no longer run on Python 2, we will all have fond memories of the improvements it made in our life, and the improvements it allowed us to make in the lives of those around us. Python 2, so long, and thanks for all the fish! [1]: https://www.python.org/dev/peps/pep-0373/#maintenance-releases [2]: https://pythonclock.org/ [3]: https://pypi.org/project/six/",5f6dac9817fe2be571fad344874519086436d88e::4dddc3ef3c305deb04abe98ab285413fa3008f7d::
https://api.github.com/repos/saltstack/salt,50962,ipv6-warnings::2018.3,0,merged,,"These cause spurious logging when there are IPv6 interfaces present.  Furthermore, these functions are both a) present in PY3's ipaddress module, and b) present in the backported ipaddress module used in Salt when the machine is running PY2. Fixes #50947.",f3b12547a270bf8aab16b6cdae258aaeb589e7ee::773b983dff801d5fe442c3ec5ec637a3e2832ac8::
https://api.github.com/repos/saltstack/salt,50951,merge-develop::develop,0,closed,,"Merge branch 'fluorine' into develop Conflicts: - salt/modules/win_lgpo.py - salt/templates/debian_ip/debian_eth.jinja - tests/unit/modules/test_debian_ip.py @MTecknology There was a conflict in the debian_eth.jinja template due to a change against `develop` back in August that has since been backported to 2018.3 & Fluorine, that didn't merge forward correctly when merged forward from fluorine.  Would you mind double checking the version of the template that is currently in `develop` and make sure it has the right changes from https://github.com/saltstack/salt/pull/49355.  Thanks!",a1dddce6fda47e5b09e0aa0f94b4f5420ac6fcb9::47bfba1018db9b6faa2f42da9fa621b92e337527::79f6b426ffe2fb996f5ec9737a3608f7dfa6100e::42e4ab3c53a6d7ba8f6c4c65770be232ee6c2bdc::4ea93867e8e13ef8cb338b8fb29dbbdae8550c2f::31878d5aaf894130b9f923ca970e4751a680d4f1::a394cd76f6d4157ac3e665b1980473dd41fb021d::be14517c5c95e1d73c38f0bd76785e4ef4b1ef07::36a4a1af49f9d0e26c0b15a1ea64c6ecfbb6126b::e9714126ac5d7e2f56e27953bff3cf81c3147ae9::ef160a67d66f3eac78f62e982976584b330eabd6::87a04df512c376b86bf3824bf91d90dd6a97ea98::6b9522343e382b8b8d3e3cee4540e5a9d5738ddd::b905cf6c124f3844056616f2c98ca253a9f06773::cf61c8d9cf97b2eede93658add0c504830e2e2c6::638f899e6d5269672cff4df59583222ef45f61f8::601f434b068d279812607df00024cc442452b71f::4c7df5fd3c6aeab9941ed49923dc3870ce7a41b5::6e4122592a13bfd82afcf9c19f3070f23d9a73dd::1b096fbee6abf80a45ccfe5917af5e9794c2735d::0b5956115b4ebec31fb3bab8818cccf0e05a30e6::15c34fe7a29a9c20983d8a777ee51595b6fa8f91::622c354683fba70f51898be90d62e56a69da4bad::d34eadec0cebbcd40b46a2eccf8bf164c6d8daf5::b266e8b622f60cc67c6024c30ee92da34df4102a::12a84477414d9d244c5736cf91fb68f9026d48ed::ce1842e6b17d5f38179c3b7dfef035c1bfd09e76::3a71567f43f5981964af78fc1426b3eaf238a601::9f8289be9ce39d238ae5f1fceb107847ca625a9b::deadf9c2d08821755334bc92e52a760951231a07::035129646ec085679b094baf4e201825302b954d::00cbf26d5ee85f1f59dcd2f0e63eb7cba149c458::cb50648715d639f398dfb747e7bd1aabffaa2094::f18d1aa8901f4b5377e40d3f520b3d98cd91fbed::b2b97959d0d840c425175ebe9665d71fa1247252::1247598f28d0f0d117471df8e8ae93fa2384bbec::c55b7b4343a35e8f132d5fdbc061a41590b9da92::2dde12add35568d394642db8ad747af66b0dd362::f077783cbde0e07174e8163a4d491c2f852ed4c8::5eea728879cf6e545ce7db4254edd802ebaf0954::9b6b39ce493d35f052d1be9fce4752eb3e596bed::48fc01fb137f5df3e33d9b495d83a4d51db90020::e31e731697fc4c571e974315f8d90835a0e90d02::ec8e116f7e368a28790fc20dfe03eda7fc28e4e6::a8ad17aaa4a78abb776c01562a123386f68286bc::56c0e55581cece689663ed0e49cdc00d5e02b183::b855fd9e7c5711322497204bb231a95f99f95f9e::1233e2b4807b890dd027223429252c4cdd932485::264a04292d4e23c80c41f3a64932d6f10edcea71::9eaa2edfe390d2a7a7172384a2faf6ae8d6d1040::1a00abc5f63a987e9d9b707e3cf4e4ea9dbf3bc1::3a3d9b7d3ee6fe0bf5e9761e26a6347ae6b81563::0d00ae4f8eb65f3cd3bef097760ff6f7a9227ab4::14d7d1d68b95f224ea8c1157bd3a95f6203ab18a::6ea059d30824fe801147cac3e975f935d68d47e3::05baa95e59e346b4403c25897b014cf457a3926d::6b45aad5e711de4299552cfd1f7877277691a3bf::ea90f114a2e3d3381fe832af52eaaaaaee2805a1::ebc9a01b38918e9bb8c1dee8969392db51734b08::216fa14fee21bffc4477a2d359422aa2cd8dec98::449fa2e7ee5a68f914655ffd77f86cdc27af6dbe::10cb130eb6c6cf9c97636479dade099463131c86::8997550040301f08af21045b4a55c763457f5044::07f51bf87e0d8f797a65321a4005ecf223682833::ea99008c887c3d03c2856c6ad2b43da148acc4b7::165d7336cd4ba36d0ee77253068dab738d345351::80197bc49eaee0866ce9f603cb2fcad83048c76f::0d32cb9228d3abaf69ab2f3077ed4817bf1e665f::1672546d4c22cdb54c492d96c353c2437a482753::f81d66d53a7e100c2a233bcbd963b863fbb1ff05::f2b9e7f1bc5b82a29c56a53ce782828714495b46::a5dffb9efed5adc98771839d151e2e567bb4d247::daffcb3b6a4aaac6e377d15b8ac437fb3da4d493::abf55a2b68941464af25ace9accd032df5e34b0d::f06898e85d7b9656cd1c6fb038d39519d5f508c3::7ba54cd7b2dabb01fb3cdd1e8b3cbe2361d4f988::bbc12446a876361f8aba446bf68f16477439aaff::6b780c6d368491b63970dca11d6e336495f8076b::483fad4117bea1b94e1abe5c6f3787f378a1ace0::db2a1cc016ff8fcc1530161797522ad3bfd56b50::08cb05d4488770d5de05156cb4e6021a2072bed7::68851de5a611512c9a71b199b140ee490c7a8638::4577c2111d1a97fde2dfb915dfa8da4cf052fb21::af3aac57bd4401ae58d11694bc19597b7039f877::
https://api.github.com/repos/saltstack/salt,50885,test_key_before_del_cloud_vmware::develop,0,merged,ZZZBugfix - [Done] back-ported::has master-port::,so I don't really understand what I've patch but this line always throw a KeyError when i try to deploy a machine on vcenter (if that can be backport to 2017/2018 that would be great ),e413cb8d62da3792d3a83547bf0ce3269fa8cd44::dcb938f4c22ee02ec9fd3729b93c43dd16d40ce4::0dc0bffc7c5855fe2a77dc81286a6f4a1cb51311::c0b7d5a89d863b7b6a5bf9ad7d37b8c3451bf839::a678983266e91a1cd8cc19aba10bf0ed691fc8a4::
https://api.github.com/repos/saltstack/salt,50864,fix_typo_doc_file_managed::develop,0,merged,ZZZBugfix - [Done] back-ported::,"Hello, just a little typo that hide a wonderful feature in the documentation :) (if that can be backport to 2016/2017/2018 documentation, that would be great)",86fe606afcd10f9f6172c140a946da96f78b9cef::bdf0a7fcf16ffa9fbaea1c86e0a8bf58563702b6::
https://api.github.com/repos/saltstack/salt,50831,bugs/50809_gpg_renderer_fix_fluorine_backbort::fluorine,0,merged,,### What does this PR do? Backport of #50810 to fluorine branch,07ac1ca244fc22c675729962763b814f0704533f::f76e8b87f3afeb609037fcc1707b2cf1ca132b46::
https://api.github.com/repos/saltstack/salt,50592,docs-2017.7::2017.7,0,merged,,"It was causing build errors when SPHINXOPTS=-W is used. This also removes an overline from one of the pillar modules, as it causes a warning on newer sphinx releases.",8127dd5bb40fc266b894c83dd2a6d2a9d42e2d5b::db157766a02fd472473c79022c7c6c300cb2ee4f::
https://api.github.com/repos/saltstack/salt,50415,pass-cwd-to-runas_system::2017.7,0,merged,,"Fixes parts of #47787 ### What does this PR do? 47787 ends with a comment that something has fixed in develop which could be backported. Since this might be a major effort, my suggestion is to first merge my little fix which is much easier to do. While I'm no expert neither in salt nor in windows, my change seems straightforward enough to be harmless ;) ### What issues does this PR fix or reference? with my fix, the cwd parameter gets gets passed into the runas_system() method ### Previous Behavior salt myminion cmd.run ""dir"" runas=myuser password=mysecret cwd=C:/Windows/Temp would be executed in C:/salt ### New Behavior salt myminion cmd.run ""dir"" runas=myuser password=mysecret cwd=C:/Windows/Temp would be executed in C:/Windows/Temp ### Tests written? No ### Commits signed with GPG? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.",0113137a20e2c370b5beeec89894d972f074646c::
https://api.github.com/repos/saltstack/salt,50379,fluorine-backport::fluorine,0,merged,,Backport of PR #50356 ### What does this PR do? This PR handles cdrom disks devices in the virt module. When updating VMs created outside of salt virt module we would hit problems since these devices can have no attached source. ### What issues does this PR fix or reference? None ### Previous Behavior Run a `virt.update` on a VM that has a cdrom device with no ISO attached. The salt call will fail with a message saying None is not an iterable type. ### New Behavior Running a `virt.update` doesn't trigger an exception and keeps the cdrom (or floppy) device intact. ### Tests written? Yes ### Commits signed with GPG? Yes,9099179b7a0bc38c9666aa169968e3140eb9e035::a75dcb3e9e0422f99e92169cab2e8e2bea9fd89b::99b453360f249dd22de7ff205adb2d9abe117a74::d1ec0da2c0d50a7129120ff135084f296c681fcf::f9b6171aed2a96d13386837e322e4583f14d3943::
https://api.github.com/repos/saltstack/salt,50360,infra7721::develop,0,merged,,"### New functionality - new boto_cloudfront exec functions -- get_distribution_v2() -- get_distribution_config() -- list_distributions() -- distribution_exists() -- get_distributions_by_comment() -- create_distribution_v2() -- update_distribution_v2() -- disable_distribution() -- delete_distribution() -- list_cloud_front_origin_access_identities() -- get_cloud_front_origin_access_identity() -- get_cloud_front_origin_access_identity_config() -- get_cloud_front_origin_access_identities_by_comment() -- create_cloud_front_origin_access_identity() -- update_cloud_front_origin_access_identity() -- delete_cloud_front_origin_access_identity() -- cloud_front_origin_access_identity_exists() -- list_tags_for_resource() -- tag_resource() -- untag_resource() -- enforce_tags() - new boto_cloudfront state functions -- distribution_present() -- route53_alias_present() -- distribution_absent() -- origin_access_identity_present() -- origin_access_identity_absent() - new boto_iam exec functions -- list_server_certificates() - small bugfix to boto_route53.rr_present() found while developing the above ### Tests written? No ### Commits signed with GPG? No Eh? Should we be conditionally importing this? AFAIK, this won't be present in most installations.::What sort of items should a person be passing here via kwargs? Can they be documented? If not, can this be removed entirely? ::Hrm.  It seems to be there on most modern-ish python installs but I see your point.  Ideally we'd add it to the salt.ext bundle, since it's just crazy useful in general, but until that happens I can pretty easily translate the several jmespath calls I make to `xxx.get('foo', {}).get('bar', '')` type calls instead :)  That's what they originally were in my code before I transmuted the to jmespath calls anyway...::@cachedout  Considering that ALL the AWS API talks is JSON back and forth, having a lightweight but super convenient library on hand to easily dig around inside that JSON payload (rather than the clumsy .get().get().get() style used so often, or even worse, unsafe assumptions like foo['bar'][0]['baz']) would be a HUGE win for everyone writing boto based modules, and provide a standard approach to such things as well... How would I go about asking for jmespath to be added to the salt.ext module exactly?  :)::We'd have to take our case to @thatch45, @twangboy  and @dmurphy18 and see what they think. The biggest issue here is packaging, which is a pretty major pain. We'd much rather see this as an optional dependency but let's see what the feedback looks like.::I can definitely make it optional, but that just ends up with two code-paths inside each function - one using JMESPath, and one using raw python (generally something on the order of `xxx.get('foo', {}).get('bar', {})[0].get('baz')` or such crappiness.  If we're going to have to put the latter into each function anyway, there's zero advantage to having the alternate JMESPath version to begin with :) Fingers crossed ...::@cachedout It is generally available, e.g. Redhat extras repo, so so long as expect extras to be available, then updating salt requires should be easy enough. Question is would this be from Neon forward, or backport to Fluorine ?::I have no particular need to backport it right this moment, since I already have JMESPath installed on my salt masters (due to the other modules such as boto_rds which require it).  That said, there ARE the several modules mentioned below which already use it, so if nothing else, adding it to the requires for Fluorine would help allay any confusion which might otherwise arise if someone happened to be missing it, but tried out those modules :)::@cachedout the jmespath module installed cleanly on Windows when I just tried it. Just let me know if I need to add it to the deps for Windows.::",f64ab1f71ac6c06e2132d51b7936ef9812d48b9b::6d9cb256eed81098680a70c180132b7b8aeaddf4::1c7f56de4e7741366b60008ee5dd1c9c708b79bf::e4c215ade0ea30e78895e0def32e2faeaf978231::ddf7f02cdbb1e4fe253488ac80307ff76152558f::4d74cb035cc854914f4bd143a3a2e75933bf7b19::476f4ac101153f14ea223f526297ca05609fab8d::f910d7f50c943ede81b39c7eca1ef59b760ab97b::9a971f1e31ab45a79fb66ddc4fc0ae708917b01e::ebc08ea282bc4c22c2ecc02aeca840356c5f88e2::fcd58984d767fdcda744207627b549d83be9ff34::1b0c7bb4dcffdaabc9559381d4a81e140c5a17ca::d0347a88602539c6b27ebacddb487764ff4144b2::c3e3451a80db1b8aed118691ed64dcb3bad1aa97::
https://api.github.com/repos/saltstack/salt,50321,libcloud_dns_2018::2018.3,0,closed,Reviewers Assigned::,"### What does this PR do? See #50296 for previous code review. Started this again from the 2018.3 branch as this is a bugfixVery few people who use Salt think of states in terms of the module namespace. Therefore, instead of ```rst ``salt.states.libcloud_dns`` ``` It should just say: ```rst These states ``` Also, we tend not to put general documentation in the rst file for the module, but rather in the top-level docstring. So instead of here, this paragraph should be in the top-level docstring for `salt/states/libcloud_dns.py`.::",5218b009bd6fa498ddbe0dfa03f40eb44b992a1d::416ed252907a3aa038b98c2cd8fd873078ba243d::745b6b3b3f217b36b0c4b7679525e180d7912b92::ed38901c7ff0aab588ba882d67e3b8ae62888f9c::3bede9a5cab7dd1cd4cc2565fc4d37180a323cc5::95362b89618877c02e7babc86be9bc5e52425f59::5b0d3c90bc01304f0c45d5659ebacfcd1ccd2f4e::de357eb6605427981ead94e6635452e8b2742554::6f03d6be97bc46c0a6a7896e0fdc8fb934f1c769::fb50ffbe96850a43154aa2baff0332c9081577d5::fac26773b1197fd2a5b30eb56062617afd859dfe::d9d10d80133b4e7c4aa91aa38cdc105b256adc95::0b030219076a085ad64f7f5fae01b6bdd933288c::3dceb89655ef608c38e7f806d4f456d52fbd94db::743b484404ef1530abd865b035043b12a482a725::eadc1b0582cdcdb2d44766d671f49584e4b66eb3::78c2c9f6653c0922e7151e4abc794a18c696e1e3::4f0f265688e4cd7becfd62cb47afe918b32d2bbf::ff6c331786abb4f784526989c36b73067005ccfe::883860c3612a35095097287287ef6cbb2ca31332::4945c1cf9eece3bdf910d4db916e61c088e39516::
https://api.github.com/repos/saltstack/salt,50308,test-fixes::2018.3,0,merged,,### What does this PR do? This was inadvertently changed in the filename_map backport. This commit restores the matcher grain file to match all branches previous to the inadvertent change. This PR fixes the 2 tests that are currently failing on the 2018.3 branch: - integration.loader.test_ext_grains.LoaderGrainsTest.test_grains_overwrite - integration.shell.test_matcher.MatchTest.test_grai ### What issues does this PR fix or reference? Refs #50182 and #50050 ### Tests written? No - fixes test failures ### Commits signed with GPG? Yes Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.,f23852207f9920da4a05e9dc65b5de318700a780::
https://api.github.com/repos/saltstack/salt,50252,backport_fs_fix::2017.7,0,merged,,"### What does this PR do? Backport file cache bug fix found while fixing 2018.3 tests ### Tests written? No ### Commits signed with GPG? YesCould we just do an absolute value here instead?::Originally when we saw age was able to be a negative number I thought it was due to `st_mtime` having greater floating point precision (which could make age negative). Later we found that there are also cases where the system time changes enough to make age negative. I think that means with the `file_mtime > current_time` check we don't need to cast things to `int` in the first place and the comment can be updated. Otherwise, I'd prefer not to use abs since that could result in more cache updates (rather than less). The code would be simpler but less explicit. That is just my $0.02, using abs would work as you say. ::",59ac284efcb76c77824e867f6134d2887063e61b::
https://api.github.com/repos/saltstack/salt,50145,toml_doc::develop,0,merged,has master-port::,"### What does this PR do? Simply adds toml to serializer docs. Toml was added in #45054, so this may need to be backported.",274622ec2b7f89f4af5bdc16ad65168b6014ce45::
https://api.github.com/repos/saltstack/salt,50111,fluorine-backport::fluorine,0,merged,,"### What does this PR do? Backports part of PR #50109 to fluorine. ### What issues does this PR fix or reference? None, referenced so far ### Previous Behavior * `virt.init` always created VM with the default nic or disk profile * `virt.update` gave no way to remove all NICs or disks of a VM ### New Behavior * `virt.init` can now be called with `None` nic or disk profile to create a VM with no network interface or disk. * `virt.update` now makes a difference between `None` for interfaces (or disks) and an empty dict. The empty dict means the user wants no NIC (or disk) as opposed to leaving the current setup unchanged. ### Tests written? Yes ### Commits signed with GPG? Yes",9e61d8630369e12764fdecdd2666c1760e9bb2e9::61937feeb936d119d82816c41ac41d4b62758ec1::
https://api.github.com/repos/saltstack/salt,50037,fluorine-backport::fluorine,0,merged,,### What does this PR do? Backport PR #49994 ### What issues does this PR fix or reference? None ### Previous Behavior The name parameter in `virt.network_info` and `virt.pool_info` where mandatory. The output returned the info as a dict. ### New Behavior The name parameter in `virt.network_info` and `virt.pool_info` is now optional. The output returns dicts following this scheme: { 'thename': previously_return_dict} ### Tests written? Yes ### Commits signed with GPG? Yes,1f903dd1e01a9262d124b0293a2cdb24399e4e83::a6a68d66a42e5d0897c4fbf6d2b005b1d98aec94::ce6faf6f0322f17cb8b1a645aeee00e1d0468abf::
https://api.github.com/repos/saltstack/salt,49994,virt-fixes::develop,0,merged,,### What does this PR do? This PR brings a few changes to features of the virt execution module introduced for fluorine: `network_info` and `pool_info` are return the data for all networks or pools if no name is provided. Thus the output of these calls has been slightly modified to include the names of the networks/pools. This PR also includes doc and pylint fixes Note that we may want to backport this fo Fluorine (at least the tiny doc fix) to avoid later disruptive change. ### What issues does this PR fix or reference? None ### Previous Behavior The name parameter in `virt.network_info` and `virt.pool_info` where mandatory. The output returned the info as a dict. ### New Behavior The name parameter in `virt.network_info` and `virt.pool_info` is now optional. The output returns dicts following this scheme: { 'thename': previously_return_dict} ### Tests written? Yes ### Commits signed with GPG? Yes,1c52010e0a382bf6bf8bf666b631b6d360b3733d::3e902384dfb4aa425cbb4d190217402b8c6e9cba::1e48abdfea636ed8281b357701de312896ef056c::8829d76bf4d00fdd0294d09e3c726d4a450b2d85::0a90e240135226a8942cdcdbb0c95c085a39b7dc::ab61bd70ce3a374c2068c860b2caaab86930cf38::
https://api.github.com/repos/saltstack/salt,49815,isbm-ipv6-scope-errors-2018.3::2018.3,0,merged,,"One-to-one (almost) backport of bugfix, available at https://github.com/saltstack/salt/pull/49705`@skipIf(not ipaddress, ...`?::`@skipIf(not ipaddress, ...`?::",b4f1a72bbb8a5a2ec0e6c15605c3cb1601f651ab::0498e946f9b499a410e55e56e28be781428366ef::561c99e6716cfaf87b7984822c245ac8f89bcfd2::bbeec4d60c035ef791902383c8b7e011b72d5382::5e970eaad1b1c713e2bb0d38f406e6ce2a17b1c5::1ae94f11a6b177fc7119736963f59a77a77c7d5f::49b32b76a2f5fbb43067d5a0697d545f11eaddf5::eeab9f2f8e7cb3e4c2ea8052572a4955c0dbc2fa::cab5f62772b12261d4e62de33d33435801fc1630::b40e1e1dded3721fee076596e5e12a7e7971e6c8::7a6ea3b2263f349efe078b41ace479bab2f8ffba::8e62633fd58e8f844f829c006d4d30d876fb5085::deb0b4e0ed1bafd7d8868c089803289ba834a61a::3fde850640bee232648ac8e363ed9f79cc805a9c::d05999e28da4fe13a532c5829284af405528689b::40d0e6bed2c67421e0c63ce02de0bc56105b4571::77f1c446387736fdb4cad26aa5e7aa493925c41d::693e4d4fd2a223f758ce680a39bb6319c22266cf::8bb54380b1efb7fd910548516459e571ce32a548::f5644bf617679ca7ca4161a11fb4715567443e83::66ec29ca750036acadd98b0ac4885a7f13dac031::379ead4c655dd10564d3ba92145e8d726a5ced67::cefb16b5c2676e6c940031e1ce093061cfac705d::7f2208b2d04263c7db3cacb5f040eab70cb94690::12038eaacfb5f5ac9eb83f0796130b7c7ac36822::54233cae128dcb218ef6c679ac0053ae1ebcbdca::1c02a312c5273ef50a8c0f845584dfca58e36924::f52ea0be7c1f414dd51c398a61d3e2b485c55355::5932a0d152e74efb571c03d42353e62662fa98c6::0a86112f24e1d9908f5767858dba76725458ea5d::c314e1c675e782391883b7e72c454b162c78585e::3ce265e7cc02511c157d6fc38b928ad6d898d46c::615b09aea1811815e40a3afbc09870c43f4e9f3d::facb34a6cc2ec8ac2cf5696d1354f668e482392f::bb37ba05785b535e2eddab14138f388488b0d0f3::c14f26f351ad19451e4c6c2504c8f4284b154a58::
https://api.github.com/repos/saltstack/salt,49560,pkgng-fix::2017.7.8,0,merged,ZRELEASED - 2017.7.8::,`data.py` does not exist in the salt/utils/ dir in the 2017.7 branch. We need to use the old path. This occurred from a backport and I missed the path change. Found by https://github.com/saltstack/salt/pull/48896#issuecomment-419434648,f3e153443aa32fd972b1716051724d58f0d9b203::
https://api.github.com/repos/saltstack/salt,49540,fluorine-backport::fluorine,0,merged,,Backport of PR #49510,a4d67e9f986e1e738d144a6d559ef27f09c5d3b4::ddaa2ef6168c98c6f359ac6b6766fdaef7d3a7dc::
https://api.github.com/repos/saltstack/salt,49378,minion_id_remove_domain_as_mixed_type::develop,0,merged,,"This PR replaces PR https://github.com/saltstack/salt/pull/49213 ## What does this PR do? When a minion lacks its minion_id at startup, salt.config.\_\_init\_\_.py requests one from utils.network.generate_minion_id(), which returns the fully qualified domain name (FQDN) of the host. When all minions are within one domain and named after their hostnames, generated a ""FQDN minion id"" would be an inconsistent naming. salt.config.\_\_init\_\_.py has the option to lowercase the minion_id. salt.config.\_\_init\_\_.py also has the option to append a domain to a generated ""hostname minion id"". I hereby propose a new option, to generate a ""hostname minion id"", by removing a single domain from a FQDN. ## What issues does this PR fix or reference? Issue #49212 ## Previous Behavior (example) The generated minion_id is king_bob.foo.org ## New Behavior (example) With `minion_id_remove_domain: False`, as previously. With `minion_id_remove_domain: bar.org`, as previously. With `minion_id_remove_domain: foo.org`, the generated minion_id becomes king_bob With `minion_id_remove_domain: True`, the generated minion_id becomes king_bob ## Tests written? Yes``` 'minion_id_remove_domain': (six.string_types, bool) ```::``` 'minion_id_remove_domain': False ```::Better is either: ``` ￼    remove_domain = opts.get('minion_id_remove_domain') if remove_domain: ``` or ``` if opts.get('minion_id_remove_domain'): ￼        remove_domain = opts['minion_id_remove_domain'] ```::``` if rem_domain is True: ```::ok::ok::ok::@markuskramerIgitt it is just a list of _possible_ types. So just like @DmitryKuzmenko suggested.::@markuskramerIgitt This is actually important for you to know in the future: you're only looking if `rem_domain` is a type of Boolean, but you do not know if it is True or False. Also, if you would just ask `if rem_domain:` then you get back a Boolean, and if it is True, still don't know what to do: remove specific domain, or any. Hence in these kind of situation we always explicitly looking for both type and value at the same time: `is None`, `is not None`, `is True` etc. Hope it helps. :wink: ::Maybe rephrase this by just plain English, something like: > When `minion_id_remove_domain` is set to `foo.org`, then only this domain will be removed from the minion ID. For example, `king_bob.foo.org` will be `king_bob` and `king_bob.bar.org` will remain unchanged. In case `minion_id_remove_domain` is set to `True`, then all domains will be removed. For example, both `king_bob.foo.org` and `king_bob.bar.org` will be `king_bob`. How's that sounds like? Feel free to adapt it and change it.::I prefer table-list like schematic examples, also here. ::The version here should be ``Neon``. We will replace with the correct version once we prepare that release.::""Cleaned away"" doesn't make a lot of sense here, you can use ""Removed"" as in the log message you added below.::Aah, I first read `None`... Set to `Neon`. I will backport this feature into the msi packaged 18.3.2 because we need it soon.::Hi @DmitryKuzmenko, thank you for your suggestions. I never used (string, bool) before. Already checked in. I will ""resolve"" this conversation because GitHub still sees open ""requested changes"". ::I use your second proposal. I also had to move the code into a separate function because it increased `get_id()` to a  cyclomatic complexity of 22. ::It is the first time that I make use of `is True`, thank you for your explanation, @isbm. I will ""resolve"" this conversation because GitHub sees open ""requested changes"". ::Hi @terminalmage, I implemented the changes you requested (test cases for True and False, closed PR 49213 and changed the wording). Could you please comment or approve? ::The dashed line needs to be the same length as the previous line to avoid a Sphinx warning.::We have Sphinx roles for these. Can you change these to: ``` :issue:`49212` and :pull:`49378` ```::These can be removed since we have the Sphinx roles described above.::Hi @terminalmage, thank you for the explanation of your change requests. I was not aware of Sphinx and  I  will gladfully adopt these rules. Fixed in  https://github.com/saltstack/salt/pull/49378/commits/f5d6157257ccb51934d3496a5284ef403e55e614 ::As above,  fixed in  https://github.com/saltstack/salt/pull/49378/commits/f5d6157257ccb51934d3496a5284ef403e55e614 ::As above,  fixed in  https://github.com/saltstack/salt/pull/49378/commits/f5d6157257ccb51934d3496a5284ef403e55e614 ::the pull request mentions the issue, which only is a stub anyhow.::Why was the issue number removed here, instead of using the `:issue:` RST role?::For no good reason. I just commited the `:issue:` RST role::",21ebbb2df69ac82f73e93a7d808ea3fd83c282b4::b371a3e5eab0130d67270b45e065693662a8fc8c::b70a4010f2bf6db0a2788eb925396683b9d6ee30::a8792d421e1feec7aa0125f2e3dec4fc563c2f57::a8b79f79f18dbb072c578bff4104ccc24253df0b::6965455017058ff400d297984c8595ba479cc663::6eef0074e4110bf12032dac3db4d97ecafa4a8f8::4fde9af6f5327f110bc5dfe6e8b12118db0af04b::1ec55ca5968870c2d6a48c33779079b6e44b3f10::c3846a46f4497366fa8aa3c7dc52d544ed884b7c::bb0e0ada8c7be7dfd5860f388357daedcc880d3c::9275491b72e68fd0defba3dd3240d53fb1a124d2::999efcad06578ab34bbafaef7d26f0e643df303d::e0c9643821f23e9feb5a11726661507de45a8e5e::949cab85f2203e7363d324e3836f49011f6a1d95::f5d6157257ccb51934d3496a5284ef403e55e614::7135babd98f571bc18af7c928129e51560a29f5b::a5b95787de9007947bad0a098e7ce63d50d22dac::b942c9f69158fef4fdd763bc5a17a93a1d41c715::1b3a7344e4746ce6d1fe09f4077f1dc4253173b7::
https://api.github.com/repos/saltstack/salt,49183,develop::develop,0,merged,ZZZBugfix - [Done] back-ported::,"### What does this PR do? This should fix the failing tests in develop, it needs to be backported to fluorine before 1c02e7840cab78dd7f0840e7e0e66add2be60f47 is merged into fluorine. Apparently the vault dev server just lets to do stuff after you try 5 times? i am still not sure why it was ever succeeding, but it was never finding the vault binary to setup the correct hcl rules, but now that it does, it succeeds. ### Tests written? Yes ### Commits signed with GPG? Yes",c7f2a33af0f15205a3882b654d16315bf2e55663::
https://api.github.com/repos/saltstack/salt,49133,develop::develop,0,merged,,"### What does this PR do? Modifies postgres_local_cache.py to allow postgres returner to function. ### What issues does this PR fix or reference? #46942 ### Previous Behavior Remove this section if not relevant ### Tests written? No ### Commits signed with GPG? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG. [postgres_local_cache.zip](https://github.com/saltstack/salt/files/2290976/postgres_local_cache.zip) This would break if the payload's return data contained encoded non-ascii unicode: ```python >>> six.text_type('glücklich') Traceback (most recent call last): File ""<stdin>"", line 1, in <module> UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 2: ordinal not in range(128) ``` Also, if for some reason the function returned non-decodable bytes (such as this example here where I'm reading from `/dev/urandom`), then we'd get a similar error: ```python >>> with open('/dev/urandom', 'rb') as f: ...     data = f.read(16) ... >>> six.text_type(data) Traceback (most recent call last): File ""<stdin>"", line 1, in <module> UnicodeDecodeError: 'ascii' codec can't decode byte 0xfa in position 0: ordinal not in range(128) >>> ``` Therefore, how about something like this? ```python try: ret = six.text_type(load['return']) except UnicodeDecodeError: ret = str(load['return']) job_ret = {'return': ret} ```::So convert to unicode unless it will result in an error. In that case return the raw value. That makes sense to me.::Should this not use stringutils?::@waynew This PR was merged 11 months ago. Maybe you meant to review the backport PR I opened this morning? I made the change to that PR.::I think GitHub must have gone sideways on me. But yes, I did 😂 ::",d7e336c3e3431288573bdf0815c0194e5bc4fc46::96fd7c8beea0daa2661408291e2e188ae7bb13ac::76f1de6b45032749cca6a8c2e104c935c1d23a07::f182fdb2e883b9a8140861f051255b918f943b78::aabcd021130ff9ada1b8418d585127031e7af551::83b636c27a2ebaaebde764c8cbdab955e7525ccd::
https://api.github.com/repos/saltstack/salt,49132,bp-49062::2018.3.3,0,merged,ZRELEASED - 2018.3.3::,### What does this PR do? backports PR https://github.com/saltstack/salt/pull/49062,3ab5d282bee1cd3fb787afd3491ab814405d59c7::990fdb6a523dc9d4d1846b37ef97647e9dd0316c::
https://api.github.com/repos/saltstack/salt,49091,rename-test-files::2018.3,0,merged,,"This makes the tests conform to the naming convention expected by pending pull request #47337. As that PR is expected to be backported, I'm making these changes in advance to make backporting smoother.",d69069be13c8755d43c5a2496d26b85e85a565bf::ffb842d055001e4101314e54b477554788be8dc0::23980830d16f56e339323256d002320b8faa6b55::069102b82d25fb3d5565b18663f37ce216aef00e::b49d8df210e4fa9b8f3e8b99aa67f74f2b5d07dc::b03a56355bc936481e6803d3b418b6f805609f4a::ac50eb84e14055e09eff74b2f7dd6d1d680ab136::5c936c016d50c9925eaa5b43027fd6ab40ddba17::c9c9d20f190f51ef350526b6796d3ca7cf684ab2::3a1ec12613d4859206acc95ddeb9e59e12796bf2::e0d95b640fd7b39b1b658c5e49478c859e97bfe3::81e38239fe2f61c71f0a000f9005a65dedbb36fc::fa76cb6ada7fcf72ff2ca7199dc0b2e41c6c52f0::f72bbc50362c897470ae6772ed3c899f75d06e5d::9801ce32710d95c9ed87eff9e972364527879a79::8f5fef55d43f18d51487b0eadd43f62af089daa9::516594b16406356062ed4cd774c0d1de2c470b4e::5a0990b087a53e3c769421ceff821205e7fccc68::1aacf77b3e8691a33d5b4e73f5bcc9d9b38a71aa::160223dc80e569235d69b392dbb2c014e5eeb796::1fccbf764ab7ad385e9b7764dca748229f62f344::d51748eea2bb6df5407b104652330fac77b53ccf::9c8ba4a6333c43f85ea4528d577864d57696d901::c1f94dbf1b88307d60cc5906135db983c55345b9::f1b7d54fddc28dcd4401c3889d9b34ab6da543aa::d56dcdd60818068f7bb39cd35c8138471553f243::91fa09ec795dc274058620410c7d69c4ac77294b::9c145009da990da81f8584bbdd0506cd808166b8::fba03360f48a525ab74d97466ed244454cdac7c3::81f272f91ae2a22fcc0880330adef4aa0f0a24cc::613f0611f84e60e0991fdb7ad1fb21b3b61afe31::3d8523b031d8f8cfe21136d912e25ade28628c8a::
https://api.github.com/repos/saltstack/salt,49075,fluorine::fluorine,0,merged,ZRELEASED - 2018.3.3::ZRELEASED - Fluorine::ZZZBugfix - [Done] back-ported::,### What does this PR do? needs to be backported to 2018.3 ### Tests written? Yes ### Commits signed with GPG? Yes,53c7ca16fbfb8d130fee3c309c4d91a58fa5abf2::
https://api.github.com/repos/saltstack/salt,49052,isbm-python37-support-2018.3::2018.3,0,merged,ZRELEASED - 2018.3.3::,### What does this PR do? Just backports https://github.com/saltstack/salt/pull/48705,7ec3954bef732ce2242e55aadd9f8f24fd7f00fd::b7da5716240afe1214af71a6a8e1b55e18e9b39b::173f3d7aa80898afbe9050ac9e014c4d50bef12a::69920366ae5f0ba2c851bcc7c3e90b63f9d26218::7a597f19b55755380299f1bb6010d59e52f837fb::35eaebb8a43a5740788668d3ae340a159e6625ac::7d095e0b263671c35c27f4ee4afb6bcacadbfd98::be07f64bc4a2ee3fa2ccfe646e9fdf1336fdadf2::493e48ddb52889fcb282b7747e0f5a9c2b541005::6e77aff69adba0ded366a704bdafb601514faf5d::b9718d3a09787801fddfe9cfb4e09187969fceab::603f94e2a35b38ee9bd8b849b09bb736a8c35b16::2a18e335afaff9631eb1bd4b3ed936afeab7dd54::1107de0decfb563e92ecdf5615791de5710a91cd::05435783365b6146bcaff7f6545b737c098e052b::e8608aa9be3e2c8fa57fedf9fc7d56bbb21c796e::9807e8dbb76ccdf42d079413189f4c60e9d8fef7::7d095491d9968b79c7d7b913ef666819506ac4c9::2c22e794d4e378632641449caecb77f3a13091dd::5c887ac2aee3ae31a74b140b6090530ca4c79fe7::46bafcafef562702a5cafe5dd70087ad5a1046ea::990936992c0d8c7daba1cefc1ffb5bc665214080::31dccc4fdf0abed48d4d225539b228e47b2fb7a3::47078a300f6b3540e924fd47dfb0228cae9933ed::bc85a5fa982dbf5bb4494de485f74edf44a2034a::4386a9ca1f3002ae6facbb05633bb05f16d36cfe::
https://api.github.com/repos/saltstack/salt,49041,ec2_fix::2017.7.8,0,merged,ZRELEASED - 2017.7.8::,### What does this PR do? backports pr #48212 fixes: https://github.com/saltstack/salt-jenkins/issues/1051,cf7f2459b8ce65f9097147f01c1e7293e5005d69::
https://api.github.com/repos/saltstack/salt,48970,back_48962::2017.7.8,0,merged,ZRELEASED - 2017.7.8::,backport #48962,3ce1b8a3c9eb10695a65dc793e03554793e26945::
https://api.github.com/repos/saltstack/salt,48879,napalm-formula::develop,0,merged,ZRELEASED - Fluorine::,"### What does this PR do? Some time ago I started preparing some formulas for network configuration management with respect to the OpenConfig standards. The repositories are created, part of the formulas are available, e.g, https://github.com/saltstack-formulas/napalm-ntp-formula Generally, all these formulas (unfortunately) only generate a text blob that is eventually loaded on the device. Therefore the formulas will 90% be some Jinja template with a considerable size. To shrink this size, and make it more human readable, I thought about having a module, that transforms blocks such as: ```jinja {%- if subif_cfg.config.get('description') %} description {{ subif_cfg.config.description }}; {%- endif %} ``` Into a more simplified (when reading, at least): ```jinja {{ salt.napalm_formula.render_field(subif_cfg.config, 'description') }} ``` With the same rendering result: ``` description ""Some description""; ``` Which does all these repetitive checks such as above, which would appear tens of times in a template. Besides, it also add the field name. This module is generic enough, and it will be used by all the future NAPALM Formulas, e.g., https://github.com/saltstack-formulas/napalm-bgp-formula, https://github.com/saltstack-formulas/napalm-interfaces-formula etc. Together with this, adding some more little helpers for various manipulation of the OpenConfig-like Python objects.Since this code is going into develop, there is no need to do this try/except, since the function lives in `salt.utils.data` now. Not only that, there are three problems with this approach: 1. Importing a function into the module's global scope will add it to the `__salt__` dunder (i.e. `__salt__['napalm_formula.traverse_dict_and_list']`) 2. This will also add this function to the docs, which will be confusing. 3. Since we have compatibility functions in `salt.utils` for all the funcs that were moved for 2018.3, the first import will succeed and this will result in deprecation warnings. Instead, you should simply `import salt.utils.data` and invoke the function with its full name.::When possible, it would be great to also use `__utils__['data.traverse_dict_list']()` because then it will allow people to include that data.py file in their `salt://_utils/` directory if they are unable to upgrade to the newer version of salt.::Doing it @gtmanfred's way will also prevent you from needing to import the module at all.::Thanks guys for reviewing this and your thoughts. As Daniel mentioned, I made these imports having backwards potability in mind; using `__utils__` sounds like a better idea, thought it would require backporting loads of util modules. Re 2: Indeed, I thought about that too, but it seems like Sphinx is smart enough not to pick these functions (no idea why) and they don't appear in the documentation (tested with both Salt and our internal documentation). Anyway, I will change to use `__utils__` as it seems a better tradeoff.::Updated, though I just wanted to point this out: porting `utils.data` means it also requires porting `utils.dictupdate`, `utils.stringutils`, and `utils.yaml` (as they are imported there). This is fine, though when I need, e.g., `files.fopen`, or `args.clean_kwargs`, I would also need to port loads of others such as `utils.jid`, `utils.path`, `utils.platform`, `utils.data`... and here's the catch: `salt.utils.args` needs `salt.utils.data` - see https://github.com/saltstack/salt/blob/develop/salt/utils/args.py#L18 (which obviously won't be available). So not only that one basically needs to port almost all the modules under `utils/` but also they need to be patched (i.e., replace imports like the one from `utils.args` from `import salt.utils.data` to `import _utils.data` plus updating all the code to use the new import. This sounds like a nightmare to me. Looking at this vs. 1 & 3 I'm not sure which is the worst...::What about the following: ```python from salt.version import __version_info__ if __version_info__ < (2018, 3): from salt.utils import traverse_dict_and_list as _traverse_dict_and_list else: from salt.utils.data import traverse_dict_and_list as _traverse_dict_and_list ``` Or why not, even simpler: ```python try: from salt.utils.data import traverse_dict_and_list as _traverse_dict_and_list except ImportError: from salt.utils import traverse_dict_and_list as _traverse_dict_and_list ``` This way we can ensure that the function won't be exported (note that I flipped the import order to prevent deprecation warning thrown on >= Oxygen, i.e., it will firstly try to use from `salt.utils.data`). Does this sound like a better alternative?::This does seem like a better alternative. ```python try: from salt.utils.data import traverse_dict_and_list as _traverse_dict_and_list except ImportError: from salt.utils import traverse_dict_and_list as _traverse_dict_and_list ``` However, I'm not sure why this should be necessary at all in `develop`.::Yes, the question just comes down to, ""How friendly to we want to be for allowing people to backport these modules?""::Added https://github.com/saltstack/salt/pull/48879/commits/3e9ccdb397ba4fea30c97dba2084b91e44db7287 - please let me know if this is okay for the time being.::",e75f285d91025f40e485e7c6907323381322cea1::25d83b209045913438fc702eefc43b737abe394f::ddf8126958f2b819bc47b546693aaab8d26ca8de::ef2c817025934001500f158926de2d47c3326784::3e9ccdb397ba4fea30c97dba2084b91e44db7287::
https://api.github.com/repos/saltstack/salt,48178,fixup-presence::develop,0,merged,,"### What does this PR do? This teaches salt.utils.minions.CkMinions.connected_ids() about IPv6, so that IPv6 minions show up in the manage.list_state and family runners, as well as presence events, when the master runs on a system with /proc/net/tcp{,6}. ### What issues does this PR fix or reference? While I was in this section of code, I fixed some logic issues around including any localhost minion (including IPv6 localhost minion), while avoiding including any minion that isn't connected.  This allows any localhost minion to always show up in presence events. I also fixed salt.utils.network.local_port_tcp() and salt.utils.network.active_tcp() so they don't include listening ports when /proc/net/tcp is available, to match their OS-specific implementations, and made it so IPv6 connections don't overwrite IPv4 connections in active_tcp() results. ### Previous Behavior IPv6 minions don't show up in manage.list_state and family runner results or presence events on masters with /proc/net/tcp{,6}.  salt.utils.network.local_port_tcp() and salt.utils.network.active_tcp() include listening ports when /proc/net/tcp{,6} is available.  salt.utils.network.active_tcp() is missing some IPv4 connections when there are IPv6 connections. ### New Behavior IPv6 minions are included in manage.list_state and family runner results and presence events on masters with /proc/net/tcp{,6}.  salt.utils.network.local_port_tcp() and salt.utils.network.active_tcp() don't include listening ports when /proc/net/tcp{,6} is available.  salt.utils.network.active_tcp() includes all IPv4 and IPv6 connections. ### Tests written? No ### Commits signed with GPG? Yes ### Miscellaneous notes I opened this PR against develop because I changed the API of CkMinions.connected_ids() as the include_localhost parameter was no longer needed.  I would like to see this backported to at least 2018.3, though, and preferably make it in before 2018.3.2 is released, so I don't have to continue to apply this fix locally.  If changing the API of this function in a stable release is an issue, then the function could still accept the parameter but just not do anything with it. I'm still not happy with how CkMinions.connected_ids() is implemented, because there's one presumably common case and a few edge cases that are not handled: * NATed minions won't be listed (presumably common case) * If there are multiple minions with the same IP address, they will all be listed if at least one is connected from that address * If there are multiple masters listening on the same port but different addresses, minions can be listed that aren't connected to the master being interrogated * (possibly Linux-specific) If a localhost minion connects to the master using an address in 127.0.0.0/8 that either is not explicitly configured on the loopback interface or the master is not explicitly listening on, it won't be listed Fixing any of these would require a lot more work.This is request to show IPv4, and still you putting IPv6. I guess, this parameter needs either be renamed to ""show_ip"" (preferred) or we need to add another one (no idea why). In fact, this parameter/option is only used once, in `manage` runner, `list_state` function. So we've still got room and time to improve this.::This change will need to go through a deprecation process. https://docs.saltstack.com/en/latest/topics/development/deprecations.html::Where you have show_ipv4, and show_ip for 2 releases, and then it can be removed.::",81aa846474e034fe214b6f1c985cf1b6823cd1e2::e5fea23eabc2a1b917f299497114067b46ab2f04::abe70397df6787385f69c661baf3ebeb359ceb04::bd9f1e7634f37e31ad921f7118b453a7778be536::aa1e4152db3996494e32bf0d9824feb6c4c4c155::46ba5e9275e6854875cf6ce60c343e534d430445::532ec894add1ef8cd34ef8ce294c2c2367df2fdc::c3650eed03f28ab9cac2e08dac24a7eefbb1e7e0::
https://api.github.com/repos/saltstack/salt,47951,dev/iepopr/fix_nilinuxrt_core_grains::develop,0,merged,,"NI fixed lsb_distrib_id to correctly differentiate between older distribution vs current distribution which have different behavior for multiple module functionality, but it should continue to populate 'osfullname' as 'NILinuxRT' not to break existing code Signed-off-by: Rares POP <rares.pop@ni.com> This should also be backported in 2018.3 ### What does this PR do? National Instruments used to have a custom set of commits in-house, for the older Linux RT distribution, but it makes more sense to upstream that too and expand salt's support. In order to do that, we have to differentiate between those two platforms, and we do that now through this 'lsb_distrib_id' grain. It also clean up the nilrt-xfce distribution that was never a distribution. ### Previous Behavior grains['lsb_distrib_id'] was always showing 'nilrt' previously and it was some custom code that differentiate between older distribution and the new distribution of Linux RT. That had to be spread around multiple modules that needed that logic. ### New Behavior Modules can use the grains['lsb_distrib_id'] info to differentiate between newer vs. older linux distribution for National Instruments Linux RT platform For the older distribution is showing 'nilrt', as for the newer distribution 'nilrt-nxg'. ### Tests written? No ### Commits signed with GPG? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG. Are you sure this will always startwith a _lowercase_ `nilrt`? Most distribution IDs are not all lowercase. Maybe it would make sense to use `.lower()` here. ```python if grains.get('lsb_distrib_id', '').lower().startswith('nilrt'): ```::Okay, that makes sense! NI's linux distribution relies on OpenEmbedded, and that's lower-case based, but it doesn't hurt comparing with lower() case. Done!::You don't need to artificially make the code less readable breaking it by two lines.::It was like that before my change. I fixed it though!::",e813f3a435038499ddf3dcbcac7586854df4e1d6::
https://api.github.com/repos/saltstack/salt,47667,mac_user_enable::2017.7.6,0,merged,,"### What does this PR do? semi-backport of https://github.com/saltstack/salt/pull/46173. Need to account for both py2 adn py3 in 2017.7 branch as well. ### Previous Behavior ``` *** integration.modules.test_mac_user.MacUserModuleTest.test_mac_user_enable_auto_login Tests  ****************************************************************************************************************************************** --------  Failed Tests  ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- -> integration.modules.test_mac_user.MacUserModuleTest.test_mac_user_enable_auto_login  .............................................................................................................................................. Traceback (most recent call last): File ""/testing/tests/integration/modules/test_mac_user.py"", line 179, in test_mac_user_enable_auto_login self.assertEqual(test_data, file_data) AssertionError: "".\xc3\xb8'B\xc2\xa0\xc3\x99\xc2\xad\xc2\x8b\xc3\x8d\xc3\x8dl"" != "".\xf8'B\xa0\xd9\xad\x8b\xcd\xcdltotal=1, skipped=0, passed=0, failures=1, errors=0) ========================================================================================================  Overall Tests Report  ========================================================================================================= ``` ### New Behavior ``` ========================================================================================================  Overall Tests Report  ========================================================================================================= ***  No Problems Found While Running Tests  ********************************************************************************************************************************************************************************************* ========================================================================================================================================================================================================================================= OK (total=1, skipped=0, passed=1, failures=0, errors=0) ========================================================================================================  Overall Tests Report  ========================================================================================================= ```",ba40d3d1a17e4acd0f8bda3eec51640051937c59::
https://api.github.com/repos/saltstack/salt,47399,isbm-zeromq17-deprecationwarning-2017.7.2-v2::2017.7,0,merged,ZRELEASED - 2017.7.6::,"### What does this PR do? - Backports https://github.com/saltstack/salt/pull/46002 - Adds Tornado 5 fixes - Breaks something, maybe... :wink: ### Tests written? No, this is import-based changes ### Commits signed with GPG? No @gtmanfred @rallytime Here, you have it!Could you clarify why this is changing? Is this just to refactor to the utils module for DRY?::We should be absolutely certain here that this will be backward compatible. ::Style suggestion: Combine these two ""if"" statements into one. eg: ``` if zmq and ZMQ_VERSION_INFO[0] < 17 and tornado.version_info < (5,): zmq.eventloop.ioloop.install() ```::@cachedout because everything ZMQ-related now is only in one place?..::I was actually backporting the other PR. This went alongside with your fixes. Additionally, I added another `if`, because there are other issues fixes are coming soon, something like ""if not zmq-17, but tornado-5"" etc, hence your suggestion will opt out all that.::",ad4b40415cd449d1576a60a72d0e1a1d901b5c03::1fd9af0655b75131d495a2d45c7e2d0b071af720::d50b2b2023bd047976c8bf5612a11993c7497616::af9601e21d34591e796f8d96fbc6fcb086a77bf1::453e83210aa4c4f06ad5645ca4a2fcf1ea300753::cbb26dcb282c4b8d103063bdb7712f47efdaef53::f34a53e029e760a98638bbc11bf9e7a9941903f2::3940667bb9186ac2591ea9015446fea39b2b7130::c8f2cc271d03c144daeb97c988029b6a7219f24c::e2a353cfb057a23fe6e53a0600647b0d64559512::08dee6f5bdc805550efe7f65564f1e962e0ab2b7::457ef7d9a540e94de5c3b2b097205f986605e5a6::05f4d402699378c44aff5e3065448ecf8a5d297c::4bc43124b7400ce538b9033ab074d372bc277864::116e1809fcde3a334b4b7f4f636c0efbaf614474::0b4a17b859ee109d63a6979dd3f4612416e3d857::948368e9a1ca596c5a4646ad59c670a175b8309f::57da54b67636a3dd2c4a3de204e6022513171b1d::4e650c0b44c4c9bc7b99068a238be83afa6d3838::1ece6a5f52e9d2480fbcc794d1efc4f262fe3862::38ceed371d215c07466bf4a49283312755ef3ff4::ef2e0acd665365de494edaa4fb76c8cca24dbf4c::1c90cbdb3c9f8862f80cc71ec61b0db9a4efde40::834b1e4ff0d157706d3443cb200fb6b8471bb38a::164204a9fe9598494bc26992853cf8525bef13af::43b5558b8235defcc2ec13ee49e09e6aff014487::ab5fa34d7cf949a40e86ec5de0435dba4e0e2a4b::296c589f4b1b890435ea294cf4f223a33d25862f::2aab70b1b893bcd15b16b241256bdc95c30c760d::8e377b56534cd4208ed7291d7bebfcd7e2b0aeea::d94c0f0152e826ec73779659bdbcf20d96fd0cd8::98b5629b36a0d34ee0a6f5bf0c57097ac1b37c9a::a36e49fd271143cf4e22cdfc2b979a36878c8265::
https://api.github.com/repos/saltstack/salt,47337,runtests-subset::develop,0,merged,Has Testcase::code-jam::has master-port::,"This adds two new options to runtests.py's option parser: - `--from-filenames` - A comma-separated list of filenames. runtests.py will then attempt to match test modules in both the unit and integration suites, by filename (e.g. `salt/modules/git.py` would result in `unit.modules.test_git` and `integration.modules.test_git` being run. - `--filename-map` - A supplemental YAML file which can be used to map file globs to test modules, allowing us to make sure that changes in a pkg module cause the pkg/pkgrepo state tests to be run (for example). Each glob will be `fnmatch.filter`'ed against the list of files, and if a match is found, the targeted list of test modules will be run. Right now, the initial `tests/filename_map.yml` only contains one glob, I need to add more and would like some input on what should be added.Why does this particular `utils` import need to be separated out in a try/except, but not the other imports above that have full `salt.utils.x` paths?::This is because the function location is different on 2017.7 due to the `salt.utils` re-organization. So the `except` below will try to import from the 2017.7-and-earlier location. The `as` is used so that irrespective of Salt version, we use the same name to invoke expr_match.::@terminalmage Right, but you have files above that are not in a try/except block that were also moved around during the `salt.utils` changes. My thought is that either all of those imports should be moved into a try/except, or none should.::Ahh yeah, I added those other imports later after initially doing it that way for expr_match.  I removed the try/except. We'll either have to backport separately for 2017.7 and 2018.3 or not backport past 2018.3.::possibly add `integration.modules.test_useradd` and `unit.modules.test_useradd`? and also on the other tests below it seems we are not clarifying the `integration/unit.module` tests equivalents as well. is this on purpose?::Yes, this is all on purpose. runtests.py will automagically match files that match a naming convention. Otherwise, the map file would be thousands of lines long and would be a pain in the butt to maintain. So, there is no need to add `integration.modules.test_useradd` and `unit.modules.test_useradd` as they would be picked up when `salt/modules/useradd.py` is specified in the `--from-filenames` parameter.::So, I presume that the workflow for adding tests would change so that this file should be modified when appropriate when new tests are added? If so, have we documented that in the documentation on writing Salt tests?::",02c1356eb2296a49f2b851ce6db937aeb2170526::dd8ee659eb245c1bb81163cf8a01b3359da788c9::2fc9460f4f67eccf054a7da5c5fea53b93f8c963::adaf2ebfb9543a433b3a9d555b18bb22ad1511b4::29bbcc1f74c0e6b434a1a30576db6c3d95d9c465::bf749a642a8b6413e3c217066a25bab038cc3f7b::cfaa02c7ae0d319c96c077339ea53bf0d7dd0581::d38f2aa2b449d4407e1ecc805ef4ae24401ff721::0c332f55bba3f3ddb4f1e26173f706fe625a45ae::d29c4cc1ef623a5ad378be53d2bebe036675912a::abb61293b3673af3f9c1b8315fd6595b0d75701c::0707ecd4d9bd1a0877868b972bd9aa6b1f46233c::acb94f6641b175517443c6c1fe9d682280b2cb70::880aba88337adfa85fe7c91c36f19276839ef158::ce4508c1c76162f92e51c6c3cf082d5e06f2507f::2f9ed48d2915ab281d36fde2b83895bd784e6f1b::59f1d150b47cf476ad45a09dbfd72ee1636710a3::2be756d0517f47d10c23315e8fcafbf722e820ad::1c10decfdb8068940f3b095e86f313c6369e676d::aaf7534029d9df4f695c21cd8071efc0ad605e58::516927cf98a2ebe0031136c4b304a0514da0e594::cd1b41c87507155a4ae73d866787a23498731ec6::116908110977ca8aeb950e10cec13f000a661435::5a4bf3ef2e0ea9226b5e608dd463c7688db5c46b::36eb5bda5391f67fc63451d9addfd79ccef7afb8::ee24336826aed728db4144c037c9bcde732ae0c9::68bf03db73a855d38f1776cef216b46c7c590ec9::e1a72c6235ea9d02dd3b437a1066fbae20d07b74::b07de28cf52665b6eb8f0320912b9d6062697bbb::ba5c450f461c00c3112f62c74cd172fbb80336b5::b36c047cbe2401effb9ee29d05dd0133f489ef3d::10b41fe20c7e93b0b407ab1e1b4300f5b86a0b51::53bd0101c74e913a0f218545030519e472e6326f::4f8147ed4a1db24b7fc4f9294b1905d0f77a4eb9::e0ad37c799e84fd05153fd06b373166fd038a07a::e0c8b8b692dde77f14efc036aac1a8c8205ff9b7::3c852ee8845d7dfb29925dcbc93537cc69a77d93::d8883c9db32ae8f85ae4b44a41732a5e81756b68::f4c234d457466d9ed249e486a011950fd7dad9e3::11a1396ac3e5e5bf8aa718ad2edb77c5ab4ffa7f::c9da2ada84db6e013879b705311c905f86eba72d::62bf444791b39e6b32a059a9bd7292f1b8c0f3b3::80e25c4ed1e5aea85bed001dee6d63203eee859a::ed2ddd30716223f01dfcb102a4b4ed4012df302c::0dd3b0cb515c766b8ab4248f56d8544a6a8571d0::570bffccb8b4b26f167cca0dbc75402dbe416d78::6cac67587728fdb0574a5fe510df2190c8f04103::8208789a3e62ac06fb53dc6caf3477ce8104e9f3::6903e1eb8528200905bc4f42198091d56efe0319::0604f0ea1a29910176b0600b6c6d89a110cfdfec::3a7d694c5e149c6503d5c69887df08386d79a7c1::e60a858ff1bbfd9d03633dfefc7ffee467056eb9::08da5b1c1b040ec0756c1a54dd60ef218182dd12::20d5cd89eb5653790b96ff663e693e5c61881abe::
https://api.github.com/repos/saltstack/salt,47186,zfs_backport_46933::2018.3,0,merged,,"### What does this PR do? backport of issue 46933, updated ZFS handling from develop  to Salt 2018.3.x ### What issues does this PR fix or reference? https://github.com/saltstack/salt/pull/46933 ### Previous Behavior ### New Behavior Refactored ZFS handling with better normalization of output ### Tests written? Yes ### Commits signed with GPG? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG. We should probably update the Fluorine references, there are a few around I think.::Already went through and changed the Fluorine ref's that applied to versionchanged, but left the ones about things deprecating 2 releases later etc.  Also corrected spelling of Flourine to Fluorine. Are there a few places other than those were is would be appropriate to change Fluorine to 2018.3.1 that I missed ?::This warning will already apply to 2018.3.1 so we should probably update at least this reference. I think I saw a few more. ~~Let me look for them again.~~ looks like it was just this one.::",3f30ab2ed668504f60ab649234d047b2a2b0dac4::b7f8d5a22f4be578449a277654b7b9db1d35c5c2::283359d3159de16cd0306f3705b09ea1e0c73c92::
https://api.github.com/repos/saltstack/salt,47162,bp-47161::2018.3,0,merged,,"One of the commits from #47161 also applies to the 2018.3 branch. The mocked file_roots and pillar_roots should be dicts, not lists. This didn't happen to cause any problems with the test in 2018.3, but it would if the 2018.3 branch changed such that the code being tested here ended up referencing either file_roots or pillar_roots like it does now in develop.",d185f97a47a79987ce36052c87a33492a3a28901::
https://api.github.com/repos/saltstack/salt,47147,2018.3-issue-45939-shadow-hash-salt::2018.3,0,merged,,"### What does this PR do? It fixes the non-idempotent behavior of `states.user.present` when `hash_password: True` described in #45939 It targets `2018.3`, but due to it's trivial nature, it should be easily cherry-picked for backports to older releases. ### What issues does this PR fix or reference? #45939 ### Previous Behavior Every time `states.user.present` with `hash_password: True` was used, a new shadow hash was generated based on a new randomly generated salt value for hashing which made this state's behavior idempotent. ### New Behavior Before hashing a password, it checks now whether an existing salt can be retrieved. If yes, it will be re-used for generating the hash. If not, it defaults to using a new randomly generated salt. ### Tests written? No ### Commits signed with GPG? YesBut this is insecure. I think we should either kill this option or at least scream all around the place in logs if anyone will use this.::I do agree that ""screaming all around the place in logs"" is the most reasonable reaction here… Added a corresponding warning.::",5451ab6b7a9e3c0299c3bfac18d5c2620037af7b::dd3be1d76ebdb0076089db06180c7c1fa4066bd5::
https://api.github.com/repos/saltstack/salt,47140,fixup::develop,0,merged,,"### What does this PR do? Adds proper ordering to s3fs so that salt will always use the version of a file from the first listed bucket with that file (as in gitfs and other fileservers). ### Previous Behavior Previously, while processing the buckets, s3fs would use dictionaries, which are unordered in python 2. This could result in buckets being searched in unexpected order. ### New Behavior The internal data structure now uses lists of dictionaries to make sure order is maintained, and buckets will properly be searched in their defined order. ### Tests written? No ### Commits signed with GPG? Yes ---------- I consider this a serious bug in s3fs and think this should be backported to all supported versions. However, it's not critical for me as we have already included this updated version [in hubble](https://github.com/hubblestack/hubble/pull/355).Was the line break and indentation after the `=` intentional? Just making sure as I am not familiar with this syntax.::I think so. You can see example config here: https://docs.aws.amazon.com/cli/latest/topic/s3-config.html I just realized that I accidentally used the same link twice -- the second instance should be that link above. I'll fix that momentarily.::",693c08b6dcf019ffc374bde6743a35bf5c79e688::4a0814d75432df677c80e0986a9e4aea4263d0a1::a0cf037fce104d8b7bb471e92038a02a5883ccd6::38eb0277fb3003c064c3c0395090df986f5c603d::55926fae64aba8be0d1a9901f76e85a7c7f4108b::
https://api.github.com/repos/saltstack/salt,47014,develop-fix-for-grain-test-core::develop,0,merged,,"### What does this PR do? Since assertCountEqual was Python>=3.2 only, we backported this to Python2. ### Previous Behavior Testing with Python3 would work and Python2 would fail. ### New Behavior Testing with Python2 and Python3 would work. ### Commits signed with GPG? Yes",c22c81304ff616a4b4345d4e648f1e61dc10d2cc::
https://api.github.com/repos/saltstack/salt,46908,merge-2018.3::2018.3,0,merged,,Conflicts: - salt/grains/core.py - salt/utils/__init__.pyThis section is redundant now. It's part of the code I used to backport the log argument normalization and the same block exists directly under here. This entire green block should be removed.::,19a2244cb76238e3fa7603a4bbf1b725809aad35::e6a56016dfba1885286c466f732a855d168527bd::1ad4d7d988130f2a412e02b85fbd40515a64a7ad::c179388b0e0244eee450e2f1cf4a8b78d6a50e90::710f74c4a69b15f7345f51f3e7b69d3c7fff042b::8d12770951433bc6e8ccd0ff7f94624c0a960db2::b383b9b330ccf2e55ddd3461f5ac2ecd673912c1::bf5034dbdb88195461640b62edf4b4d2d5fb1b7b::9302fa5ab0819b7a473c48803634482f43b2c6f4::67b469757816e2e64f47d01d39f2a5ee14469051::a4a17eba6a02e43f77c3a092c9bb46d62c8c9cc5::edc1059ee095785e3efe4173391d4b874c390463::73d6d9d365c3334a09e8876096b3b0fbe7ed0683::3b7208ce2795d402bc5f7a317452d53d83bcfaca::f2dd79f9c4c7561648214daee8e8b0358e309f11::36a0f6d8ca75b970dbf927e8b2d637dd729eb852::55845f4846a7fe86b7c20fb61753784811901e30::6cff02ef6a15da55f401d18f1cac59148e88a52b::3d288c44d46c4eec256b2eba62d871b4df75154e::13875e78cf2ce78221d89332fb26af5f383c38d5::9eb6f5c0d0b2f9334f73f9db40e1409f1c1ced7b::89af0a62221904ca94b154f068126672d3bd2cf8::e3d17ab7bc78d63c14a7e10fedc050c9cc73448f::7db251dc116d6503accd4be4e061a4a889167a27::3112359dd66753a1e06981975a1339457d156d01::4a3ed6607dd9a36ef3a2ddd91ece5918418c642d::0151013ddbce79f82316725bfaad2628f297c108::0ace76c0e704257527f54a1ed80fce5bcda3e573::9c776cffb7a67c3530f5adee34818bacc458f6c9::7652688e83f412ef291964eee6ed19d3cc29a4be::9eb98b1f6e64649bc4c87ccc736121172c1cd388::d9770bf3f86f1b464b45c0013031aff97d38b74d::cd1ac4b7f9c18680b0511ee1a0e1df24c38ff354::7e704c0e815f6b51c39451dcee16458e6edf320b::781f5030a4944aa16a952b8ee47a8738fe1682cd::637cdc6b7b996ec0f1a56e26e5d474d1ec1ec8ec::058bbed221413342cb12b0fbb5468f0b0e19eea6::91c078ce12822edf781ecef9d219efa82cba042e::f70f6de28279f7a95bd030f6e0e0288b10fd38d2::dc54fc53c3cde213e4df72d8ce7ca0967c02c75e::18e460fc308b644d25b9f7d70ba2199dcbf99b74::805ed1c964bcdb9b7250a1b27977f58c91d9dc5f::7d822f9cecc2ddb3964c3c85a9b544c704b9876a::d0f5b437535a773f840e2ef3d5a9f33ab19d8fc2::0a297e731958d04562332951033f803bc7874970::177c686b52df49d232b41c82be6be7bda3669f82::102e966512394571b56c306010a278679bd58357::
https://api.github.com/repos/saltstack/salt,46867,unicode-logging-normalization::2017.7,0,merged,,"Prior to 2018.3 we were normalizing the format string to unicode but not the args. This means that even when a non-unicode format string was used, a str argument containing utf8-encoded non-ascii chars would result in a traceback. This backports the arg normalization from 2018.3 to to 2017.7 to ensure that these sort of cases do not cause errors in logging.",7652688e83f412ef291964eee6ed19d3cc29a4be::
https://api.github.com/repos/saltstack/salt,46800,2017_7-46627::2017.7,0,merged,,"### What does this PR do? corrects the creation of valuenames for ADMX ""list"" types if the valuePrefix attribute does not exist on the list item, the value is the value name, other wise, the valuename a number with the valuePrefix prepended to it needs to be backported to 2016.11 as well ### What issues does this PR fix or reference? fixes #46627 ### Previous Behavior if the valuePrefix attribute didn't exist or was empty, numbers were used as the valuename, however if the valuePrefix attirbute does not exist at all on the list item, the values are used as the valuenames ### New Behavior if the valuePrefix attribute does not exist, the values are used as valuenames if the valuePrefix attribute exists, numbers are used with the valuePrefix attribute value prepended to the number ### Tests written? No edited to add: Validated with this state: ``` test_list_policies: lgpo.set: - computer_policy: # a policy with no valuePrefix attribute 'RA_Unsolicit': 'Configure Offer Remote Access': Enabled 'Permit remote control of this computer': 'Allow helpers to remotely control the computer' 'Helpers': - 'administrators' - 'other_user' # a policy with valuePrefix="""" 'Specify communities': 'Communities': - community_new1 - community_new2 ``` ### Commits signed with GPG? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG. Was this tested on PY3 by chance, or just PY2? I am wondering if this usage of `str` will work correctly on both versions.::I will go back and test both again, just to make sure there are almost 20 calls to the str() function in places throughout the module::re-validated that it works on both PY2 and PY3::OK thanks @lomeroe for checking that!::",2bee383e9d2430bc22289e33136338c0c680e689::
https://api.github.com/repos/saltstack/salt,45942,issue45679-2017.7::2017.7,0,merged,,"This is a backport of https://github.com/saltstack/salt/pull/45941 for the 2017.7 branch. Any changes that need to be made to that PR before merging need to be duplicated here before this PR is merged. Therefore, this PR should not be merged until https://github.com/saltstack/salt/pull/45941 is.",9cd47b39dd8bf8bb2c7d89aead1bc8783cd75f24::89cbd72a0ddfe600b08842e3f4a3b960c6d7badc::
https://api.github.com/repos/saltstack/salt,45941,issue45679::oxygen.rc1,0,merged,,"The logic which ensures that we expose ports which are being bound, even when not explicitly configured, was done incorrectly. UDP ports were being passed to the API as '1234/udp' instead of (1234, 'udp'). This results in the port not being exposed properly. The logic has been corrected. Additionally both the ""ports"" input translation function, as well as the post-processing code (where the port numbers configured in port_bindings were being added) both contained code to ""fix"" any ports which were configured using 'portnum/tcp', as these must be passed to the API simply as integers. To reduce code duplication, this normalization is now only performed at the very end of the post-processing function, after ports have been translated, and any missing ports from the port_bindings have been added. The unit test for the port_bindings input translation code, which was written based upon the same incorrect reading of the API docs that resulted in the incorrect behavior, have been updated to confirm the (now) correct behavior. The unit test for the ports input translation code has been updated to reflect the new normalization behavior. Finally, an integration test has been added to ensure that we properly expose UDP ports which are added as part of the post-processing function. Note: This has been backported to the 2017.7 branch in https://github.com/saltstack/salt/pull/45942.",15a1ab4acc2a57dcc0ac5a23dc1a8c53e021df59::f35d9f6feff67c971a0b114fe20bd8f63c5bd236::29d0271b737f2e09bdd5aa7758e129225d5f45b2::
https://api.github.com/repos/saltstack/salt,45921,yumpkg-upgrade_available::develop,0,merged,,"The `upgrade_available` func is there as a convenience for people who are used to the yum/dnf syntax. However, it doesn't pass through kwargs and thus does not support the repo options that `latest_version` does. This commit makes the simple tweak of passing through the kwargs, allowing this convenience func to support all the extended options that `latest_version` does. @rallytime up to you whether or not you think this merits a backport. It seems low-priority to me since one can just use `latest_version`.",9adc7d8893959ada39dabffc0b147d399d7c0077::
https://api.github.com/repos/saltstack/salt,45907,fix-grains-backport::2017.7,0,merged,,"A fix recently made to the salt/grains/disks.py was backported to 2017.7, but the fopen function was moved in oxygen and so the function does not exist in 2017.7. This did not make it into 2017.7.3 so there is no need to add this fix to any hotfixes. @rallytime we need to make sure that when merged forward, we use the new salt.utils.files.fopen here.",6cf7e50cc475d5afe0616fc6e65c0f8e15f3d301::
https://api.github.com/repos/saltstack/salt,45573,2017.7.3::2017.7.3,0,merged,,### What does this PR do? backport one fix that was added in 2016.11.9 and fix the test query by using a simpler website that doesn't have redirects for ipv6. ### Tests written? Yes ### Commits signed with GPG? Yes,808e26e69a479868fb4ecfac162523580f2bacbb::bd3cb47fa78ab88f78cd920fb6b12624bbad63f9::
https://api.github.com/repos/saltstack/salt,45501,2017.7.3_line_mixed_line_ends::2017.7.3,0,closed,,Backport of #45498,c88c23ae71eacbfebff722feaea95e32d757401e::
https://api.github.com/repos/saltstack/salt,45308,win_fix_test_state::oxygen,0,merged,ZRELEASED - 2017.7.3::ZRELEASED - 2018.3.0::,### What does this PR do? Fixes failing tests on Windows - Fixes Windows-specific issues in `test_state` - Fixes an issue with the `prereq_simple2` state file that had some strange characters that were causing failure in windows (`<C2><A0>`) - Adds a jinja to `watch_any` to handle Windows Fixes an issue in `file.managed` where a command execution error was being raised if the target file did not exist. @rallytime Need to backport this to 2017.7. Should I do a separate PR? ### What issues does this PR fix or reference? https://github.com/saltstack/salt-jenkins/issues/439 ### Tests written? Yes ### Commits signed with GPG? Yes This section of code would be cleaner if you encompassed just the `file.check_perms` command in the try/except instead of the `if is_windows` check as well. ::,db52f086e3b6e7b7479920b483452a7b046913e4::0be187cfe0a59fe3f8665e239e23ff1ba7cee6fd::53506a5e86d0c68b9eaf2576b31de3b5d7dad0c9::e3e0dba15d9e6af40f1b2eaaa8861dfecfb720ab::
https://api.github.com/repos/saltstack/salt,45294,2017.7::2017.7,0,merged,ZRELEASED - 2017.7.3::,"### What does this PR do? Older version of python need this file to work with tornado when using salt-ssh.  Since you can run a newer version of python3 that has the file as collections.abc, it won't be installed, but it still needs to be included in the thin tarball if the salt-ssh minion is < 3.5 ### What issues does this PR fix or reference? Fixes #44107 ### Tests written? No ### Commits signed with GPG? YesI don't think this change was intended to go here.::Same comment here as well.::This one disables running pylint on anything in the ext/ directory as tom mentioned here. https://github.com/saltstack/salt/pull/45294#issuecomment-356032611 Is there a different way that I could do that?::yeah, this one can be removed::Oh, I am sorry, I missed that comment and got my reviews mixed up. You're right. ++::",8b597a48909796e67a0d4de9c1a44cb176d04ef8::29806e44964f444e34d6fed617820fe9951f73de::3633ceeaa7867be8ceda0f15b791396712a6c538::
https://api.github.com/repos/saltstack/salt,44944,update_regpol_encoding::2017.7,0,merged,ZRELEASED - 2017.7.3::ZRELEASED - 2018.3.0::ZZZBugfix - [Done] back-ported::,"### What does this PR do? Updates win_lgpo to not decode the registry.pol file wholesale, but instead decode the items of the file as necessary while processing.  Some columns of a registry entry where not encoded properly (i.e. the size and type fields were a utf-16-le encoded number and a null character as opposed to being utf-32-le encoded to have the proper raw length in the registry.pol file). Uses byte objects for all registry.pol items/etc to be py2/py3 compatible. See https://msdn.microsoft.com/en-us/library/cc232696.aspx for additional information on the encodings of the ""columns"" of a registry.pol entry. Also fixes an issue in get_policy_info where items from the static _policy_info class would not be found if the short name was used (i.e. the key name in the policies dict) ### What issues does this PR fix or reference? #44516 - this should be a more complete fix @twangboy - please test this out on your end, my tests came back successful on both 2016.11 and 2017.7 py2 and py3 (though this will need to be properly backported to 2016.11 and to develop). ### Previous Behavior Encoding errors would be returned on py3 for items whose data item where a unicode surrogate when attempting to encode, the same would happen on py2 when attempting to decode a surrogate value that existed in the registry.pol file. ### New Behavior Data items are not encoded/decoded unless necessary resulting in no need to ignore surrogates/etc (i.e. data is compared as byte objects instead of converting to more human friendly/readable objects) ### Tests written? No ### Commits signed with GPG? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. See GitHub's [page on GPG signing](https://help.github.com/articles/signing-commits-using-gpg/) for more information about signing commits with GPG.",ab8e431729a07b791937b882c094fad91e4eb702::d17c46ce417c4298b46b81b985d4e67518de1010::07d04c7bc737c431bc7fdb6b1014124abbc7aaed::
https://api.github.com/repos/saltstack/salt,44871,fix-ipv6-handling::develop,0,merged,,"### What does this PR do? Fixes internal IPv6 handling when configuring master with IPv6 (no hostname) Might need backporting Example /etc/salt/minion config: ``` master: '[fc08:5c67:ee2e:50f3:9b24:9ef0:c375:b6df]:4506' ipv6: True ``` ### What issues does this PR fix or reference? No issue filed ### Previous Behavior ``` [DEBUG   ] Connecting to master. Attempt 1 of 1 [DEBUG   ] Initializing new AsyncAuth for ('/etc/salt/pki/minion', 'host', 'tcp://fc08:5c67:ee2e:50f3:9b24:9ef0:c375:b6df:4506') [DEBUG   ] Generated random reconnect delay between '1000ms' and '11000ms' (9212) [DEBUG   ] Setting zmq_reconnect_ivl to '9212ms' [DEBUG   ] Setting zmq_reconnect_ivl_max to '11000ms' [DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'host', 'tcp://fc08:5c67:ee2e:50f3:9b24:9ef0:c375:b6df:4506', 'clear') [DEBUG   ] SaltReqTimeoutError, retrying. (1/7) ``` ### New Behavior ``` [DEBUG   ] Connecting to master. Attempt 1 of 1 [DEBUG   ] Initializing new AsyncAuth for ('/etc/salt/pki/minion', 'host', 'tcp://[fc08:5c67:ee2e:50f3:9b24:9ef0:c375:b6df]:4506') [DEBUG   ] Generated random reconnect delay between '1000ms' and '11000ms' (5149) [DEBUG   ] Setting zmq_reconnect_ivl to '5149ms' [DEBUG   ] Setting zmq_reconnect_ivl_max to '11000ms' [DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'host', 'tcp://[fc08:5c67:ee2e:50f3:9b24:9ef0:c375:b6df]:4506', 'clear') [ERROR   ] The Salt Master has cached the public key for this node, this salt minion will wait for 10 seconds before attempting to re-authenticate ``` ### Tests written? No ### Commits signed with GPG? Yes",7ad98c5c7d3755bf5e3d28075d25b4a449143428::e38245a7ead6d850a7d7a951a4443a589bd1954b::
https://api.github.com/repos/saltstack/salt,44735,42713_backport_2017.7::2017.7,0,merged,,"Cherry-picked and squashed the two commits from the develop branch The unit test module didn't exist at all on 2017.7, hence a conflict during cherry picking, resolved by introducing only the new tests (the other ones don't pass as is on 2017.7). I'm thinking of taking a look at the other tests, in case they can easily be backported in a subsequent PR. See the commit message for more technical details. The commit is signed, I get an unchangeed pylint core on dameons/masterapi.py (9.37/10)",fb586c6dce6f5112ce2ce3220d7941a87ea6c253::6806d833148c9dcb7be2ba78abe49e6e3f998d6b::
https://api.github.com/repos/saltstack/salt,43952,2017.7_add_requisites_to_stateconf::2017.7,0,merged,,Backport of https://github.com/saltstack/salt/pull/43920 pull request Rebased https://github.com/saltstack/salt/pull/43921,89200ff28e9183f0923563321f98fc8efb6bd57d::9994c6467076ea8699ececb27fb1347a67069bd1::
https://api.github.com/repos/saltstack/salt,43921,2017.7.2_add_requisites_to_stateconf::2017.7.2,0,closed,pending-changes::,Backport of https://github.com/saltstack/salt/pull/43920 pull request,949cd5130ec98c3a9cc3fdda93fb38f0d8556f25::
https://api.github.com/repos/saltstack/salt,43708,2016.11_43417_Backport_and_Fixes::2016.11,0,merged,,"### What does this PR do? Backport current develop version of win_pkg with additional bug fixes. Taken the develop version of win_pkg.py and - import sys to get INT max size for compare_version() - enhanced compare_version to support versions of 'Not Found' and 'latest' which can occur in windows. - comment out import salt.utils.platform which is not in 2016.11 salt.utils.platform.is_windows() renamed back to salt.utils.is_windows() - added back the warning about win_repo_source_dir removal as this is required for 2016.11 version. Added on top of the backport is - Additional comments into the code -- Indicate pkg_list can return a 'version number' and also 'Not Found' version number -- _get_latest_pkg_version() can return 'version number' or 'latest' -- latest_version() can return blank if the latest version is installed or no version at all is installed - upgrade_available did not require both version() and latest_version() as latest_version() does everything required. - list_upgrades() added comments to explain code, simplified code to latest_version() rather than calling both latest_version() and compare_versions() - list_available() is not required to force a refresh by default - version() added comments and questions as the return value is non standard - genrepo() add questions around the open mode and get_repo_data open mode - _repo_process_pkg_sls() -- file param was renamed to filename as file variable name classes with file() -- rename var version to version_str so as not to import version() function -- remove a section of code which was never executed and never used - install() -- simplified an if statements -- add more code comments ### What issues does this PR fix or reference? #43417 ### Behaviour Changes In 2017 and develop the documentation style is different to 2016.11 The following are samples of changes, note this is the current output style in 2017 & develop: ``` #### pkg.version gimp nmap New Results DIFFERENT          Original Results {                               { ""local"": {               |      ""local"": {} ""nmap"": """",          < ""gimp"": """"           < }                        < }                               } ``` 2016.11 seems to follow the output style of existing pkg.* modules for non-windows platforms. 2017.7 and develop seem to follow a different style. Given this is a backport of develop above shows output style differences between 2016.11 original and 2017.7/develop Given trying to keep the pkg.* interface the same across platforms, I would have thought the output should also be the same except for edge cases (e.g. pkg.refresh_db) ? ### Tests written? No new testsThis doesn't need to be here, it'll be caught once this would merge forward to develop and it's a simple matter of adding the `.files` to the function call.::Same here::This also doesn't need to be here.::Multiline paramater docs need to start on their own line or they are not displayed properly. Needs to be: ``` Args: name (str): The name(s) of the packages(s)... ```::The docs for `version (str):` needs to start on the next line, same as above...::Same here::Please just remove this if it's not being used.::Updated the comment.::",b314549a3262042bd1f7422658174dcd52c06540::ec31f5a9bd0453068e2d95ed7328ba0d01852936::350244bd93a708b23d98ee4ad03af96b7c6157f9::c9c8c48a4d63a8450b82402414a6f07040385bd5::2c937fbe19dd874fa91c9d7c4848c39e8f28f687::2496a42ea43a86e394706b6c1073bc2d37745421::6dc180fd0ed86f5f0a3920f2b97885c6b407c5ec::9467899fc616f30291e55f873a33b72c50772043::a0d08598bf245a3ea29600998c9e3d5633b3fc80::dd48ba2616c873c1309e1635e3783f87c7f7f876::1dd565e5851e38fd935af8dc561084cc626f1c23::04d03ea6b82b09343579dc4d80ce4b079330211d::
https://api.github.com/repos/saltstack/salt,43700,fix-libvirt-stderr-spam::2017.7,0,merged,,"### What does this PR do? Back port of the relevant fixes in:  #43684 - Fix libvirt spamming stderr when errors happen (that are not errors at all, like when checking if a VM is absent/present) libvirt errors are now redirected to salt's logging at debug level. - Mention Fedora 26 support ### What issues does this PR fix or reference? None. ### Previous Behavior When instantiating a new domain some messages from the libvirt library were printed to stderr. ### New Behavior Libvirt messages are now written to salt debug log. ### Tests written? No Question: Is this the right branch to backport to ? Should I also cherry-pick the changes to 2017.7.2 ?",9aecf5f8472ff9973bae6bc8fa07e774ed341014::235bec492ef9c5b7818e67fc50fd306465fa44ea::88530c4cb6dc77a51b4a1c11139bcb844c1666e0::
https://api.github.com/repos/saltstack/salt,42988,fix-iptables-negation::develop,0,merged,ZZZBugfix - [Done] back-ported::,"Introduced in 7c6ff77c and released with 2017.7 (noticed this when accidentally upgrading a node to 2017.7.1 yesterday). Can this be backported to 2017.7? ### What does this PR do? Fix broken handling of negated flags to the iptables module. Setting `syn: '!'` would generate a rule like `! --syn !`, instead of the correct `! --syn`. ### What issues does this PR fix or reference? None filed yet afaik. ### Tests written? Yes Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.",6f19fc023cd142a02ac9b6d74d74105c5d778d08::9ac043d9972fbc316089dd4b5f2fe9eef593dc23::
https://api.github.com/repos/saltstack/salt,42837,backport-utils.versions-to-2016.3::2016.3,0,closed,,This makes it easier to backport boto* and other modules from develop that are using the salt.utils.versions module. This will be most helpful if included in a future point release of 2016.3. ### What does this PR do? Backports a module from develop ### What issues does this PR fix or reference? Includes fix from #42835 ### Tests written? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.,3652983d81fd8d64a0877cbdf4bb3e19a564ec8e::
https://api.github.com/repos/saltstack/salt,42836,backport-utils.versions-to-2016.11::2016.11,0,merged,,This makes it easier to backport boto* and other modules from develop that are using the salt.utils.versions module. This will be most helpful if included in a future point release of 2016.11. ### What does this PR do? Backports a module from develop ### What issues does this PR fix or reference? Includes fix from #42835 ### Tests written? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.,86ce7004a2cb6b4bba4739a1a11c3b3868aceb1e::
https://api.github.com/repos/saltstack/salt,42795,bp-42744_201611::2016.11,0,merged,,"### What does this PR do? backport #42744 to 2016.11 ### What issues does this PR fix or reference? #42600 ### Previous Behavior If only one ADM template policy was configured, that policy could not be disabled by win_lgpo ### New Behavior A single policy can properly be set to ""Not Configured"" ### Tests written? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.",695f8c1ae41cbcc6675930a379d277fb81edbeac::
https://api.github.com/repos/saltstack/salt,42310,zypper-list_pkg-attr-parameter::develop,0,merged,,"### What does this PR do? It adds a new optional parameter to `list_pkg` in the `zypper` module to return more data than the version (original reason is that for SUSE Manager integration we also need `arch` and `install_date`). Format is the same of existing method `info_installed`. ### What issues does this PR fix or reference? None known. ### New Behavior If the new parameter `attr` is specified, more package attributes are returned. ### Tests written? Yes - existing tests have been adapted and a new one has been added. ### Other notes If this PR is accepted we will likely open others to get more attributes, add the same capabilities to the `yumpkg` module and backport this code at least to 2016.11. This is my first core contribution so please be patient if quality is not yet at the correct level! @meaksh, @dincamihai can you take a look please?This versionadded should be `Oxygen` instead of `2016.11.5`.::attr=None  should be added to kwargs, so that the list_pkgs is the same on all platforms. However I suggest you supply all information by default.   versions_as_list=True gives a short version of information anyway.::> attr=None should be added to kwargs, so that the list_pkgs is the same on all platforms While it is true that many modules share the `(versions_as_list=False, **kwargs)` signature, that's definitely not universal: ``` salt$ ack -A3 ""def list_pkgs"" [...] salt/modules/yumpkg.py 585:def list_pkgs(versions_as_list=False, **kwargs): [...] salt/modules/dpkg.py 134:def list_pkgs(*packages): [...] salt/modules/nix.py 183:def list_pkgs(installed=True, 184-              attributes=True): [...] salt/modules/aptpkg.py 1318:def list_pkgs(versions_as_list=False, 1319-              removed=False, 1320-              purge_desired=False, 1321-              **kwargs):  # pylint: disable=W0613 [...] salt/modules/rpm.py 129:def list_pkgs(*packages): salt/modules/pkgng.py [...] salt/modules/pkgng.py 347:def list_pkgs(versions_as_list=False, 348-              jail=None, 349-              chroot=None, 350-              root=None, 351-              with_origin=False, 352-              **kwargs): [...] salt/modules/freebsdpkg.py 255:def list_pkgs(versions_as_list=False, with_origin=False, **kwargs): [...] ``` That's even more evident when looking at other methods, like `install`: ``` salt$ ack -A15 ""def install\("" [...] salt/modules/npm.py 63:def install(pkg=None, 64-            pkgs=None, 65-            dir=None, 66-            runas=None, 67-            registry=None, 68-            env=None, 69-            dry_run=False, 70-            silent=True): [...] salt/modules/pacman.py 438:def install(name=None, 439-            refresh=False, 440-            sysupgrade=False, 441-            pkgs=None, 442-            sources=None, 443-            **kwargs): [...] salt/modules/pkgng.py 658:def install(name=None, 659-            fromrepo=None, 660-            pkgs=None, 661-            sources=None, 662-            jail=None, 663-            chroot=None, 664-            root=None, 665-            orphan=False, 666-            force=False, 667-            glob=False, 668-            local=False, 669-            dryrun=False, 670-            quiet=False, 671-            reinstall_requires=False, 672-            regex=False, 673-            pcre=False, [...] ``` So I got the impression that uniform method signatures was not a design choice here - I personally think making parameters more visible in platform-specific modules has more value. I can of course change this if requested by the Salt team.::> I suggest you supply all information by default. I disagree here. Reason is that the returned data has a different structure when the `attr` parameter is set, so any third party application or script must be ready to accept it. That means that putting the `attr` parameter as a default will make `zypper` return something different from all other backends that must be treated in a special way by default, and will break backwards compatibility. This is not really the intention here - what I would like to see is an option to return more data only if the requester needs it, only if it is prepared to handle it.::Fixed in 04a1bbbc48ada0c587c67af76944779f0d325863, thanks!::@damon-atkins the `attr=None` is what `lowpkg.info attr=...` does. Nothing to do here with the ""standard signatures"". @moio yep. :+1: ::I agree with @isbm and @moio here but I'll give @damon-atkins a chance to reply before we move forward with this. Thanks.::nix.py is new in development ``` :param bool attributes: show the attributes of the packages when listing all packages. Default: True ``` Which standard is going to be used attributes=True/False  or attrib=[list of attributes]? If its attrib=[list of attributes] then I suggest nix.py should be changed. At the end of the day their needs to be common parameters which perform the same thing.  Making salt easier to learn and (mostly) consistent across platforms. Should be able to sit at the command prompt salt * pkg.list_pkgs  param=value And platforms which do not support param ignore it and platforms which support param do all the same thing.  The attributes return should have the same meaning across platforms. Unfortunately and overall/platform wide  doco for pkg.list_pkgs for example does not exist. So it means developers need to look at all of pkg modules to try and determine consistence approach before coding. Something like `attrib` (common) and `attrib_all`  this would be attributes which are not common across platforms, like the win_*.  Should platform specific attributes be prefixed? This topic comes up now and then with regards to pkg modules api. Last time, a Salt Team member change it to (x=default,y=default) and then after discussion, the Salt Team changed it back to using kwargs so its more compatible with other platforms. Configuration Management Tools should mostly remove the platform specific differences so their is common approach across platforms.::> nix.py is new in development ... > Which standard is going to be used attributes=True/False or attrib=[list of attributes]? This seems to me like a valid but different concern than the two discussed above (what the default behaviour should be and whether the new parameter should be in `**kwargs`). I am now restricting the discussion to this last topic. The choice of the `attr` name and its format here was taken mainly to stay coherent with the existing [info_installed](https://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.zypper.html#salt.modules.zypper.info_installed) - lacking a broader overview I am open to change that if the Salt team indicates to do so. ::@damon-atkins since the topic is not about ""standard signature"" anymore, I see very little difference here: ```python >>> def foo(a=None, **kw): print a, kw >>> foo(**{'a':'Foo', 'b':'bar'}) Foo {'b': 'bar'} >>> foo(a='Foo', b='bar') Foo {'b': 'bar'} >>> foo(b='bar') None {'b': 'bar'} >>> >>> def foo(**kw): print 'a' in kw and kw.pop('a') or None, kw >>> foo(a='Foo', b='bar') Foo {'b': 'bar'} >>> foo(**{'a':'Foo', 'b':'bar'}) Foo {'b': 'bar'} >>> foo(b='bar') None {'b': 'bar'} ``` The only why one would have `attr` inside the `kwargs` is that the code itself takes care of it, or just passes elsewhere, like in case of `info_installed`. I see a very little merit discussing all that.::",470ba57418943670aa8137d43de32e1bc9d649aa::c2210d64ab2c3d8b1355ef88e20d42b919b2debd::a32ee4af0550ac0acf3bae53fee983496c282b4a::bb049cb70f91c95bf465817ba8620acdddb62815::db22777a09820e29e921b3ae5391f47ba51d396a::5e23f5d67844e43f9673d8b2836523e9bb25cec0::d609ed2eeed1900b909d1d1060e258415fcd2b2c::8a631d18df1a9ba100864f16f3766bc22f9b7fae::
https://api.github.com/repos/saltstack/salt,42290,isbm-module_run_parambug_42270_217::2017.7,0,merged,,### What does this PR do? Just backports https://github.com/saltstack/salt/pull/42276 and fixes @cachedout 's notes. ### Tests written? Yes,74689e34626a9c841b9656c51bb55165ec56193c::ea8351362c5aa09f4c622f025e4ed79515a9d544::94c97a8f254e44f1ce40e5919146c5762e419474::8c71257a4b77c5e3ac0a5dbe4f9c1e6c8c60245e::1391a05d5e9b4d2609d5fc5f818bf718615ecaf0::1d7233224b565725b4f87933ff1ce2ae0d25e878::1e8a56eda5aec6e65b54b034efd6b6c28cd29428::e38d432f906f99447b0beac523952df4199a6072::
https://api.github.com/repos/saltstack/salt,42276,isbm-module_run_parambug_42270::develop,0,closed,,### What does this PR do? Fixes the issue on `module.run`: https://github.com/saltstack/salt/pull/42270 Fixes the documentation for `module.run`. Allows running the same function within the same functionset with the different parameters. Fixes tests. Note: probably needs to be backported to 2017.7 ### Tests written? Yes `it allows calling many functions`...::`In the rare case that you have`...::`For example:`::,6ddf28d3eb5a502a72a7f101b046f3dbd5a178d8::478215a663c129fbecfb64fd79dc767b46bc3703::ec29a109d4ae53c6915e60a1151638ccc483522a::e389bd85437a35703f714b52f748e71758b61e75::09d03dd41c81834063055455a2cc641d7254a868::050de9b2e4cacdd4c40ab878df0aa4ab14511cbc::929697d6c2024289cbb4b900900860106119d868::d9a14cbf9bc9b96f22a93b02176a7865a3b2051f::d74a016fd47f81dcb28a3716acac11bff4be2c99::
https://api.github.com/repos/saltstack/salt,42024,doc/selinux::2016.11,0,merged,,"### What does this PR do? Update versionadded docstring value to where this feature was backported to ### What issues does this PR fix or reference? Updates the versionadded in docstring, fixing documentation and release notes ### Tests written? No",b63a3c0faece2b9272ec329a838d881f2d0b4510::
https://api.github.com/repos/saltstack/salt,41816,update_psutil_req::2016.11,0,merged,,### What does this PR do? Fixes to the status module (backported) require psutil version 5.2.2 ### What issues does this PR fix or reference? https://github.com/saltstack/salt/issues/41797 ### Tests written? No,8b4e3ad77dce67d087b1f834a19f9c75eda3f9e1::
https://api.github.com/repos/saltstack/salt,41446,proxy-file::nitrogen,0,merged,Pending Discussion::,- Ports https://github.com/saltstack/salt/pull/41304 into Nitrogen - Adds the proxy service file into the deb package. Ping @dmurphy18 - is this alright from your perspective?,48f47e392511df8d69e2eae063246cdbe37ff38c::ca6b07c415fe770fde67e7b02909742e86fe3062::0c1221ea7b540da4c940e380ec2d331a43afaf0e::
https://api.github.com/repos/saltstack/salt,41319,bp_41307::2016.11,0,merged,,number ### What does this PR do? backport #41307 ### What issues does this PR fix or reference? #41306 ### Previous Behavior Version numbers over 16384 weren't properly packed into the version number ### New Behavior Verion numbers packed properly ### Tests written? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.,4f0aa577a567269a76547749738e9939429da876::
https://api.github.com/repos/saltstack/salt,41303,bp-41301::2016.11,0,merged,,### What does this PR do? backport #41301 to 2016.11 ### What issues does this PR fix or reference? #41291 ### Previous Behavior Some decimal values would cause an exception to occur when attempting to read the data out of the regpol file ### New Behavior Decimal values are properly read out of regpol file ### Tests written? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.,f4b93f9d9a3cc5433b2c181b06bb0ff92e363eaa::
https://api.github.com/repos/saltstack/salt,41282,bp-41247::nitrogen,0,merged,,This is a backport of #41247 to Nitrogen.,c187812065c3415678882b5f272bf54a2bf792ce::f1751d135aeec130f7ffca28f6d737170ccb98bd::3e481cb7648fbe40eb2339804d8cfa611dcd2b53::
https://api.github.com/repos/saltstack/salt,41144,issue34775::develop,0,merged,,"This adds 2 new config options: - ``gitfs_disable_saltenv_mapping`` - This allows a user to disable the environment mapping logic and rely solely on per-saltenv configuration - ``gitfs_ref_types`` - This allows individual ref types to be ignored It also includes a performance improvement in retrieving tree objects matching the desired ref name. Before, we would iterate through the different refs and check if the name matched the desired ref's name.  Now we just check for a head/tag ref based on the ref path in the gitdir (e.g. ``refs/remotes/origin/master`` or ``refs/tags/v1.2.3``). This prevents us from needlessly iterating through all refs until a match is found, which does not scale well when the number of branches and tags is larger. I will probably backport this performance improvement to Nitrogen, because this release introduces the ability to customize the refspecs. If people use this feature, dozens/hundreds of new refs will be fetched, which could impact performace. Resolves #34775.",1279f56c5617022371837879351bad077df8c824::798567b766ffff6c78be114603640e974463c1a3::
https://api.github.com/repos/saltstack/salt,40785,backport-winexec-selection::2016.11,0,merged,,This is a backport for 2016.11 of the #40716,91cafd50946fb08b81cc3674faca8a02cf4c676b::
https://api.github.com/repos/saltstack/salt,40736,boto_lambda-use-__utils__::develop,0,merged,,### What does this PR do? Changes `boto_lambda` module to use `__utils__` instead of `salt.utils` to allow overriding modules so that backported modules can be used. ### What issues does this PR fix or reference? N/A ### Tests written? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.,a1c8daceccb46299199f0571d1bbc3475458ab5e::2d6b62207efd10ba3496783c5d82cdb08fcb96e9::8d634ef389ec221ab2458d9f0df77bb05736e438::
https://api.github.com/repos/saltstack/salt,40562,fix-get-client::2016.3,0,merged,,This fixes a regression I introduced the other day in #40481 when I backported auth fixes to 2016.3. I changed how the client was instantiated and ended up passing an unsupported kwarg to the wrapped function. This resolves that regression.,7f1ef72f83bff7802d9c7c7f9c0a9b0b63329132::
https://api.github.com/repos/saltstack/salt,40329,isbm-merge-tops-201611::2016.11,0,merged,,### What does this PR do? Backports previously merged https://github.com/saltstack/salt/pull/40113,a762c9eddae60797edd5b9d31c5bbfffce657d85::
https://api.github.com/repos/saltstack/salt,40255,fix_39976_2016.11::2016.11,0,merged,,### What does this PR do? backport #40253 to 2016.11 branch ### What issues does this PR fix or reference? #39976 ### Previous Behavior Unable to set some Administrative Template policies ### New Behavior Administrative template policies can be set ### Tests written? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.,0e9f5820ccc5f0c2acc189459059d2e72858184e::
https://api.github.com/repos/saltstack/salt,39999,contributing-md::develop,0,merged,,"### What does this PR do? Moves the CONTRIBUTING.rst file back to a CONTRIBUTING.md file, as [Github states](https://help.github.com/articles/setting-guidelines-for-repository-contributors/). Then, clean up the syntax to match markdown norms instead of restructured text practices. I also updated a couple of old references. @cachedout I made this against develop, so I don't _think_ this needs to be backported for GitHub to pick it up, but let me know if you think otherwise. :) ### What issues does this PR fix or reference? Fixes #39974 Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.",dfaddea7492fbd99d9b56d3dd1b53d8aee7eb5cc::27715504706f39e4c27285812decc5bc435d082b::
https://api.github.com/repos/saltstack/salt,39948,thread-safe-loader::develop,0,closed,,"### What does this PR do? There was a race condition in the salt loader when injecting global values (e.g. ""__pillar__"" or ""__salt__"") into modules. One effect of this race condition was that in a setup with multiple threads, some threads may see pillar data intended for other threads or the pillar data seen by a thread might even change spuriously. There have been earlier attempts to fix this problem (#27937, #29397). These patches tried to fix the problem by storing the dictionary that keeps the relevant data in a thread-local variable and referencing this thread-local variable from the variables that are injected into the modules. These patches did not fix the problem completely because they only work when a module is loaded through a single loader instance only. When there is more than one loader, there is more than one thread-local variable and the variable injected into a module is changed to point to another thread-local variable when the module is loaded again. Thus, the problem resurfaced while working on #39670. This patch attempts to solve the problem from a slightly different angle, complementing the earlier patches: The value injected into the modules now is a proxy that internally uses a thread-local variable to decide to which object it points. This means that when loading a module again through a different loader (possibly passing different pillar data), the data is actually only changed in the thread in which the loader is used. Other threads are not affected by such a change. This means that it will work correctly in the current situation where loaders are possibly created by many different modules and these modules do not necessary know in which context they are executed. Thus it is much more flexible and reliable than the more explicit approach used by the two earlier patches. ### What issues does this PR fix or reference? This PR fixes problems that surfaced when developing the parallel runners feature (#39670), but is also related to problems reported earlier (#23373). The problems described in #29028 might also be related, though this needs further confirmation. ### Previous Behavior Changes to pillar data in one thread might have influenced pillar data in a different thread. Whether or when this problem actually appeared was unpredictable (due to the nature of a race condition). ### New Behavior Changes to pillar data in one thread will never affect the pillar data in a different thread. ### Tests written? No ### Regression Potential The change to the loader code itself is rather small, but it affects a central component. So if there is a problem, the impact might affect nearly all components. For this reason I dubmit this PR for the develop branch, even though it addresses a bug that is actually also present in older releases. Having said this, I believe that these changes should not cause any problems because to single-threaded processes, everything behaves as before, and for multi-threaded processes, the behavior is now more predictable. I tested this patch on our Salt master (I backported it to 2011.3 for this purpose) and I did not experience any issues there. value?::Yes, of course this should be ""value"". The Z and and the U keys are next to each other on a German keyboard... I just commited a fix for this typo.::Right, I make plenty of typos and I am always happy when they are found sooner then later ;)::@s0undt3ch Do you know why the linter is throwing this? ``` ************* Module salt.utils.msgpack_compat utils/msgpack_compat.py:16: [W1699(incompatible-py3-code), ] Incompatible Python 3 code found. Proposed fix: from __future__ import absolute_import import msgpack as _msgpack_orig from salt.ext import six as _six +from salt.ext import six # There are certain types which are sequences, but actually represent string ```::Not yet, but this is solvable by doing: ``` import salt.ext.six as six ``` This doesn't expose symbols. At least, we haven't any reports that it exposes anything except the module which is ignorable by loader.::Needs to be a space between the `..` and `versionadded`.::Needs to be a space between the `..` and `versionadded`.::",76e969893e65c37fef0c82e053dc8ff27191a13a::97ce1e5aaa61456e39192ccf7ff2318414e678a1::e42b489d3e70127455d9048704ce2d2171d66e30::
https://api.github.com/repos/saltstack/salt,39596,reduce-scope-catehed-exception::2016.11,0,merged,,"Aimed to reduce <strike>amount of code</strike> scope of try except where in one hand a 3 tuple were returned and in the other hand a 2 tuple value. @cachedout There was 2 contradictory refactoring happening at different period. https://github.com/saltstack/salt/commit/74e1803111c7d6d016e3adc54e916f1573661a5a and https://github.com/saltstack/salt/commit/fe338ff41f35f274cd2fb9410e4b1816775cede0 There were both correct taken separately but ended up being wrong when used together. Something probably get lost during backporting. I didn't investigating further. ### What does this PR do? refactoring some code to simplify it. ### Previous Behavior sometimes a tuple of 2 items were returned while we expect 3 items. ### Tests written? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. I think the try except `StopIteration` was only intended for this line. @cachedout better if you confirm yourself, since you added it in https://github.com/saltstack/salt/commit/1600f3eccdc8a02f85dcfe4aea12d3e7ee15bc62::I think you are correct here. I was being overly broad. This is better.::thank you !::",54cdacb6806a80f799c8ff320fc4c64253ec8d06::
https://api.github.com/repos/saltstack/salt,39521,backport-37366::2016.11,0,merged,,### What does this PR do? This is the backport of PR #37366 to make Salt test suite ~~great~~ work again in `2016.11`.,5bf7caf1cc8a473d7a3d4fc806b59f58bc64e2fe::
https://api.github.com/repos/saltstack/salt,39211,2016.11_pillarenv_saltenv::2016.11,0,closed,,This is a backport of #38404 to 2016.11,f91131b50cc309916e1aaf08fc59b7a5baca4fe3::937b9c569784d65be257e7478193fd774abc39d1::dc5de6ec07d47d2919c47762182b4cfce47e57b7::a64b2d66be4c4dde35452069b5907765acdea62c::b295eebe24484ded90e43016322d04afbfb98bb4::
https://api.github.com/repos/saltstack/salt,39083,bp-36336::2016.11,0,merged,,### What does this PR do? Backports #36336 to 2016.11 branch ### What issues does this PR fix or reference? This backport is a pre-req for additional backports to resolve issues: #38761 #38100 #38689 #38782 ### New Behavior This particular backport includes documentation fixes and additional static policies ### Tests written? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices.,5e94a30a34ea695104a39a90e2aa95766a455c0b::e2574da0b811a9e5527e8dd3eac31ad01658644e::981ec89a4d6678915374cb9a22b6ad3886fc25b3::03e531912431ce37bf74027b427be1e8163bac50::
https://api.github.com/repos/saltstack/salt,38927,debian_doc_fix::2016.11,0,merged,,"### What does this PR do? Update Debian 8 guide to explicitly install `python-systemd/jessie-backports` so latest salt version can be install from `stretch` repo. Could possibly need to be fixed in `Raspbian` but I don't have any way to test against this. ### What issues does this PR fix or reference? Fixes `python-systemd` dependency resolution due to `python-systemd/stretch` depending on libsystemd0 (>= 230): ```bash ~$ apt-get install python-systemd/stretch Reading package lists... Done Building dependency tree Reading state information... Done Selected version '233-1' (Debian:testing [amd64]) for 'python-systemd' Some packages could not be installed. This may mean that you have requested an impossible situation or if you are using the unstable distribution that some required packages have not yet been created or been moved out of Incoming. The following information may help to resolve the situation: The following packages have unmet dependencies: python-systemd : Depends: libsystemd0 (>= 230) but 215-17+deb8u6 is to be installed E: Unable to correct problems, you have held broken packages. ``` ### Previous Behavior Guide from Debian: https://docs.saltstack.com/en/develop/topics/installation/debian.html#installation-debian-raspbian The above guide for installing latest salt in stretch seems to be causing issues: ```bash ~$ echo 'deb http://httpredir.debian.org/debian jessie-backports main' >> /etc/apt/sources.list ~$ echo 'deb http://httpredir.debian.org/debian stretch main' >> /etc/apt/sources.list ~$ echo 'APT::Default-Release ""jessie"";' > /etc/apt/apt.conf.d/10apt ~$ apt-get update ~$ apt-get install python-zmq python-tornado/jessie-backports salt-common/jessie-backports ~$ apt-get install salt-minion/stretch Reading package lists... Done Building dependency tree Reading state information... Done Selected version '2016.11.1+ds-1' (Debian:testing [all]) for 'salt-minion' Some packages could not be installed. This may mean that you have requested an impossible situation or if you are using the unstable distribution that some required packages have not yet been created or been moved out of Incoming. The following information may help to resolve the situation: The following packages have unmet dependencies: salt-minion : Depends: python-systemd but it is not going to be installed or sysvinit-core but it is not going to be installed E: Unable to correct problems, you have held broken packages. ``` ### New Behavior Now salt-minion `2016.11.1+ds-1` installs without issues against stock Debian 8: ```bash ~$ salt-call --local --versions Salt Version: Salt: 2016.11.1 Dependency Versions: cffi: 0.8.6 cherrypy: Not Installed dateutil: 2.2 gitdb: Not Installed gitpython: Not Installed ioflo: Not Installed Jinja2: 2.7.3 libgit2: Not Installed libnacl: Not Installed M2Crypto: Not Installed Mako: Not Installed msgpack-pure: Not Installed msgpack-python: 0.4.2 mysql-python: Not Installed pycparser: 2.10 pycrypto: 2.6.1 pygit2: Not Installed Python: 2.7.9 (default, Jun 29 2016, 13:08:31) python-gnupg: Not Installed PyYAML: 3.11 PyZMQ: 14.4.0 RAET: Not Installed smmap: Not Installed timelib: Not Installed Tornado: 4.4.2 ZMQ: 4.0.5 System Versions: dist: debian 8.7 machine: x86_64 release: 3.16.0-4-amd64 system: Linux version: debian 8.7 ``` ### Tests written? No Please review [Salt's Contributing Guide](https://docs.saltstack.com/en/latest/topics/development/contributing.html) for best practices. CC @dannyleesmith",9cc9c6110d8aab034a4abee390ac7dae55bf0bd5::
https://api.github.com/repos/saltstack/salt,38829,px_dunder_fixes::develop,0,merged,,"### What does this PR do? Fixes numerous situations where `__proxy__` and other dunder variables should have been available.  In addition, adds the proxy_alive functionality contributed by @mirceaulinic. Documentation coming in next PR. ### What issues does this PR fix or reference? #38753 #38557 #38265 #32918 Supersedes PR: #38265 #37864 @alexbleotu @mirceaulinic I will go back and look at 2016.3 to see which of these should be backported to fix the similar issues there. ### Tests written? Not yet, but soon!",8a824ebdc444fa2db5b872df9b5b024b332f5972::bcfcfb4cf4abe41b72a07c2a49c13a80823ac2a9::2573ff672ac6503a9c59b42479bfbe650c0d1716::a848174e2115b4928c5f902354b510cc07e5c973::16e0a5b1e122634d9e6c112af9879813b09585d0::f79877e6dddf63fd580a38868bfef4dfb9ea9223::
https://api.github.com/repos/saltstack/salt,38381,fix-pillarenv-traceback::develop,0,merged,,"This issue only appears in the develop branch, so no backporting is needed.",db4df9e230ea649ab6321049a9893400ee821d53::
https://api.github.com/repos/saltstack/salt,38285,archive-extracted-local-source::2016.11,0,merged,Pending Discussion::,"This will keep us from trying to cache file when we already have it locally, which will help significantly with larger archives.Am I reading this right that the default behavior now is to remove the local cached copy of a remove archive? It looks like the docs say the default for `keep` is supposed to be `True` but here it looks like the default is `False`. I noticed a large increase in network activity and time when I updated some minions recently and tracked down the source to `archive.extracted`. The source files are no longer being stored in the minion cache and are being downloaded to the minions each time highstate is run. Could this be the cause of the change in behavior?::@ntrepid8 The default behavior prior to 2017.7.3 would have been to remove the cached source archive. This was changed to keep the cached source in https://github.com/saltstack/salt/pull/43518 (backported for the 2017.7.3 release in https://github.com/saltstack/salt/pull/43681).:::+1: ::",e77408086b52f733e73e826c6e6f7d797ee4a586::d0184472eb7c7b3b2312c0ef5bb0773879e0380e::f0aefc6b99e7ac123278675c944bbc8864634681::
https://api.github.com/repos/saltstack/salt,37866,2016.3-bp-37149-36938-36784::2016.3,0,merged,,"### What does this PR do? As discussed in #37856 and #37857, this PR backport #37149 #36938 and #36784 to 2016.3 branch. Thanks!",8404d13424bd0071e818cf75fb887b5633ea4bb5::f185ecdde10f81c220a6b75b40de742fe1986978::3dfed6b841f838d25f32d532c309acbee6dad72a::ffca0d491cf5afcac34375f4422ec01810092fc2::9d8d578109ad22ce5f1697a2fb8755e9dbcdbb7c::
https://api.github.com/repos/saltstack/salt,37857,2015.8-bp-37149-36938::2015.8,0,closed,Pending Discussion::,### What does this PR do? This PR backport #37149 and #36938 to 2015.8 branch in order to also include these change everywhere. Thanks!,b7a88b89b1b9f981abee06df5437fdec1250da68::01b7df20b49bb19dd6b8543343b0636065d7a35c::8de74b0b152ea70dce82b18b499fc3c06444c97f::
https://api.github.com/repos/saltstack/salt,37856,2015.8-bp-36784::2015.8,0,closed,Pending Discussion::,### What does this PR do? This PR backport #36784 to 2015.8 branch. It would be great to also fast-forward these change to everywhere including 2016.11 :smile: Thanks!,2086df21a42fec9288b3f9e03b191e6bde8706f2::673cf9bbfda0b9cb03709a63dc2dc9d9066edd44::
https://api.github.com/repos/saltstack/salt,37445,fix_import_error_2016.3::2016.3,0,merged,,"************* DO NOT MERGE FORWARD ************** This issue is fixed in Carbon ### What does this PR do? Fixes problem with Powershell Module import failure on non-server Windows OSs. There were too many conflicts with backporting https://github.com/saltstack/salt/pull/36983 ### What issues does this PR fix or reference? Related to: https://github.com/saltstack/salt/issues/36252 ### Previous Behavior Returns an ugly debug if you run `salt-call --local sys.doc none` on Non-Server Windows ``` [ERROR   ] Command 'Import-Module ServerManager' failed with return code: 1 [ERROR   ] output: Import-Module : The specified module 'ServerManager' was not loaded because no valid module file was found in any module directory. At line:1 char:1 + Import-Module ServerManager + ~~~~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo          : ResourceUnavailable: (ServerManager:String) [Import-Module], FileNotFoundException + FullyQualifiedErrorId : Modules_ModuleNotFound,Microsoft.PowerShell.Commands.ImportModuleCommand local: ---------- ``` ### New Behavior Checks the `osrelease` grain for the word `Server`. If not found, simply returns false instead of failing to import ServerManager. ### Tests written? NA",c0d5ebdd8a55e3aa77272dc23803a5bf5659b469::
https://api.github.com/repos/saltstack/salt,37428,issue_37388::2016.3,0,merged,ZZZBugfix - [Done] back-ported::,"Closes #37388 Unfortunately, the original regression went all the way back into 2015.8 so this might need to get backported there as well. :-/",6930d3c6143f2deb87e25bf353d8221b643ab01f::
https://api.github.com/repos/saltstack/salt,37416,fix_pub_data_regression::2016.3,0,merged,,https://github.com/saltstack/salt/pull/37115 backported a fix from develop into 2016.3 and inadvertently broke a fix that I had initially submitted in https://github.com/saltstack/salt/pull/36750. This commit corrects this regression.,3791166420155b93a22d1fdf46202e93199a878d::
https://api.github.com/repos/saltstack/salt,37358,2016.3.3_issue37355::2016.3,0,merged,Pending Discussion::,"### What does this PR do? Add backports symlink to thin.tgz. So included tornado dependencies could import backports.ssl_match_hostname ### What issues does this PR fix or reference? Fix/Workaround issue #37355 #34600 #27355 ### Tests written? No When we create this file it should be in a secure tempdir to prevent someone from injecting code from an unprivieged user account. So make a subdir first with the python tempfile module, and then make the symlink in there, then remove the tempdir when you are done with shutil.rmtree ::",2878180405481919ba00a91ef8b36176911d6bf0::7dc87ab7b8e5d287368c36988a9211b3f1f3d602::92366e646c5877628aadd56eb88484bc5a9ab0ae::4fbc5ddd06936edad354d65b2f9099eddc636b86::910da18bfd18a4b85aafc5158276bbe46d1f820a::
https://api.github.com/repos/saltstack/salt,37333,fix-state-salt-runner-return::develop,0,merged,,"### What does this PR do? Fix a bug where states.salt.runner() would always report success, even if the runner that was called raises an exception. ### How to reproduce the issue Create a simple test runner (`/srv/salt/_runner/testrunner.py`): ```python def test(): rasie Exception('This is an exception') ``` Now create a state that calls the runner (`/srv/salt/teststate.sls`): ```salt testrunner.test: salt.runner ``` Now execute the state with `salt-run state.orch teststate` ### Old behavior The orchestrator will report 1 successful state and 0 failures and display the error message as the changes of the ""successful"" state. (It will also report, that the changes are invalid, because the error message is not a dictionary, but it will show it nethertheless.) ### New behavior The state will now be marked as failed and the error message will be displayed as the comment if an exception is thrown from the runner. (Exceptions are already caught and the fail saved in `_low()` in https://github.com/saltstack/salt/blob/develop/salt/client/mixins.py but the value is currently ignored by salt.states.salt.runner()) ### Backporting issues This fix can't be backported directly, as information about successful execution is only passed to the function since carbon, because `low()` in salt.client.mixins (e.g. https://github.com/saltstack/salt/blob/2015.8/salt/client/mixins.py) only returns `data['return']` before carbon. Since carbon `data` is returned completely and `data['success']` can be checked to determine if any exceptions where raised by the runner. (see https://github.com/saltstack/salt/blob/carbon/salt/client/mixins.py) To backport an argument like `full_return` with default value `False` could be added to the functions salt.runner.cmd() and salt.client.mixins.low() (like there is now since carbon), which can then be set to `True` when calling the first function in salt.modules.saltutil.runner() and the function then returns the complete `data` dictionary. ### Functions called when calling salt.states.salt.runner() - states.salt.runner() = states.saltmod.runner() - runner() in https://github.com/saltstack/salt/blob/develop/salt/states/saltmod.py calls `saltutil.runner` - runner() in https://github.com/saltstack/salt/blob/develop/salt/modules/saltutil.py calls `salt.runner.RunnerClient.cmd()` - cmd() in https://github.com/saltstack/salt/blob/develop/salt/runner.py calls `super().cmd()` (inherited from `mixins.SyncClientMixins`) - cmd() in https://github.com/saltstack/salt/blob/develop/salt/client/mixins.py calls `self.low()` Before carbon: - low() executes the runner and returns only `data['result']` (=the return value of the runner). `data['success']` is set but never used Since carbon: - low() calls _low() which returns `data` completely if the parameter `full_return` is `True` (Which is the case if the runner is called with `states.salt.runner()`, see `runner()` in https://github.com/saltstack/salt/blob/develop/salt/modules/saltutil.py: it calls/returns `rclient.cmd()` with `full_return=True`) ### What issues does this PR fix or reference? This probably also fixes #36204, but I didn't test it.",384ce34a20c36a95868a91617c4c234a50e7d07d::53993023c4641e0591be644173b45ea234f48970::
https://api.github.com/repos/saltstack/salt,36823,pr-36806::2016.3,0,merged,ZZZBugfix - [Done] back-ported::,"This was done for the rest of the unit files in https://github.com/saltstack/salt/pull/35577 but I did not realize we maintain separate unit files for Debian. This incorporates #36806 from @l2ol33rt (which removes the use of `KillMode=process`), and also changes the unit type to `notify`. @rallytime This will need to be backported to the 2015.8 branch.",036d73f31b9c20fe0c7b72e6019dd36a2d7660e3::ddd44e9b133639c9fdc08b669a2bed97705900e8::0ccf789172974b9fd2343be3664f896f402108cc::fb6e545f78970f8e6dbbee84cccb595ab53702f1::
https://api.github.com/repos/saltstack/salt,36613,2016.3_36588_fixes::2016.3,0,merged,,### What does this PR do? - Generate pchanges only when `test=True` - Remove uneeded  `ret['pchanges'] = {}` which is set at top of `managed` function ### What issues does this PR fix or reference? - Fix for https://github.com/saltstack/salt/issues/36588 for 2016.3 ### Previous Behavior - Jinja templates were being rendered twice during file.managed. Once to generate pchanges (predictive changes) and once to actually generate the file. ### New Behavior - `pchanges` are only generated when `test=True` ### Tests written? No Tested with jinja template and file.managed on 2016.3 branch in Ubuntu 14.04 LTS.,d9da5cb2d4234b4893546eca57b42e045996cec3::
https://api.github.com/repos/saltstack/salt,36424,bp-36194::2016.3,0,merged,,"### What does this PR do? backport #36194: skip some mac_timezone tests ``` 15:58:54 [CPU:0.0%|MEM:64.1%|Z:0]  ... Invalid argument (bundled/zeromq/src/zmq.cpp:761) 15:58:54 Invalid argument (bundled/zeromq/src/zmq.cpp:761) 15:59:38 15:59:37,548 [salt.pillar.git_pillar                  :419 ][ERROR   ] Unable to fetch the latest changes from remote https://github.com/saltstack/pillar1.git: 'git fetch' returned with exit code 128 ... ``` The last two lines are repeated indefinitely.  This seems related to what @cachedout was saying about time changes [flustering](https://github.com/saltstack/qa/issues/242#issuecomment-247738776) pycrypto.",a20a2148bf72dff94359b5cc5183a2e9620a3ca5::
https://api.github.com/repos/saltstack/salt,36383,dockerng-utils-be-explicit::carbon,0,merged,,This is possibly causing problems with one of the dockerng unit tests on Ubuntu 12. Being explicit the use of identical_signature_wrapper may help clear up some of the mocking problems with backports and docker. I also changed the sys.version_info option to use the six.PY2 global. This is more consistent with other salt files and essentially does the same thing and avoids an additional import.,9de74ebb60ee14383b7ea4d309c7a7eb769d8f86::
https://api.github.com/repos/saltstack/salt,36247,issue36150::carbon,0,merged,,"Resolves #36150. In the process of writing integration tests for this new runner function, I discovered two bugs that were not caught by our existing fileserver integration tests. These have been addressed in #36244 and #36245 (both of which were opened against the `2015.8` release branch), but both fixes are also included in this PR as well (as I needed them in place to ensure that my new tests would pass. I also took the liberty of beefing up the existing fileserver runner integration tests to check the content of the return as well as the type. I may yet backport these fixes into 2015.8, but I'll need to confirm that they'll work as expected before I try this, as some recent changes to salt-testing (and `tests/integration/__init__.py`) uncovered some deficiencies in the `run_run_plus` helper which we use to obtain return data from runner functions in the test suite. Not to mention that both #36244 and #36245 will need to be merged before I can backport the tests in the first place.",37c48472d639e6af5eb66f1bc9f69d5204299905::26c426f22a7ff3ccdcfac27a06bca003dd9ec31f::6722ad9ecf39cd2664663e4b9f8bb82ca83dfdfb::d3e9c4c5fbab3c6af0cad988a9af7dff9918b229::322047a8449bc24bc65c67a125433e4e382e9a3b::ae973a14fbb6845cb1e8eecc6d6ad4be1bea5314::b7a1a678286a6f087ad2c83bb7ff760a82264516::38e700c9779073c609d912669d0a13f3f26461da::
https://api.github.com/repos/saltstack/salt,35855,salt-cloud-fix-sock_dir::2016.3,0,merged,ZZZBugfix - [Done] back-ported::,### What does this PR do? It fixes path to the Master's socket directory for Salt Cloud to be able to fire events. ### What issues does this PR fix or reference? The regression was introduced by PR #35483. I think this fix should be backported to `2015.8` branch as well. ### Previous Behavior Salt Cloud probes wrong socket directory: /var/run/salt/master/**master**/ ``` [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master/master_event_pub.ipc [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master/master_event_pull.ipc [DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master/master_event_pull.ipc ``` ### New Behavior Now the path is correct: ``` [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc [DEBUG   ] Initializing new IPCClient for path: /var/run/salt/master/master_event_pull.ipc ``` ### Tests written? No,a662ea53374753337b900a0b18a1824c266c4136::
https://api.github.com/repos/saltstack/salt,35682,backport-35659::2016.3,0,merged,,"### What issues does this PR fix or reference? Since SaltStack has merged PR #35059 into the `2016.3` branch, this is a backport of PR #35659 .",78d16a80570ee0db2a25940c0ba3cf3b1ded1391::
https://api.github.com/repos/saltstack/salt,34607,isbm-config-reading-exit-2016.3::2016.3,0,merged,pending-changes::,Backport of https://github.com/saltstack/salt/pull/34604,2cf696671fa49a2ac880b32e86911c525ca59fb7::575767022b4544cb702df89cc7e4afb9fc4a21ae::c5de6c8c4ad94c2e9b58b9bc3d844aa2a00049fa::0c2d3511c98a254bb0f22a3e714efbdd29c6a3ea::6b660678fadf7c05e9d1571bedc1991e5d6bcb3c::23d1031a098ae8b23a90c48fae8901faba2dd149::e5f43e671190ced30e20a00cd0740b75cb2c16d0::abd10b5782ae735ff0540e9052bc498076890895::fb7542f920276689e0db30061df632d8e745985a::
https://api.github.com/repos/saltstack/salt,34606,isbm-config-reading-exit-2015.8::2015.8,0,merged,pending-changes::,Backport of https://github.com/saltstack/salt/pull/34604,5e8c0c6bdbaf565f14b24c482cfe3cdf8b9f20d8::30ed728d05bfae358eb8bb09b7acf5a36de4951f::43d965907caf7b52dd5a43bd3dabff190cc0ee78::a84556e5960d88f30d687a82908bc628bd839eb1::67faa56bf14976e7310887ee39c646968895e1ee::0e65cfec91f6bf94a54e67f1044c40ebc47e95f0::86991946475f3edb2e92d8d9637d0e75aeedcbc9::6fc677f1777ed15488bb0e7adf9a4056906ade5c::5f5b802c0ca2a2ba58595ac1c40e53186cf40092::
https://api.github.com/repos/saltstack/salt,34333,bp-33734::2016.3,0,merged,,Back-port #33734 to 2016.3 I submitted the original backport (#34304) against the develop branch accidentally. This PR is against the 2016.3 branch. Refs #33588,5fed5d7e51e81c1a20f152b0db1bcc501a8dac31::
https://api.github.com/repos/saltstack/salt,34009,bp-33948::2016.3,0,merged,ZZZBugfix - [Done] back-ported::,"### What does this PR do? Back-ports #33948 to the 2016.3 branch. This also adds some logic to detect if a returner does not have the `minions` kwarg present in it's `save_load` function, which can happen when users are using custom returners. Instead of updating the release notes for Carbon as in the original PR, this adds a note to the 2016.3.2 release notes. A separate PR for 2015.8 backport will follow. ping @thatch45 and @cachedout",180c312715f7d95a587e44aa755315c4456eb4d1::5f696082e3ccea010aaa644d6acdb9ed81ade7e3::c776d2d795ff83ca9a319e0a8641cf30c72668d7::239af9ae5e87169c165c6ae37174fbd900ff3aa8::
https://api.github.com/repos/saltstack/salt,33682,backport_33599-2016.03::2016.3,0,merged,,### What does this PR do? backport #33599 to 2016.3 ### What issues does this PR fix or reference? #32916 ### Previous Behavior see #33599 ### New Behavior see #33599 ### Tests written? No,f6daa8940ce0cbd84e1ecf1f58d15fdcf9d8f9c5::
https://api.github.com/repos/saltstack/salt,33396,issue-33393::2015.8,0,merged,Pending Discussion::,"### What does this PR do? This PR fixes a broken pip version check that was introduced in 2015.8.4 and also contains a backport of a commit by @byronclark from develop in which duplicated code was removed. ### What issues does this PR fix or reference? #33393 ### Tests written? No It should be noted that I am not sure if this is the best way to deal with this problem. Maybe it would make sense to test for the existence of `pip.__version__` explicitly, but optimistic imports with exception handling might not be a bad idea.",291a3e21fabb48794b9a086897aa1795d5c0f4d1::57e0475cd4560c1ef36b28ada0cee468f185d58e::
https://api.github.com/repos/saltstack/salt,33314,fix-iptables-match-set::2015.8,0,merged,,"### What does this PR do? Function is expecting two arguments. But after processing state only one parameter (it contain two words) is pushed into list of options. This patch reverts the parsing of ""iptables --match-set"" to the behaviour of salt v2014.*. ### What issues does this PR fix or reference? This is a backport of #28325 Closes #23643 This PR is similar to #33301, which fixes this issue for the v2015.5 branch",50b15844572425b9b5c953fdde7978862ccf7321::
https://api.github.com/repos/saltstack/salt,33301,fix-iptables-match-set::2015.5,0,merged,,"### What does this PR do? Function is expecting two arguments. But after processing state only one parameter (it contain two words) is pushed into list of options. This patch reverts the parsing of ""iptables --match-set"" to the behaviour of salt v2014.*. ### What issues does this PR fix or reference? This is a backport of https://github.com/saltstack/salt/pull/28325 Closes #23643",9da422579f6c342f53119ce0d08b7c611acc4817::
https://api.github.com/repos/saltstack/salt,33245,bp-33244::2015.8,0,merged,,"To avoid leaving develop in a broken state, #33244 was opened to fix what was broken by #32238. This pull request backports the logging fix to the earliest branch where it needed to go (2015.8).",3ab9be5219c391e725eb820777536e3006c60b5c::
https://api.github.com/repos/saltstack/salt,32851,fix_23714_2016.3::2016.3,0,merged,,"### What does this PR do? backport of #32732 to 2016.3 ### What issues does this PR fix or reference? #23714 -- force flag not being respected ### Previous Behavior if force=true and destination file existed and file hash matched source, file was not copied ### New Behavior source file is copied to destination even if it already exists and hashes match ### Tests written? No",498ed7782eda6846bb43eee8984c07c1d98ca7d6::
https://api.github.com/repos/saltstack/salt,32848,fix_23714_2015.05::2015.5,0,merged,,"### What does this PR do? backport of PR #32732 to 2015.5 to fix #23714 ### What issues does this PR fix or reference? #23714 ### Previous Behavior If force=True, file.copy would not copy the file if the destination file existed and hash matched the source ### New Behavior If force=True and destination file exists, file will be copied even if hashes match ### Tests written? No",721051cb87d944af4e422cb3252278845360dfbb::
https://api.github.com/repos/saltstack/salt,32847,fix_23714_2015.08::2015.8,0,merged,,"### What does this PR do? backport of #32732 to fix issue #23714 -- when force=True, copy the file even if it already exists ### What issues does this PR fix or reference? #23714 ### Previous Behavior if force=True, file.copy state did not copy the file if the file existed and the hashes matched ### New Behavior If force=True and the dest file exists and hash matches the source, still copy the file ### Tests written? No",2bcbbcdea810609ee6c71621aa6de7da93269311::
https://api.github.com/repos/saltstack/salt,32813,apt_repofile_comments::develop,0,merged,ZZZBugfix - [Done] back-ported::,### What does this PR do? Adds comments as an option when setting an apt repo file. ### What issues does this PR fix or reference? #32605 ### Previous Behavior **state** ``` yml {% set codename = grains.get('lsb_distrib_codename')|lower %} repository_pgdg: pkgrepo.managed: - humanname: {{ codename }}-backports - file: /etc/apt/sources.list.d/pgdg.list - refresh_db: True - clean_file: True - name: deb http://apt.postgresql.org/pub/repos/apt/ {{ codename }}-pgdg main - key_url: https://www.postgresql.org/media/keys/ACCC4CF8.asc - comments: - 'This is a comment' ``` **repo file** ``` bash deb http://apt.postgresql.org/pub/repos/apt trusty-pgdg main deb http://foo.bar.org/pub/repos/apt trusty-pgdg main #This is a comment ``` **result** ``` yml ubuntu: ---------- ID: repository_pgdg Function: pkgrepo.managed Name: deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main Result: True Comment: Package repo 'deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main' already configured Started: 13:52:48.847907 Duration: 54.242 ms Changes: Summary for ubuntu ------------ Succeeded: 1 Failed:    0 ------------ Total states run:     1 ``` **repo file** ``` bash deb http://apt.postgresql.org/pub/repos/apt trusty-pgdg main deb http://foo.bar.org/pub/repos/apt trusty-pgdg main #This is a comment ``` Note that the file remains unchanged ### New Behavior ``` yml ubuntu: ---------- ID: repository_pgdg Function: pkgrepo.managed Name: deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main Result: True Comment: Configured package repo 'deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main' Started: 13:54:36.299121 Duration: 18389.816 ms Changes: ---------- line: ---------- new: deb http://apt.postgresql.org/pub/repos/apt trusty-pgdg main #This is a comment old: deb http://apt.postgresql.org/pub/repos/apt trusty-pgdg main Summary for ubuntu ------------ Succeeded: 1 (changed=1) Failed:    0 ------------ Total states run:     1 ``` **repo file** ``` bash deb http://apt.postgresql.org/pub/repos/apt trusty-pgdg main #This is a comment ``` Note that here we are using  `- clean_file: True`. Setting `- clean_file: False` results are: ``` yml ubuntu: ---------- ID: repository_pgdg Function: pkgrepo.managed Name: deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main Result: True Comment: Configured package repo 'deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main' Started: 17:16:07.281609 Duration: 18201.019 ms Changes: ---------- line: ---------- new: deb http://apt.postgresql.org/pub/repos/apt trusty-pgdg main #This is a comment old: deb http://apt.postgresql.org/pub/repos/apt trusty-pgdg main Summary for ubuntu ------------ Succeeded: 1 (changed=1) Failed:    0 ------------ Total states run:     1 ``` **repo file** ``` bash deb http://apt.postgresql.org/pub/repos/apt trusty-pgdg main #This is a comment deb http://archive.canonical.com/ubuntu trusty partner #This is a comment ``` ### Tests written? No,fea7a72980cb976cf2d4bd84a6aaf72aa2527c60::
https://api.github.com/repos/saltstack/salt,32763,2016.3::2016.3,0,merged,,"### What does this PR do? backport this to 2016.3 so that they nxos proxy minion can be used as a drop in. ### Tests written? No The Random module can lead to non alpha numeric characters in the password.  Since we also use this for creating the salt, some devices cannot have these extra characters in their salts, so allow to turn this feature off as needed.",2efcfaae0c21370154a68a0cd1935e61fa8af9e6::
https://api.github.com/repos/saltstack/salt,32682,fix-routes-redhat::develop,0,merged,ZZZBugfix - [Done] back-ported::,"Fix routes for redhat < 6 - choose the right template. __grains__['osrelease'][0] is a string... therefore the condition does not work: ``` >>> ""5"" < 6 False ``` Can you backport to 2015.8 (cherry-pick)? Thank you",c68c6169e902b639a72446ec62e13e4733880427::
https://api.github.com/repos/saltstack/salt,32663,issue_30780::2016.3,0,merged,,Partial backport of #31319 Resolves #30780,0061d4cb38e780b1008ce78c3a1fd7e7a15849d7::
https://api.github.com/repos/saltstack/salt,32583,fix-shell_incompat::2016.3,0,merged,,"Debugging some salt-ssh stuff, targetting Debian, some errors cropped up in the debug log. I don't think they're fatal as salt-ssh still works fine, but why not fix them. `[[` is a bash-only feature. `/bin/sh` is not always bash, so I replaced it with a grep. Calling `$py_cmd` without checking if it's a valid command will cause an early exit. To my knowledge `command -v` is the most portable way to check if a command is callable. This change should possibly be backported to older releases.",1eec8ee549181376f3d125138ef6568907eb33b2::ce06cc1ae6f418448f97a75b37d22cc2f054df1b::
https://api.github.com/repos/saltstack/salt,31857,solarish_shadow::2015.8,0,merged,,"### What does this PR do? salt.modules.solaris_shadow is missing del and gen_password. ### Effected branches - 2015.8 - 2016.3 (developed and tested with this one) - develop ### What issues does this PR fix or reference? n/a ### Previous Behavior Missing functions ### New Behavior Function copied from the 'generic' shadow module. Copied to solaris_shadow and tested on SmartOS on multiple zones using the 2016.3 branch. Fix backported to 2015.8 to for PR. ### Tests written? - [ ] Yes - [X] No Let's adjust this and the one below for the 2015.8 branch, please. ::Will fix it once I get home today, I though I did it but must have forgotten it in the rebass to 2015.8. Next release will be 2015.8.8? ::The 2015.8.8 release is in testing right now, so 2015.8.9 would be the way to go. ::",d768ed25b4ed6e2e798438087a3e5c20f902e443::3e25f70968925c8efeed16ffb8c4343b04873f8f::38231303f3ddd2e2070ee357a0a79041bd1e9d66::
https://api.github.com/repos/saltstack/salt,31684,versionadded-rdp::develop,0,merged,,### What does this PR do? Adds `versionadded` tags to new rpd functions. ### What issues does this PR fix or reference? The new functions were added in #31533. ### Previous Behavior Didn't realize these functions were new until attempting to backport the doc formatting fix in #31607. ### New Behavior Displays when the functions were added. ### Tests written? - [ ] Yes - [x] No,035b64554ff9733c9ed73433cb578cf0e968e41a::
https://api.github.com/repos/saltstack/salt,31536,remove-jessie-backports-from-raspbian-install::2015.8,0,merged,,"Binary packages from stock debain repo (http://httpredir.debian.org/debian) are not armv6 compatible so should not be installed on Raspberry Pi v1 (A, A+, B, B+). Rasbian doesn't have jessie-backports so safer just to install python-tornado from stretch. See #24955 I think it's still better to go with `jessie-backports` on pure Debian. So, please make the case for _Debian_ and _Raspbian_ here, like: **Debian**: ``` apt-get install python-zmq python-tornado/jessie-backports salt-common/stretch ``` **Raspbian**: ``` apt-get install python-zmq python-tornado/stretch salt-common/stretch ``` ::Trailing whitespace... ::",6e338e26010bc6b732c07b6ea267219fe569cadc::e48900ac551e9edefbd180e3f0b691792f500fa4::
https://api.github.com/repos/saltstack/salt,31279,develop::develop,0,merged,ZZZBugfix - [Done] back-ported::,So that we can use _pillar from the fileserver Redo of #31249 This also needs to be marked to be backported to 2016.3 once 2016.3.0 is tagged.,2e1d69e469650e42ead580a86431f2769551653c::
https://api.github.com/repos/saltstack/salt,31157,develop::develop,0,merged,ZZZBugfix - [Done] back-ported::,On ubuntu you can not append the charmap. root@ubuntu:~# locale-gen fr_FR.UTF-8 UTF-8 ; echo $? 1 root@ubuntu:~# locale-gen fr_FR.UTF-8 ; echo $? Generating locales... fr_FR.UTF-8... up-to-date Generation complete. 0 Can you backport to v2015.8? Thanks,07840d7d31962c181387a9afeaef6dcd72094925::
https://api.github.com/repos/saltstack/salt,30897,cloudlinux-grains-fix::develop,0,merged,ZZZBugfix - [Done] back-ported::,"This will now still replace ""CentOS Linux"" with ""CentOS"" while leaving ""CloudLinux"" unmodified. Fixes #28951 Please also backport this to 2015.5 which is the actual stable version on CloudLinux. Thanks",378e54638d84a9020094e1ce1f78891cc9faa891::
https://api.github.com/repos/saltstack/salt,30888,backport-30797::2015.8,0,merged,,This is a backport of #30797 so this fix will be in the next release of 2015.8,849b94ed73d07fc0cbcd631bf77065fb57f5ca36::68b51be869f1152c74f018a50eddc6a0e4d8fedf::413c47a45fdd0deade0e8e80e2b4f0286063d1ec::
https://api.github.com/repos/saltstack/salt,30760,2015.5::2015.5,0,merged,,"It seems, that #27952 was not backported to neither 2015.5 nor 2015.8, so here the pull request for 2015.5. Maybe there is a specific reaseon, why it was not done yet?",dc4256f7df2d8f59f41782bc58ce9e77387ce354::
https://api.github.com/repos/saltstack/salt,30720,fix-pem-managed-changes::2015.8,0,merged,,"This fixes a bug where x509.pem_managed does not return changes. Also backports typo fixes. If we have changes, we also want the changes dictionary in the state output when `test=True`. Can you move these lines to above the `if __opts__['test'] is True` check? ::",e611f0269c9e3802e9ead4c31ef7d36719d57d48::5c28efa9d3458c174b0b3b8a5af4dd624d8fa3b2::
https://api.github.com/repos/saltstack/salt,30589,2015.5-2015.8::2015.8,0,merged,,"This fixes a bug found thanks to test breakage, which was introduced by my recent backporting of DNF support into 2015.5.",2586f71bcfc220fbdaa32b1b5727e4d8a75d448b::1aafd4c5b56e117dc8876e45d3b533440f653783::03c51bb54dca63d926168f94aa8adf2fcbb6ad6f::8e56be7f4c77ccf450994089d0b9ddd0a3683ae9::410da789f90b91fb428c2d9eeb80cbb8c10de6a5::a823e21428968011c8e2ec5e37b6f7038bef0eaf::d649551fbfec5c7c1500b54ef624c9a44b17e835::
https://api.github.com/repos/saltstack/salt,30376,fix/flo-dir::2015.8,0,merged,,"In release `2015.8.3`, in `salt.config`, `FLO_DIR` should be like it is at [92e0e90:salt/config.py#L61](https://github.com/saltstack/salt/blob/92e0e90e98b439175df41f862caf737baa05e9fc/salt/config.py#L61). But somehow, [this commit](https://github.com/saltstack/salt/commit/d6192cd7e4c1be47814ae2427cecb17fb57ebf20) from `develop` seems to have been [backported (read: cherry-picked)](https://github.com/saltstack/salt/commit/2afbe6803c0a05b6184f6b5c880c842f535f0441). This commit was supposed to apply after `salt/config.py` was [made its own package](https://github.com/saltstack/salt/commit/e508088a2ab01ffc97f1da359c93992553d6be4f), but [the backported commit](https://github.com/saltstack/salt/commit/2afbe6803c0a05b6184f6b5c880c842f535f0441) applies before that event, thus breaking `FLO_DIR`. TL;DR: Note the branches, tags, and the file paths at these two commits: | Status | Commit | | --- | --- | | Good ✔ | https://github.com/saltstack/salt/commit/d6192cd7e4c1be47814ae2427cecb17fb57ebf20 | | Bad ✖ | https://github.com/saltstack/salt/commit/2afbe6803c0a05b6184f6b5c880c842f535f0441 |",534879e79fc929f92d109239e5cc14b4285a2418::
https://api.github.com/repos/saltstack/salt,30306,solaris-warn::develop,0,merged,,by using prtdiag to get the information ;) ``` bash [root@soth /opt]# /opt/salt/bin/salt-call --local grains. -l debug [DEBUG   ] Reading configuration from /opt/salt/etc/minion [DEBUG   ] Using cached minion ID from /opt/salt/etc/minion_id: soth.acheron.be [DEBUG   ] Reading configuration from /opt/salt/etc/minion [DEBUG   ] Please install 'virt-what' to improve results of the 'virtual' grain. [DEBUG   ] Configuration file path: /opt/salt/etc/minion [WARNING ] Insecure logging configuration detected! Sensitive data may be logged. [DEBUG   ] Reading configuration from /opt/salt/etc/minion [DEBUG   ] Please install 'virt-what' to improve results of the 'virtual' grain. [DEBUG   ] LazyLoaded jinja.render [DEBUG   ] LazyLoaded yaml.render [DEBUG   ] LazyLoaded jinja.render [DEBUG   ] LazyLoaded yaml.render [DEBUG   ] LazyLoaded grains.items [DEBUG   ] LazyLoaded nested.output ``` ``` yaml local: ---------- computenode_sdc_version: 7.0 computenode_vm_capable: True computenode_vm_hw_virt: none computenode_vms_running: 1 computenode_vms_stopped: 1 computenode_vms_total: 1 cpu_flags: - popcnt - cx16 - sse3 - sse2 - sse - fxsr - mmx - cmov - amd_sysc - cx8 - tsc - fpu cpu_model: QEMU Virtual CPU version 0.14.1 cpuarch: amd64 dns: ---------- domain: acheron.be ip4_nameservers: - 172.16.10.1 ip6_nameservers: nameservers: - 172.16.10.1 search: domain: acheron.be fqdn: soth.acheron.be fqdn_ip4: - 172.16.10.227 fqdn_ip6: gid: 0 gpus: groupname: root host: soth hwaddr_interfaces: ---------- vioif0: 0:15:0:5:d9:c1 id: soth.acheron.be ip4_interfaces: ---------- lo0: - 127.0.0.1 vioif0: - 172.16.10.227 ip6_interfaces: ---------- lo0: - ::1 vioif0: - fe80::215:ff:fe05:d9c1 - 2001:6f8:1480:10::234 - 2001:6f8:1480:10:215:ff:fe05:d9c1 ip_interfaces: ---------- lo0: - 127.0.0.1 - ::1 vioif0: - 172.16.10.227 - fe80::215:ff:fe05:d9c1 - 2001:6f8:1480:10::234 - 2001:6f8:1480:10:215:ff:fe05:d9c1 ipv4: - 127.0.0.1 - 172.16.10.227 ipv6: - ::1 - 2001:6f8:1480:10::234 - 2001:6f8:1480:10:215:ff:fe05:d9c1 - fe80::215:ff:fe05:d9c1 kernel: SunOS kernelrelease: 5.11 locale_info: ---------- defaultencoding: UTF-8 defaultlanguage: en_US detectedencoding: UTF-8 localhost: soth manufacturer: Joyent master: salt mem_total: 2047 nodename: soth num_cpus: 2 num_gpus: 0 os: SmartOS os_family: Solaris osarch: amd64 osfullname: SmartOS osrelease: 20151117T180556Z osrelease_info: - 20151117T180556Z path: /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit:/usr/bin:/usr/sbin:/smartdc/bin:/opt/smartdc/bin:/opt/local/bin:/opt/local/sbin:/opt/smartdc/agents/bin:/bin:/sbin:/usr/local/bin pid: 3524 productname: SmartDC HVM ps: /usr/ucb/ps auxwww pythonexecutable: /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/salt-call pythonpath: - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/library.zip - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/salt-2015.8.0_661_ga3abab1-py2.7.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/enum34-1.0.4-py2.7.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/raet-0.6.3-py2.7.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/gitdb-0.6.4-py2.7-solaris-2.11-i86pc.64bit.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/yappi-0.94-py2.7-solaris-2.11-i86pc.64bit.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/timelib-0.2.4-py2.7-solaris-2.11-i86pc.64bit.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/esky-0.9.8-py2.7.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/smmap-0.9.0-py2.7.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/tornado-4.2.1-py2.7-solaris-2.11-i86pc.64bit.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/libnacl-1.4.3-py2.7.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/six-1.9.0-py2.7.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/certifi-2015.4.28-py2.7.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/pyzmq-13.1.0-py2.7-solaris-2.11-i86pc.64bit.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/backports.ssl_match_hostname-3.4.0.2-py2.7.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/ioflo-1.3.8-py2.7.egg - /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/GitPython-0.3.2c1-py2.7.egg pythonversion: - 2 - 7 - 9 - final - 0 saltpath: /opt/salt/bin/appdata/salt-2015.8.0-661-ga3abab1.solaris-2_11-i86pc_64bit/salt-2015.8.0_661_ga3abab1-py2.7.egg/salt saltversion: 2015.8.0-661-ga3abab1 saltversioninfo: - 2015 - 8 - 0 - 0 server_id: 1087124336 shell: /usr/bin/bash uid: 0 username: root uuid: 618a01b8-c37b-473f-8cdb-ca2a66d6adf7 virtual: kvm zmqversion: 4.0.5 ```,fb96740ff64b28b0f21371164504bab9dfd53a3b::58e8afd37f535046cc56b1a914d2b3efb7f70b2e::2a365d0cc5f4e0ffb0230a7f5109381625a5b1a9::
https://api.github.com/repos/saltstack/salt,30179,bp-26962::2015.8,0,merged,,"It looks like the person that opened this pull request initially intended for it to be included in a 2015.8 point release, but mistakenly opened the pull request against develop. This PR backports this fix to the 2015.8 branch so that it will appear in 2015.8.4.",a2ec72166126062c7bc80473465f52f7d857449d::08f2021f5202bf66aaf81f74b6d70938150ff534::
https://api.github.com/repos/saltstack/salt,30062,develop::develop,0,merged,Release Notes::ZZZBugfix - [Done] back-ported::,"PR for #29601 that adds a new master configuration option of pillar_merge_lists: bool (default True) to readd backwards compatible of merging lists, while still maintaining the option to overwrite them. The modification of these default values concerns me a little bit because I'm worried that it might regress other functions that use this one. Is this necessary? ::Could you explain why these tests are removed? I'd definitely like to keep them around if possible. ::Commit 4af5b5c initially added the merge_lists=bool argument which caused the regression noted in #29601. This simply would set it back to True, as if it wasn't present to begin with and instead adds a new master_config opt of pillar_merge_lists (default True). In this way, it fixes the initially regression while still allowing someone to opt to not merge the lists by setting pillar_merge_lists: False in /etc/salt/master ::They were dropped because there'd be no pillar_source_merging_strategy of recurse_list as it would no longer be necessary. ::I agree with @cachedout's comment. ::@s0undt3ch Given that commit 4af5b5c33f8b082797eb5827f59c4681ff9fba03 added this option and set the default of merge_lists=False, a non-existent option until that commit, setting it to True by default would in essence, revert things back to the original functionality where lists were merged unless otherwise so chosen via a new configuration option of pillar_merge_lists in the master config.  Leaving this at False is much more likely to cause regressions imo, than leaving only some changes set back to True or in other words, the behavior prior to commit 4af5b5c33f8b082797eb5827f59c4681ff9fba03. Sorry if my comment is a bit confusing. ::Nope, that clarified it for me and the reasoning is good. Thanks! ::the default is `False`, isn't it? ::`merge_lists=True` doesn't seem to be tested here at all, or did I missed something out? ::Correct. @seanjnkns would you consider opening a quick PR to fix that mistake in the docs? 2015.8 would be a good target, since this was backported to 2015.8. ::@basepi, I did PRs 30602 and 30609 this morning to address this which has already been merged. ::Perfect, thank you! ::",41353b7ab3c1877f1b8802ed0c4efa317215a02e::f6a7aec3105a2a690bc26778a1dc52b50c4d9486::0ffea31666c0db895a2f56c66421f448ab71474c::1d7ee7bed25783af0eda07f77f061083bff9b31d::fb6e895bf024a19b07fc7840644f4ce55cadee1c::8fc656b6f2f55d207ea10fe686b05cea801fd497::
https://api.github.com/repos/saltstack/salt,30025,boto_tests::2015.5,0,merged,Execution Module::Platform::,"Similar to #29725. Though, some of the tests are different, due to the older branch. I'm not considering this a backport because of that.",e706642152b7a6e1482f7b9e30f340f9139c6652::
https://api.github.com/repos/saltstack/salt,30017,fix-alternatives_install::develop,0,merged,ZZZBugfix - [Done] back-ported::,"`salt.states.alternatives.installed` calls `salt.modules.alternatives.check_installed` to check if an alternative is already installed. However, this module function only returns `True` if the given alternative is the currently symlinked alternative. If I have a system with both vim and vim-tiny installed, I want to have a `alternatives.installed` state for both of them - but I can't, because the `check_install` function assumes I want both of them to be the currently selected alternative. I'm not 100% sure if this is a breaking change or a bugfix. I currently have a state that uses `alternatives.installed` and it reports a change every time I run the highstate. If this can be considered a bugfix, it should be backported to 2015.8.",4c9d893f98b042c179c92325b08c64e9cd64f4c8::
https://api.github.com/repos/saltstack/salt,29237,module-network-fixes::develop,0,merged,Execution Module::Platform::Tests Passed::ZZZBugfix - [Done] back-ported::,"Since it was actually giving me some issues when testing some stuff... I fixed them all up so I could continue. Fixes the following: - #29236 - #29235 - #29234 -  #29231 Partially fixes: - #29233 - #29232 Similar fixes can probably be done for *BSD also but I do not have test systems for those at hand. ``` bash [root@core /opt/local/salt_dev/_mod]# /opt/local/salt/bin/salt-call --local network.active_tcp ``` ``` yaml local: ---------- 1: ---------- local_addr: 2001:6f8:xxxx:yyyy::120 local_port: 22 remote_addr: 2001:6f8:xxxx:yyyy::1 remote_port: 3463 2: ---------- local_addr: 2001:6f8:xxxx:yyyy::120 local_port: 22 remote_addr: 2001:6f8:xxxx:yyyy::1 remote_port: 19744 ``` ``` bash [root@core /opt/local/salt_dev/_mod]# /opt/local/salt/bin/salt-call --local network.default_route inet ``` ``` yaml local: |_ ---------- addr_family: inet destination: default flags: UG gateway: 172.16.yy.1 interface: igb0 netmask: ``` @sjorge, `get_bufsize`. ::@sjorge, there should probably be a blank line above this one. ::@sjorge, is there a reason the second condition is predicated upon the platform being `SunOS`? ::_routes contain the output of netstat, the values depends on the platform. As far as I know only SunOS variants have the addr_family field which is either inet or inet6. In the case of SunOS de default route is identified by 'default' for both inet and inet6. If family is set we need to filter on them, for SunOS we still get both inet and inet6 by just filtering on destination. So for SunOS we also check the addr_family property. ::@sjorge, I think we should backport this to 2015.8, so this should be `.. versionchanged:: 2015.8.4` if you don't mind. ::",f35cdc66561c7f9dda660bad39ffeffa30f0b586::12c579e2ae14441ea7b99018abc9036a5b68add1::626d906997ed2cdb70e0b4083dc966eddac7bd66::e51970cf87a1ba1ce0e13bc311e8d05abf365f9e::a9cec746d799e78a2a4bddace59baf053338fd71::96faf10b3e2e4c59c66f4caea6616d28d5a083b8::acd661287dfc65dab3cea23bca71ba74f03986a2::40664b2cff85e89cb1e079873ed2717720c44679::99dc99825cac755658c01613653e12b84ba31077::cd1582214d6dffc3e499a6d203a54b0f6551c129::cbded94f1a89258c1d8cacd543a5ab64f0ee4319::
https://api.github.com/repos/saltstack/salt,28932,fix_28928::2015.5,0,merged,Pending Discussion::Platform::State Module::Tests::,"Fixes: #28928 Updated `states/user.py` to work with the backported win_useradd.py This is a regression caused by: #28627 Can you extract this section into a helper function? This will help unit testing a lot. ::This is not something that could be abstracted out into a helper function, since it is specifically used to create relative mappings of arguments to the specific user management backends ::",0653a0488755dca0ac8b851140b3c1fd28167787::
https://api.github.com/repos/saltstack/salt,28903,hue_dunder_proxy::2015.8,0,closed,Proxy Minion::RIoT::pending-changes::,It has to be a space around `+`. ::Bwuh? ::,3dae8e6e7ddffdf2e1ea03725c92dc08d908dddf::67922ed6d55d4964a7ccb88f0738c977da9fed12::e1d0a1dc236a3bacb4c8e7af20c68452fb4c162d::
https://api.github.com/repos/saltstack/salt,28294,fix_bad_param_default_val::2015.8,0,merged,,- caused by #25668 - seems to need test cases! - please backport! ``` ---------- ID: haste_server_started Function: module.run Name: http.query Result: False Comment: Module function http.query threw an exception. Exception: 'NoneType' object is not iterable Started: 12:20:14.064283 Duration: 2.227 ms Changes: ```,4852c03d089a6c09c89fd1095e282e2381ac9acc::
https://api.github.com/repos/saltstack/salt,28284,smartos_virt::develop,0,merged,Execution Module::Platform::Release Notes::,"This is the last bit to close #26507 - smartos_virt (virt) now used smartos_vmadm internally instead of calling vmadm directly - get_macs now also works for vms that are not running (as a side effect of the above) - swapped out uuid for domain to be consistent Opened against develop as suggested in #26507, no functionally has changed so it could be a backport candidate for 2015.8 branch also.",ef486e40d380b51f46bbf579bb99354e0bc00440::d7ff0e11dffdbb94051f392754d2d5dc2097d11b::27e7b0220c801405ae87311194668c27faf2d25a::c295e6c6d1bd5f3bf3678af78f6ade0263f147cb::4050284eaad5a17e7169bcfb2413ba17c4859026::d33a24985bf42e9f921e8206cb8dc3c6d23c9691::e0573b12b2631589d0338d09071ea3b90a5a093d::e0e2571f70578936bbdc2898fe50265262e9d2c9::9da1ec4d929b9b789fa9ce9d3f8eb83cddbfd3a6::cd7978235555631fa39e6a0f1bc6bc7ac24f1edc::7ef18f4a18988d3acf2a9ab676ccbd032c3423c3::e389c2503f2aab12452e0f9e7a1049357ea40eca::
https://api.github.com/repos/saltstack/salt,28138,bp-28130-sizes-only::2015.5,0,merged,RIoT::Salt-Cloud::,Back-port #28130 EC2 Sizes Only portion to 2015.5 Part of #28130 was a feature addition and part of it was a bug fix for #28101 to make sure the EC2 driver is displaying current sizes. This backports the bug fix portion of the original PR.,667f5e669febc5c7523ba59ac89331c5cd88bf4d::37e4ed58a9561d51825b141dcc3a158c4ba44cdb::6ab31e18865e475fb454e2c9eeee1b967cbff7cf::
https://api.github.com/repos/saltstack/salt,27791,2015.5-postgres-user-groups-backport::2015.5,0,merged,Execution Module::Platform::State Module::,- backport of postgres_user groups functionality - better change reporting for groups change . ``` Changes: ---------- SomeUsername: True ``` ==> ``` Changes: ---------- SomeUsername: ---------- groups: - foo - bar ```,8712bce91a78d0ee7f77e9983ace400ee97bc01a::bc90c5bffecfc2f531e2d5237f8daf19262dbc04::2caf1d21d6d0f44dfb7859cf325e4d9101c82d2a::
https://api.github.com/repos/saltstack/salt,27565,boto_elb_state_vpc_backport::develop,0,closed,pending-changes::,Resolves #27559 backport of my fix in develop,7956b360766c1fb9cca884d4a355c37123f77de4::82c5b1d8fd540929d6c9fbdfb257c681d7680b4c::2c58bab97766e006113c2ba9b3c933ab18478db4::cf0624e8b822df73c163478057403765c2cd2af5::62b6495358949efdebc76adb1552fec17cb7bd7a::36141d226ee6a9ffcea5d22e8e26b6d7c2ac298a::474d7afc956750fb87d6b1fcba0ec87439e94a32::9383d91ff890bd4d3ed5521d67300bf40c5b9fb1::8ec2e921bd82f27edbc3b17f8b84c13b0062c507::b5fe944875f809d4330274db4805b50488518827::bf216c101ea6113fbc721fd1e243b7db5a808548::bd3771e80f1d57dc22dc2a0b57272ffdf1881d5a::a37246692202a976ebd4878d9dbaad9078ee2daf::c2efb291e26e73b312c6b7b1a99d6727ea68c73a::9b6000135c723b454128f2f84b1ae5725903bbc9::588c13783c8aa9bd47ad3b75a58bcc242080418c::f23369300cf1c0715d681bb50170bb7d90832789::1d3925bbfb0b8f351bdcdea2e5254ad529915521::6759f79d6df77f2ad2130b316b46754eb15dbb82::f9a19720de74b05a93961a71d71a5a2d06942c6e::88bb1fbfff6f3e332f774209e5187cf5e4ec158a::5a3be10a3eb8542eda272aedbacc0764518d7100::3746085587f83be3fd227d5b0c2decedbc00ddc3::278ade52d205f882006cb19c74f6416db7d3c2af::adeb1dcad4c6f5d0eda3107be91c3fd55a4c16ed::5262f01325203ddf36c88751070e57f30c723cf3::9d8a3d83037cd497e64bff2e56274236af188d0a::a9fdecada13c93f79608355bb2b3888ff94c6519::42d8127f79012c9ee34b0a5913a52f4f3b494cae::de2f9234d33841171181f12374f0c62ccdc9b7cf::39a4ae5a6c9d79f9d49aef1b538cb5bf02cdaac8::551396564a9b74e43db0a3059411849a3a54e44a::8f9a3cfbaf6ed8c5bab07446aa02ff97d8606ef5::f6cbd81e66d5f164b383531860a104ee43b9cdaa::5dd1b70475ed2e0227a0f88a0f3b94a3afa3e50f::73fa89edf7f5cb164bcb71bdc9250c40a1492a3c::ed6207a438a46558f88bf1da2962a497d5725d3a::4e54a98f5e808fc68200d63969655a15e484a965::a996ea46e26c4e939c50d612b6defbe5b8468627::0bc37c0d41e1a78c117629f39dfc7acde13f9cf1::5e745ad6da3c499a132a2204d54902e9ec96a99c::382a53403fb9ecbfb40c39978f9fd4953cdce36f::a8f2dad1be23b5161ffb830296def503f5b712ab::927874d316c6977881c8fdfd26a76d6291405473::105528720bf3db6c914e4fbaad51029a4b89d207::af656c7e879d9c95762642666ad41fae5020ba00::5de2ee35ab8be5939308a567bea64aadd5c165ce::441241eb90f4cdf2cdf26590c92ddac3144fea00::9c2c028953e8c24bc938c5ef161f40a9bbbc89a2::931f593b5110ae1e88e9defcd0b9c28677af91c2::a214c7f84ee14510078f0ace1def089474f0f559::ee6e0ed057fbb9695b550fef1f34597e2cfb2aac::68d784c3dd0e0bc0dc1ed819c0e8e506d4d75a24::a08951f0fa4593593170d177b5e14335caf3b8fe::6d773f66c327772c0f5efad47179f5d124b07865::c05fa71f91a58fa4bd9ecef38bbff511c3de1d41::2cb0f126960ba3c493c358a5f5813ee7ed1216c3::167fd2304ecd1206cef4bf2a164db527b5806f1b::73b90f155eb8cc5d27e0e2c335a43c9cc2c58c4f::dc8c01ed077294dc923275ec0302fe7c9726330b::163c54505d8d0593f8428f257d2ab74ec3d15174::204e66943ff89405b2cefbd92e18a13d531a0d59::1f3eb1c526171b0ee8d2cab05e182c067bfb6c2e::d9a2dc6bc5212196c9ef5bd05907e93594d02584::78c85fbb31729703452e9f77159ad48ca5a61bdb::9e0fccd543ffc79d0f76ece91f3cf52336886edc::e5de9409c266bd3ac1d60d3a13c37b5724dfdbd0::2a4c11ae24c0032ec10a507317b5eb225fa101a2::1f7ea7c7643294dd415400b4bb768aca1f77cf05::eb76531e968519d57669d873b18694d9e3fbcaef::fd11e0cd953cde7c5cbc8730d4f9d9fd768aef4e::086226d2fe754d356a345b7e37004a767b2bc914::
https://api.github.com/repos/saltstack/salt,27535,issue_27505::develop,0,merged,Execution Module::Platform::ZZZBugfix - [Done] back-ported::,"This is a fix for #27505 @silenius, since we're backporting this, this function needs a `.. versionadded:: 2015.5.6` here. ::`.. versionadded:: 2015.5.6` ::",e70b44381e30189bf47aee86186f5d82590243f2::e53f4af5344aa49071142d858efdcec58597ad85::a07b59174d644e520ab8389d524f8d5ba737cc26::0bc698be98b526f6c519afaf508116b9cae99beb::887d7b4972ac6f4b910df24c9a7be5557436c0e2::825d886755d06d341c20a5eb356f0323864765ef::ed8ba146387f437368a45572ff3d767580bdc27e::29e1f00bfb7627c26facc4d41783eccd4ceb392f::3cef3dfa7073a9ed563f28579e0d4eb3ab2b6163::760ac86554b0383139f5a5ad4b39a784c346407c::d52a7d14caacd734b066ce27fc2e139c1220c476::848952ab7450ac704f273ed3f1d91bfe293f5152::
https://api.github.com/repos/saltstack/salt,27502,backport-test-from-develop::2015.8,0,merged,,This is a backport from #25162,fadd9bd43eb6aae76fa1142c657bcbc0839dd3b0::
https://api.github.com/repos/saltstack/salt,27240,isbm-pkg.info-tz-bugfix-backport-2015.8::2015.8,0,merged,Execution Module::Platform::Tests Passed::,This just backports: https://github.com/saltstack/salt/pull/27235,ce9570fce671ebc4ca59f1c3e479d1732b82401f::eaa0f370bf2069f3a474f659ca09d1c5a3f5fa9e::ff857bc8aa70a9a4904f64ab1edf9e1d6e3af64b::19a361851abe75a54d9eadf34d2b2393fa9fc4d9::
https://api.github.com/repos/saltstack/salt,27134,isbm-pkg.info-backport-2015.8::2015.8,0,merged,Execution Module::Platform::,This just backports the following PR: https://github.com/saltstack/salt/pull/26989,9fb92962763623634203ab2d0f826c44c42ca318::fc9c95967856c129b568147bad5d542805483632::a283d5373726007929b4c607228cea11851fff0e::8737d690feec810b0b9cd4dc9d67781554c8279a::e03716e5b51572f217dac162e126c85bd04335f8::0668f1da536fa01c2c3f25749089bd22b9d27811::cabe863b81a7ad5cc39fe7b9a8493e57ed4f37cc::f14f4036df99d112036e12c60cb31b37800bbb29::c1faebf0b598d8bceb1084d597f1d933134a07f2::ca7d0d5025c5dbfe8e296eaf1e22f7cd39a4a3c4::7b376fd5c30e04fb12273865e90766643cbb5337::137eb75ca2765f2aabc2c5bf4b79d850f7d0c26a::6ba269fbc68a7cf84f409f892e54b02e3c229a48::306958dad0b28d6ead559c65f7a66a25624401fc::911bae1baf4e9361bb553690832462357360a06d::25040c9c719150411aacd26de742d1a86e34533e::3fc389435b5023595b9e34f98d574e18fe9a691e::2aafc469d0cad22e183805c303dcb608ac4cda67::ffe8f14daeefc0d6f33126a7b550f3a02b712643::38753fe8b2807e83265f74b193f7257aacf691b7::cb4706c7e8694d9b34910c45c7e98b531a74b7a3::b60e6a37a721975fc385f699114e6185245e919e::
https://api.github.com/repos/saltstack/salt,27092,chdir-fix-2015.8::2015.8,0,merged,Core::,"This is a backport of https://github.com/saltstack/salt/pull/27091 to the stable branch since there are minor changes so the same patch does not automatically apply to both. The pre-flight checks try to change to $HOME, this can fail for multiple reasons. One such case is that /root is a protected dir under SELinux which the master should not have access to. The daemon should instead change to the root dir which is the only dir that is always guaranteed to be there. The limited testing I have managed to do shows that windows accepts the '/' path too just fine so the os-specific case is not required either. Changing to $HOME was added in https://github.com/saltstack/salt/pull/21279 Gentoo-Bug: https://bugs.gentoo.org/560300",284d26885503411a6ad4978668d01bd44fab3e87::
https://api.github.com/repos/saltstack/salt,27023,htwebutilpass::2015.5,0,merged,Platform::State Module::,"Partial backport of #21649 to 2015.5.  Fixes #27021. Totally trivial, but could be shortened to: ``` ret['result'] = bool(__opts__['test']) or None ``` ::",9f3d7890a6b4025622ef780bc464af5f4c180c61::
https://api.github.com/repos/saltstack/salt,26955,s3-pillar-module-cache-fix-2015.5::2015.5,0,merged,Pillar::RIoT::,- fixed broken caching in S3 ext_pillar module (file_md5 was a list) - added debugging messages - static parameters are available as module parameters now,a3b10e8ab16ed4b43aae548755d7fbbc5f00532b::8219acffe7366a75de50732a665f14d0347de38c::
https://api.github.com/repos/saltstack/salt,26719,backport_26532::2015.8,0,merged,Core::Pending Discussion::Tests Passed::,I wanted to see if we could get these changes backported into 2015.8 since it fixes a bug where salt-call doesn't work properly with `master_type: func` Thanks!,7cd2081eb8590d5d10b40e91b2f9e66abb1c1b4c::80b1d60f4c8981254f42d7af1e694cafbb2d1b8c::74934d68ad499b4bcbbd13e501f4714f06645b4c::
https://api.github.com/repos/saltstack/salt,26674,bp-26583::2015.8,0,merged,Core::,"Back-port #26583 to 2015.8 @jodv Can you take a look at this and make sure the code was backported correctly? I had a couple of merge conflicts, so another pair of eyes would be great. Thanks!",01775ea8d1a466709e82bd91fd8138d074068550::f1f5184434ed7d353c8a9e4c9f6c9d9c06672d78::59e85fb40237c08bb5962c4d414891f838e9fe1e::763ee2071304312f2680ab50b6116111ce858e2f::92a9bd47a1755d4221bbb22e92d2b5285a1a66ae::dbbadc62de55231c247aebdfde611b99330fd95b::
https://api.github.com/repos/saltstack/salt,26583,zip_modules::develop,0,merged,Core::Tests Passed::ZZZBugfix - [Done] back-ported::,"I need a way to distribute Salt modules with their dependencies packaged up and potentially isolated from one another (e.g. module `foo` needs version 1.0 of library `bar`, but module `baz` needs version 2.0 of `bar`).  @sixninetynine gave me the idea of using Python's built-in zip archive import capabilities and it works great.  The code changes involved to allow this are minimal.  This PR is 90% documentation on how to make use of the feature :laughing: This should work for any type of extension module that's picked up by the LazyLoader (execution modules, state modules, custom grains, etc.) I put `versionadded:: 2015.8.0` in the docs for the minion config option, since I figure this is probably a pretty easy backport.  Thanks!",76fe4937a25b1446c1d7052908da7eb897ca080b::6c97c73166c918f8e7887cff509618cbab86504e::c100ea6c79d7a514ba6a180df9392282e83aa722::009ae421461f4e464091bde0fd688d12fb80edc4::579c786e94790088a03e09c7fe651a8c2a1beb2f::27c0c1ff1f45919086e319df08cac05727fc0a1e::5040dfa0986e6a2e9d400913102569670bed3010::4a185268e832eb5f6e01cf878da20019a6b32d4b::b122adcf452fe6e7d98cda52e80bacc5eca952df::775538a523eab4c98d7654bdc0b9109ffa18f21c::
https://api.github.com/repos/saltstack/salt,26488,fix_unsupported_tornado_kwarg::2015.8,0,merged,Core::,Refs #26212 (This may need to be backported too) cc: @DmitryKuzmenko,d2724d1aa306e5578c1db31772598f29c69f7e6e::
https://api.github.com/repos/saltstack/salt,26367,develop::develop,0,merged,Platform::Tests Passed::ZZZBugfix - [Done] back-ported::,"fixes #26351 broken here https://github.com/saltstack/salt/commit/d2629c138f05b186dded6f8f3b2f09b135800f57 so it needs to be backported to 2015.8 as well accidentally force pushed over the old one, so I am recreating it.",38f72e5ce7c195be8ed5550ab32cba89fbd6610f::
https://api.github.com/repos/saltstack/salt,26297,bugfix-runas-rabbitmqctl-2015.8::2015.8,0,closed,Platform::,"This PR duplicates #26295 as a request to backport the given fix to the 2015.8 branch. # Problem Some rabbitmqctl client commands were executed without honoring the `runas` state keyword, resulting in system commands executed as the minion. States that previously succeeded are now failed by parser error traceback when failing to split by expected tabstops output, wheras the output likely contains some error. # Solution Forward the `runas=None` keyword parameter in the standard pattern for supplementary functions that were introduced by cd0212e8e, `_check_perms_changes` and `_check_tags_changes`. All calls to `__salt__['rabbtimq.(...)']` were audited, no further bugs of this pattern found. # Example Symptom ``` Failure: rabbitmq_user_|-rabbitmq-user-xxx_|-xxx_|-present: An exception occurred in this state: Traceback (most recent call last): File ""/usr/lib/python2.7/site-packages/salt/state.py"", line 1561, in call **cdata['kwargs']) File ""/usr/lib/python2.7/site-packages/salt/states/rabbitmq_user.py"", line 147, in present if _check_tags_changes(name, tags): File ""/usr/lib/python2.7/site-packages/salt/states/rabbitmq_user.py"", line 70, in _check_tags_changes return __salt__['rabbitmq.list_users']()[name] - set(newtags) File ""/usr/lib/python2.7/site-packages/salt/modules/rabbitmq.py"", line 116, in list_users return _output_to_dict(res, func) File ""/usr/lib/python2.7/site-packages/salt/modules/rabbitmq.py"", line 94, in _output_to_dict key, values = row.split('\t', 1) ValueError: need more than 1 value to unpack ```",391c9d5de643ab37dda62e46cd41342418bf5fc3::
https://api.github.com/repos/saltstack/salt,26296,bugfix-runas-rabbitmqctl-2015.5::2015.5,0,merged,Platform::,"This PR duplicates https://github.com/saltstack/salt/pull/26295 as a request to backport the given fix to the 2015.5 branch. # Problem Some rabbitmqctl client commands were executed without honoring the `runas` state keyword, resulting in system commands executed as the minion. States that previously succeeded are now failed by parser error traceback when failing to split by expected tabstops output, wheras the output likely contains some error. # Solution Forward the `runas=None` keyword parameter in the standard pattern for supplementary functions that were introduced by cd0212e8e, `_check_perms_changes` and `_check_tags_changes`. All calls to `__salt__['rabbtimq.(...)']` were audited, no further bugs of this pattern found. # Example Symptom ``` Failure: rabbitmq_user_|-rabbitmq-user-xxx_|-xxx_|-present: An exception occurred in this state: Traceback (most recent call last): File ""/usr/lib/python2.7/site-packages/salt/state.py"", line 1561, in call **cdata['kwargs']) File ""/usr/lib/python2.7/site-packages/salt/states/rabbitmq_user.py"", line 147, in present if _check_tags_changes(name, tags): File ""/usr/lib/python2.7/site-packages/salt/states/rabbitmq_user.py"", line 70, in _check_tags_changes return __salt__['rabbitmq.list_users']()[name] - set(newtags) File ""/usr/lib/python2.7/site-packages/salt/modules/rabbitmq.py"", line 116, in list_users return _output_to_dict(res, func) File ""/usr/lib/python2.7/site-packages/salt/modules/rabbitmq.py"", line 94, in _output_to_dict key, values = row.split('\t', 1) ValueError: need more than 1 value to unpack ```",eb77320786a18bf1f4d4104e57e5d6737cc855bf::
https://api.github.com/repos/saltstack/salt,26292,backport-ubuntu-rabbitmq-fix::2015.5,0,merged,Platform::,"Commit 3c3d99fd569fd7961ba64a0bd350303b2a4a7305 was backported to 2015.8, but not 2015.5. Merge of this pull request closes issue https://github.com/saltstack/salt/issues/25125",39ef653bc2104b73d671bbb5a73d76018e6090f0::
https://api.github.com/repos/saltstack/salt,26031,merge-pull-25750-to-2015.5::2015.5,0,merged,Execution Module::Platform::Tests Passed::,"Upon further analysis, c03a6fa implements the same feature that 4b9d742 does. 4b9d742 is backport/conflict resolution of 1a6fb80.  c03a6fa was authored two days before 1a6fb80 was.  Additionally, 4b9d742 introduces logic that will never be executed due to c03a6fa. Revert 4b9d742 in favor of c03a6fa.",5a7cab4dcc7b05be8cacee28897bd5b0a25a942a::
https://api.github.com/repos/saltstack/salt,25694,2015.5::2015.5,0,merged,Core::,"While I was at it, because it caused me some troubles, I backported some fixes to `salt.utils.http`(which I can submit in a different PR if preferred). Fixes #25689",c312592c814b72807f5679b9882c272e52e1e07b::6309f22a65ba7f075340a14801d7e568fc2d8d2d::afba3bde90b763c10d97f5d741b59414a734b2ba::
https://api.github.com/repos/saltstack/salt,25519,backport_vmware::2015.5,0,merged,RIoT::Salt-Cloud::,"Fixes #25511 @nmadhok - There were several deprecation paths added to salt-cloud in 2015.8, as noted in #25511 and also discovered in #23574. The problem is that this particular deprecation path cannot exist at the same time as supporting taking a development-version driver and placing it in a pre-2015.8.0 Salt installation. After discussing this with @techhat, we decided to backport your driver to 2015.5 (which will be available in 2015.5.4) and strip out any deprecation-related code. I did that in this PR. If people want to use the vmware driver on a pre-2015.8.0 installation, they'll need to grab the driver from 2015.5. @nmadhok - please let me know if you have any questions or concerns. No one seems to have picked up the typo of `ditigal_ocean_v2.py` vs `digital_ocean_v2.py` ::@jbouse that typo wasn't caused by this Pull Request and it already existed before. Feel free to submit a PR to fix it (I'm assuming it should have been already fixed by now in develop branch) ::",0f4f560b3825e643bbb3d8991d740cd43807be22::f0118902179ef79c99d35baf39c8e68a0d603537::35e13eef1d8af59bd960e8a2f91380d7385662f4::
https://api.github.com/repos/saltstack/salt,25426,2015.5::2015.5,0,merged,Execution Module::Platform::,"## Problem Some versions of rabbitmq (v3.4.1) does not output any final ""...done"" line in output of listings, but the given salt code unconditionally removed the final line of output, which may often result in inconsistent behavior of dependent state functions, where the final line has a value that is significant. ## Solution This bugfix changes this output manipulation to be conditional, matching only lines of `""Listing ...""` as the first, and `""...done""` as the last. ## Details In my environment:: ``` [rabbitmq@db01 ~]$ rabbitmqctl list_vhosts Listing vhosts ... / ``` This causes issues in, for example, a vhost is attempted to be created for '/' that already exists, if that vhost happens to be the last one listed in command output, it is thought non-existent, resulting in state failure:: ``` Failure: rabbitmq_vhost_|-rabbitmq-vhost_|-/_|-present: Creating vhost ""/"" ... Error: vhost_already_exists: / ```",005a7ca2a30bf0323e55e36de043d87eeca42a0d::
https://api.github.com/repos/saltstack/salt,25365,grain_crash::develop,0,merged,Core::Grains::,"When the minion is run as a user without privelidge to see the init binary the minion will not start. i.e. normal user and init is in /sbin/. #24531 removed some paths from $PATH which caused this to error in develop, if #24531 is backported this should be as well.",2db37fb19d2c9d124f9e4dc0c455bd5ec7397036::
https://api.github.com/repos/saltstack/salt,25239,pillarenv_CR_bugfixes::develop,0,merged,Core::Pillar::Tests Passed::,During backporting I found these 2 issues in the code related to #18808,0c5e53b6e1a20474f32fe363ec9b32be45cf7425::
https://api.github.com/repos/saltstack/salt,25238,pillarenv_backport_2015.5::2015.5,0,merged,Core::Pillar::,Backport of #18808 for 2015.5.4,88ff576f39e74cb063f839f827c584e4b04dd25f::98792eb1790dba9c1ca5a0e880640d8976a377bd::
https://api.github.com/repos/saltstack/salt,25184,bp-25126::2015.8,0,merged,Platform::State Module::Tests Passed::,"Back-port #25126 to 2015.8 This file appears to have some minor, though numerous, changes that the original PR didn't back-port cleanly. So I backported it to 2015.8 without any troubles. The fix will be available in 2015.8.0.",3ac35a5bffd131a5451ac1788fcd73136a59d6ab::
https://api.github.com/repos/saltstack/salt,25180,bp-25088::2015.5,0,merged,Documentation::RIoT::Tests Passed::,Back-port #25088 to 2015.5 Only backported the doc change that was relevant to the referenced pull request. The other commit in that PR shouldn't be backported to 2015.5.,4078c8db25b8035b874fe4eb2ec1c484f608953a::
https://api.github.com/repos/saltstack/salt,25173,partial-bp-25019::2015.5,0,merged,Documentation::,Only backport the new .rst files for states that exist in the 2015.5 branch Refs #25019,c0c2463b649e4a78b537efa29cde3eb1ffdf31d0::
https://api.github.com/repos/saltstack/salt,25117,fix.fileclient.is_cached::2015.5,0,merged,Core::,"Whoever wrote this code misunderstood how `string.lsplit()` works. ``` >>> 'salt://slah/slah'.lstrip('salt://') 'h/slah' ``` This backports the develop version of this function, and `salt.utils.url` to support it.",23c32a7518f31b8ab8412707f751bbb5033edff2::52f35f761af4a18422d721b7e21915ec2a1c345c::38e243fdfb0c6ba3456cd98a767f239ca5068b38::
https://api.github.com/repos/saltstack/salt,25011,s3_2014.7_backport::2014.7,0,merged,RIoT::,"This is a backport of the fix for #15209 into 2014.7. https://github.com/saltstack/salt/pull/19640 Without it, s3 urls broken in file states unless you include the hash via some non-S3 url.",8b8af640f69acc4a37644a3dbbf7f6236fb7f4a0::
https://api.github.com/repos/saltstack/salt,24546,2015.5_backport_tls_changes_from_develop::2015.5,0,closed,,Merging in the develop bugfixes and the filename feature for inclusion in 2015.5.3 This also simplifies maintenance of tls_test as there's only one version that fits both branches. @joejulian this CRITICAL bug needs to be addressed first (#24480) ::,76e258326563c444c6c83645d46de4d05dd12702::9cb70155685b1a5c4e023120ae73c1a76b7283d2::cba8d3f923baeea6417ba111b075836598f0094f::
https://api.github.com/repos/saltstack/salt,24412,bp-23387::2015.5,0,merged,Documentation::,Backport #23387 to 2015.5.,2da13dd52597dcf2547956baf6c73609e6be1fcd::684f291bd4fb57500648042304dd4317e8a67b02::de945638d3124dff13e50caa52f34f098607adf9::375695e69622d102a5495616a2d5ff01e878825b::54a7089fd6d0b82cf4c399e95d238e86a5b821aa::9fff35a959c580ac1024cb53e2e69674301c528c::b27a15e774158dc6935515eaeadafd67d9f88c61::9f53809cde835528483e2317eeaad8ba0953e120::bf85772042651701c4f63ee707e299e256e2d5a9::
https://api.github.com/repos/saltstack/salt,23866,flag_strip::2015.5,0,merged,Tests Passed::,"Includes a backport of #23834.  @Arabus, please review, thanks.",2851a5cf13fd4dcbee6cfe2343b59663bbaec1a2::7576872280137c62749387cbdbd24d6850cb6821::aa032ccfaf1e3862231a50802b43f368cbba5f3d::
https://api.github.com/repos/saltstack/salt,23591,enable_disable_individual_beacons::develop,0,merged,,"adding code to allow enabling and disabling specific beacons. #23400 Can you add some version added directives to these new functions? ``` .. versionadded:: Beryllium ``` ::I can.  They were all added new for Beryllium though and there is a verionadded at the top of the module, should I add the versionadded for all of them? ::Hrm...I guess I thought beacons were backported to 2015.5. I'll check that and change it if necessary. Nothing to do here, then. :) Thanks! ::Oh, beacons/**initi**.py was added in 2015.5, but not modules/beacons.py. Sorry about the confusion there! ::No worries. ::",66b86a0ae49954fa5ef7d7c09ff5edfd88d896f2::
https://api.github.com/repos/saltstack/salt,23488,lxc-cloud-fixes::2014.7,0,merged,Tests Passed::,"This pull request includes changes that I had to do in order to make salt-cloud with LXC and cloud state management work on my side. Changes include mostly fixes for minor bugs like using incorrect variables and proper cloud state handling with changes reported back and test=True honoured. I don't yet know salt internals good enough to make proper changes however I believe those can be a good start for review. I've tried hard to not break other clouds functionality but tested only with LXC. Please let me know if there is something wrong, I'll fix it. I'm especially not confident of last 3 commits, they are workarounds and not proper fixes. Still work for me but I'll be happy to do it right way if someone shows the direction. As for 2015.2 and develop branches, couple of changes were backported from 2015.2, few are not applicable anymore because of LXC revamp but some changes can still be applied.",377015c88180fcc11bed9862243fdcf97ad52a0b::4409eabb83e76675fdf49dd403e4fa9b779fffc5::42bd64b9b3044c6e48dec37107cbbe927b8627aa::792e1021f260a10cb9c5f986967b0e7f1be611d6::2d9aa2bb9710c4f17af32f0e42a6d32f423b2155::fb24f0cf02efe4a35b533060156abda3f03916b8::9771b5a31330fad0dbd2ea85f66f71df2a4cf8cb::7fb85f7be15c38a329e2a36abca21504f087ee41::934bc57c736c5924a2118eff165cb77eaa3fb9c5::9e1311a7cd0f1d0039e0d4570e06ba6bf03ab65f::c4047d2a71bf9042048c248b1d8dad5c1572d379::64250a67e5d47ce052e259dca004b1d3cfc06419::
https://api.github.com/repos/saltstack/salt,23477,ldap-filter-escaping::2015.5,0,merged,,"The result from a user search need to be escaped when put to the group membership search. Otherwise the search will result with: ``` [ERROR   ] Exception thrown while retrieving group membership in AD: {'desc': 'Bad search filter'} ``` **Example:** Before: `(&(member=CN=Rambo\, John,OU=Prague,OU=Users,DC=salt,DC=com)(objectClass=group))` After: `(&(member=CN=Rambo\5c, John,OU=Prague,OU=Users,DC=salt,DC=com)(objectClass=group))` Tested with Active Directory. Can be backported to 2014.7 and develop branches.",33038b9f861e7ea5cf4a15615737cf546dc72027::
https://api.github.com/repos/saltstack/salt,23456,develop::develop,0,closed,,"As mentioned elsewhere (IRC, Twitter) I've wrote a state function that checks the presence of a pillar-key and, optionally, checks its type, too. With no templating needed you can verify the presence of pillar-keys required for your states to work. This way you don't have to deal with opaque Jinja error messages and can clearly see what's wrong with your pillar. For basic usage see [this pastebin](http://pastebin.com/MvppytT2), for actual usage in a formula see [our openstack-formula](https://github.com/fraunhoferfokus/openstack-formula/search?utf8=%E2%9C%93&q=check_pillar). Tested with 2014.7.x minions on Ubuntu 14.04 so can be backported, too. (ping: @basepi @whiteinge )",4f0acbd6c8cfaa10b7797055950f5107f8445e6e::cc5205be95aa0047a243bf743ef2ea1f92c70f97::f3f58d0a46a230fafaaa7a8663dd6d6877618c68::06e638651ecf0f7ad79d0b28c90ebe4b710eceea::45d45851470bfeb71f6d4f4a9932e9079ff2e0d3::cd3f410353b4298938edef340cbc0f3ddc68e851::fb16449a1ce4ddfc86de07f1e61709fe982f1e78::
https://api.github.com/repos/saltstack/salt,23369,bp-23367-2::2015.2,0,closed,Tests Passed::,"Backport for #23367 to 2015.2 branch.  Feel free to close/reject if I've not done this right. Original PR message: Turns out that commit a369c883 (merged in PR #18368) make a bad change to modules/makeconf.py where it removed the insertion part of a '/regex/ i\text' construction. Since this bug's pretty old, Nov 2014, I'll be sending backport PRs momentarily for 2014.7 and 2015.2 branches.",a2b91e058299163a631186a2642de01ac4846e9e::48d925b19e00a4451e4082947497eb727f05bff7::
https://api.github.com/repos/saltstack/salt,23368,bp-23367::2014.7,0,merged,Tests Passed::,"Backport for #23367 to 2014.7 branch.  Feel free to close/reject if I've not done this right. Original PR message: Turns out that commit a369c883 (merged in PR #18368) make a bad change to modules/makeconf.py where it removed the insertion part of a '/regex/ i\text' construction. Since this bug's pretty old, Nov 2014, I'll be sending backport PRs momentarily for 2014.7 and 2015.2 branches.",8d9acd1f89af9ff461b3e72c8a68c3767734804a::577f41972ee112f345acf11dfe0712b10c5a4409::
https://api.github.com/repos/saltstack/salt,23367,issue/fix-_add_var::develop,0,merged,Tests Passed::,"Turns out that commit a369c883 (merged in PR #18368) make a bad change to modules/makeconf.py where it removed the insertion part of a '/regex/ i\text' construction. Since this bug's pretty old, Nov 2014, I'll be sending backport PRs momentarily for 2014.7 and 2015.2 branches.",11466bd4ae08120207e38d066b5ec1e2fc721668::60826b4d6a59c004be50b8fe8de34b404cebe4cc::
https://api.github.com/repos/saltstack/salt,23325,hotfix/bootstrap-script::2015.2,0,merged,Tests Passed::,- Fix the configuration path for FreeBSD. #567/#552. Thanks Ronald van Zantvoort(The-Loeki). - Fix non grouping support in POSIX sed. Thanks Ronald van Zantvoort(The-Loeki). - Add Debian 8 support. Thanks Matt Black(mafrosis) - Improve Debian version parsing. Thanks Mark Lee(malept) - Make sure we update packages list one Chris Lea's PPA repository is added. - Hard code the Debian Squeeze backports to the DE mirror since the main repository is down. Thanks @panticz. saltstack/salt-bootstrap#589. - Only install git if not already installed. saltstack/salt-bootstrap#560 - Fix openSUSE 13.2 where we need to pass --replaceflags. Thanks Roman Inflianskas(rominf). saltstack/salt-bootstrap#504. - Make sure that a recent enough requests package is installed in Debian/Ubuntu. - Install tornado on git installs for the develop branch if necessary. saltstack/salt-bootstrap#580 - Add support for Ubuntu 15.04,39304989c11e4a6df0451640a3330110fd4288e3::
https://api.github.com/repos/saltstack/salt,23324,hotfix/bootstrap-script-2014.7::2014.7,0,merged,Tests Passed::,- Fix the configuration path for FreeBSD. #567/#552. Thanks Ronald van Zantvoort(The-Loeki). - Fix non grouping support in POSIX sed. Thanks Ronald van Zantvoort(The-Loeki). - Add Debian 8 support. Thanks Matt Black(mafrosis) - Improve Debian version parsing. Thanks Mark Lee(malept) - Make sure we update packages list one Chris Lea's PPA repository is added. - Hard code the Debian Squeeze backports to the DE mirror since the main repository is down. Thanks @panticz. saltstack/salt-bootstrap#589. - Only install git if not already installed. saltstack/salt-bootstrap#560 - Fix openSUSE 13.2 where we need to pass --replaceflags. Thanks Roman Inflianskas(rominf). saltstack/salt-bootstrap#504. - Make sure that a recent enough requests package is installed in Debian/Ubuntu. - Install tornado on git installs for the develop branch if necessary. saltstack/salt-bootstrap#580 - Add support for Ubuntu 15.04,6643e47ce5fbf5ae6e4ed1932efedecffacbaf44::
https://api.github.com/repos/saltstack/salt,23258,﻿ret_keepalive_2014_7_5::2014.7,0,merged,,The fixes by cachedout (https://github.com/cachedout/salt/commit/56ca41cc8e988ca5f094254eb2e6326494600920) which were backported into 2015.2 (https://github.com/saltstack/salt/pull/21465) were also merged into 2014.7 but missing a single parameter (salt.payload.SREQ didn't get self.opts) thus still not setting up the TCP keepalive for the ZeroMQ Channel by default. Without this minions whom's TCP connection to the master had died but hadn't noticed yet would still hang when doing a pillar_refesh() for example.,0b9fb6f9be2fcb26f28092aef6fad38c59956007::
https://api.github.com/repos/saltstack/salt,23164,nonblocking-resolver::develop,0,merged,Tests Passed::,"Hi, guys. We noticed that your developers tried to fix blocking DNS resolving in Tornado TCP client https://github.com/saltstack/salt/commit/9c680514b454489bb7dfe962a473422fb444f04a But actually this commit doesn't fix issue.  Fix configures tornado.netutil.ExecutorResolver for using as default DNS Resolver. But it is useful only when you provide own 'executor=' param to constructor. TCP Client creates resolver without additional params so ExecutorResolver uses dummy_executor (DummyExecutor) (see http://tornado.readthedocs.org/en/latest/_modules/tornado/concurrent.html) that simply calls function in synchronous blocking mode. It means that your Salt application still hangs in DNS resolving call and will be unresponsive to all events until resolving is finished. Also there is a strange comment inside commit > Configure the resolver to use a non-blocking one >  Not Threaded since we need to work on python2 ThreadedResolver works fine with python2. You only need to add dependency on 'futures' package https://pypi.python.org/pypi/futures - it is backport of concurrent.futures package from python3.",ed8e068bf76574e20f49109bc378f2cb891d71bc::fce3da3be4f80fc98785072d3013f7fb2d6656fb::
https://api.github.com/repos/saltstack/salt,23144,bp-23124-2014-7::2014.7,0,merged,,"Backport #23124 to 2014.7 The test file included in the original pull request doesn't exist on this branch. I'm only backporting the specific change to the module, instead of the whole test file as well.",6b64da706cfee91afc702973c507ee990b9f5829::
https://api.github.com/repos/saltstack/salt,22924,bp-22829::2015.2,0,merged,,"Backport #22829 to 2015.2 The localemod_test.py file was not present on the 2015.2 branch, so I've included it in this backport. Hopefully the tests still all pass/apply as they do on develop.",16136f49ec26aa11dfddc4325b399623f65c54fe::468d39207428c79d9b86eebcd6aa96682fd2992f::
https://api.github.com/repos/saltstack/salt,22829,gen_locale-return-value::develop,0,merged,ZZZBugfix - [Done] back-ported::,"`states.locale.present()` already expects a boolean return value, which is probably the cause of #21140. Judging from #2417, there is no consensus on what modules should return. So I decided to adjust the module rather than the state and make it conistent within itself (`set_locale()` returns a boolean as well) and with the behavior an error (`False` is returned). I'm not very familiar with your release process, but from my understanding this should also get backported.",46f1f4fe530d365fc4111f1ca0b312878107b4bd::9e47d8cebaddc63064c9a1a96840e3483fc50c6c::
https://api.github.com/repos/saltstack/salt,22769,lithium-utils-compat::2015.2,0,merged,Tests Passed::,"`utils/compat.py` provides a function that can be used to make `__utils__` available to modules in versions of salt prior to Beryllium. `__utils__` is packed by the loader in Beryllium. It is important to get this into 2015.2 if at all possible, so that users can backport the latest `boto_*` modules, which depend on `__utils__`. ping @thatch45, @ryan-lane ref: #22767",53b0f0c93f1551656ce3367c6e812230856f00c9::8db0ccf529acf904004e07d57a54c364a93ae794::
https://api.github.com/repos/saltstack/salt,22656,bp-22624::2014.7,0,merged,Tests Passed::,backport #22624 to 2014.7,0a5c345889c23b828da2fd4e7fa0463d21b776c6::e4d8478eae782c6005d6e14262df8b4b96c2fcf5::
https://api.github.com/repos/saltstack/salt,22584,bp-22362::2014.7,0,merged,,"My first try at backport PR. Followed the contribution guidelines and everything seems OK but please check up :) ( yeah, pushed the fix first to develop... )",625f141571a961083c8c3967c5cedffdd12747e9::
https://api.github.com/repos/saltstack/salt,22427,22415_2015_2_gpg_module_fixes::2015.2,0,merged,Tests Passed::,backporting #22422 to 2015.2,d4f485726e7f14bf610d37508f1393eb4bd43fb7::
https://api.github.com/repos/saltstack/salt,22406,dev-pkgrepo::develop,0,merged,,The main idea here is to fix the currently broken handling of disabled repositories and the removal of the ambiguous 'enabled' option from that state. I would also appreciate it if this could be backported to 2014.7 or 2015.2. I have already tested it on those branch and the resulting behaviour constitutes a significant improvement over the status quo. Please refer to the individual commit messages and referenced bugs for more information.,c52e9a94af6fa385670a872c0d4321b24de43f30::28bb352e474b880e32aabcce1ad1783661a66cac::
https://api.github.com/repos/saltstack/salt,22349,bp-22005::2014.7,0,merged,Tests Passed::,"Backport #22005 to 2014.7. This was an easy backport, did in advance in case of a 2014.7.5.",ade043070d25031a6c11dbd4bfaee29ac49f05e0::06d761671a3ff04bf6c12c2e6672e671c6519633::c0b9cdaf3f9259d5299c342365994436f108122e::bcc377287a6e57f0bb74afbee5daf06209c05252::936254c607e822436897b54d27140832430c340b::
https://api.github.com/repos/saltstack/salt,22228,20107_2014_7_scheduler_race_condition::2014.7,0,merged,,backporting #22226 to 2014.7,20199351e66c50935b33dfa6b80b8492e2ffe325::
https://api.github.com/repos/saltstack/salt,22227,20107_2015_2_scheduler_race_condition::2015.2,0,merged,,backporting #22226 to 2015.2 #20107,b73573b2d7f5d8ac9fede54ee7c861c2c77781c1::
https://api.github.com/repos/saltstack/salt,22125,develop::develop,0,merged,,This should probably also be backported into the older version's docs as well.,960df2b0435d3a35325efc87cf02daa84d84a4d7::
https://api.github.com/repos/saltstack/salt,22122,bp-20166::2014.7,0,merged,,backport #20166 to 2014.7,6750480707f4cdee5372bf3f637be8fccdffe19d::
https://api.github.com/repos/saltstack/salt,22074,pyobjects-reqs-2014.7::2014.7,0,merged,,"This fixes #20652, @tomashavlas added the fix to develop in 27868d6 but it wasn't ever backported to 2014.7. This should definitely be added to the next 2014.7 & 2015.2 releases.  Do you need me to submit a PR for 2015.2?",761eb5f7a1ab603f9e0653451560c3aa03ede412::
https://api.github.com/repos/saltstack/salt,21949,bp-19165::2014.7,0,closed,,Backport #19165 and #21920 to 2014.7 The optimizations in the nested outputter needed the `color_theme` additions in order to backport the optimizations to 2014.7. Let's see how the tests do here.,27ec805f276529f42aa2797068b58e5946b3d0c8::fd4eacd05f0158cde5277ed7ed05c51524403fbd::973ef18074b7956a38e9a2f5a540c883ec953e03::437e058429a42ec7c414cb630589d3e0a22adaac::372ccc9a487771eaffbb22c1d407dd82a592c1b7::72414e72517c310d077bfaf0f574a52fc908b87f::
https://api.github.com/repos/saltstack/salt,21857,bp-21844::2014.7,0,merged,,backport #21844 to 2014.7,4fe795f66cbb48f6c6bcbd386c75f9f97edda7e8::
https://api.github.com/repos/saltstack/salt,21854,bp-21791::2014.7,0,merged,,backport #21791 to 2014.7,98944e9842ab5772d8a7332bd8d148c22e61c843::fbec10071a1a1a088b8efa68b9feac4c3062f20d::
https://api.github.com/repos/saltstack/salt,21852,bp-21790::2014.7,0,merged,Tests Passed::,backport #21790 to 2014.7,ced2e57165151821e8604f535450493458dddfec::
https://api.github.com/repos/saltstack/salt,21823,isbm-yum-pkg-diff-to-2015.2::2015.2,0,merged,,"See https://github.com/saltstack/salt/pull/21819 This did not went straght-forward, because modified RPMs feature was not backported yet (PR coming).",6a7a063488f29f79c7fb72f909c1820d29a6ffb8::88677d53ea9baea80135b6d3061e4abc7db1a125::
https://api.github.com/repos/saltstack/salt,21800,ismb-zypper-diff-bugfix::develop,0,merged,Tests Passed::,Zypper bugfix. Preparing also backport for 2015.2,f536adb617d04f02de18ecbaf7bd2086d123f9f2::
https://api.github.com/repos/saltstack/salt,21739,dockerio-list_containers-empty::develop,0,merged,ZZZBugfix - [Done] back-ported::,It could be there is no container at all. backport desirable to 2014.7,4b35c70d1525561c368ffb775788ccf69df8d1b0::
https://api.github.com/repos/saltstack/salt,21738,haproxy-socket-fix::develop,0,merged,ZZZBugfix - [Done] back-ported::,backport desirable to 2014.7,789b6871bc925f1cdbe3063b1a59f8bf51ab58be::
https://api.github.com/repos/saltstack/salt,21675,test_git_pillar::develop,0,merged,,"I'm submitting on the develop branch, but I think it'd be a natural candidate for backport, since it's made of new tests only. This is related to #21342 Two different calls of the `ext_pillar` entry function are checked, a direct one and one from upper in the calling stack (more integration) The different options show the slight differences (almost side effects between them). A third test is included to detect infinite recursions, to avoid future refactors that could bring them back accidentally.",0dae9dfa5dfc3e53e4ea0f24f9a98d7a53116902::2901c981191e4988f7147bed2c672250c0dd5973::458cc648864600d58f39d807b477f1cecf4faa33::
https://api.github.com/repos/saltstack/salt,21619,bug-raet_enum::develop,0,closed,,This may require installing a backport of Python 3.4 enum available from pypi as enum34. It appears this is necessary for `raet` 0.6.x. Unfortuanetly I haven't been able to test this completely due to another run-time exception with ioflo. I have a similar patch for `raet` enums for the `develop` branch. Fixes #21611,478e9e51ef1a8680eb211d958656edc380b0dc0c::
https://api.github.com/repos/saltstack/salt,21523,bp-21481::2014.7,0,merged,Tests Passed::,backport #21481 to 2014.7,08bd4761df01e3a72aff9750744891f3af2faaac::
https://api.github.com/repos/saltstack/salt,21514,manually_backport_21489::2014.7,0,merged,Tests Passed::,"This code has been refactored in develop, so the original pull request wasn't backporting cleanly. This applies the same fix to the older branch(es). Refs #21489",ee159ff3df64e653d61d01692cd1048335dcd4f8::
https://api.github.com/repos/saltstack/salt,21500,manually_backport_21468::2014.7,0,closed,,"Since the code in master.py was refactored in 2015.2, the fix from #21468 needed to be backported manually here for the fix to apply to 2014.7. Please do not merge until we can test this. ping @pass-by-value",cfbc69858fcfa7da97b49e258c9547d95505f6b8::
https://api.github.com/repos/saltstack/salt,21465,ret_keepalive_2015_2::2015.2,0,merged,,"It turns out that we were not setting the same keepalive settings on the connection back to the master on TCP4506 as we were on the inbound side on 4505. In the past, this technique would have been problematic but now that we are caching SREQs this is far more viable. This is a backport into 2015.2 per @thatch45 cc: @jacksontj (This might interest you as well.)",56ca41cc8e988ca5f094254eb2e6326494600920::
https://api.github.com/repos/saltstack/salt,21432,2014.7-fix-21304::2014.7,0,merged,,blkid() was iterating over an empty list before checking it's length. Prevent this by using 'cmd.run_all' instead and checking it's returncode before using the results.,1ff5cc2c703c4bd5cb4a5e077719c15c8ec15800::
https://api.github.com/repos/saltstack/salt,21395,2014.7::2014.7,0,merged,Tests Passed::,"Catch case where 'return' not in opts, or other ways to get an empty returner (as it will just fail anyways) backport fix for #20494",ff8b47c61a7f71935c7fe554af4562472687a39a::
https://api.github.com/repos/saltstack/salt,21263,bp_nacl::2015.2,0,merged,Pending Discussion::,I would like to see this in the release because our organization will use it heavily in pillars. If it's too late for the release that's fine. thanks.,2882284dfcb979ea98576d4ef94053634096f016::770bba720c227016b3cacbe9eb51204bb0dec6ab::94637927e080d49ff57689a416fb3d1ba6267efb::
https://api.github.com/repos/saltstack/salt,21262,bp_ipmi::2015.2,0,merged,Pending Discussion::,this one is low priority for me.. but the users might like it in the release,a8051eaf1b63247aba5bb2b369d6bb1caa904b69::d4628e523c9d94ea19a47bf0a5e9ced2fdd9ce97::29354ad3ff1cfb86ce9069f11f4e071cd27e8e21::97fd97ec2e9500ae877c9db569b9fa0969503f74::c976e25b48d845a9b2804ba5288c80ed51e6f819::
https://api.github.com/repos/saltstack/salt,21261,bp_nacl::develop,0,closed,,git cherry-pick f966b340 git cherry-pick 3252c01 git cherry-pick 77177f2,2882284dfcb979ea98576d4ef94053634096f016::770bba720c227016b3cacbe9eb51204bb0dec6ab::94637927e080d49ff57689a416fb3d1ba6267efb::
https://api.github.com/repos/saltstack/salt,21259,bp_ipmi::2015.2,0,closed,,It would be nice to include this IPMI module in the release.,a8051eaf1b63247aba5bb2b369d6bb1caa904b69::d4628e523c9d94ea19a47bf0a5e9ced2fdd9ce97::29354ad3ff1cfb86ce9069f11f4e071cd27e8e21::97fd97ec2e9500ae877c9db569b9fa0969503f74::c976e25b48d845a9b2804ba5288c80ed51e6f819::
https://api.github.com/repos/saltstack/salt,21160,lint-2015.2::2015.2,0,merged,,This backports a lint fix from #21158 into the tests for 2015.2.,86937eedc4399be3b4a0f9d2ddf5c31e3cbe47aa::
https://api.github.com/repos/saltstack/salt,21152,2015.2::2015.2,0,merged,,- Fix Debian backports repository.,a01a3c29c85d26ae1511e0599ce826af02d1d5c7::
https://api.github.com/repos/saltstack/salt,21151,2014.7::2014.7,0,merged,Tests Passed::,- Fix Debian backports repository.,0e5adace2746a6b9e16b82670129a207b7c2d532::
https://api.github.com/repos/saltstack/salt,21104,2015.2::2015.2,0,merged,,"- Try other tools besides wget when downloading the COPR repo file. Thanks Ronald van Zantvoort(The-Loeki) - No need to install packages from the Unstable repository for debian, use backports. Thanks Ari Aosved(devaos) - Fix an issue in CentOS where the syndic package wasn't being installed(since it's now a separate package). Thanks Ronald van Zantvoort(The-Loeki) - Enable the server-optionals repository for RHEL >= 7 - RHEL/CentOS 5 now uses the COPR repository. saltstack/salt-bootstrap#533",98a03b2301715919fc424decf9d5fbe09e5689dc::
https://api.github.com/repos/saltstack/salt,21103,2014.7::2014.7,0,merged,,"- Try other tools besides wget when downloading the COPR repo file. Thanks Ronald van Zantvoort(The-Loeki) - No need to install packages from the Unstable repository for debian, use backports. Thanks Ari Aosved(devaos) - Fix an issue in CentOS where the syndic package wasn't being installed(since it's now a separate package). Thanks Ronald van Zantvoort(The-Loeki) - Enable the server-optionals repository for RHEL >= 7 - RHEL/CentOS 5 now uses the COPR repository. saltstack/salt-bootstrap#533",6248c6e133abfe406265beab58903e878fb62d5e::
https://api.github.com/repos/saltstack/salt,20923,2015.2_fix20921::2015.2,0,merged,Tests Passed::,This PR backports commit 7497d71 to 2015.2 branch to fix the #20921 regression,b0cb8c816649c062e74e177d037bdd40cc1d8103::
https://api.github.com/repos/saltstack/salt,20922,2014.7_fix20921::2014.7,0,merged,Tests Passed::,This PR backports 2 commits to 2014.7 branch to fix the #20921 regression,c53ce9d0d9c24ff5b3b3c9996bc9a67c9fcf3764::c0f9b9dd8d92fe6c9c65dd4208d83c9b944d651f::
https://api.github.com/repos/saltstack/salt,20837,develop::develop,0,merged,ZZZBugfix - [Done] back-ported::,"Fix line full_comp_list.union(set(kwargs['comps'])) which actually don't do anything, because union don't modify source set. Looks like typo... It is possible to have multiple 'dist' in single repository, i.e. wheezy and wheezy-backports . So in consolidate repos, use dist also as a key.",a714d2f401d8ea6cc1fff1aabac0fde15eba3fff::
https://api.github.com/repos/saltstack/salt,20576,bp-20354::2015.2,0,merged,Tests Passed::,Backport #20354 to 2015.2.  The change to iptables_test.py was omitted since that file does not exist on the 2015.2 branch.,fa447c964084ae38235b61e3f24e2c109f53602f::
https://api.github.com/repos/saltstack/salt,20447,2015.2::2015.2,0,merged,Tests Passed::,"I need to look more closely at this one ::Actually, those 2 lines are now unnecessary. The original implementation of mine was singletons, but they aren't anymore. Meaning this will create an object and then immediately ""clear"" it, but it's already empty ;) ::",e26ff899566b1dd1d0ef24d3363a575556889051::b0e1425fc880a8ba34e1ba6c1d96634c1354d561::e71f7b55e574b149ecc252fa6177c0716c683612::f2688a6deb0a991d98f74088bdd664ee26f0ebab::260feaf764b29ca1f3826bc17853083b9fa26e07::6fc29454d1967012d283f28e2929cc517267ee0f::d8bbce29d35bb5fa1415adbc23980d4c215da0a1::fc6dea06575d151f6c389290802b32da5b543edf::093e3a2351b87dfca627aa17b996887bd5dab15f::627c8085144ee7f50c6b8c076f1f378fa848e738::f9e48c86f32f317d0d3ccd3b7c782dedb64d0772::7cb1f3c996bd6a5d9f83d933a57bc0a36f2057c1::054daa8c4818713637ade8b21f7ca3c82d6c1c35::7ad65233b9d2a2b403d26f793ea0b4297f9a242e::f160f5e1040aa0924eb86636de89e49d11d81db0::73cd9434d0819a4288959a3a9987877a0e16303e::ab22997431787db5f5c18e7ce47c03a75650be7c::fe915e7d30e4cffb4be63b6866d8718cff96914a::a1cfe7e4e2ab3cc2e440f9ee7360cc8334fa7c4c::d1215fdc64a7df4ac87a06c7395fd3f6a9088c5a::98d361d48c32f954d228e874f82b56da407c2eeb::02e219e452f17ab96f9a1f6ec83e1fe2ab36a031::9d31b1bcc351fc8c5c2f09a6c110c9759226c9e6::b5d2584ce67ac7407cd83b61a9fc07d35f9ffb5b::3a499ea778979bbe35d80e477d59972620076c92::34f0f3b8c3c0892727a5ace4f3d79199b90c6407::1ac61e27af88b67939eee21b97fb043778d5d332::decd831458320381aef64daf4cfab44480210366::e25b0e533aca3fd0a023365d6a9c1f3bd842d589::c6f61488105e5900d4dccb1adf25a4486b7f5f4b::1462df65ab9d124ab255b8222b18f68144fcad51::ff18bd2ea938111cdae2c2cf18f4a1843f18baf3::2fa3df97d1d6dbca2394bac9052aad161dd01115::109ba59165615fb7c1fd6683643d8f5242a4d23b::f693ba31ab635eb32de54dc2f5b85f63d184b05f::7ee3e592af69f057c470306df840f9264c2e9a27::55aa213bcad45746e565a946fd69cc40ea4c1ed5::df4dfc66358f1071fe1ad316862e37609b220e05::e1f8ea650f89739b1408fc46c5888b3606819dc1::795fa1241557aed1194bae2ce0351c16920049c6::d1b57764e611c65525ee1eede19eb1b76879516f::a55c155de4a4bc8045eeabef7a836492c65a031c::f47df434e30aaf00ad7e14ada2a8ea6081bed25d::69f3f3dd0ff31139ec88846df084e9416761ec5c::e55919b0d13d17afc09ce5c52eaa9d3db0d6efdb::d539380266587ef7fa5872609254b9ed5b5d87c5::8a1ef674ab9811d8e2dd8fbe5dc439910fcc47f3::3e9f9100e31e0f16d8c0e4985bb591a24dff28ad::728e33a1363c2a81b3b1d283b17996f0d15ce0b7::726f8dc2ac8d155c5998d6b9c793cdf419f77808::1772a280f470a6bf39b45a6a14fab3336b9b2ed3::f7da6364ff7361e357b349b29ac0706a5ae622c0::33488200584a4ea38748c007a97333e82c16edeb::fe2d14108186cf2ae9fb3bca13601a052eb65cfe::9ee188dd903c187ac2dc8be870543617b66ddeef::5ba53611c4bd4f0057677925dfc95fef62e08dce::368e5a8e92ab160e85997889f7288a2aa291d8ba::fb0d46f445c2dca5a20c7e4d1f87a09864b2119b::15a140ece444fee59bf4ba832aa926f9261f8995::bb89068010faf19a7b4ad6e7ae7cf413e321e371::725708a04bde3cf90ec9e80c40c577361f9da47e::ca5eac3936d02640cfc4eadb5c6dba302904aefa::7605ba60a8ea9fa49fdbef8e65ac5bd8f7dcfb37::249096c2924419c5d0ddde97db379b1fbc0b1be1::438ede78ba44702ce723da940fade915a8e66d7e::640aff6378b6f47d68645822fc5c2bb3fd737710::f4abce1d24c20d2dc43980b0821dae8bcd8e296a::
https://api.github.com/repos/saltstack/salt,20401,2015.2::2015.2,0,merged,,,0f1956fd8aa46ce15b3573e6f0e9974208a4e410::1003dfb5362791d5252b9856ab3016792564038c::306f7fec5d756f1692dbd10e09e84d3d018a4ba4::0400a49e22144928002cfef5eb4e8c268169c509::82426885564cd30b3b50ef53c11fd1d06c7aa428::
https://api.github.com/repos/saltstack/salt,20390,eauthgroup17380::2014.7,0,merged,,Fix eauth group authentication (backport of #20281) Fixes #17380,5e897d844229a7bd7f3f1f0eea49c075c667007c::4c3a816c59c9567f9e300f51be03994881202448::
https://api.github.com/repos/saltstack/salt,20345,sysctl-path-fix::develop,0,closed,,"There is a rare case where the sysctl module fails recognizing a valid sysctl setting name that contains a `/` which is a valid character on some machines. Take this example: you have a network interface named `eno1.1` (ethernet interface eno1 on vlan1) Such an interface is listed under `net.ipv4.conf` as `eno1/1` so if you want to configure `arp_announce` you write this state: ``` net.ipv4.conf.eno1/1.arp_announce: sysctl.present: - value: 1 ``` Which results in this error: ``` ID: net.ipv4.conf.eno1/1.arp_ignore Function: sysctl.present Result: False Comment: An exception occurred in this state: Traceback (most recent call last): File ""/usr/lib/python2.7/site-packages/salt/state.py"", line 1533, in call **cdata['kwargs']) File ""/usr/lib/python2.7/site-packages/salt/states/sysctl.py"", line 88, in present update = __salt__['sysctl.persist'](name, value, config) File ""/usr/lib/python2.7/site-packages/salt/modules/linux_sysctl.py"", line 247, in persist assign(name, value) File ""/usr/lib/python2.7/site-packages/salt/modules/linux_sysctl.py"", line 138, in assign raise CommandExecutionError('sysctl {0} does not exist'.format(name)) CommandExecutionError: sysctl net.ipv4.conf.eno1/1.arp_ignore does not exist Started: 17:31:12.655409 Duration: 30.913 ms Changes: ``` This is caused by the over-simplistic check for the existence of the file with path `/proc/sys/net/ipv4/conf/eno1/1/arp_announce` while the proper path would be `/proc/sys/net/ipv4/conf/eno1.1/arp_announce` Please consider backporting this in v2014.7.1 Thanks!",a7b92351a3ac7ecf7fb0178769abfa656309a26f::
https://api.github.com/repos/saltstack/salt,20207,merge_forward_fifteen::2015.2,0,closed,,@traxair can you look at the changes made to `salt/cloud/clouds/msazure.py` and make sure I resolved the merge conflict appropriately? Basically I just took the 2014.7 branch changes over the 2015.2 changes because of the backport done in #20156. Is that correct? ping @techhat too,55d3b73cde64617e5be2e8417693560702d49218::f57255df50c6a99db9819182309e008e0f769474::edf51d6f85a3e16c2030c99757ac8ae42d245726::d34c0c7787d02f7bb7d120d0200eaa751b6e53d4::4807d7d3daf4ad7ce73dee0f897a3514be5bd39d::59e7481e2bc75cda18fa485c23663a31d02ef613::65f643e5ea87a1c1a804fa854efdb9d6e4fff09e::95331bf786834fc22a1f44d3fb9dd9fda10ff37b::db0047c4684e688c771c6ef59e890b0ced8dc87b::572865363f2f7de5b4ab14e3436492558cbe95bc::e3d29bf8ffadb14fe44a622b3f4f2df4672b1028::a7462da8a868d4ca52dcfcfa5fb59294a84c1d24::eba8d9ec00dc00c4ad150fb85c35edc4b06f0a9d::b9d2f5bdfaaf00605f3cbb7c462682b6593e3a40::32222842358a1ac8c5ad714eb75f811fb92fa4bc::0a28a462a981524b30744c616daff6dfa7206d20::fe1f2603ac83424b0b830e75611dd45c108fa855::2e58b07f4fbda0e637b6290b0023e2076ca8e0e1::4e93117849117ec12a6aa340f46c53d840d862c6::7c066c38a0062da2973321aef1da5e01c6d9ef9f::f874d8bbbaba955e5e410589e1a6fd7acb62ba80::0b47a56773d60b4093647a916dfac0daef1727cd::690d34c72f83949600515d1d09fb911990c1984f::6bdc355033c43ea4ab6b19c2dd32b98c3cbd9da9::6511aacd24a69404eaa35ff209cb71b092d96a3a::1295206c4b1371cb8eea61e66be7204f5b024477::39bdd3abe5a2eb8cf3fb319f011a2ec3afec872a::02cbd7e2f8fb4a99d10ba2d0c65bbc9bf84bbdbc::daba06fac2982efdceb81309ebf81ab9a40f6eb1::c6a11643f99bf7ed3ec27d22013637a7a19d307d::5a350c0f7a75b454382e4a5da62d78d2c6f39a6c::d04999d7411bccc3b9eb84c2d24a1a8fa512449b::eb19ccd99ebb6d94442fd971cdfcc0f672bf17dc::b5242b8b893cc4c42ead150499c17732ca5f046f::
https://api.github.com/repos/saltstack/salt,20001,revert-19960-bp-19790::2014.7,1,merged,,"Reverts saltstack/salt#19960 The original backport was a fix for code that has been refactored in 2015.2, so the backport doesn't apply to 2014.7 very well. We'll have to try a different fix for the bug this was addressing in the 2014.7 branch.",f49edd1ebfc2128fffefe953fcdef0596e999645::
https://api.github.com/repos/saltstack/salt,19938,fix-esky-version-2015.2::2015.2,0,closed,,"""bdist"" doesn't do the right thing in the absence of version files produced by ""sdist"". Run ""sdist"" then extract out the contents of the tarball into place",5d70130cf354e239e0dcaa08009fa749700593a0::
https://api.github.com/repos/saltstack/salt,19937,fix-esky-version-2014.7::2014.7,0,merged,,"""bdist"" doesn't do the right thing in the absence of version files produced by ""sdist"". Run ""sdist"" then extract out the contents of the tarball into place",32c222f8f254ea356558da8bf8c0e3c1cd2498f5::
https://api.github.com/repos/saltstack/salt,19800,cp-19798::2014.1,0,merged,,backport #19798 to 2014.1,44a5c011a0a1f75b37f12c38ce29be9b4818a0bf::
https://api.github.com/repos/saltstack/salt,19186,aptpkg_variable_fix::2014.1,0,merged,,,5df31da50481a1ece6d4c589e540c554630c0fd5::
https://api.github.com/repos/saltstack/salt,18096,2014.7::2014.7,0,merged,,"this is required to use userdata_file for rackspace This should be backported here, because otherwise userdata_file will be unusable.",65a23c854670f3d15f1e139dbf6a47788ffd7256::
https://api.github.com/repos/saltstack/salt,16981,module-run-fix-2014.1::2014.1,0,merged,,"This backports part of a fix for this that is already in the 2014.7 branch, properly handling execution module functions which return non-dict data.",b2c47f75dbda045bf770d97d9685b84b5510023c::
https://api.github.com/repos/saltstack/salt,16950,fix-module-run::2014.1,0,merged,,cherry-pick of 004f940 fixes I regression I introduced in e75f474,d91205cdfc106dd3b31883d05e32fda6d37f65fa::
https://api.github.com/repos/saltstack/salt,16897,bp-16877::2014.7,0,merged,,Backport #16877 to 2014.7 Only the changes to `salt/cloud/clouds/digital_ocean.py` were backported as `digital_ocean_v2.py` does not exist on the 2014.7 branch.,08a7359daf6cdd0c58093cb66438b1c938ab9e62::
https://api.github.com/repos/saltstack/salt,16420,fix-module-run::2014.1,0,merged,ZZZBugfix - [Done] back-ported::,"This fixes commit 57423e031aeb2d26f82795f36fb09f08b2e17af7 which introduced this code, but seems to check the wrong part of `ret` I'm fixing this on 2014.1 because it's the branch we're working with, but if preferred I can port it to develop and backport it to the `2014.1` and `0.17` branches",e75f47430f7a96334e6c02ea1fc16ab7e2888135::
https://api.github.com/repos/saltstack/salt,16386,develop::develop,0,merged,,"This is a simple way not to get the warnings about lspci and dmidecode on OpenVZ containers. Please note that I don't have currently a full development setup for salt, but I did test it by backporting the entire `_virtual()` function from this commit to a running  OpenVZ container minion (saltversion: 2014.1.10) I did not find matches under `tests/` for this (didn't look that hard) From the setup.py, I gather that salt is for python >= 2.5, so that the use of sets is ok Finally, I do realize there's currently a freeze and am not trying to rush this in 2014.7 (hope I didn't get the branch wrong).",6007d6b5ede720e7e36fc95958c366535e306b3e::
https://api.github.com/repos/saltstack/salt,16063,2014.7::2014.7,0,merged,,This includes a week's worth of testing/backporting/fixing. This includes a backport of: - process_manager - mutlisyndic -Multiminion cleanup Fixes: - misc exception cases in process manager - regression in netapi - some log cleanup - localconfig backport (state module) - remove regression of CLI returns - don't fire events on reactor (its currently an infinite recursion) Stray print of left over debugging? ::Why yes it is :) ::,263327c616a7de02d475e7e74e24cb8543bfa58b::1e5ffc99f10f8de313e6d778571f6907f9a44e9e::34240e88ac0c8b326b2d3d74f51fa42a8509d921::e84e287dbfe9b383103214b22ea185eb421cdaea::b903a76628cd8ebabe0747e8222d48fcdd21167f::977e34557c176b5919768e68b974c2d835e75ca3::92679ba3e42f15246d14725f2564857b46831c85::0c74fa243d46070a8c96519eb9d3fd73c3415796::5d2851fa6d7c7bd806ce24ab4d3c8e37269321a2::54b32e6c8a760b96d124016c6208c5fc17127c29::4fac8f7d22575b1925dec84fcbcc7b2f8bf0a1bd::9cae35aad8e434dc4fde4ec4f7ac99d91f4b549d::f668b043294ef360f0725a2d5d04d0185b1c3003::ee5c115f5a15fd4b0e84e3763a666b74596768c8::a04f1044654742e66947ffb5a305770d542521f1::004dd5d9dbea764bcaadde8fb428220f6dfad388::f117d966694b9803be2a79928a3bbf46d513504a::6d59777e51f12b04f793fc7a85901cacb64fa700::36594ff6e5401dd3770fa915564253a11597f889::14124526ce25943f32bf005b029d94442fd72932::74b20cf4a1ad1863cc1ea437b8b89727650cbc69::b01ff588c3514e46f93a33b731951e64c1c2a1f7::c59707add7261b4260eb1f045b06c83058a00ff8::783c502cebfbb8efb4c5f977b212108a63d9651b::7c2a9e9e0e740b1bb3f612cd7738e3fc54b1f835::c8f15230f5dd19df557d53ebbed178225a22fa6d::6b91d539b89828015f3440c66343ae2c26c62522::2075fcde77a500678899ca78266ed18b730169fb::878ebd37f1e066f435c19d5c8b51a75d732a8b56::6e93b3b68081aad16323e099ac4e61d3e626ed4b::6225ae5145efc80c6964e56629609c8b9d0b1e4e::9aac81c476b0cb548027ba556385974252d9c676::e9821e60ebb93bd5009cb1f21c683faf715d03c2::3c3a7391c1230db3b98b0d0c3ca86e6f0d70c5a2::0a40b81689723c311d9df91512d6c7aff6084e6a::
https://api.github.com/repos/saltstack/salt,16041,move_pepa::2014.7,0,merged,,"Instead of backporting #15967 and #15976, let's just move the entire file from `develop` to `2014.7` as @thatch45 suggested.",df43e60dd24f503de228da6f201bdea4eaf4e9a3::
https://api.github.com/repos/saltstack/salt,16035,issue-15968::develop,0,merged,ZZZBugfix - [Done] back-ported::,"mount.mounted compared entries in fstab only by their fs_spec to determine if an entry that is about to be added was already present and that the original one should therefore be modified. It is, however, necessary to compare both fs_spec and fs_file fields to allow users to mount new filesystems or block devices to the same mountpoint. This fixes #15968 which had already been fixed in #9573 but was re-introduced in c8c6112 due to, what I believe, not rebasing that PR against develop. Please double-check that this PR does not re-introduce #9520 and consider backporting this fix of the regression caused in  #9666 to both 2014.1 and 2014.7.",af9effaa4447473f0e9195aa6973216ef4c8aee5::
https://api.github.com/repos/saltstack/salt,16033,fix_2014.7_tests::2014.7,0,merged,,"I backported #15877 when I should not have, as the feature only existed in develop. Commenting out the `st_ctime` comparison test isn't the best approach, but was the original hotfix on develop when #15826 broke the tests. We'll need to look at a better way to test this on 2014.7 like we are on develop, but this should work for now. @s0undt3ch ping",9c682933d405b460731bda3071d483c3ecc56601::
https://api.github.com/repos/saltstack/salt,15814,2014.1::2014.1,0,merged,,"This is the only RHEL7 support I can find that has not been backported to the 2014.1 branch, @SEJeff if you know of anything else please let me know",edfbd041c67c84eff6187246369dafe60ce0df8c::
https://api.github.com/repos/saltstack/salt,15779,hotfix/2014.7-filter-backports-UserWarning::2014.7,0,merged,,,311fb3c5f7f29f49c5aa8acc9f3b4aca882b22a7::
https://api.github.com/repos/saltstack/salt,15669,esky-sdist-2014.1::2014.1,0,merged,,per saltstack/salt#15405,0a046e2875a9c66581e69a2a64e11f2ef2990449::
https://api.github.com/repos/saltstack/salt,15596,smartos-esky-smf-2014.1::2014.1,0,merged,,Some users reported an errror that SMF couldn't find auditconfig despite the fact that the PATH is set correctly. Invoking with the full path seems to fix the issue.,fee958d82a861995529ed83754ba0ef4172dfba8::
https://api.github.com/repos/saltstack/salt,15339,doc-back-ports::2014.7,0,merged,,"@terminalmage @basepi please review. Maybe add a step here reminding you to change the target branch to `<release branch>`?  It always defaults to `develop`, and when you're backporting from `develop` to 2014.7 it always looks quite clean in addition, so it's an easy step to miss. ::",47efe38949b9411423cedfceff3326cd4cf97faa::
https://api.github.com/repos/saltstack/salt,15181,cloudrender::develop,0,merged,,"Fixes #8403. Also, this changes some (undocumented) usage; previously, if mako was detected, it would always be used as the rendering engine. If mako is already defined as the default renderer, this change will not break anything. However, if mako was previously used for cloud maps, and no render pipes are set inside the map (because, why would they be?), and the default renderer is not set to mako, there will be breakage. Do NOT backport this fix; let's leave it in develop until the Lithium release, so that affected people have time to get used to it. Ping @inthecloud247.",b8123b2497b82531f4a49d0c56de4ce8446f6731::97575e0366e0301114580b00a09580652dd694fc::
https://api.github.com/repos/saltstack/salt,15037,backport-12348-to-0.16::0.16,0,merged,,"This backports the fix for #12348 to the 0.16 branch. I know that's super old, but I'm not going to be able to update my environment within the next 6 weeks and I'd really love to have my provisioning not be broken. I just cherry-picked the fixing commit out of dev. --- Per https://developer.github.com/changes/2014-04-25-user-content-security/ raw.github.com is now served from raw.githubusercontent.com.",7592d5d5271249b97a7f8d00060c56000c4144be::
https://api.github.com/repos/saltstack/salt,14962,2014.1fixwin::2014.1,0,merged,,DO NOT MERGE I want to run the tests on this and evaluate this solution.,48755302cee8bbf5e2532ac3afa5c62c53466439::cde2a34dedc97ba99fb059032c024f38df6117eb::93ca76695f402e8d3a0a5c1d42eaba4837dd3935::fba52f88e33eda6a06fc11b74a3dc327aa7a2c77::f3b3f3c4f7b518fc959db2224653e54c7cd4e96a::8f0fc65cbcda006ab0c85a4c89f60c837293f507::8d35f0c0d3069512c31cc43026daada9f0f140ea::
https://api.github.com/repos/saltstack/salt,14501,esky-fixes-2014.1::2014.1,0,merged,,Backport of three SmartOS esky improvements I'd been manually applying when running builds. Better to have them actually in the branch.,cd610b9c6384648feaf88b3c6f5e94115e5718ef::2ca966c18866657c966d3722a934cb5d60e4aff6::f0009a57e6761ad8f98c8a2b332871a505be0881::
https://api.github.com/repos/saltstack/salt,14399,2014.7::2014.7,0,merged,,,6dc8d7f0ccabe38aff033a8878b1d1c6e1a5658f::fb4371055064b8945c64a4826ae2c0128651ccdc::
https://api.github.com/repos/saltstack/salt,14316,2014.7::2014.7,0,merged,,,ce0aa21be2bd84cfb72fe63327361db6e2014e85::4195a62681ca2b8c6013177831d994b3fd893c33::049a4fa0911481e60f61f3a67a23623c54e92fd1::
https://api.github.com/repos/saltstack/salt,14315,2014.7::2014.7,0,merged,,,4d692a2eeb6fc36554c299b7620e5a6c85f0d928::dd01f1a413c439914ca6248319d26b20e6721aa3::
https://api.github.com/repos/saltstack/salt,14312,2014.7::2014.7,0,merged,,,dd8f9da26ad33867a376feaf863f24226e71e5d6::eb87333fa7cb030a81cb479bfb5be9090b3566b6::
https://api.github.com/repos/saltstack/salt,14310,2014.7::2014.7,0,merged,,,00495de1bbfcf858e856c3f50a3dabecdb6c77a3::97ee5640e6b993970c01c7062f2ba345acdf3bd6::
https://api.github.com/repos/saltstack/salt,14309,fix-docker-auth-with-pillar::2014.7,0,merged,,Authentication to docker daemon using pillar was also broken (related to #13305). I fixed only the support of `~/.dockercfg` in https://github.com/saltstack/salt/commit/1b3fc8de258e6f81e6319056231e3263d35ff152 <strike>It might be also good to backport it to 2014.1</strike>,7ea08472f8765177fc92f3301ffe97275841761e::758c28864586be29d93df5b2d8f27b7f7f811652::
https://api.github.com/repos/saltstack/salt,13800,misc_fixes_v2::develop,0,closed,,"UPDATED: after rebase: removed pre-existing salt/modules/iptables.py fix as it's already upstream... - SUDO command string/logic for salt-ssh fixed - command & args (list) now passed to Single properly/as it expects w.r.t. current implementation (vs. one big string) - added absolute imports to utils/thin.py - this does not break any existing imports untouched, but fixes case where extra mods are being included with ""salt-run thin.generate"", as mako (as an example) will not be imported properly without absolute imports since there exists a mako.py file inside the utils/ dir, etc. - also added ""backports"" module to thin tar generation, since it is required by other stuff in the core ""thin"" modules in some setups",ec7ebde8000a5a890f22fe53fce47e9d8618c17f::
https://api.github.com/repos/saltstack/salt,13798,misc_fixes::develop,0,closed,,"- SUDO command string/logic for salt-ssh fixed - command & args (list) now passed to Single properly/as it expects w.r.t. current implementation (vs. one big string) - tiny fix to iptables state for initializing HAS_CHECK (without this, condition exists where it is referenced before being bound) - added absolute imports to utils/thin.py - this does not break any existing imports untouched, but fixes case where extra mods are being included with ""salt-run thin.generate"", as mako (as an example) will not be imported properly without absolute imports since there exists a mako.py file inside the utils/ dir, etc. - also added ""backports"" module to thin tar generation, since it is required by other stuff in the core ""thin"" modules in some setups",2cac9814bdbca809fa3cf38f3c33b601fdac426d::
https://api.github.com/repos/saltstack/salt,13705,develop::develop,0,merged,,"Closes #13699 Only in develop, no need to backport",ac8b63985374eea5eff35a2a338b77495a56f6b6::
https://api.github.com/repos/saltstack/salt,13117,cache-2014::2014.1,0,merged,,Backported for 2014.1,5b9c85cdb6050aca12e844af42691dc6d1ed0682::
https://api.github.com/repos/saltstack/salt,13116,12396::develop,0,merged,,"Master job caches were not being cleaned because we were incorrectly detecting the age of the cache file. To wit: [DEBUG ] Cache cleaner evaluating jid file at time 2014-05-23 11:53:00 [DEBUG ] Cache cleaner thinks that the current time is: 2014-05-29 09:23:38.740181 [DEBUG ] Cache cleaner sees the difference as: 5 days, 21:30:38.740181 [DEBUG ] Cache cleaner sees the HOURS difference as: 21.5105555556 [DEBUG ] Cache cleaner is set to only clean jobs after 24 hours Closes #12396 Please note that in order to backport this fix into previous releases, this change should be made in master.py.",7507a3764a02477e0fb0cd6039d5e527d0e99291::
https://api.github.com/repos/saltstack/salt,12729,fix-timedatectl-2014.1::2014.1,0,merged,,"**This will likely have a merge conflict with #12725.  If that PR is merged first, ping me and I'll rebase and fix this one.** This is #12728, backported for 2014.1.",2896c8dd8fe3963b05522e69803ae7851ef459b8::ad0ab225c26d55695d4b74c17b8fb422f1df49b1::
https://api.github.com/repos/saltstack/salt,12725,issue12696-2014.1::2014.1,0,merged,,"**This will likely have a merge conflict with #12729.  If that PR is merged first, ping me and I'll rebase and fix this one.** This is #12724, backported to the 2014.1 branch. Only merge this if #12724 is merged and doesn't break tests.",9c2e3478c59088e73acec91db220068ae2d7976e::d02dded673b7fc1e7a6bd7e8838a2aea67ba0872::31544106df24fca7b9004500a0be7518bf0f0f13::798429eeef5d2ab52e3391d7d84cec6de80d1f2e::
https://api.github.com/repos/saltstack/salt,12307,issue10446-2014.1::2014.1,0,merged,,"This is https://github.com/saltstack/salt/pull/11709, backported into the 2014.1 branch. Also changed references to 2014.1.2 to 2014.1.3 since 2014.1.2 was never officially released.",945b6f9efdb4ef3e0caa150619553d37b7a96075::aceeb1bebc19ad7bfa68b39c5dcfc5e1e494168f::5159c43a1e5ea93051112c53a1eb9057f5fac4cd::fdb5bb25b77c17e4ceb0e4bea3dd34bf10da3aec::c292bc67e57f5fba589b2e52ef28f3d332f744b0::4eaaf22a7c1dd27a9cf20282016835a43b13e497::4d1b39afcfcc49a0ea97fed3dda252a323b044f4::1b4c8051186270c9a364897d0b609213b3a0f041::38099ec15601f057d13bdf8e5e95374b13acdb9b::
https://api.github.com/repos/saltstack/salt,10738,smartos-smf-0.17::0.17,0,merged,,,49e7bdb80aabb56f128331af576aec3d9adc2e98::36af71f72781d0cc66f6d380c979cd910465b9d7::7e19fe0b210866890a1fba8be0c98e2a25bc8658::
https://api.github.com/repos/saltstack/salt,10737,smartos-smf-2014.1::2014.1,0,merged,,,464b58f4951b11c1f9b75e174cc76b16da860664::43f298897c4acbc369af2221eb318716c9cc96d6::e8abd7ef6722a42217b51eb69a836d19b5fa1896::
https://api.github.com/repos/saltstack/salt,9792,0.17::0.17,0,merged,,"**THIS PULL REQUEST IS AGAINST 0.17** This commit improves performance by not repeatedly looking up the list of available environments whenever they are needed, and instead writing them to a cache file whenever the fileserver is updated (and changes are found). envs() will prefer the cache if it is available. This backports #9787 for the upcoming 0.17.5 release.",f9cfa310311d383eb976a6a4dfabc9df606065d5::
https://api.github.com/repos/saltstack/salt,9755,2014.1::2014.1,0,merged,,"**THIS PULL REQUEST IS AGAINST 2014.1** This pull req backports ports #9747 for gitfs, since the pygit2 stuff would not merge cleanly into the 2014.1 branch.",4bf99229d88dda486efaab999c72b79c45028878::
https://api.github.com/repos/saltstack/salt,9748,2014.1::2014.1,0,merged,,"**NOTE: THIS PULL REQUEST IS AGAINST 2014.1** This pull adds Tom's commit from Monday night, as well as two of the commits from #9747. I'll need to open up a separate pull against 2014.1 to backport this feature for gitfs, since the pygit2 stuff in develop is being held off until the Helium release.",0ade98adff9db6c4b177791ab3f948f1c0899ac5::e59edc4d550f36515d086d07198fd287de89616d::01cb7996f2a21d5e334c92aab09631c2acfcad4f::f2e02fe8d27e4b508f2e848362c052cb3a91397e::
https://api.github.com/repos/saltstack/salt,4021,add_ppa_support_to_pkgrepo::develop,0,merged,,"Ubuntu has a Launchpad site that supports Personal Package Archives. This is where the newest (untested, unsupported) software can be found, including backports of newer versions of packages to older releases. This branch supports a ppa option that makes it a one-liner to add a ppa to your apt sources.",ead4bae7202d8252bf9298c67c97110b1949e032::
https://api.github.com/repos/saltstack/salt,2969,doc_debian::develop,0,merged,,The Debian install information is outdated. The package is no longer available in backports and Wheezy doesn't have salt either. I'm not sure if build instructions are appropriate for this section but they are certainly useful for some so I propose them anyway. I'm also aware of madduck's packages mentioned on https://groups.google.com/forum/?fromgroups=#!starred/salt-users/Q7Q1_Cg4mg4 . Maybe I should contact him if he's willing to be included in the docs as well?,947d40adf28d404fafbbb83243e75dd4cf4c72e0::
https://api.github.com/repos/saltstack/salt,2212,fix_postgres_createdb::develop,0,merged,,"I'm starting to get into Salt and liking it... however, I'm ran into walls trying to create a postgres database (Debian squeeze, Salt 0.10.1 from backports). Running this command I get an (very unspecific) error: salt-call -l debug postgres_backport.db_create gt1 runas=postgres owner=gt1 encoding=UTF8 Stepping through the code, I see that the command being executed is this: ``` su -s /bin/bash - postgres -c ""cd /var/lib/postgresql && psql --no-align --no-readline --no-password -c \'CREATE DATABASE gt1 WITH ENCODING \'""\'""\'UTF8\'""\'""\' OWNER = gt1\'"" ``` Which seems to be a couple of quotes too many. I tracked it down to pipes.quote() (here: https://github.com/saltstack/salt/blob/develop/salt/modules/postgres.py#L84), which doesn't seem to deal gracefully with single quotes within the parameters. I haven't been able to fix it there and ended up changing db_create() to use the ""createdb"" command instead of running ""psql"". I'm not sure how portable the ""createdb"" command is, however, and would be happy to see a better way of fixing this. Jonas",7bb6d4b261097f55456e667591ae0184824f0779::
