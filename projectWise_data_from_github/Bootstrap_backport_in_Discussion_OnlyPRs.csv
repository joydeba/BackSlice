https://api.github.com/repos/twbs/bootstrap,33392,v4-sass-vars::v4-dev,1,merged,docs::v4::,Manually backports #33386 to fix #33070 in v4 to properly document Sass default variables.,c491a22450e7a59da4eb42474686c0f14983cb3a::
https://api.github.com/repos/twbs/bootstrap,33165,patrickhlauke-carousel-v4::v4-dev,1,merged,v4::,Manual backport of #32627,2faebae09b3e49e3b138734d70e1837458866312::
https://api.github.com/repos/twbs/bootstrap,33164,patrickhlauke-32630-followup::main,1,merged,no-backport-to-v4::skip-changelog::v5::,noticed while backporting #32630,80de6d706b7d3640b7ccc121c74eb95e9afda2a0::
https://api.github.com/repos/twbs/bootstrap,33148,main-xmr-change-version-script::main,1,merged,backport-to-v4::build::v4::v5::,"I have this patch around for some time now. Using globby is a little slower than on main, but we get to simplify the script a lot. So, apart from adding a couple of command line options, and not writing the files back to disk if they are changed, this changes the logic of the script: we only replace the version in the files we have in the glob and not all file types. I could split the patches but I thought it might make sense to make all the changes in the same PR. Please check the individual commits in case I missed something. If merged, I will backport it to v4-dev.Not 100% sure about this patch since it blindly replaces the string, but I don't think we want to introduce semver to check if the args are valid versions before replacing.::I would move the 'v' replacement exactly after the initialization and maybe I would prefer `map` instead of `forEach`::Not sure what you mean about `v`? As for map, I find this shorter, but feel free to push to this branch what you have in mind.:: line 67 to move to line 60 ` [oldVersion, newVersion].map(arg => arg.startsWith('v')? arg.slice(1):arg)`::```suggestion [oldVersion, newVersion].map(arg => arg.startsWith('v')? arg.slice(1):arg) ```::",42c3a000440f87ba42e500aad9b3f1192ff719c1::
https://api.github.com/repos/twbs/bootstrap,33129,main-xmr-ren-docs-dist::main,1,merged,backport-to-v4::build::v4::v5::,"TODO: - [x] update netlify's settings before the merge After merging: - [ ] manually backport it to v4-dev - [ ] update gh-pages's .gitignore @mdo this reminds me that we should probably nuke this script if you don't use it. I don't use it, but if you do we can keep it.::Nuke it, I don't use it.::Cool, I'll do it in a separate PR later.::",48cb689eda5713774fcba48aad0ee32f99439f03::60f67116106d4f6909c6e13f9aebbafef5382188::e45caec42a0d9d33ea56c8d324d85c9b7d9d3154::7e1a8ad9c7c1971c4143ec7d33b3f0a7115c4f4f::
https://api.github.com/repos/twbs/bootstrap,32798,v4-dev-xmr::v4-dev,1,merged,v4::,"Hopefully the last backports PR :) TODO: - [x] make sure `npm run release-zip-examples` doesn't break anything@rohit2sharma95 please also check the JS changes; they should be fine but let's confirm. Note that this change has landed in main already. My only concern is https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test#using_test_on_a_regex_with_the_global_flag::I moved the deps updates to another branch and I'll make a PR after 4.6.0::But the `distFolder` is removed in the end. So initially it would not exist IMO :thinking: ::True, but I might have it locally while testing.::And also the zip file is updated if it already exists. When `release-zip-examples` script is executed in real? At the time of release? :thinking: ::It shouldn't be updated since it's removed beforehand: ```js sh.rm('-rf', [distFolder, `${distFolder}.zip`]) ```::Updated if I remove this full line from the code. Not sure if it is needed. Because the `distFolder` is removed in the end and zip if updated when creating again.::Not sure what you mean. I want to remove the folder and the zip file so that we are safe. I definitely don't want the zip file to be updated, which is what we do on main right now. This just backports the main patches::Okay, understood :+1: ::",4018b1a059ed3b784387ed6bd8be7fba5a002a5f::2cc1944004b8f310c0c6c6e30900bed9143101c6::3fb75972f8a884b860d4e6c0379511b18f74aff6::3392c6b413669a75774043dfdfabe3e7eab14acb::
https://api.github.com/repos/twbs/bootstrap,32791,v4-docs-sass-compiler-precision::v4-dev,0,merged,docs::v4::,"@XhmikosR Here is the backport you requested in #32512. This makes changes similar to those made to the v5 docs to update and clarify the Sass compiler used and the minimum rounding precision we recommend with it. The details added are linked to from several places now instead of bits of the info being spread throughout the docs. I added some notes about Node Sass being deprecated and how Dart Sass should be a mostly drop in replacement if the user would need support for newer Sass features or CSS standards. It's still made clear that we build Bootstrap v4 with Node Sass, so I think this is a good balance of telling them it's still alright to compile with it while also giving them options if they need newer features.I'd change this to link to the GitHub repo only::Done::",07e42d264ef5533507d22558cbe2003f0ab007c0::c26aa4dcbc7ec85314bf8497f1abc752d14ddfc8::9aaf2c4aba9e65dd00e246d0266518f385d8c4f4::1d88821f99bbfcfe5fff9b15fc59885b3d3c0d03::42310bc54cd3ac4125d3ea91db44582020eb9657::
https://api.github.com/repos/twbs/bootstrap,32789,patrickhlauke-v4-backport-carousel-examples-CTA-no-role::v4-dev,1,merged,docs::v4::,"They're links, acting as links. Just because they're styled as buttons visually (as is often the case for ""Call to action"" (CTA) links) doesn't mean they need/get `role=""button""` (sorry, manual backport of https://github.com/twbs/bootstrap/pull/32788 - forgot to add the label to that one)",c70ac71079b660df206d686a51f79a5d5161fc19::
https://api.github.com/repos/twbs/bootstrap,32785,dropdown-disabled-color::main,1,merged,backport-to-v4::css::v4::v5::,Fixes #32474. Unclear if we backport. /cc @twbs/css-review,f5b4c81bf2d3d1361cf1a49c88b195c646e7c21b::a0c53939aceb65b68476a059628a752ed0108730::
https://api.github.com/repos/twbs/bootstrap,32778,code-conventions-docs::main,1,merged,backport-to-v4::docs::v4::v5::,Fixes #27815 for v5. Should be backported to v4.,f8b8fc8c502c68a67ba1cc8b66ab233ec153e725::ec54b13c0f0b8177fe8d627916618e66ce82a290::72c9319a90e54fee9a888ab44635b14e36f62530::
https://api.github.com/repos/twbs/bootstrap,32762,v4-stretched-link-table-docs::v4-dev,1,closed,docs::v4::,v4 backport of #32761. Fixes #28608.,c2c37118da4e25f1333d4bbf0a98228d17e14837::
https://api.github.com/repos/twbs/bootstrap,32688,patrickhlauke-carousel-touch-followup::main,1,merged,docs::v5::,based on changes made in the backport https://github.com/twbs/bootstrap/pull/32639,b9b2052c7cc9571c63d1295c883875ba89ab39aa::
https://api.github.com/repos/twbs/bootstrap,32529,XhmikosR-patch-1::main,1,merged,backport-to-v4::docs::v4::v5::,"@patrickhlauke could you please go through #32246 in case there are more? Also, I'll backport it since v4-dev is affected too.",1fad1c49ef56eb9b1d31b07e8ff27fdf4c25ef02::
https://api.github.com/repos/twbs/bootstrap,32503,main-xmr-browserstack-retrylimit::main,1,closed,backport-to-v4::tests::v4::v5::,Switch to the default `retryLimit` value which is `3`. I have no idea why this was explicitly set to 2. Should probably backport it later if all goes well.,9c2a600babb407b20f55bc78ea9ef61cd71376f1::b9d5a5befa18c188b8a32cf9f7c5bb814f10f1f7::b55f6f1a9112a1cda0ab74a0fa1c2dbd43f4ab42::e170d32a465fbcd038c312a2b2918299cea61298::
https://api.github.com/repos/twbs/bootstrap,32409,main-xmr-update-karma-browserstack::main,1,merged,dependencies::v5::,"We've tried this in the past and it didn't fix the issue we had when we pushed too many stuff too fast. That being said, as long as it behaves the same, I see no reason to not update. It's just that it's hard to test, unless this is merged. If all goes well, we should backport this.",6f3c0d10befd51cda49a652d6b2c6f6dd675a183::24755e25578956bf54981fcc015df39b550355a2::23a532ba6ec74a3dbb92002b0ffcc04bd1fff629::0262b38e90b63efc914727ed289da8388cf171da::613a117058c1cd87dd01429b0e4275f1fcafb549::1340f68d9cfd6b2ed4b38e0ce129ea9f91dba323::a4446018731a9408aa1d84eeb91e684c4716ebbb::
https://api.github.com/repos/twbs/bootstrap,32364,v4-dev-docs-custom-checkboxes::v4-dev,1,closed,docs::invalid::v4::,Seems like a missed thing from moving to Hugo? Or in any backport maybe?,897eca1037592ebba0dae543e44930db5e4f87ce::
https://api.github.com/repos/twbs/bootstrap,32238,XhmikosR-patch-9::main,1,merged,CI::backport-to-v4::v4::v5::,"Could probably decrease it even more. If merged, I will backport it.",f136e8436aeecc9fafdac209b04985798f165c06::b59a8061c833892ec28f68abe50da6662fd6526d::d535f08a9b8813c2b0317f3ef36a4b6d05bef97f::794180a1bac7b47be6c24b076f5c6d7af9859674::0b3e96198da843e2a5f1c21f0fe1c0c9ab269679::4ebc48fb00e086f36e57080ef75f0dba2c5a6dc1::
https://api.github.com/repos/twbs/bootstrap,32225,tooltip-custom-class-v4::v4-dev,0,merged,js::v4::,"Partially backport #32217How is this not needed? 😵::Because the `customClass` will be in the configuration already, even if it is provided in the data attributes 🤔 https://github.com/twbs/bootstrap/blob/2d8c02eb1024ef2ce8877d6484a9ea8a4d9cd67f/js/src/tooltip.js#L660-L664 Ref: https://github.com/twbs/bootstrap/pull/32217#discussion_r527627073::And jQuery's [`addClass()`](https://api.jquery.com/addclass/) method will handle it, either `this.config.customClass` is a function or a class name (Even it is a blank string)::yep good catch 👌 ::",2a45ea95b5448c25420103522cfcf1ccac0729d5::bdd22791e745ef3496947761092a6f94c614ea82::
https://api.github.com/repos/twbs/bootstrap,32224,main-xmr-popper-name::main,1,merged,backport-to-v4::docs::js::v4::v5::,"The npm package is named ""popper.js"" but the project is named ""Popper"", so use the latter consistently. @FezVrasta please let me know if this isn't right :) EDIT: I'll take care of the backport later since I'm pretty sure it needs to be done manually. Preview: <https://deploy-preview-32224--twbs-bootstrap.netlify.app/>",6c29fe6b1f235dc828d9c3432592226b4b98fa96::f544211453b5bc4353b35bae9c2888ef24828f11::
https://api.github.com/repos/twbs/bootstrap,32158,main-xmr-docs-cdn::main,1,merged,docs::v5::,Also updates to the latest versions while at it. I will backport this after #32077 is merged. Preview: * https://deploy-preview-32158--twbs-bootstrap.netlify.app/docs/5.0/examples/dashboard/ * https://deploy-preview-32158--twbs-bootstrap.netlify.app/docs/5.0/examples/masonry/,cf5a6a57baaf73dbd19495201fe9cceca86b0b18::
https://api.github.com/repos/twbs/bootstrap,32087,XhmikosR-patch-4::main,1,merged,backport-to-v4::docs::v4::v5::,"If merged, I'll backport it in #32077",74f9c4c063000f3d197e504573c6c3229ef2b1b4::
https://api.github.com/repos/twbs/bootstrap,32083,v4-dev-liberation-sans::v4-dev,1,merged,docs::v4::,Missing after the #31657 backport,91452e55e72e9d5ce504911ff94ce7a868eade48::
https://api.github.com/repos/twbs/bootstrap,32060,main-fod-file-input-padding::main,1,closed,css::v5::,"While backporting it to Boosted, I noticed we duplicate `padding` for `::file-selector-button` but it would benefit from `inherit`ing it from its parent input since we wouldn't have to duplicate it for sizes variant.",c0c296a040bb23004dbb2ad2dd45613298c4a742::
https://api.github.com/repos/twbs/bootstrap,32045,main-xmr-sanitize-test::main,1,merged,backport-to-v4::js::tests::v4::v5::,"The test template does not include a `script` tag so the test always returned true. I need to check if the same issue is present in v4-dev. **EDIT**: it's present in v4-dev too, I'll backport it in #32035 after this one lands. Requires #32043",5857d7e6b3e0b50648d4f667f0c114ddafc8aa50::
https://api.github.com/repos/twbs/bootstrap,31995,btn-block-responsive::main,1,merged,breaking-change::css::feature::v5::,"This now replaces `.btn-block` with `.d-grid` and `.gap-*` utilities. This enables responsive behaviors for the former `.btn-block`, while also making it much more customizable for responsive behaviors and more. --- ~~Moves `.btn-block` from a `.btn` modifier class to a parent wrapper, allowing us to more easily manipulate a group of buttons. For folks who want an individual button to be ""block level"", adding `w-100` basically accomplishes that. This now makes it possible for a group of buttons to start off stacked and then go inline once a breakpoint is reached.~~ ~~Unlike most of our responsive classes, these are built with `media-breakpoint-down()`, so they use `max-width` instead of `min-width` in their media queries. Anecdotally, this fits the pattern of responsiveness for a group of buttons—you stack them on narrow viewports and expand them into a single line when there's available space.~~ ~~I think I need to take another pass at the copy in the docs still. Beyond that, I'm also considering changing this to `.btn-stack` or something similar. If we did that, we might be able to backport this to v4 as a new feature in v4.6.0. Thoughts?~~ Preview: <https://deploy-preview-31995--twbs-bootstrap.netlify.app/docs/5.0/components/buttons/#block-buttons>",f5161917770802c39d43c99dbdf1d60983f17a93::fd03bb52f825413ac718d2e2020d5ce945d60622::
https://api.github.com/repos/twbs/bootstrap,31962,v4-dev-mc-input-group-border-radii::v4-dev,1,merged,css::v4::,https://github.com/twbs/bootstrap/pull/31953 backport https://deploy-preview-31962--twbs-bootstrap.netlify.app/docs/4.5/components/forms/#input-group-validation,a0cdd64dafffd507933d22771bc05055eac8fdb7::
https://api.github.com/repos/twbs/bootstrap,31934,manonthemat-patch-1::main,0,closed,awaiting-reply::docs::,"Clarify that carousel's interval is set in milliseconds.@mdo or `in milliseconds`, your call. We should also backport this. EDIT: we also need to check if there are more instances.::```suggestion <td>The amount of time in milliseconds to delay between automatically cycling an item. If false, carousel will not automatically cycle.</td> ```::counter-counter proposal: ""the amount of delay (in milliseconds) before cycling an item""::",fd348c1155f0ae4431e2c2610e5e0df28702ae06::48b6151452347bea9274b07bc74034a0d0f87037::3b8bdfcee353059d599d6e96dd01f54e2934935a::23274e542662508b16f3f5616d414788b1a79c2c::b92a392c4de01905cd4962fd1368e5ca761763c3::24a316834350747e0fb7e1c778cbf91677f31add::106888990153fbad88aed6568a7cd5cdefce66c9::84f3fb589ae6455069d95ab15698beffc9e720d3::
https://api.github.com/repos/twbs/bootstrap,31904,main-fod-docs-horizontal-forms::main,1,merged,accessibility::backport-to-v4::docs::v4::v5::,"Because those example are often used as sources through copy-pasting, avoid using fake labels with text in `div`s seems a best practice in our docs. We might as well turn it into a `label` but this could lead to wrong pattern usage too, since it would require two pertinent labels. Since we're only documenting horizontal layout using grid, switching this an offest use case feels better. If you agree with that, it should be backported to v4 as well.",6fb3953f07c1388ca682e2e7b99b9977c6348dd5::143192ae44a2ab5ae58b1e3be180500763608c9e::be865075cfe8e08db6e5d2810260191156dd7a9d::b591d625df276a674b018b23d1c12aa12e8612ef::
https://api.github.com/repos/twbs/bootstrap,31893,main-xmr-manifest-json::main,1,merged,backport-to-v4::docs::v4::v5::,"Switch to relative URLs so that we don't need to change the path with every major/minor release If we merge this, we might as well backport it. Info: <https://developer.mozilla.org/en-US/docs/Web/Manifest/icons> >src: The path to the image file. If `src` is a relative URL, the base URL will be the URL of the manifest.",da800152e3ae85f74731aefd45139215405d64cd::
https://api.github.com/repos/twbs/bootstrap,31754,XhmikosR-patch-2::main,1,merged,backport-to-v4::docs::v4::v5::,Not sure if we want something like this and if we should backport it. I haven't added a project but feel free to change it. Preview: https://deploy-preview-31754--twbs-bootstrap.netlify.app/docs/versions/,9f1a6e8024aa107424fb540f5d90c9456fe4d576::d24b5da33767f605ddc7b1c98796109652ccefb3::
https://api.github.com/repos/twbs/bootstrap,31708,feature/variables-strategy::main,0,closed,,"PoC for suggestion from this issue https://github.com/twbs/bootstrap/issues/26596#issuecomment-694214372 It adds some rules for variables usage: 1. In SCSS styles files (e.g. `_table.scss`) we use only SCSS variables in style properties - It makes SCSS style more clean, so that we don't have mix of CSS variables and SCSS variables together here - Simplier to work with this file as we know that we need to work with SCSS variables only - Allows to remove properties from CSS output together with selectors by setting `null` to variables which can reduce output CSS file size - Depend on application requirements library user can select which to use SCSS variables or CSS variables - ""Use var() in Sass variables and not directly in components"" (c) ffoodd https://github.com/twbs/bootstrap/issues/26596#issuecomment-695957040 2. In SCSS variables file (`_variables.scss`) we can set CSS variables as a value, e.g. `$x: var(--x);` - This creates flexibility and provides example how to create variants by font size or border width, was asked in this comment https://github.com/twbs/bootstrap/issues/26596#issuecomment-607125580 - We can set not only CSS variables, but formulas of CSS variable so for easier customization it will be enough to operate with one variable - Possible here to override on application side: * specific value, e.g. `$table-bg: $red;` * reference to another CSS variable `$table-bg: var(--primary-color);` * set to null `$table-bg: null;` to remove property together with CSS variable declaration `$table-bg-var: null;` * set to custom expression of CSS other variables `$table: hsl(var(--color),var(--l));` 3. We use CSS custom properties together with `$enable-custom-properties` variable in SCSS styles file (e.g. `_table.scss`) - It makes backport to IE11 easier by replacing SCSS variables, maybe without all color variants, but they can be created on application side using good SCSS styles file (e.g. `_table.scss`) - Easier to reason about what exactly CSS variable will change 4. We generate variants (modifications) using CSS variables with modification classnameIn this file we use only SCSS variables in style properties values, every - without expressions, just variables.::We can move this to `mixins/_table-variants.scss` file and enable opt-out from declaring these values E.g. create a mixin which sets these values and call this mixin when we need to instantiate CSS variables mode (turned on by default) Any idea how to improve this part? ::In SCSS variables list we set reference to a CSS variable, possible here to override on application side: * specific value, e.g. `$table-bg: $red;` * reference to another CSS variable `$table-bg: var(--primary-color);` * set to null `$table-bg: null;` * set to custom expression of CSS other variables `$table: hsl(var(--color),var(--l));`::Other SCSS variables can be used by library users to set a CSS variable on application side, so that they can create own variants by other properties.::We avoid here usage of custom properties. It is only possible during variants / modifiers generation. So that we can backport to IE11 here (except variants) Also it is easier to reason about: We had `--bs-table-accent-bg: var(--bs-table-striped-bg);` not clear what it changes, it changes accent color ? Need to Ctrl + F what exactly it will change and it will be easy to make a mistake when we will have more variables and more selectors As a downside - yes, more code::",e2ff8eba7605516503dbf174bc90afd3f11133f0::9406324f36bb5111f4dc3221c4284bc7f7d90a6f::65b11aff13b79ac743b5864e555a162863278377::46496aed80d97fe85ffd75acdde56e5804d7c19e::ea616bf558b2f7e39c17e23e64de30ee594a4c9b::
https://api.github.com/repos/twbs/bootstrap,31675,v4-dev-xmr-backports::v4-dev,1,merged,v4::,"@mdo it seems we are missing another one from v5, `https://icofont.com/`, you want me to backport that too?::",6c115374a9e62b7e7e5d4cb4750343067d206731::3cb24b03986461d9fc4b2f4bb9aa60321df586a0::4cb5b3f615bfa654ce3e71a1d5416e29fb04cd96::7055abb03a98b4b2b9b9594d2f9ff378c58f7749::8b33e1ccf563200661d8451491bfec82feca176b::85fdbc277e1c986f1fa58acf80338d6a2043221a::5dc9d3f0f89201bd55610804cdb0470d0a7f81e0::a9314fd8b551eb0444aff1d539bdc1a87e046eb1::983b27b0c830df05d085de4b816c1a302344c78a::
https://api.github.com/repos/twbs/bootstrap,31339,github-links::main,1,merged,backport-to-v4::docs::v4::v5::,Fixes #31293 (which should've been an issue). Thoughts on backporting to v4? Preview: https://deploy-preview-31339--twbs-bootstrap.netlify.app/docs/5.0/getting-started/introduction/We should use the repo config variable here::,26db44e4fccf30c47b563d059763d6c556b8bc33::a7d69361bf7d085bd869ec569637c174453684bd::594e1e895366b685adb23e5143d438d12d5b06f1::83ae4b37413fd9ed520aa8f36cdb259b48177b49::7136e2dfd6aaa8fffefa4f513360b64bf631a40c::
https://api.github.com/repos/twbs/bootstrap,31285,side-modals::main,1,closed,backport-to-v4::css::feature::v5::,"This PR adds two new modifier classes to our `.modal` component, `.modal-left` and `.modal-right`. It uses these two classes to create offcanvas drawers for navigation, content, and more. I've included two slightly different examples for now: a nav component and a list group component. I'm thinking a new example (perhaps a sidebar shopping cart or additional dashboard layout) could help show more of this off, too. Still needs more work, but wanted to capture the idea from comments in #29017. **Source:** https://bootstrap-menu.com/detail-modal.html by @vosidiy Fixes #27033, fixes #24718. --- **Demo:** https://deploy-preview-31285--twbs-bootstrap.netlify.app/docs/5.0/components/modal/#sidebar-modals <img width=""1792"" alt=""Screen Shot 2020-07-12 at 10 50 47 AM"" src=""https://user-images.githubusercontent.com/349621/94693493-79201980-033c-11eb-9b41-b16bbf1eb332.png""> --- This could also probably be backported—thoughts? TODO: - [ ] Allow customizing side modals transition? - [ ] Nuke the off canvas example or adapt it to use this solution? - [ ] Fix the right padding issue",638febae4c95acf407288a9d72f4366d8b70f2cd::d5d42c55e51413ec50aff369580f8fa3b2bfde8e::f54d63119b3d107f8652259022bada8f76b63dfb::deb8568064250693bce722f934ba3d7f1c29748a::f1001c09261d0d4386ffa45173b0e22b2aafa8f2::
https://api.github.com/repos/twbs/bootstrap,31259,master-xmr-brotli::main,1,merged,meta::v5::,"This was something @MartijnCuppens suggested some time ago on Slack. My only concern is that gzip is the defacto compression used. We could probably keep both sizes in README.md as a middle solution? Also, not sure if we should backport this or not. /CC @mdo @ffoodd @MartijnCuppens @Johann-S",e3c910545f4846d1f2b3dbf0a02c85135aab4d4b::8b4535b77ce97e9d5911aeed8b10b744e216706e::
https://api.github.com/repos/twbs/bootstrap,31234,v4-docs-forms-backport::v4-dev,1,merged,docs::v4::,"partial manual backport of #31114 (omitted parts that were not directly relevant due to different structure in v4, without the overview)",13bd2b87224720bab3a313d92b59e518df6b05a4::ec91baaa452e432277204d0944cc40268911e7ea::ea6575ff7309addd64d8e9dee1b04949835c8d4e::747cb1e798d5d9b9f3b45105bdf6f7330bcacb06::2f652660869e51709d573fd6695a6729e477f06c::b31f7ee05ec6cca0eb2821dc31c2e1063c3873dc::f06ea9b1f7c39344eb29b7dda422af9bd5964ded::e6fbd2a1abc4e40ceafe1fe385830cb4892225db::
https://api.github.com/repos/twbs/bootstrap,31176,v4-dev-xmr::v4-dev,1,merged,v4::,"Notes: 1. I can't seem to be able to find an Edge version older than 15 on BrowserStack, so I went with 15 which is the oldest one I see 2. The #30326 backport needs the test backported too. /CC @ysds for this",c005edf28f9048674b65c37935f87b2a217326c6::e4af24b446ef463add11d7e5ae22a5d1f5dc935e::671c95bc8cf4e1046a66fb800258d8a9bed9867b::bc37818178ddfd98d1b31978854eb2d5641fb00a::940db1e6b6f81fddc7851f668f3a4f23f3d29dd2::8a5d45e337321a94cf8a27c01797562daaba965e::f3d178822e7905fd662cdf05a971ba68b1533a10::
https://api.github.com/repos/twbs/bootstrap,31114,v5-docs-forms::main,1,merged,accessibility::docs::v5::,"- expands on what's needed for ""faked"" controls inside a disabled `<fieldset>` - centralises the accessibility advice about always providing an accessible name, and mentions some of the possible variants; includes strong suggestion not to rely on placeholder and invisible labels as beyond AT users it can be bad for other user groups - updated warning about validation, which (due to #28414), is actually worse than the (now improved) browser default validation; expanded the example for server-side to explicitly tie error messages to form fields using `aria-describedby` this should at least partially be backported (manually, since v4 doesn't have the overview page)Not sure `@` is a proper description, shouldn't we move the id of the prefix to the label?::is is a proper additional description in that it makes it obvious what sighted users would perceive. keep in mind that this description is in addition to the preceding `<label>` that also still acts on the `<input>`, so it's announced as something like ""Username, @, input""::",4c394b909bc6aa8e0577a938463de8954e2811e8::7cb533826de0853d0788f40d4750392511e356a6::37c1db6558a16a7e0f0efe383ccab8535e2fcef6::b2a8fb41e016babf57de9af69bf3e903fb83c9ca::819a92aa1217e7a78366ee54c22283018681855d::30e918d5f1202e859ce2ffceaf125cd36d1fd5c5::41238f2a4950d13b9ba63b4e89e170b42a0b4062::a744ea8b0ff81f2347effb234e8638af9ab8b536::f8ffa1c32880c7ddbe1e131257267516be2103a9::
https://api.github.com/repos/twbs/bootstrap,31087,readme-badgesize::main,1,closed,meta::v5::,Pros: reflects the master branch's sizes without us having to do a dist commit Cons: it seems the sizes are off compared to bundlewatch. Either I'm missing something or the compression levels the 2 services use differ. I'll experiment a bit more and if we go with this approach I'll backport it.,e18e175a77e1b68e25671c96f14e6113a760ebc6::
https://api.github.com/repos/twbs/bootstrap,31011,master-xmr-babel::main,1,merged,backport-to-v4::build::v4::v5::,"* remove plugin-proposal-object-rest-spread * add bugfixes * `exclude: ['transform-typeof-symbol']` did nothing with our config Closes #31007 Yeah if you want equivalent behavior sure! I just was confused why you're still defining the plugin here since you removed it from the deps but I guess you are relying on preset-env to have the dep.. but after reading the [issue](https://github.com/twbs/bootstrap/issues/31007#issuecomment-642398601), see `loose` removes the `typeof-symbol` plugin so it's not needed, and `object-rest-spread` is included.. However you can't pass every option down to each plugin specifically (only loose in this case). Apologies Babel is still so confusing! The difference in output is due to how plugins/presets are working so here's a long explanation. Plugins [run before](https://babeljs.io/docs/en/plugins#plugin-ordering) presets so in this case, it's running the object rest spread plugin without `loose` so it uses the `_objectSpread` helper function. `loose` makes it use the `_extends` helper which is an alias for `Object.assign`. And there's even another option `useBuiltIns` which simply replaces it for `Object.assign` if you can assume that it's polyfilled or supported. My recommendation is to use `loose` with [`object-rest-spread`](https://babeljs.io/docs/en/babel-plugin-proposal-object-rest-spread#loose). Is there a reason you don't want ""babel is extending Object.assign.""? It would save more space due to less helpers being needed as you probably don't use it in a way that requires that spec behavior. Example from [CodeSandbox](https://50wce.csb.app/) I made for comparing configs: ![Screen Shot 2020-06-13 at 3 09 02 AM](https://user-images.githubusercontent.com/588473/84572940-7e486100-ad6b-11ea-8884-7f87f8669129.png) ::@hzoo TBH I was just trying to make sure we do things the right way because we haven't touched this stuff for a long time :) > Is there a reason you don't want ""babel is extending Object.assign.""? I thought it would make more sense to go with the official way and not the Object.assign way. Other than that I'm not aware of any other reason. Do note that I didn't originally set this up myself. So, I'm open to suggestions how to make things the right way. If you think it makes sense to keep the plugin listed in devDependencies, I can revert that part. I'm in between myself since I prefer to list everything I need directly. On the other hand, I didn't even know that this was included in preset-env until I played with it. Thanks for the reply!::> we haven't touched this stuff for a long time :) > I thought it would make more sense to go with the official way and not the Object.assign way Totally understandable! I don't think the way people use Babel is thinking about it all the time, it's interesting figuring out how to correlate perf/size/convenience/spec. Looking at https://unpkg.com/browse/bootstrap@4.5.0/dist/js/bootstrap.js, it includes `_objectSpread2`, `ownKeys`, `_defineProperty` because of the spec version of object rest spread (which is fine) but looking at usage you aren't doing anything like using defineProperties (writeable/enumerable) or using getters/setters so the Object.assign version should be fine. But if we want to make sure it behaves the same that can be another test (or unit test would cover it?). ```js config = { ...Default, ...config } ``` > If you think it makes sense to keep the plugin listed in devDependencies This is more about how npm works (if it's not directly there it uses the one from somewhere else, so either should be ok. Also another thing is that if you are dropping IE, you can change the output via babel using targets but i'll write more in a bit::But yeah my recommendation is to do ([blog](https://babeljs.io/blog/2020/03/16/7.9.0#babel-preset-env-s-bugfixes-option-11083-https-githubcom-babel-babel-pull-11083) for more context on `bugfixes` but it should be default in next major): ```js module.exports = { presets: [ [ '@babel/preset-env', { loose: true, bugfixes: true, modules: false, } ] ] } ``` so I would remove that plugin reference of `plugins: ['@babel/plugin-proposal-object-rest-spread']` since it's fine to rely on the `loose` behavior in these simple cases?::Was checking out https://blog.getbootstrap.com/2020/06/16/bootstrap-5-alpha/ and I was looking at https://github.com/twbs/bootstrap/blob/main/.browserslistrc, and after some rabbit hole.. it seems like maybe Babel has a bug with parsing `Android >= 6` for some reason.. but it looks like Android >= 5 (https://github.com/kangax/compat-table/issues/801) uses Chrome on Android instead of android webview. ![image](https://user-images.githubusercontent.com/588473/84834044-8835c280-affe-11ea-85d8-29e6dcecfaa0.png) So looks like after 4.4.4, there are no more versions and it just matches mobile android (which follows Chrome's versioning)? So I would suggest changing the value to `android 81` or using `ChromeAndroid` or `and_chr` for [Chrome for Android](https://github.com/browserslist/browserslist#browsers) instead. This way Babel wouldn't run as many plugins and it would save a lot of bytes since IE is dropped::Sorry for the late reply @hzoo! I just spent a few hours today due to this :/ I will probably make a new issue because I can't figure this out. Basically, the moment I remove `Android` our BrowserStack tests fail on Edge. https://github.com/twbs/bootstrap/pull/30986/commits IIRC the behavior is normal because after Android 6 (?) Android WebView is using Chrome behind the scenes. What I don't get is why babel doesn't transform the other things so that they still work on Edge. But maybe we are missing something else in our test configuration. Back to this PR, if you could PR against main what you think is the best that would be perfect :) Ideally, we should backport any cleanup on v4-dev too so that there isn't a big diff between the two branches, apart from the browsers we support. Thanks for the help! EDIT: another issue I hit was that `Edge >= 16.16299` doesn't include `Edge 16` for some reason. So currently on `main`, browserslist targets Edge 17::Ok that's very weird.. Android 6 shouldn't represent anything based on my research and Edge 16 is a relatively new version with support for es modules at least on the javascript side so it must be failing because of something else.. and it's odd Android somehow makes Edge/Mobile Safari fail (https://github.com/twbs/bootstrap/runs/788403787?check_suite_focus=true) when both of those are already defined in the browserslist.. with `TypeError: Function expected`, yeah would need to look into why::I went ahead with your suggestion, although I'd prefer it if you were the patch author :) It does save us a few bytes from the dist files, not sure if our unit tests cover the Object spread cases. @Johann-S  might have a better idea about it. This tackles the issue on `main`, for v4-dev I'd need to backport it and see if everything works well. About the Android issue, I'll make a new issue here to track it, and I already have a draft PR where I experiment with modernizing our browserslist config in #30986, but I hit the aforementioned issue, so I put back Android. Also I split some changes to #31124. Chrome Android is/was already included due to `last 1 major version`: ``` C:\Users\xmr\Desktop\bootstrap>npx autoprefixer --info Browsers: Chrome for Android: 81 Firefox for Android: 68 And_qq: 10.4 UC for Android: 12.12 Android: 81 Baidu: 7.12 Chrome: 83, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60 Edge: 83, 81, 80, 79, 18, 17 Firefox: 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60 iOS: 13.4-13.5, 13.3, 13.2, 13.0-13.1, 12.2-12.4, 12.0-12.1, 11.3-11.4, 11.0-11.2, 10.3, 10.0-10.2 Kaios: 2.5 Opera Mini: all Opera Mobile: 46 Opera: 68 Safari: 13.1, 13, 12.1, 12, 11.1, 11, 10.1, 10 Samsung: 11.1-11.2 ```::Cool this looks good and should be compatible with v4 to backport. The only breaking change would be modifying the browserslist (dropping IE, but I would try changing Android 6 to Android 81, the difference might be an issue with Babel parsing the browserslist but that should be the right workaround), dropping IE should save a lot more bytes (ex: `class A {}`).::Yeah, for v5 we have dropped IE. I still want to get the Android issue sorted so I'll make an issue for that. v4 still supports IE so that doesn't apply there :)::",fd14f76bd772c251043237d6c547fdd0beaed8b7::
https://api.github.com/repos/twbs/bootstrap,30999,v4-dev-fod-col-min-width::v4-dev,1,merged,css::v4::,"`v4-dev` backport of #30979, fixes #30852",20035ca768070a31432241b06cb24356433819d6::
https://api.github.com/repos/twbs/bootstrap,30998,master-fod-fix-examples::master,1,merged,examples::v5::,"- Fix Headings hierarchy in Examples list: easy to fix, no drawback - Drop redundant alternative on screenshots: block links were labelled like ""Album screenshot Album"" which is annoying - Pricing example layed on `.card-deck`, which has been dropped in v5. The first two points could be backported to v4, not quite sure about its usefullness however since those are pretty low priorities— @patrickhlauke, any opinion?",f05bf2e5b4881290e7776d989f91aa132043b2f1::fca2bce47e0c49d16becc30c1102357d0ef7b952::5b686f12f2149399578bf6143f03dbe66b86bb5d::1f4200fc7d4c7cfff219ee1e917cc8efe98dddfb::
https://api.github.com/repos/twbs/bootstrap,30989,master-fod-light-or-dark-hovers::main,1,merged,accessibility::no-backport-to-v4::v5::,"Alongside #30972 — and in #30548 roadmap — this ensures that hover and active states have higher contrasts than the default state: 1. for colored links it makes obvious that we have to find a clean way to add darkish background behind some of them. 2. the warning button's shadow feels a bit weird, not quite sure about what to do with it for now. Preview: [Buttons](https://deploy-preview-30989--twbs-bootstrap.netlify.app/docs/5.0/components/buttons/) — [Colored links](https://deploy-preview-30989--twbs-bootstrap.netlify.app/docs/5.0/helpers/colored-links/) Since this is only visual, should we consider to backport this to v4?",f564fe496f632d33ce06112f7baff7369e76df59::b3de8a4e9c7e45dc23af813534d233c6b312b1c1::4e7d68b9522160d0f5c02bdada8eae7fdb2dde7f::368c039d396bdb73012e2b58444a15ac3f5fac4f::fe061ef520e077c93fb04445bd9c7a62c6982164::317147db0481febb6a2dedee08af8fa072930df9::77a8a5af57bb00a6ebacbd67807ff3dda8bdcbad::62ce9f5fc0d70009e296439a81dab61699f0e445::
https://api.github.com/repos/twbs/bootstrap,30965,v4-dev-fod-IE11-floating-labels::v4-dev,1,merged,examples::v4::,"**IE11** While checking #30836, I came across floating labels in IE11 that could just work fine since [it supports a vendor prefixed version of `::placeholder-shown`](https://caniuse.com/#feat=css-placeholder-shown) and Autoprefixer just does it job… Preview: https://deploy-preview-30965--twbs-bootstrap.netlify.app/docs/4.5/examples/floating-labels/ **Edge** Moreover the Edge workaround uses `display: none` to hide labels, which is a pitty from an accessibility perspective. However Edge also concerns v5, so I'll target `master` for this and it should be backported late (Xref: #30966).",c07fdbc3648965b0971d8634a3b24affd10ad285::1264822211eb2536ca67e6de319b705bc81b0197::b9e49efd226cd20de2f30bd9f353a9ddda81612d::e98e5857a97be00aeeb5459e2db6988ce299aa34::
https://api.github.com/repos/twbs/bootstrap,30932,text-break::master,1,merged,backport-to-v4::css::v4::v5::,Restores `word-break: break-word` on `.text-break` to fix text breaking on flex containers. Fixes #30803. --- **Original issue and PRs:** - v4 backport: #30074 - v5 PR: #29325 - Original issue: #28304 **Demo:** https://codepen.io/emdeoh/pen/dyYjwoO?editors=1100,c5666d397ffde98ad172cdf9de0339ab5aa977ea::
https://api.github.com/repos/twbs/bootstrap,30927,master-fod-squared-close-icon::main,1,closed,css::v5::,"Fixes #30917, fixes #27163 Set `width` & `height` on `.close` to: - have a consistent `outline` on focus, - make close button consistent across components: dropping `padding`s makes all close button the same size, and less dependent about its context. I'm not convinced about the new `$alert-close-offset` variables but didn't find a cleaner way yet. Might be valuable to backport to v4, too.",55c830b5e63240ba62285ea68604df82365f1d16::75177af7a45d53f0c98ca750fc3cd9af2ef53554::
https://api.github.com/repos/twbs/bootstrap,30923,master-fod-flex-btn::master,1,closed,css::on-hold::v5::,"Fixes #30837 Simple PR to try this out. Should probably be backported to v4 if merged.`vertical-align` applies to aligning the button to its parent, not aligning its content.::",743c9741728f3d3d551f9569b0ac7895836de90b::0524f423807618f73d001d83745fa15f4f49300e::
https://api.github.com/repos/twbs/bootstrap,30871,XhmikosR-patch-1::master,1,merged,docs::v5::,I'll backport it later manually in v4-dev.,cda31075ae50669cc1c182283d6fb20638699b1d::bc4dccb3137ad589bc7c4d0c6f7e51c9654f9289::
https://api.github.com/repos/twbs/bootstrap,30769,v4-homepage-updates::v4-dev,1,merged,docs::no squash::v4::,"This PR brings v4's docs homepage closer in line to the upcoming v5 docs changes, featuring a cleaner and brighter homepage and some updated styles elsewhere. - Updates navbar to use the brighter purple, making things feel livelier. - Updates purple docs buttons to no longer be outlined. - Update homepage masthead content, add Icons section, redo Themes section, and more with new layout. - Update examples index page to streamline buttons in the header and add Themes callout at the bottom. Woo, hoping to get this into v4.4.2. Meant to open the PR yesterday, but I lost all my changes when I was working too fast. Think I've captured it all here though. Preview: <https://deploy-preview-30769--twbs-bootstrap.netlify.app/> TODO: - [x] Add `loading=lazy` - [x] Make sure the images have the maximum dimensions they are going to be displayed and that they are not scaled down via the browser - [x] Compress all the images - [x] Fix tap targets are not sized properly Lighthouse error (not related to this PR, we fixed in on master, I'll backport it - XhmikosR) - [x] Resize `bootstrap-themes-collage.png` to 1150px width; now it's 1151px (I will re-compress it after that) - [x] Verify the other changes this seems wrong::",0b3b87ad373355a63042e733f41cf7409965ca8f::f14c683aa3464e966f15770d1075987c5323f8df::eb706aa033e9ffe7a5f82633f0b9e4f29023add8::
https://api.github.com/repos/twbs/bootstrap,30709,v4-dev-xmr-release-442::v4-dev,1,merged,v4::,TODO: - [x] Maybe update deps in a separate PR one more time before the release. Also finish backports - [x] Verify SRI hashes - [ ] Finish release notes/blog post etc Preview: <https://deploy-preview-30709--twbs-bootstrap.netlify.app/>,2ce00fcc28e4e076f15f1231f0552ff8159af2ff::52fafb42d745a20d46be759313e0cc02b2aa673c::
https://api.github.com/repos/twbs/bootstrap,30612,zalog-backport-grid-row-columns::v4-dev-xmr,0,merged,css::v4::,This pr adds `$grid-row-columns` v4 backport. cc:// https://github.com/twbs/bootstrap/pull/30606,904e04dfb0129fc347444cb35116f1196dc29bf9::
https://api.github.com/repos/twbs/bootstrap,30573,v5-responsive-dashboard-improvements::master,1,merged,backport-to-v4::examples::v4::v5::,Cleans up some column classes to ensure things line up across all viewports. Also fixes some broken padding on the .navbar-brand. Wondering if we backport the changes to this example? Fixes #25552. Preview: <https://deploy-preview-30573--twbs-bootstrap.netlify.com/docs/4.3/examples/dashboard/>,15fbeb4e127b4455454afcc09184fc8b723e1210::3ff0c8f4b4036fa9010849901d193a687491e203::
https://api.github.com/repos/twbs/bootstrap,30542,master-mc-cleanup-docs-menu-toggle::master,1,merged,backport-to-v4::docs::v4::v5::,Fixes issue I mentioned https://github.com/twbs/bootstrap/issues/30420#issuecomment-611392100. Not worth backporting.,752f65574b19aa91a014e7d3c4604533f54160a6::6bd74388c846bc384bea2d212e9a2ca78333c023::
https://api.github.com/repos/twbs/bootstrap,30448,master-xmr-docs-links::master,1,merged,backport-to-v4::docs::v5::,I will try to backport these to v4-dev tomorrow.,2bc11a10c89d266848ee0d1559001bc704ef07ff::ffc34da5edded125c5d29610cb47eb079f6b0ba5::
https://api.github.com/repos/twbs/bootstrap,30411,master-xmr-terser-opts::master,1,closed,build::js::v5::,"Apparently this yields a ~~non-trivial size~~ decrease (gzip): | File | Before | After | Diff | | --- | -------- | ----- | ---- | | bootstrap.bundle.min.js | 22.38 kB | 22.3 kB | -0.08 kB (-0.36 %) | | bootstrap.min.js | 15.86 kB | 15.83 kB | -0.03 kB (-0.19 %) | ~I haven't tried passes > 2 yet, might be worth trying 3 or 5 too~. I tried passes=5 and it results in the same savings as 3. Also, if we conclude this is fine, we might as well backport this to v4-dev. Preview: <https://deploy-preview-30411--twbs-bootstrap.netlify.com/>",f50c001076d562fbb769d3e6ad026f6d01aaddb8::
https://api.github.com/repos/twbs/bootstrap,30390,master-mc-form-display-block::master,1,merged,css::no-backport-to-v4::v5::,"`.form-select` and `.form-file` have `display: inline-block` applied to. This results in an inconsistent behaviour in `col-auto` because the label length influences the col width, even when the label is smaller: https://codepen.io/MartijnCuppens/pen/wvamMpQ `.form-file` is a div, so several properties can be removed. They were added in the past because it used to be a label. Not sure if we should backport this, could be a BC.",4276febce6e346fe61ac0de4c35d9efcda85bace::
https://api.github.com/repos/twbs/bootstrap,30214,master-xmr-netlify-url::master,1,merged,docs::v5::,"So, this will allow each branch/preview to have its own base URL instead of the default one of the main site (getbootstrap.com). It shouldn't affect anything in theory, since on Netlify's robots.txt has indexing blocked. Ideally, we should backport this to v4-dev, but I'm not sure how easy it'll be, if at all possible. I will look into backporting it when I have some time. Refs #29949 Preview: <https://deploy-preview-30214--twbs-bootstrap.netlify.com/>",bdc307a331f60950691e219f882c5e68cb4931c0::
https://api.github.com/repos/twbs/bootstrap,30199,master-xmr-lazyload-img::master,1,merged,docs::v5::,"TODO: - [ ] See if we should skip lazy loading some of the images - [ ] Decide if we want to backport this to v4-dev - [x] This is blocked due to <https://github.com/validator/validator/issues/699>; we could ignore the error, but there's no need to hurry IMHO Preview: <https://deploy-preview-30199--twbs-bootstrap.netlify.com/>",9a637db84665c770402d3d17ca14faae057e4f1d::48f420069312ae1edcf13fbfe90a17230baa78d8::
https://api.github.com/repos/twbs/bootstrap,30072,v4-dev-xmr::v4-dev,1,merged,v4::,~~We need #29325 and #29986 to be manually backported to this branch~~,225389ab6c7a32c2ccf7625d333a2f9773565307::8731ad946da585dc627f75ab28d08829d95e0df9::ef121d4499b7a468f82d98fa23f698bfd1394de8::050d5b66d2d8b42265d65f5d0f3f5699d250eccf::4c581edcfa712b8c23a5291c6545c9a47d04c25f::07028617cd5efa274c0affb2eb6cda455a61068a::65f9a3e7c701b530389d10714d775fc100229628::816debc0e8f10de291f314b31fab4d7236144502::8b7a49afa8882f3dbf5400ff632697449ed871b4::86b14c4ab746bfa11982980dff2ec4029767e7af::a09fa8de95d15c20cf0c7769f0319018fd87dd45::e0feefc056fab181cf14a5b8c205f41c325ad543::89da4c02fec4373ad4207dc5a7ae05dd32a5bb7e::11a0993244ea61fb91c69906488e8af8d84e0a2b::c7dc3eb5fc445dce7c99afff1e8ad96dcc74f140::ce158c57b1118096487eca47496dde1401e60ed4::04d2b3a22f239813036ed301e54e8ce6ff7c9d9a::b59eb6d03972890823f313a85196e37e8c7bd4e1::028460e17cd20627ce81290631a9d785cd718795::70dbd9a6aad1a297bbad64422afbd66560eef0f5::
https://api.github.com/repos/twbs/bootstrap,29969,master-xmr-regex-test::master,1,merged,backport-to-v4::js::v4::v5::,"Not sure if we should backport this`tabClass.length` is equal too `tabClass.length > 0` not really needed that change::It's what we do in popover.js; this code is exactly the same::So we can change that in `popover.js` too 😄 but it's nitpicking ::Fine by me, I'd just prefer if we enforced this with a rule, but I cannot find one, only for the opposite `unicorn/explicit-length-check`::",f7abfe296c44daadb18c179f7c304ab271fd7c37::1ffa7b144b06986182c9d15d5e1d8df73d28e7c7::
https://api.github.com/repos/twbs/bootstrap,29968,master-xmr-sanitizer-srcset::master,1,merged,backport-to-v4::js::v4::v5::,Not sure if this should be backported,db37b3120fec375fb92a658cd84771fb7cf64f92::95fdd7f7fb5eeca409e4aa84c198e5ff1aa69788::70bd7b90ab07945c43049e9f930c2b3b65a3e43c::
https://api.github.com/repos/twbs/bootstrap,29920,master-xmr-lockfile-lint::master,1,merged,build::v5::,Fixes #29918 I'd backport this to v4-dev too but currently we are blocked because this requires Node.js >= 8. After #29908 we will be able to backport this,ace28668d98a95a70766338cc9bd9dfe8426dfa9::
https://api.github.com/repos/twbs/bootstrap,29908,master-xmr-pck-rm-engines::master,1,merged,meta::v5::,"This property doesn't, or shouldn't, affect consumers of the npm package since we distribute the built files. IMO we should definitely backport this to v4-dev, that's the whole point, but it could be considered a breaking change, although I don't see exactly how. So, please chime in if you think this could break something out there. Closes #29821 TODO: - [x] verify Netlify picks up the proper Node.js version - it's using Node.js 10.x AFAICT, like before - [ ] decide if we should backport this to v4-dev",7beebc49e0f2518117f69bf39402985d03a9780a::f59808dd19a7bd3cee942debfccf13ff846e77e4::7c0766ea638b93b2e093937e9d51e10f3046f499::
https://api.github.com/repos/twbs/bootstrap,29792,master-mc-update-states::master,1,merged,css::no-backport-to-v4::v5::,"Minor doc update, probably not worth backporting to `v4`.",0c376eb76262d75aad48ef344d3e8d611c05f2b7::7449eb077a43ad6c6516581c6a3a575a18aa8d3a::
https://api.github.com/repos/twbs/bootstrap,29709,master-mc-stylelintrc-double-quotes::master,1,merged,css::v5::,"This rule should also be backported in `v4-dev`. Shall we do a new PR or cherry-pick https://github.com/twbs/bootstrap/pull/29612 and this PR, @XhmikosR?",bb3c2b216e53ad90d97a870e9e02255923b2c606::
https://api.github.com/repos/twbs/bootstrap,29654,master-mc-check-label-cursor::master,1,merged,css::v5::,`master` backport/fowardport/whatever of https://github.com/twbs/bootstrap/pull/29633.,39cb396ab027eceb803bf8255b0a2498be82b2e3::
https://api.github.com/repos/twbs/bootstrap,29620,v4-dev-add-substract-functions::v4-dev,1,merged,css::v4::,v4 backport of #28915. I've checked the css output which was more or less the same (only differences were some small optimizations in the calc functions like we had in #28915).,e7204d9ecfef3cd75071ef0cacfe48c430eb24bf::84ad09afac9d596bd1718c0fbbcbcd3d6449812e::5e4f98a5f07f2cac4204aa6557f4af1cf7e2cca7::d51e865f77edb6dd91ae0408c2e6b89d1c875100::7ea48459857740e46efc17c0947052cb12231bd5::
https://api.github.com/repos/twbs/bootstrap,29400,master-xmr-chokidar::master,1,closed,build::v5::,"~~The main difference is that by default it won't run the referenced subscripts, only when a file changes.~~ chokidar seems to be lighter than nodemon: <https://packagephobia.now.sh/result?p=chokidar-cli> vs <https://packagephobia.now.sh/result?p=nodemon> I thought about backporting this to v4-dev too, but we need to use chokidar-cli 1.x there, so I'll probably leave it as is for v4-dev. Please try it on macOS and Linux and let me know your thoughts. /CC @mdo @Johann-S @MartijnCuppens @ysds ```suggestion ""watch-css-main"": ""chokidar \""scss/**/*.scss\"" --initial --command \""npm run css-main\"""", ```::",40a0048591d4d2fe65067634ff03492ee9c03e16::
https://api.github.com/repos/twbs/bootstrap,29387,master-ysds-docs-close-button::master,1,merged,docs::v5::,"Change the name to a ""close button"" for clarity and consistency. It is free to backport this to v4.",2e2a3bee3152dddfc1077a3b53c71d39ee540914::
https://api.github.com/repos/twbs/bootstrap,29325,ft-fix-text-break::master,0,merged,backport-to-v4::css::v4::v5::,"Fix #29319 `word-break` property is mostly use for East Asian languages, for soft wrap opportunities between letters commonly associated with languages like Chinese, Japanese, etc. When the `overflow-wrap` property is not working (IE, Edge), we need to use the old `word-wrap` property as a fallback. Note: If accepted and merged, this fix should be backported to v4.",0ed8c82d8dbba066afd44dd3e48f15d5c512ab26::35c6c7074acd65834158369f2f3899bffb93970c::
https://api.github.com/repos/twbs/bootstrap,29208,master-xmr-docs-a11y::master,1,merged,accessibility::docs::v5::,"IMO we should backport these. @patrickhlauke: there are probably more color and general accessibility issues, but I try to solve the issues in batches. There's one thing that bugs me: >This form does not contain a submit button, which creates issues for those who cannot submit the form using the keyboard. Submit buttons are INPUT elements with type attribute ""submit"" or ""image"", or BUTTON elements with type ""submit"" or omitted/invalid. For the search form. Preview: https://deploy-preview-29208--twbs-bootstrap.netlify.com/",9b97dc640f1f3777a7a60d5729f9ffecb4c7005e::ed11a77ca3445ea3fc69e30be41cd5968ea9b22f::0a783b04822e1906638053c0a00c8ba6590702c8::24ad18bd52701675f46eb5819c01943151cd7f31::cc99303e58dfbd0a6b1729e9ebbb30c9ea7dc94f::8ff91e30b097c0e98002fdeebb72740411078e7d::f3b91a9fdd4a705b8b703889a6c02e281f252a87::15991927bb11372f4cdd04cd9f3cd7958397a483::
https://api.github.com/repos/twbs/bootstrap,29198,master-xmr-colors::master,1,merged,accessibility::css::v5::,"Feel free to push here any further color tweaks. I check this on our docs page, but the highlighting colors mostly don't pass WCAG 2.0 AA so this makes it harder. Also, not sure if this should be backported or not. Preview: <https://deploy-preview-29198--twbs-bootstrap.netlify.com/> TODO: - [x] darken links color - `#0d6efd` - [x] darken pink color - `#d63384`",8bbe51095c10426ff4fea83c2d7eecaa9a321395::433f8959aef8c15e509146a6042923b16ce04771::668e23f91991ca6af852228a33b4b71647619c0a::
https://api.github.com/repos/twbs/bootstrap,29192,master-xmr-robots::master,1,merged,docs::v5::,"Since we build with `HUGO_ENV` set to `production` on Netlify, use another variable to prevent crawling. I'll backport it for v4-dev later. BTW this could probably be simplified and ignore `HUGO_ENV`.",4118da2dc014ba8384c73a17559169364b784b3d::
https://api.github.com/repos/twbs/bootstrap,29164,v4-dev-reboot-placeholder-link::v4-dev-xmr,1,merged,css::v4::,#29162 have not backport #29140 completely.,a03422e5d4840f6ce505dfcf1ad74a8fd1a9b76d::
https://api.github.com/repos/twbs/bootstrap,29162,patrickhlauke-reboot-placeholder-fix-backportv4::v4-dev-xmr,1,merged,css::v4::,v4 backport of https://github.com/twbs/bootstrap/pull/29140,966d5617a4eae8aad64af23bb673f85f08489c2f::
https://api.github.com/repos/twbs/bootstrap,29139,v4-dev-xmr-svg::v4-dev,1,merged,css::v4::,TODO: - [x] fix form state icons escaping - [x] backport missing bg optimization - [x] optimize SVGs,1edc198e3b173979beb5d49670e7511ca411b392::0b970f22041ec3a071a1f241c5fbfff139498974::853754989a771a6dc2592864d3c5eb62656982f7::0c35349a999e53e35cf25adf33f88d51d5f62f09::672e8c126bd89210fd9add7f25e221c008a941a2::fab8935e84ff8208940820d0689f5e4afcbcbd79::0597881e0b5ce2e92a6561237d8b1bd6a18a8d4a::
https://api.github.com/repos/twbs/bootstrap,29109,master-xmr-browserstack::master,1,merged,backport-to-v4::build::v4::v5::,"This might fix the build failures we are getting. /CC @MartijnCuppens @mdo @Johann-S: the only way to test if this fixes the failures we are getting is to merge it and see how it goes. If it fixes our issues, we'll stick to the old version and I'll backport it to v4-dev later. If not, I'll revert this and hope for an upstream fix.",7ea8d65a4083a155e6132f39b10d9ad07c42d676::
https://api.github.com/repos/twbs/bootstrap,28929,patrickhlauke-v4-backport-dropdown-unit-test-esc::v4-dev,1,merged,js::v4::,backport of the unit test from https://github.com/twbs/bootstrap/pull/28928,0efec2b6209c7bda0de1381d20203f8b038f9de8::239a1ee987d28ffcd54a60fd5a3a3216c255ddd9::
https://api.github.com/repos/twbs/bootstrap,28870,master-ysds-grid-option-form-row::master,1,merged,css::no-backport-to-v4::v5::,"If the `$enable-grid-classes` is set `false`, it is no use generating those styles. No need to backport to v4 because this includes potential breaking changes.",d6082abeefff24e3ad842d842bf7251b8d9c8152::db07755b1931b2759bfe42f631806e490d1fe5e9::
https://api.github.com/repos/twbs/bootstrap,28783,jo-auto-pos-toast::main,1,closed,breaking-change::feature::js::needs migration notes::v5::,"Changes: - added auto positioning for our toast component (top-center, top-left, top-right, bottom-center, bottom-left, bottom-right). - Removed the use of `.hide` because I cannot get elements widths TODO: - [x] Top middle - [x] Bottom middle - [x] Docs - [x] Unit tests - [x] Fix docs example situation while a toast is still showing - [ ] Revisit the apply styles at once approach - [ ] Add migration notes You can test it here: - https://deploy-preview-28783--twbs-bootstrap.netlify.app/docs/5.0/components/toasts/#placement - https://codepen.io/Johann-S/pen/BedGrO Can we change these to strings?::Isn't there any way to set multiple properties at once? Maybe with `style.cssText`? IIRC this can be quite costly because the element is repainted every time a property changes. Might be worth checking other places too later :)::yep sure 👍 ::I will check that thanks 👍 ::I think we can pass multiple classes here? ::This is ES6, just pointing it out::yep, that's just for our tests ::I wasn't sure about it, but yep I'll do it 👍 ::We need an initial placeholder option value here :) After we add it, feel free to backport it to the visual test too::This needs some word proofing @mdo::Doesn't this change affect the current behavior though? I mean, we didn't clear their position previously? If it's only for our docs, maybe this shouldn't be here?::The toast seems to behave a little bugged since we autohide it. Imo, we should disable that and use a default position value like @XhmikosR suggested. Also, the class needs some adjustment: ```suggestion <select class=""form-select mt-2"" id=""selectToastPlacement""> ```::It doesn't change the current behavior it improve it, because before that we cleared the positioning on hide, but with that change we can change position without hiding the toast::If I understand what's being proposed here, this should suffice. ```suggestion Toasts are dynamically placed relative to their container with the position you specify. The top right and top middle are often the most often used for notifications across devices and operating systems. If you have more than one toast displayed at the same time, they will automatically stack. ```::",d1ff48f5bd50698dd5fb43e7c4db85bc0bbe8ac6::179558de05450dc94a4c9736c60652f3e38f9b14::475d2884a4c7ec2ec6568e820bc945d59f9f7a3c::61fcda3c04b6767c593d7fea011eacc1a987c5fd::00125cdf6235efac4e46bc8e35578f95e1ab3cd1::d70b397998bb7260d2a9122ec367d6e2ef71130c::a7ca53054496ed4eaf4bc2deaa028444bc39bafc::c08526f23dde6f6c6832b3aed8816001db93e740::a015488f43f0b13cd5973daab552784f2b627101::e12b456229f4cba222058e0dcda3e7a2010f05df::
https://api.github.com/repos/twbs/bootstrap,28679,master-mc-fix-grid-docs::master,1,merged,backport-to-v4::docs::examples::v4::v5::,- The `.col-12` classes are redundant - Mention the `xs` infix is not used - Clarify the mobile first approach better This should be backported to `v4`,699f864af6b058b72ea261af390fdcd182f822c5::b0d824ece5ec4017193f315937e1f46ddf32298a::9b0fbd6f71f5498ff36f276fdb833947592848f7::
https://api.github.com/repos/twbs/bootstrap,28570,master-xmr-deps::master,1,merged,build::js::v5::,This we should backport in v4 if we agree on it.::In v4 we use `.text` of jQuery which is pretty much the same::True that.::,c7a0720a60003de5a40d326853384f58bdf74745::2ac6b8b90334a3ff372d064aa693ecdd5c2cb63b::f867e9f4695ef3e04dabbaf97a6758294c688a1d::44d64b21be718c9b2d14844ce1b172fb3662a06f::
https://api.github.com/repos/twbs/bootstrap,28557,master-docs-search::master,1,merged,backport-to-v4::docs::js::v3::v4::v5::,We only use https now. I will backport this to v4 and v3 too so that we are in sync.,9cdfecde57ec774314ed14cda600581ac36e6a87::f7d9dd11296bf78e8a64231d55b30b48afab14b9::
https://api.github.com/repos/twbs/bootstrap,28405,master-mc-rfs-802::master,1,merged,rfs::v5::,"I rewrote the `scss` a bit without changing the way RFS works. Improved some code & comments and moved duplicate code into internal mixins. This is in draft until RFS `v8.0.2` is released. No need to backport this to Bootstrap `v4`, because this doesn't fix or change anything. Edit: `v8.0.2` has just been released.",aaee0f7d45d0ea8156b6a7ed2d8003724281522d::723f65a3ab1df3c3628428a35d675781af698afc::
https://api.github.com/repos/twbs/bootstrap,28014,v4-dev-xmr-hugo-2::master,1,merged,build::docs::help wanted::v5::,"TODO: - [ ] **make sure our folder structure is the proper one for what we want to achieve. Also see if we can make folders nesting level smaller, maybe by using permalinks or something. For content and static.** - [ ] Review the new Chroma styles - [ ] audit the changes by bep or someone familiar with Hugo --- TODO (can be sorted out maybe after the merge) - can we generate SRI hashes for existent files on the fly? For bootstrap.min.css, bootstrap.min.js, bootstrap.bundle.min.js, popper.js/1.14.7/umd/popper.min.js. This would simplify things as we could remove the release-sri script - get image width/height with Hugo when possible (examples images, homepage) - maybe use Hugo Extended version for docs' CSS? - bep's suggestion: > Re. > ``` > {{< partial ""callout-warning-color-assistive-technologies.md"" >}} > ``` > The partial above uses the `partial` func to load, parse and execute templates. This has its limitations and is possibly ineffective. > I would recommend that you store your callouts (and other content files you want to include) in a so-called headless bundle -- and load them via `.GetPage`. This way you can use markdown + shortcodes etc. - bep's suggestion: > Ref. `{{ block ""header"" . }}` in your `single.html` template. > Blocks only make sense inside base template(s) (i.e. `baseof.html`), which I cannot see.  I would highly recommend that you restructure your templates to use them. It removes some repetition. --- <details> <summary>Fixed issues</summary> - [x] fix Netlify previews; fixed with the relative URLs - [x] make sure all layouts are fine - [x] homepage - [x] Fix variables in code snippets - [x] examples - [x] index page - [x] individual examples are not being generated at all - [x] versions - [x] sort versions in reverse - [x] fix `4.0` showing up as `4`; fixed by using strings in data files - [x] fix partial include/icons - [x] fix docs sidebar menu; see if we can still use a data file for this - [x] fix single menu item (Migrate) - [x] placeholder shortcode: backport the latest v4-dev changes - [x] Fix `bugify` - [x] Example shortcode - [x] remove the placeholder SVG etc - [x] Fix nested placeholder like in media object second example; the regex is too overzealous. We might need to split the string like we currently do. - [x] remove the extra newline when there's a placeholder image - [x] add default `lang` `html` for `example` shortcode; it seems we only pass HTML - [x] support `hide_markup` or `nohighlight` in `example` shortcode and adapt content - [x] Use `false` for text and title in the example shortcode instead of `"" ""` - [x] fix ToC styling - [x] whitespace control - [x] Streamline the inline shortcodes whitespace - [x] make sure the HTML comments we really want to keep are kept - [x] Fix the remaining inline HTML content cases - [x] Regenerate Chroma/Pygments styles and adapt it - [x] Report/Work around the stray `p` tags issue - Reported in https://github.com/russross/blackfriday/issues/524 - Reported in https://github.com/russross/blackfriday/issues/525 - [x] Figure out/report why https://github.com/twbs/bootstrap/pull/28014/files#diff-cadd93f34018d2674cc31bd8da855e07R352 isn't rendered as HTML - Reported in https://github.com/russross/blackfriday/issues/523 - [x] compare the number of generated pages so that we don't have extra/missing ones like `/docs/index.html` - [x] **Before the merge:** - [x] Remove `--renderToDisk` from `docs-serve` script - [x] Remove any temp commits </details> --- Fixes #24475 **Preview:** <https://deploy-preview-28014--twbs-bootstrap.netlify.com/> Please see [my comment here](https://github.com/jekyll/jekyll-seo-tag/issues/100#issuecomment-293764634) before adding this. I never did hear back from @benbalter or @pathawks on their opinions before the issue was auto-closed. Hope you guys don't mind the ping. :)::I don't mind personally using this because it will be used rarely anyway.::Why is this needed?::From https://deploy-preview-28014--twbs-bootstrap.netlify.com/docs/4.3/getting-started/browsers-devices/, this: > If you require Internet Explorer 10/11 support, use Bootstrap 4. Was rendering as: > If you require Internet Explorer <sup>10</sup>&#8260;<sub>11</sub> support, use Bootstrap 4.::Ah, nice good catch. Makes sense then 👍 ::",9ff00a6e27e9a6a010faa9a727109a38fb4f198d::2f06a9a17d9d5ffaa13b76a62d02e5e55b478309::8651462b672080b86cdf992751730a4e0ddceddb::2e3476ed85769f98b7ce9672d7a0febd8f52704a::e4c7f85aa81f74de0ea6124cecfd1db63cdc16c9::adcbcb859e7e01548eea517f00ec26ad09410a5d::86b5494a8c343efdb440db41f03eba0929356cb1::0e6dc85fc60d5501f60e10f692e0045d4c52d6ad::c53a1fea3445b640bdb4aaabc7d3191aacfc22a2::7ffb2633995d90140bdc482ab36fa8622e9d6e3a::9674caff6e9b521fcccfdc2a7086164bd25896b0::4f8ff70d22de5f296ba7e58d38613397092459ee::6fb4b21dbab9ee6a2eade44f2e930e135c8712cc::c4710059d2369a35bec0c09e5c2a3dd0f5b945db::dc2bc604f908ebcdad98daf5b3a14f42557eab39::8ada65a6945ce2c9ec466b4ddbe8108c27dfaaef::1b754bb3b98ac878b8073a1c1a913b98463382d7::93712629726b9d4dbb65097bf99b4591dd798b3c::5e3e75f25e4d4d92ed647b802b71e9d6e4733520::baf77d7434df4899aea33d720e902f11fe5406bc::c8f4cc5b5a6e71cfdc03d25cbfb0f775c408931f::ece9c595f0c4af7b6ac66038b857e4d84b0c9b8c::235d1db0dcd3fbc020e5b2808be3516c22d04e90::
https://api.github.com/repos/twbs/bootstrap,27632,replace-holder-js-with-svg::v4-dev,0,closed,docs::v4::,"Hey 👋 After starting discussions in #27395 and #27491 this is a POC to test the possibilities to replace [holder.js](http://holderjs.com) library with a pure SVG solution which doesn't require a 3rd party library. I've tried to create a minimal XML markup, with a background cover and centered text. After studying [Optimizing SVGs in data URIs](https://codepen.io/tigt/post/optimizing-svgs-in-data-uris) the output is the `plalceholder.svg` jekyll include in this PR. What's your opinion? #### Proposal optimized minimum XML markup ```xml <svg xmlns='http://www.w3.org/2000/svg' width='200' height='150' viewBox='0 0 200 150'> <rect fill='#777' width='100%' height='100%' /> <text fill='#ddd' x='50%' y='50%' font-family='Helvetica,monospace' font-size='13' dominant-baseline='central' text-anchor='middle'>Placeholder Text</text> </svg> ``` 💡 The `SVG` markup was improved after inspiration and tipps from @MartijnCuppens <details> <summary>previous XML markup generated by `holder.js`</summary> ```xml <svg width=""640"" height=""250"" xmlns=""http://www.w3.org/2000/svg"" viewBox=""0 0 640 250"" preserveAspectRatio=""none""> <defs> <style type=""text/css"">#holder_1670738e3a9 text { fill:rgba(255,255,255,.75);font-weight:normal;font-family:Helvetica, monospace;font-size:32pt } </style> </defs> <g id=""holder_1670738e3a9""> <rect width=""640"" height=""250"" fill=""#777""></rect> <g> <text x=""238.15625"" y=""139.85"">640x250</text> </g> </g> </svg> ``` </details> #### ⌨️ Tasks * use jekyll includes to create inline SVG with data URI * replace `data-src=""holder.js/""` with jekyll `holder.html` include * remove holder.js workaround in example.html #### 📖 References * https://codepen.io/tigt/post/optimizing-svgs-in-data-uris * https://codepen.io/jakob-e/pen/doMoML * https://css-tricks.com/probably-dont-base64-svg/ #### 🔗 Discussions * https://github.com/twbs/bootstrap/pull/27491 – `Revert ""Remove custom example plugin.""` * https://github.com/twbs/bootstrap/issues/27395 – `example.html doesn't replace the whole holder.js line` ---------- Fixes #27395, closes #27491I wouldn't name this `svg_encoded` because it's not proper encoding. Also, are you sure none of Liquid's own filters can do what we need here? Because currently you aren't escaping spaces for example, and I'd rather rely on something tested if we could.::Thx, for update the naming. Naming can be always improved. Intentionally I haven’t escape the spaces. See the findings of [this](https://css-tricks.com/probably-dont-base64-svg/) and [this](https://codepen.io/tigt/post/optimizing-svgs-in-data-uris) to keep the character count as low as possible.::The space escape is fixed with my last patch.::You can drop the `px`, it's `px` by default. ```suggestion <svg xmlns='http://www.w3.org/2000/svg' width='{{ width }}' height='{{ height }}' viewBox='0 0 {{ width }} {{ height }}'> ```::I don't think the `M 0` is necessary. Also maybe we can just use a `<rect>` here?::Also, the SVG doesn't work in IE, can you check what's wrong there?::Can't we still keep the 100% functionality? Because it's quite handy not needing to specify the size in pixels.::Wouldn't do that, in most cases images with dimensions are used. This makes it clear that the image is rescaled instead of being cropped.::It seems to work already with `{% include holder.svg size=""100%x180"" %}` I could change this, but I'm with Martijn, in the real world cases images with dimensions are used. What is the decision here?::`null` or `nil`? Also, you could probably use `default` here.::@XhmikosR, see my previous PR (example with `.mw-100`): https://deploy-preview-27633--twbs-bootstrap4.netlify.com/docs/4.1/utilities/sizing/ That's the result you 'll have when we allow `100%`, the image gets ""cropped"" from both sides if the viewport is resized and that is not the result we'll have with `jpeg, png,..` because we have a ratio with rasterised images. ::Wow, genius solution!::I've kept the condition consistent with the ones from [`example.html`](https://github.com/twbs/bootstrap/blob/v4-dev/site/_includes/example.html)::I'll have a look myself later because `default` is cleaner IMO.::Actually we can't do that here, so your solution is fine 👍 ::I think you'll need to calculate your `dy` based on the font size. For example the carousel text isn't aligned in the middle.::I'll convert it back to `alignment-baseline='middle'`::I'm gonna backport this to a new PR to fix the holder.js replacement in v4-dev, because I'm not sure when this PR will be ready.::",caa61678aec776ae9b4e1e2426ccd33bae53f1ef::999aaeb51f784cc3c54548d86340e8521d802e1e::f622437937550505e2c127fff5935526f6d4175b::d5610bc9234cfc40951e49827b7578bac2dfb277::37e8f150b0b41dce9404fcabf6ccacb624468632::1d7d2e898389a5122e3d476b4be8f189be9f6a80::5ecf498d235f3ca3b59e26fa852ed8b4302b4c73::6d5c0b591385961cfdec3983bf962dd6c3843b33::def95cae262adbc5fd2248f25c50f490fa844fc5::8527c0307cf37dd29eafd556e25670590ceb0861::93b04e12d395537610f7aea24c5f7869b476713f::
https://api.github.com/repos/twbs/bootstrap,27372,master-xmr-v3-batch-1::master,1,merged,v3::,"I decided to split #27288 so that it's easier to review.Will this actually get published to Bower or do we need to pull/modify this?::Ah, good point. No idea about this, I just replaced the `$` symbol. Your call. If so, I will remove the references in another PR when I'll backport more stuff.::",0ec389409067185badad8e3404c77155a57aad8f::8fdc9ab61ed0c31fb2a83724216216d5d908f76e::130d81fb1f37ef5bf60933578cb8478da07093f0::5a91f5ab20bf1b628972bb5a1a2f116915026ec1::d0cb2e3d693ada05329a64832ab6465cd31b90ae::11a6ebec9b307f84f929edd3d257945ba3357563::b7aa5e9c3b23e8805ebaa5a187ea263273a312b5::8fcb236411b36a3e4045f8054230948084148b05::f75098cbffe5e2419d515fa6e909763e7ded9e79::8487b52ecd844481cd18b09a2cb8a9bc1a8e511b::0e1f46bab58b8a354d57301faeb52ddddbb5eeeb::b890569f95e85d1ef5b36be026c5c38f3567bc0d::e1cae614d610464508ff013aaac929725ddcd697::65540855e628036a2664f1553c9c322da1da28a1::0e86df99cc257da89dcb73250f9e19ba49c3deb5::eb24cb0be7d5911da1ed450ecd6d2d0f6096fa5a::
https://api.github.com/repos/twbs/bootstrap,20196,v4-dev-xmr-shx::v4-dev,1,merged,meta::v4::,"Fixes #20192 /CC @cvrebert PS. We should probable backport in master. I can do it later, just let me know.",dec2695d7e707d4e35d163c3b2e4223db8a25fe0::
https://api.github.com/repos/twbs/bootstrap,19029,v4-dev-xmr-grunt-html::v4-dev,1,merged,build::v4::,- [x] We'll probably need to tweak Travis to use OpenJDK 8 before this is merged - [ ] And backport this to v3 /CC @cvrebert @patrickhlauke,c6c2958385e38d573aee61cb117add738f1b3635::79067a6440ba833fe290a2b386b0588ceb3610c7::fe1b8913ac3cd86d03a23fd58173c589280c47d9::
https://api.github.com/repos/twbs/bootstrap,6967,readme_npm_fix::master,1,merged,docs::,"This is a quick fix that backports part of the readme updates we're making in v3 to address the current out of date npm installation process. With v2.3 we overhauled the makefile to only install dependencies locally, and thus we don't need to install them globally via `-g` anymore. Problem is we forgot to update the makefile before release. From now on, just run `npm install`. If you run into problems, be sure to uninstall all the old versions and try again. /cc @cvrebert",e6a6fd2585d6d6bd80b0bbb500521514c48df1b3::
https://api.github.com/repos/twbs/bootstrap,6826,easier-variables-overwriting::3.0.0-wip,0,closed,,"Right now to customize LESS variables there are two options: - Edit `less/bootstrap.less`. This forces the user to modify the Bootstrap source code, but this option is not always available (e.g. when Bootstrap is included through Bower or Composer). Also, changing third party code doesn't seem a very good practice. - Copy and edit `less/bootstrap.less`. Here Bootstrap isn't touched but it requires copying all those imports (and updating their paths), this makes updating a little more painful. With the proposed changes one can do this: ``` css @import ""components/bootstrap/less/variables.less""; @import ""variables.less""; // Bootstrap variables overwritten here @import ""components/bootstrap/less/styles.less""; ``` `less/bootstrap.less` is functionally equivalent to current implementation so it could also be backported to version 2.x.",d04f4256cde5240d68f46d367687af3b60288ba4::
