https://api.github.com/repos/ansible/ansible,73863,wip_fix_plugin_loader_redirect_list::devel,0,merged,affects_2.11::bug::core_review::new_plugin::support:community::support:core::,"##### SUMMARY Fix unrelated candidates can be added to the internal redirect list. For example ``` - legacymodule: collections: - ns.coll ``` will end up with `ns.coll.legacymodule` in the redirect list even though the module in library/ is used. Besides ensuring the resolved name is present, the original issue that line was really meant to solve was that `ansible.builtin` would be in the redirect chain - e.g., instead of `['aws_s3', 'amazon.aws.aws_s3']` it would be `['aws_s3', 'ansible.builtin.aws_s3', 'amazon.aws.aws_s3']` so that module_defaults action groups worked uniformly whether the module as called as `ansible.builtin.module` or `module` (assuming `module` is equivalent). It looks like this also needs to be done for non-group module_defaults with ansible.legacy it seems, since action plugins like `gather_facts` have replaced the default list of modules to all use FQCN. Now there's no way to tell if the FQCN was explicitly requested or if shortname matching should still work. For example, this should still work: ``` - gather_facts: module_defaults: setup:  # (maybe a bad example, as `setup` isn't present, but `smart`; anything in CONNECTION_FACTS_MODULES would have this problem though) ... ``` ~But even after #72918 is fixed, the module_defaults entry would need to be `ansible.legacy.setup` for ^ example. Still looking at how to add the legacy/builtin FQCNs back (or drop the redirect list)...~ Going to try to keep these changes concise and deal with `ansible.legacy` separately since it hasn't been part of the redirect list yet and I think this would be good to backport. ##### ISSUE TYPE - Bugfix Pull Request any reason this needs to be a ""real"" copy of the ping module vs just a dummy module? (see the collections integration tests, there's a ton of dummy modules in there)::this has a lot of overlap with https://github.com/ansible/ansible/blob/devel/test/integration/targets/collections/collection_root_user/ansible_collections/testns/testcoll/plugins/action/plugin_lookup.py - even if you want to keep the dedicated action, this whole thing probably doesn't need to be a dedicated test target. Just add the custom bits you need under `collection_root_user` (as that's kind of the main one for collections). I actually considered making `plugin_lookup` a supported core action at one point- it might still be worth thinking about...::Thanks, I hadn't noticed that action plugin! The diff is much smaller now.::",0f3ec01a028b42f8831e1b3ffc068a91deab0923::a11d40e3690986a013a64b1d1854c8fa36588283::4df26429038ae667a3264f91c711ef91583071be::2cf4a84c538134988c06007a73a5c7c0f42a8734::
https://api.github.com/repos/ansible/ansible,73832,optional_module_utils::devel,0,merged,affects_2.11::core_review::feature::new_plugin::support:community::support:core::,"##### SUMMARY Treat core and collections module_utils imports nested within any Python block statement (eg, `try`, `if`) as optional. This allows Ansible modules to implement runtime fallback behavior for missing module_utils (eg from a newer version of ansible-core), where previously, the module payload builder would always fail when unable to locate a module_util (regardless of any runtime the module may implement). This is a collections ""quality-of-life"" issue that should make it easier for collections to use new Ansible features while still working on older Ansible versions (that have backported this fix; currently planned for 2.9/2.10 backport). ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME module_common ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` Would it be reasonable to add the collection loader code to pylintrc?::",72d080899a96478595470e426d75727f0e9690aa::6772802d6bbc40f6c71ddb87e4e28374164a03df::
https://api.github.com/repos/ansible/ansible,73770,add_210::devel,0,merged,affects_2.11::core_review::docs::small_patch::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Since ansible-base will continue to release, we need a way to publish it separate from the existing Ansible (aka package) 2.10 docs.  This adds 2.10 as a version for the Ansible Core docs. This will need to be backported to stable-2.10 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docs/docsite/sphinx_conf/core_conf.py ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",ffeb8233ba621f60aa4a5f41affdd5c1efb099ff::6a1a0d0f882ffcfb68ac6c8a3d92b0f5fd4efb5c::
https://api.github.com/repos/ansible/ansible,73616,coredocs-redux::devel,0,merged,affects_2.11::core_review::docs::has_issue::support:core::test::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> -  creates separate index and conf.py files (for ansible, 2.10,  and core) and symlinks in the appropriate files during make. - Ansible files are needed for Ansible 3 and future, but must be build from stable-2.10. - 2.10 files are needed specifically for Ansible 2.10, which must be buildable in stable-2.10 for some time to come. - core files - needed to build the subset of docs to a new url for core - docs.ansible.com/ansible-core/<version> - creates a make coredocs command to make only...core docs (no scenario or network guides and builtin collection only for example. - splits up the porting guides and roadmaps so only the appropriate files show up on their respective docsites. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Partially addresses #72032 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docs.ansible.com ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` I don't think symlinking is necessary. Just pass different configs and settings via CLI args. Look: ```console $ sphinx-build --help usage: sphinx-build [OPTIONS] SOURCEDIR OUTPUTDIR [FILENAMES...] [...] build configuration options: -c PATH           path where configuration file (conf.py) is located (default: same as SOURCEDIR) [...] -D setting=value  override a setting in configuration file [...] ``` So you could invoke something like ```console $ python -m sphinx -c sphinx_conf_dir_2.10/ -D master_doc=ansible_index ... ``` and there would be no need to mutate files on disk.::Also, we could explore if using tags (https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#tags) for conditional ToCs...::fwiw - both were tried and rejected by others in favor of the symlink approach. We'll see what other comments there are.::```suggestion #   make coredocs ------------- produce core doc at docs/docsite/_build/html ```::These symlinks appear to be responsible for the package-data sanity test failure. Instead of linking them, have you tried copying them instead?::Tried the copy instead of symlink localy and that does seem to work and removes the build errors, thanks! ::Hmmm... you wouldn't want the files (the copies inside of the docs/docsite/rst directory) to end up in the sdist, though, as they're generated files.  Does the build error go away because they do get added to the sdist if they're copied?  If so, it's not the correct fix.  Instead we probably want to add an exclude for those files to MANIFEST.in::In that case we'll need to ignore them in the sanity test instead of copying them, by adding them here: https://github.com/ansible/ansible/blob/00bd0b893d5d21de040b53032c466707bacb3b93/test/sanity/code-smell/package-data.py#L38::I've got this working.  For posterity, there are several locations that generated files may need to be listed: * `clean target` of a Makefile so that they're removed when make clean is run * `MANIFEST.in` they should normally be excluded in here so they do not end up in the tarball * `.gitignore` they should be added here so that they aren't checked in to the git repository * `test/sanity/code-smell/package-data.py` they may need to be added to an ignore list here if we don't want them in the tarball and they aren't ignored by an existing ignore pattern.::@samccann what was the reason for not pointing to separate configs?::@webknjaz - I'm not sure at this point. I remember I hit a roadblock and had to have @abadger help me out of it. As part of that help, we went to symlinks instead of  the separate -c sphinx option and sphinx tags.  I can try it again post-merge and see if I can get it to work. At this point, we have something that works and we need it merged today/backported asap to get the release out the door.::@abadger I'd be interested in hearing the details. Over the past year or so I've learned a lot about Sphinx and making Sphinx extensions so maybe I'd be able to help out.::I think if we're going to leave the version-switcher in place, we need to keep `index.html` as the name of the default main page.::Looks like this should've also linked `ansible_base_roadmap_index`...::",87107a3bc67d8a259d1e2da43b9b0e72093ff252::c775cc1df4cfb3da9a9f681df08ff4dba19265b9::8c6cb2725f6fb02fe30cc68a2819ba5e5b90020c::7fe6b0d80d795b3173acbf0e0e67bc8df0a31764::58b01f656e4be966cdf2c3c78a94ae7bfb6aa9f6::c50001a57aff3e6de169e7eb6cff134af785a25c::10d427820f5bbc995bb310ba82aff4f88b3609a3::589141c83385dda1ef286f77553dca01bcf45fa2::f7e0179ae3938c5a937367e5e05300a48887be2c::3e6698c211d5a62517f022ee1ab3a1f85026cc3e::3b398d230579dfbeaa01496b61272f253962dc6c::9bc8de48cd9208dff5506066dfd52f38fe789bc9::40f877fd1a24a62a8039f2ff9f73ab76b86ee466::ffb875145ef27f23410f3fc3966764b7acd6deb8::88a424368dee84693638d3c331326d4e30dbba52::ae87db4ddeccbc3890eae66c42e0896bb75666af::cedab8496ff33fd782396c3bb21aaeed9aa9f44b::f2cb1648bc2ec19c2f7d750fadc7dc99c0931ae3::51c6ba0b914d23606acf8b8b127967411ddfca7c::d21724e917d96d2e73580e85ca4c46ec9f506e7f::5cd272621a57399e0a68f98462c02b0797fe79b2::6a8ffbe44958a4c2678cf53efb4ac9a9ac38c493::f84500007e6dd2ebf5cea927878961cc6f1f6ae5::76b665dd74feab06a008f24a349117c1b9d1f512::7b54962d2b873c024462a3e583529a7f46bb844d::98b67f4ef35f0776abed7827c00e498c9c174c84::c921094051a075cd1b1edf2d3e0ba2ac6db1dc47::
https://api.github.com/repos/ansible/ansible,73458,feat/almalinux::devel,0,closed,affects_2.11::feature::merge_commit::needs_rebase::new_contributor::support:community::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> This change adds support for [AlmaLinux](https://almalinux.org/) and adds it as a member to the `RedHat` family of operating systems. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME lib/ansible/module_utils/facts/system/distribution.pyI would consider this a bugfix, which will also allow the change to be backported. ```suggestion bugfixes: - add AlmaLinux to fact gathering (https://github.com/ansible/ansible/pull/73458) ```::",64df6ed7a14ab71aee227871976d5e989543f635::fce22529c4f5a7293f12979e7cb45f5ed9f6e9f7::2f010e3c96875b25a25eaa5c732457086ada9250::057204415656042f6d35554d6599fa4c90f742b5::9759e0ca494de1fd5fc2df2c5d11c57adbe6007c::997b2d2a1955ccb4e70f805c18dc3e227e86c678::bd18be6c0c3cb45b0c67f983883a0acf246315aa::8f887b7adb998984469e3a0a0c123750bcb1d2de::7fb7d138fb1f5e3977d800cd2a56c60a101713ee::7cef930aa40d9836167796c9dbb44c3d4f0e5b41::4315e1880742eedc5b65fdc51fdc6a94afa61bd1::0cdc410dce6658e93c06fa27e0100ddbb11e7015::f271d02a9fa07299ea4fccbd7554a1bcec1782dc::82cdd7e735eb6244bd9eb23c5c11bf82111f267c::8d6136eab96dc2c0745996eb9bbb893e93015d2e::d3f3784b86789b7b55782b0af4fba6d6bb935f19::67f5bb39c7cf732c4e398318128d599e56ffdf67::125c220343deb60ad64f4a412e6f670ddb511f4c::aca5b0e43be4d7bd067abc6631978b1cdfa75d84::f88b02444ec39e5fa9947c9defc11f2a5a2908de::e1cdc7fa3b0d2689af17fcc320ead5cf1ecd59b8::77e2b326718f377fd8b6a61055300a9a965a8294::
https://api.github.com/repos/ansible/ansible,73428,bump-antsibull-changelog::devel,0,merged,affects_2.11::bug::core_review::support:community::support:core::test::,"##### SUMMARY Bumps the antsibull-changelog version for the changelog sanity test to 0.9.0. This is necessary to support new changelog fragment types which allow to mention new filter and test plugins in the changelog (similar to other new plugins), and which allow to mention new roles and playbooks ([feature documentation](https://github.com/ansible-community/antsibull-changelog/blob/main/docs/changelogs.rst#adding-new-roles-playbooks-test-and-filter-plugins)). Also note that antsibull-changelog 0.9.0 has a breaking change, which neither affects fragment validation (for which it is used in ansible-test sanity) or the ansible-core/-base changelog. So this should be a safe change. (It would be great if it could also be backported to `stable-2.10` so that its changelog validation doesn't fail on such fragments as well.) ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ansible-test sanity changelog test",baaecb4fbf783775c0873f8e4c5ad10cb97d107d::
https://api.github.com/repos/ansible/ansible,73132,fix_banner_code::devel,0,merged,affects_2.11::bug::core_review::docs::small_patch::support:core::,"##### SUMMARY When we removed the ""take our docs user survey"" in #73119 we missed a stray `</div>` marker. It wasn't triggered by the devel code, so we missed it until we backported in #73125. ue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME docs.ansible.com",e5e53ae92b2de550e93d8699af51008437ef3c34::
https://api.github.com/repos/ansible/ansible,72893,patch-1::devel,0,merged,affects_2.11::core_review::docs::new_contributor::small_patch::support:core::,"##### SUMMARY <!--- Your description here --> Bash command apt-add-repository was incorrect. Updated to correct command for adding apt repository. ##### ISSUE TYPE - Docs Pull Request +label: docsite_pr ##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> `apt-add-repository` is a symlink to `add-apt-repository` `apt-add-repository` is not available is the base Ubuntu docker image and causes confusion <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> Ubuntu install docs ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> 1. create a VS Code remote container installation of Ubuntu bionic 1. apt-add-repository is not a valid command in Ubuntu <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below Hit:1 http://archive.ubuntu.com/ubuntu bionic InRelease Hit:2 http://ppa.launchpad.net/ansible/ansible/ubuntu bionic InRelease Hit:3 http://security.ubuntu.com/ubuntu bionic-security InRelease Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease Reading package lists... Done ```",a07fbac4969211cd5af32887aefc76e80d28b76c::
https://api.github.com/repos/ansible/ansible,72876,update_rhv_virtualization_type::devel,0,merged,affects_2.11::bug::has_issue::needs_revision::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> There were some changes in the RHV engine that changed sys_vendor to `Red Hat` this patch fixes the issue. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Fixes #72875 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> setup facts ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` Could you please add a change log entry for this change? Thanks.::This is wrong, it will require further discussion within RHV team::TBH I don't understand the original reasoning. ""RHEV Hypervisor"" is just a Red Hat's branded oVirt Node. It doesn't cover EL hosts at all that can be RHV too. It doesn't detect oVirt either, which is identified as kvm later by line 196 through Manufacturer field. The fact should be called oVirt, as I do not see a downstream and upstream differentiation for any other product. If we really need to distinguish them then it should use Manufacturer field. IMO we should be checking oVirt Manufacturer(here as bios_vendor) and ""RHEV Hypervisor"" product(for RHV<4.4), and System Family field (oVirt or RHV, to distinguish from RHEL and RHEL-AV plain virtualization). Earlier RHEL-based RHV hosts would still be misidentified as ""kvm""  but that's the current behavior so it should be ok. See the logic since 4.4: https://gerrit.ovirt.org/#/c/ovirt-engine/+/106450/12/backend/manager/modules/vdsbroker/src/main/java/org/ovirt/engine/core/vdsbroker/builder/vminfo/LibvirtVmXmlBuilder.java ::I want to distinguish them because of the backward compatibility otherways I would agree to have the same product name. Also not sure if I should keep the RHEV or use proper RHV. Don't understand how we could use the bios_vendor to recognize the version. As I understand it we could use product_name or the System Family to determine the type and approximate version of the engine. (System Family - RHV<4.4 = Red Hat Enterprise Linux, RHV>4.4 = RHV) ::yes, because ""RHEL"" also means regular RHEL VMs (e.g. virt-manager created), not RHV::the question is if you need to keep bw compatibility even when it was wrong. If you do, then just add a new condition ant type oVirt for 4.4+ cluster levels, and then I'd just do the check for System Family being RHV or oVirt. You cannot use RHEL product name as that is the same for plain RHEL VMs. You would need further heuristics to distinguish old RHV on RHEL...and IMHO it's not worth getting into that mess ::Please remove that line, for RHV detected we have code above, oVirt should be detected as kvm guest::Let's modify the whole condition to: ``` if product_name in ['RHV', 'RHEV Hypervisor']: guest_tech.add('RHV') if not found_virt: virtual_facts['virtualization_type'] = 'RHV' found_virt = True ``` ::Let's remove this whole condition, above code should be enough :: I have added the product_family because the product_name is RHEL for the latest RHV.::Hmm, that's only for node hosts, but shouldn't we add below also to cover CentOS hosts? ``` if product_name == 'oVirt Node' or sys_vendor == 'oVirt': ... ``` ::IIUC this is still wrong, it will return ""RHV"" on plain RHEL virtualization. As I commented earlier you need to look at Family (/sys/devices/virtual/dmi/id/product_family) for 4.4+::yeah, and then we can check the family first (and return `RHV` if it's RHV) and only then the product name - I see that also with latest versions, VDSM reports `RHEV Hypervisor` for RHVH::we can also consider checking if ovirt-guest-agent runs (as we check vdsmd on the host) to cover VMs that started on RHV 4.3 and keep running on 4.3 cluster in RHV 4.4::I would avoid agent checks...if we can figuer out everything based on static immutable smbios data then let's do it that way. it's really not that complicated, the differences between versions are finite (sometimes it's also just a bug on ovirt side - like https://bugzilla.redhat.com/show_bug.cgi?id=1931786)::though, right, the only case where smbios data is not good enough is 4.3 rhel host where it looks exactly the same as on plain virt (martin's table for rhv 4.4 cluster level 4.3) I guess I would rather leave it be and identify as KVM and consider it a ""bug"" fixed in later CL::I don't mind much but if it's not too complicated then I would check for ovirt-guest-agent in a lazy way, meaning that we first check for product family (assuming we'll set it to all VMs that are started by RHVM 4.4) and if it's not set, check if ovirt-guest-agent is installed to cover everything. if it's complicated to do then yeah, I'd skip the last part::so something like this? ```python if sys_vendor == 'Red Hat': if product_name == 'RHEV Hypervisor' and product_family == 'Red Hat Enterprise Linux' : guest_tech.add('RHEV') ... elif product_family == 'RHV' or (product_family == 'Red Hat Enterprise Linux' and product_name == 'RHEL'): guest_tech.add('RHV') ... ```::Or: ```python if sys_vendor == 'Red Hat': if product_family == 'RHV': guest_tech.add('RHV') ... elif product_family == 'RHEV Hypervisor': guest_tech.add('RHEV') ... # and then maybe: else: ovirt_guest_agent_exists = ... if ovirt_guest_agent_exists: guest_tech.add('RHEV') ... ``` In the long run this would always return RHV and in the meantime we'll return `RHEV` also for 3.6<RHV<4.4.6 but that's not that bad I think if we expect clients to keep processing `RHEV` as an output - I doubt someone really cares about the brand. Maybe the version can be important but I don't see it's returned elsewhere::Not sure how it is returned in this version of ansible but in 2.9 where we will backport this logic so it can go to customers it is like this. https://github.com/ansible/ansible/blob/5a9f4f7bb395f4738d682c87e659267cc3929d76/lib/ansible/module_utils/facts/virtual/linux.py#L92-L94 And users use the value not sure how/why but we have opened bz and ticket on it https://bugzilla.redhat.com/show_bug.cgi?id=1904085 How/where I can check the guest agent?::Ah, by 'brand' I meant RHEV vs. RHV. So as from 4.4.6, assuming that's where we'll change the sysinfo settings to always include family=RHV, we'll return `RHV` and for lower versions, we'll return `RHEV` for RHVH as in the snippet. @nyoxi , can you please suggest how to check for ovirt-guest-agent existence in RHV?::>  So as from 4.4.6 it's really just a bug in CL 4.5 until the fix in 4.4.5. We have family RHV everywhere since 4.4 and for 4.4 CL it works fine. Both RHEL and RHVH.::> it's really just a bug in CL 4.5 until the fix in 4.4.5. We have family RHV everywhere since 4.4 and for 4.4 CL it works fine. Both RHEL and RHVH. I think you're mixing SKU and product-family. We're ok with CL 4.5 - the SKU is not there but the family is The problem is different - it's with 4.3 clusters in RHV 4.4 which is still pretty common it seems::Posted https://gerrit.ovirt.org/#/c/ovirt-engine/+/113781/::> @nyoxi , can you please suggest how to check for ovirt-guest-agent existence in RHV? That depends on what exactly you want to test here. You can: - look if ovirt-guest-agent-common RPM  (or ovirt-guest-agent RPM on EL6 and older) is installed - look if there is virtio channel for the agent - look if ovirt-guest-agent.service is up and running But I agree with what Michal said bellow -- it is better to avoid guest agent related check unless absolutely necessary. ::> > @nyoxi , can you please suggest how to check for ovirt-guest-agent existence in RHV? > > That depends on what exactly you want to test here. You can: > > * look if ovirt-guest-agent-common RPM  (or ovirt-guest-agent RPM on EL6 and older) is installed > * look if there is virtio channel for the agent Yeah, that would be the best check it seems > * look if ovirt-guest-agent.service is up and running > > But I agree with what Michal said bellow -- it is better to avoid guest agent related check unless absolutely necessary. So it depends on what we see as ""absolutely necessary"" - this PR is about identifying VMs as RHV VMS. Without checking ovirt-guest-agent we can't really tell whether VMs that run on plain RHEL are part of RHV or not (on 4.2/4.3 clusters and probably also on RHV < 4.4 with plain RHEL hosts) - if we're ok with not identifying them as RHV VMs, that's one things. But if we do, I guess we'll need to check that or something else in their metadata that is unique to RHV.. Edit: actually no, the metadata is not good for that, since we don't have it from within the guest..::yes, virtio socket is trivial to check for and it's indeed a great idea for <=4.3 at least...it can be just that one thing to look at.::Can't do a change in RHV Manager 4.4, which would set proper product family to RHV regardess of cluster version? Meaning that even 4.2 VMs would have product family set correctly. As RHV Manager 4.2/4.3 are already out of support, I'd not care that 4.2 VM spawned by 4.2 RHVM has different product family than spawned by 4.4 RHVM::Nobody is checking sockets here, can't we just fix product family set by RHV Manager regardless of cluster version used?::it's not out of support, it's out of development, but it's still perfectly usable. I'd really want to avoid change of guest ABI in existing versions. That virtio socket check is trivial, just a file existence...::What file would we need to check?::/dev/virtio-ports/ovirt-guest-agent.0 would be for OGA but we dropped it in el8/ubuntu18 in RHV 4.3 already I think. /org.qemu.guest_agent.0 we add always...but @nyoxi are we the only ones using it with this name? there's also /com.redhat.spice.0 but only when SPICE is defined, that is still a default.::Martin, to your question, there are really two approaches here: 1. the conservative approach that says VMs on 4.3 cluster-level with RHVM 4.4 should be exactly as if they were initiated by RHVM 4.3. this means those VMs should still be set with product-family = RHEL. 2. the progressive approach that considers exceptions to this rule when they make sense. for example, we removed the OGA channel also for RHEL 8 guests also on 4.3 cluster-level with RHVM 4.4. in theory it broke the ABI but no one really cares.. I tend to think we can go with the progressive approach here (because otherwise it would have raised complains by customers that upgraded 4.3 clusters to 4.4 cluster-level) - and then checking product-family covers all VMs that are started by RHVM 4.4 (regardless of their cluster level) and the check for OGA channel (which was dropped in 4.4.2 btw - https://bugzilla.redhat.com/show_bug.cgi?id=1845591) covers most of the VMs that were started by RHVM < 4.4. but we didn't reach an agreement on the ability to take the progressive approach here. the only winning argument I can see for this is showing that changing the product family has no real impact (like dropping OGA channel on RHEL 8 guest in 4.3 cluster level) but unfortunately I can't prove that. so I guess we can fall back to the conservative approach which leaves us with the identification problem for VMs on 4.3 cluster-level and keep exploring options like Michal suggested in his last comment.::> /dev/virtio-ports/ovirt-guest-agent.0 would be for OGA but we dropped it in el8/ubuntu18 in RHV 4.3 already I think. From what I have found it seems that the channel name was: * before CL 4.2 -- named `com.redhat.rhevm.vdsm` * in cluster level 4.2 -- renamed to `ovirt-guest-agent.0` * oVirt 4.4.2 -- removed completely from EL8 and CoreOS VMs (for all cluster levels) > /org.qemu.guest_agent.0 we add always...but @nyoxi are we the only ones using it with this name? there's also /com.redhat.spice.0 but only when SPICE is defined, that is still a default. The names for spice and qemu-ga channels are de-facto standards. It is not specific to oVirt.::yeah, so with that i would conclude that we have no good way on 4.2/4.3 and leave it broken on RHEL (and it does work on 4.2/4.3 RHVH at least) And finally merge this, it's worse that we keep it broken entirely on a current version for 3 months now:)::The patch was abandoned, so please remove the sentence. I'd just mention that this works only oVirt/RHV 4.4::This change will fully work for VMs in clusters at cluster level 4.4 or newer::```suggestion - ""Setup virtualization_facts - add RHV and oVirt type. This change will fully work for VMs in clusters at cluster level 4.4 or newer (https://github.com/ansible/ansible/pull/72876)."" ```::Rest LGTM::",48d466579e5c6282c9a55bf192734843b4277431::2a852d7a90e5d889db10ee1c6eff02557a7a712f::956c7ad831156181f4eda5035341269f9914fb41::23dbd436fa8077d3f5012b7c82b59de2117634ae::aa6529e41e2ed52aa8d8c7d7d65fd3f2e023609e::ecffc5a73f74ad92baeeea087ab3b8bcefd93290::
https://api.github.com/repos/ansible/ansible,72861,test/fedora33::devel,0,merged,affects_2.11::core_review::packaging::support:community::support:core::test::,"##### SUMMARY Change: - Changes to make F33 work with current tests - Add F33 to docker.txt - Add F33 to AZP config Test Plan: - ci_complete Signed-off-by: Rick Elrod <rick@elrod.me> <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Test Pull Request ##### COMPONENT NAME ansible-testIs it possible to also make use of the 3.10 alpha that's available in F33? There seems to be demand for that (https://github.com/ansible/ansible/pull/72852).::We only keep the latest two Fedora releases, so we should drop Fedora 31 now.::Support for 3.10 is something that should be worked on separately from this PR.::I'd make the changes for pylint in a separate PR, since they're likely going to be backported differently than the other changes in this PR.::Totally, I just wanted to raise attention to that PR.::I can do it in a separate commit in the same PR, but doing a separate PR will be hard since they're needed for tests to pass ;)::I'd like to see the pylint changes in a separate PR that we merge first, then re-run tests on this PR before merging.::Although we're removing it from CI, it's not being removed from `ansible-test`: ```suggestion ```::",c43a7985c65818ebade86b5b76f4070b1152243c::2ad7e3b9798096f62143d92f75aa88e244e1bff5::
https://api.github.com/repos/ansible/ansible,72576,galaxy-sources::devel,0,merged,affects_2.11::feature::has_issue::shipit::support:community::support:core::test::,##### SUMMARY The current logic when coming across a collection dependency is to only search the server that collection was from for that dependency. The upcoming work with Private Automation Hub (Galaxy NG) uses multiple endpoints to sync upstream content and a use case is for end users to upload a collection in their internal repository that can depend on an upstream one. This means we need to change the logic to search for collections in all the user configured servers. This enables a collection in server 1 to have a dependency collection on server 2 and so on. This code is expected to change in devel at some point in the future with the upcoming refactor but we need to backport this change to stable-2.9 hence why it's being done here as well. TODO: - [x] Add integration tests for this scenario ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME ansible-galaxy,ac3b70da30bcd258015a060a57e44dc40e3732e4::ae82399bfd4b4214db8919aee1cd276098c8e6a1::
https://api.github.com/repos/ansible/ansible,72573,issue/72110-mutually-exclusive::devel,0,closed,affects_2.11::feature::has_issue::needs_revision::pre_azp::support:community::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> In addition to looking for the presence of mutually exclusive keys, evaluate the given values of mutually exclusive parameters. If any combination of two parameters evaluates to `True`, then the mutually exclusive check fails. Fixes #72110 I filed this is a minor change/feature PR since this is a change in behavior. I'm not sure this should be backported if we decide to even merge this at all. There may be problems with changing this behavior that I am no thinking of. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Feature Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> `lib/ansible/module_utils/common/validation.py`I could use feedback to make sure the logic here is correct.::i think the value check is incorrect, it should check 'any 2 values are not default' instead of thruthyness::",89d9e2e306a4ec366974be64eae4cce663310596::
https://api.github.com/repos/ansible/ansible,72471,more-fqcns::devel,0,merged,affects_2.11::bug::needs_revision::support:core::,"##### SUMMARY Follow-up to #71824. While checking the backports (#72457, #72458) I found a few more locations that should be adjusted. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME core",a4bb0ed6d3aed791e0cb236f6e617eb9c0464f71::
https://api.github.com/repos/ansible/ansible,72428,action-groups::devel,0,merged,affects_2.11::bug::core_review::support:community::support:core::,"##### SUMMARY The docker modules, kubevirt modules and the k8s module are moving to other collections: 1. The docker modules are moving from community.general to [community.docker](https://github.com/ansible-collections/community.docker/) (already in progress, new collection already released). 2. The kubevirt modules are moving from community.general to [community.kubevirt](https://github.com/ansible-collections/community.kubevirt) (in preparation, collection not yet published). 3. ~~The k8s module is moving from community.kubernetes to [community.okd](https://github.com/ansible-collections/community.okd) (already in progress, collection with module already released).~~ 4. The community.k8s collection will be renamed to [kubernetes.core](https://github.com/ansible-collections/kubernetes.core) (already in progress, new collection already released). Right now, support for the docker and k8s action groups / module default groups does need to know in which collection the affected modules / action plugins are contained. Therefore, lib/ansible/executor/module_common.py needs to be updated (and this change backported to stable-2.10) for the moves to work flawlessly, and to avoid breaking playbooks and roles. The old names must not be removed either to avoid breakage with older (current) versions of the collections. CC @s-hertel @gundalow @geerlingguy @tima ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/executor/module_common.py not a blocker to this PR, but this should be moved to config (really should not be a thing in core at all, but setlingling for moving into config).::I was assuming that this is a placeholder anyway until the action groups feature is fully designed and implemented.::I believe that is tentatively slated for 2.11::",3cd84779480a85741c4a1a3ca39deec56e67f2d8::cf81aa05ec66037cd5c91fb0de4d2b058e2df29f::5e33f01267cbc9a30c7628d000a7019b5b7c2eef::446599b5448328e9f39475941b7b2886a88ba980::24614f6d304fcb093e4586993c792f4a05db251a::812b5aa6e2bc2894db455fd5e2bcdcc9bd6fa3f8::91410bdce94f5a20b4d8ae3134f5f06925f9705e::
https://api.github.com/repos/ansible/ansible,72337,issue/71528-systemd-lies::devel,0,merged,affects_2.11::bug::core_review::module::support:community::support:core::system::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> A [bug](https://github.com/systemd/systemd/pull/16424) existed in `systemd` 245 that did not properly handle unknown kernel capabilities gracefully. This resulted in incomplete output and an `rc` of 1 when querying for the service status. It is possible to get service status by other means. This PR works around this issue by getting service status using other commands in the event of a failure due to this bug. Fixes #71528 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> `lib/ansible/modules/systemd.py` ##### ADDITIONAL INFORMATION I'm not sure of a good way to test this. I setup a Fedora 32 VM running the 5.8 kernel and `systemd-245.4-1.fc32.src.rpm`. Our Fedora 32 test image has `systemd-245.6-2.fc32.x86_64` but the kernel version of the Docker host would need to be 5.8 in order to invoke the failure. Since this is a very specific workaround to a bug that is already fixed, it _may_ be ok to not have tests for this PR. @samdoran I believe you should use `systemctl list-units --all` . Without `--all` flag the `inactive (dead)` services will be not listed. Plz see my comment for more info https://github.com/ansible/ansible/issues/71528#issuecomment-722701620 ``` root@Ubuntu18:/# systemctl list-units actions.runner.monolithprojects-ansible-github_actions_runne.Ubuntu18.service 0 loaded units listed. Pass --all to see loaded but inactive units, too. To show all installed unit files use 'systemctl list-unit-files'. root@Ubuntu18:/# systemctl list-units --all actions.runner.monolithprojects-ansible-github_actions_runne.Ubuntu18.service UNIT                                                                          LOAD   ACTIVE   SUB  DESCRIPTION actions.runner.monolithprojects-ansible-github_actions_runne.Ubuntu18.service loaded inactive dead GitHub Actions Runner (monolithprojects-ansible-github_actions_runner-testrepo.Ubuntu18) 1 loaded units listed. To show all installed unit files use 'systemctl list-unit-files'. ```::Have you tried with #72363? I believe `list-unit-files` should take care of this issue.::Ah sorry, did not notice that open PR. Yes `list-unit-files` works too. Thanks. ::Ok, that's great news. Thank you for confirming. I was hoping I didn't have to fix this _yet again_. :) I have opened backport PRs for 2.9 and 2.10, so this fix will be in the next `.z` release of Ansible 2.9 and 2.10.::",54ac5fddb247b3b5d32d2f5b01de8e21b6372169::
https://api.github.com/repos/ansible/ansible,72324,url-lookup-add-default-agent::devel,0,merged,affects_2.11::bug::core_review::new_plugin::support:community::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> The `http_agent` option was added the `url` lookup in 2.10 (#64892). It should have set the default user agent value to `ansible-httpget` for consistency with other modules such as `uri`. Related to #55733. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> `lib/ansible/plugins/lookup/url.py` ##### ADDITIONAL INFORMATION This was originally supposed to get merged in #55733 but fell through the cracks. This is now a change in the default behavior for a shipped feature. I somewhat consider this a bug since the default Python user agent is blocked by a number of things. I would like to backport this change but that may be against our policies.```suggestion - url lookup - set default user agent to ``ansible-httpget`` (https://github.com/ansible/ansible/pull/72324). ```::You are correct. It's good to include the PR URL in the changelog.::Add note to description that the default changed in this version.::",a79d840ae1d5cb09528e842cdfcbe213740543a6::9ac6bf075390c54ab6ee961b142d4e4902e610d9::305ad3f95ed20076fbc5ebc9def5d3c31c81783f::5f46ad650e6aa4f31eeabe0b5f0b4286b6b5a9cd::
https://api.github.com/repos/ansible/ansible,72287,core_version_msg::devel,0,merged,affects_2.11::core_review::feature::has_issue::support:community::support:core::,"##### SUMMARY With the `ansible` PyPI package versions drifting from the core engine version, users have requested clarification of the CLI version output that it's the core version. * reduce confusion with `ansible` PyPI package >= 2.10 drifting from core version (sample new output) ``` ansible-playbook [core 2.11.0.dev0]  (core_version_msg c20329a0f6) last updated 2020/10/21 15:10:16 (GMT -700) config file = None configured module search path = ['/home/mdavis/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules'] ansible python module location = /home/mdavis/projects/ansible/lib/ansible ansible collection location = /home/mdavis/.ansible/collections:/usr/share/ansible/collections executable location = /home/mdavis/projects/ansible/bin/ansible-playbook python version = 3.8.5 (default, Jul 20 2020, 00:00:00) [GCC 10.1.1 20200507 (Red Hat 10.1.1-1)] libyaml = True ``` (needs backport to 2.10) ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Feature Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` nit: the readability is better when the placeholders are named ```suggestion result = [""{name} [core {ver}] "".format(name=prog, ver=__version__)] ``` also, this makes it easier to convert to using f-strings once py2 is dropped.::_Also:_ Maybe ""core engine""? To me, the mention of ""core"" in the terminology sounds like it implies some essential underlying library that is rather internal while ""engine"" would be semantically closer to an app than a lib...::I would skip 'naming' as that is prone to change, just putting the path to the executable should be clear enough differentiation from the package.::I don't mind the ""core"" name as I think that will match the package name we're moving to.::I would like to see this backported to 2.10 to help users understand the version drift between base^Wcore and the Ansible package -- i.e, ``ansible==2.10.4`` currently ships ``ansible-base==2.10.3`` and ``ansible --version`` reports 2.10.3. With that in mind, maybe in 2.10 it would be called base and in >=2.11 it would be called core or maybe something entirely different. I don't know.::",a436562a9b033299a67a519f55daffdccf98e467::a960609826fe17e1b09c8c5dbc7f932ffb95b212::
https://api.github.com/repos/ansible/ansible,72213,system-tmpdirs-security-issues::devel,0,merged,affects_2.11::docs::shipit::support:community::,"…plugin config system_tmpdirs is only meant for systems which officially store their temporary files in someplace other than /tmp or /var/tmp.  Those types of directories should have been pre-created by the system administrator (usually by the operating system's setup). There is a security risk if the user puts a directory that has not been pre-created into this list so be sure to document not to do that. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION /cc @jborean93 @samdoran for technical review This should likely get backported as well as setting this to a directory which the sysadmin has not created will open the security issue in all supported versions.",7022721a05fd6a0f7d58843c4871d68a4fa3b87f::
https://api.github.com/repos/ansible/ansible,72197,elijah_runner::devel,0,merged,affects_2.11::community_review::python3::support:community::,"##### SUMMARY Refresh of https://github.com/ansible/ansible/pull/68923 ##### ISSUE TYPE - Test Pull Request ##### COMPONENT NAME test/integration/targets/ansible-runner ##### ADDITIONAL INFORMATION If this test is running with python 2, then it's not getting fixed, and I would appreciate help figuring out how to skip it in that case. If this is still producing an error in python 3, then we want information about how to replicate so it can be fixed properly in ansible-runner. What it's currently doing about setting the callback location violates the point of ansible-runner, and we should get rid of it. Ping @kdelee Why was this change made?  We support Python 2.7 on the controller.  Assuming this was accidental.::I am guessing they want to remove Python 2 support from `ansible-runner`.::Oh, this definitely looks incorrect. I missed this was not for the `ansible-runner` target. This change is incorrect.::I confirmed this test runs fine on Python 2.7 with this PR. So this change is mos def not needed. I just need more ☕.::It is true that ansible-runner 1.4.6 supports python2, and this would work for now. But we are deep into the development of 2.0.0, that absolutely is going to drop py2 support. https://github.com/ansible/ansible-runner/pull/471 I wanted this PR to upgrade runner to 2.0.0, but it's not released yet so I can't reasonably do that. Anyway, my preference would be to stop running py2 checks now, because I don't see us genuinely doing any further work to support it.::I'm not sure this is a minor change per [our definition](https://docs.ansible.com/ansible/latest/community/development_process.html#creating-a-changelog-fragment). Test changes are a somewhat gray area, which we usually file under `bugfixes` so we can backport them. @sivel What do you think (since Matt Clay is out)?::We have definitions!?  Honestly I use `minor_changes` that don't match that description all the time.  It's a minor change, that isn't actually related to a bug fix.  I'm not sure it's worth worrying about.::For future reference, I wouldn't include a changelog fragment for changes that only touch integration tests. They're not shipped with the product, so a changelog entry seems unnecessary.::",cbfc23d87d8bc579c02d43e9dda9e7173647bce1::
https://api.github.com/repos/ansible/ansible,72126,test/container1.7.0::devel,0,merged,affects_2.11::core_review::packaging::support:community::support:core::test::,"##### SUMMARY Change: - Bump default, ansible-base, distro containers Test Plan: - CI, hopefully Signed-off-by: Rick Elrod <rick@elrod.me> <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Test Pull Request ##### COMPONENT NAME ansible-test We might as well make this and the other version 20 containers use 21 since that's the latest tag.::There may be collections which will need this same change to their tests.::fwiw, I'm in the process of removing this incidental.::A changelog entry is needed for these updates. Also, I'd backport them to stable-2.10. The other chagnes are probably OK to backport as well, but if not, they should be split into a separate PR.::Updated changelog entry to call out those two containers. And I was planning to backport everything to 2.10.::The default containers also move from Python 3.9 RC1 to GA, so that should be included in the changelog.::",1b36e9f77a6507d171568ce24ee66e8a40f6b38a::6bd05c0f7cd39b2219f99ee49cac22a360f7ff78::34b77c902d535142b8965eb84b4d171d1897919d::
https://api.github.com/repos/ansible/ansible,72003,unrolled-once::devel,0,merged,affects_2.11::bug::core_review::support:community::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> While https://github.com/ansible/ansible/pull/71463 does fix #71920 it is rather big change and is not suited for backport. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Co-authored-by: Matt Martz <matt@sivel.net> Fixes #71920 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> `lib/ansible/template/__init__.py`",ce15c0f0a4a9ad0ba9ff64b1431df5e8a134cfbb::
https://api.github.com/repos/ansible/ansible,71841,issue/71836::devel,0,merged,affects_2.11::bug::collection::core_review::files::m:unarchive::packaging::source_control::support:community::support:core::system::test::,"##### SUMMARY Changes required for macOS 10.15 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` Ref of upstream timezone change: https://github.com/ansible-collections/community.general/pull/945This looks like it should use the running Python version instead of being set to `3.8`.::Updated to be fully dynamic::Should this be a specific version of `wheel` to avoid spontaneous test breakage?::Same thing here. Do we want to pin this to a specific version?::Since this is a module change, should this be in a separate PR so it can be backported?::It's not pinned in any of the other files for this target either. I suppose we could, but I'm going to avoid that in this PR.::I'd rather just leave it here, and wait until the upstream PR is merged before backporting. We should probably not cherry-pick this anyway until the upstream PR is merged: https://github.com/ansible-collections/community.general/pull/945 2.9 tests will likely have to be updated further than devel if we backport the macos tests. ::I think the intention was to only backport this to `stable-2.10`. We'll continue testing `stable-2.8` and `stable-2.9` with OS X 10.11.::I'd just leave this as is then.  This is just testing support.::",1eadbf5264222e608bfdca1c9477af379bbd3014::b4cd083a3197929be6277f0e93711e27d97ce555::de1bcd5523a94c58fb4a26cdcc3d89f2895daac1::5b999d906f14da0cf9d3d9e351b3870345a52804::f70f98ddc825d3e88209d059fab9d55ad90d6c62::e9751c1ca7ed4b70b505dbc1e9c9bb455b856e28::018f0da60fdda1cf737231313d51cb56fe7e8cd4::955511c3ad7cfa852edefbfd016c3e61d6c485a8::711fad16440b2560194f7b19410050d91547cf60::08eb09e8a237183353315f604c3a30ed13a0a6f9::2cf29f9172a38a2e80a6728da08efe42a845c4e6::55035349743319d6389d7648c3f0d4ac8a605aa8::1eda60dd0f200933d300b187596826c7ed479c41::7156420212d9916b5da8e8493838f13fd8eb15b7::3efd6a5b9b3e42284b7c632d7647f051a34d5db7::8befb7722e06855664a7bb59e44542e632a9b349::
https://api.github.com/repos/ansible/ansible,71727,fix_bogus_pkg_coverage::devel,0,merged,affects_2.11::bug::core_review::support:community::support:core::,"##### SUMMARY * synthetic packages (eg, implicit collection packages without `__init__.py`) were always created at runtime with empty string source, which was compiled to a code object and exec'd during the package load. When run with code coverage, it created a bogus coverage entry (since the `__synthetic__`-suffixed `__file__` entry didn't exist on disk). * modified collection loader `get_code` to preserve the distinction between `None` (eg synthetic package) and empty string (eg empty `__init__.py`) values from `get_source`, and to return `None` when the source is `None`. This allows the package loader to skip `exec`ing things that truly have no source file on disk, thus not creating bogus coverage entries, while preserving behavior and coverage reporting for empty package inits that actually exist. Should be backported to 2.10. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME collection loader ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",95d7cd049204735d9e8f62eef7b3ad98cdc43949::4cd9254d6af4e26028c20dcc4f2cc3968b07fa51::
https://api.github.com/repos/ansible/ansible,71622,remove_27::devel,0,closed,WIP::affects_2.11::docs::small_patch::stale_ci::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> part of ##70783 DO NOT MERGE until 2.10 release. Then it needs to be backported to - [x] 2.10 - [x] 2.9 - [x] 2.8 And all three republished. 2.7 has already been EOL'd <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docs.ansible.com ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",e2d72dcd083d8e78e6bad87b9a20104674d01bf6::
https://api.github.com/repos/ansible/ansible,71580,docs/porting_guide/cve-revert-fixes-2::devel,0,merged,affects_2.11::core_review::docs::support:core::,"##### SUMMARY This supersedes #71577 and #71576 Change: - Fix up wording and do proper backports for porting guide entries. Signed-off-by: Rick Elrod <rick@elrod.me> <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME docs",ed48a2dd624cb7feb874fddcf49ef538857cd3e6::
https://api.github.com/repos/ansible/ansible,71480,collections_pointers::devel,0,merged,aci::affects_2.11::cisco::collection::core_review::docs::docsite::networking::support:core::,"##### SUMMARY Partial fix for #67484. Updates various pages in the Community and Developer Guides to reflect the collections ecosystem. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs.ansible.com collections The first sentence as it make think they are merged based on random choice :-). What about: > PRs are merged if developers find them useful, attractive, and merge-worthy, here are some tips to have them included. not sure about the ""included"" word::should we write also the tests should be green (perhaps it's already mentionned)::```suggestion Ansible developers (including community contributors) add new features, fix bugs, and update code in many different repositories. The `ansible/ansible repository <https://github.com/ansible/ansible>`_ contains the code for basic features and functions, such as copying module code to managed nodes. This code is also known as ``ansible-base``. Other repositories contain plugins and modules that enable Ansible to execute specific tasks, like adding a user to a particular database or configuring a particular network device. These repositories contain the source code for collections. ```::```suggestion Development on ``ansible-base`` occurs on two levels. At the macro level, the ``ansible-base`` developers and maintainers plan releases and track progress with roadmaps and projects. At the micro level, each PR has its own lifecycle. ```::```suggestion Development on collections also occurs at the macro and micro levels. Each collection has its own macro development cycle. For more information on the collections development cycle, see :ref:`contributing_maintained_collections`. The micro-level lifecycle of a PR is similar in collections and in ``ansible-base``. ```::```suggestion Macro development: ``ansible-base`` roadmaps, releases, and projects ```::```suggestion ===================================================================== ```::```suggestion If you want to follow the conversation about what features will be added to ``ansible-base`` for upcoming releases and what bugs are being fixed, you can watch these resources: ```::```suggestion If you want to contribute a feature or fix a bug in ``ansible-base`` or in a collection, you must open a **pull request** (""PR"" for short). GitHub provides a great overview of `how the pull request process works <https://help.github.com/articles/about-pull-requests/>`_ in general. The ultimate goal of any pull request is to get merged and become part of a collection or ``ansible-base``. ```::```suggestion Backporting merged PRs in ``ansible-base`` ```::```suggestion =========================================== ```::```suggestion All ``ansible-base`` PRs must be merged to the ``devel`` branch first. After a pull request has been accepted and merged to the ``devel`` branch, the following instructions will help you create a pull request to backport the change to a previous stable branch. ```::not sure what you meant by 'calendar ed' here::```suggestion * I want to make my first code changes to a collection or to ``ansible-base``. How do I :ref:`set up my Python development environment <environment_setup>`? ```::```suggestion Developing ``ansible-base`` ```::```suggestion **************************** ```::```suggestion Although ``ansible-base`` (the code hosted in the `ansible/ansible repository <https://github.com/ansible/ansible>`_ on GitHub) includes a few plugins that can be swapped out via playbook directives or configuration, much of the code there is not modular.  The documents here give insight into how the parts of ``ansible-base`` work together. ```::```suggestion * Each module should be self-contained in one file, so it can be auto-transferred by ``ansible-base``. ```::```suggestion * Module name MUST use underscores instead of hyphens or spaces as a word separator. Using hyphens and spaces will prevent ``ansible-base`` from importing your module. ```::```suggestion If you are writing multiple related modules, they may share common documentation, such as authentication details, file mode settings, ``notes:`` or ``seealso:`` entries. Rather than duplicate that information in each module's ``DOCUMENTATION`` block, you can save it once as a doc_fragment plugin and use it in each module's documentation. In Ansible, shared documentation fragments are contained in a ``ModuleDocFragment`` class in `lib/ansible/plugins/doc_fragments/ <https://github.com/ansible/ansible/tree/devel/lib/ansible/plugins/doc_fragments>`_ or the equivalent directory in a collection. To include a documentation fragment, add ``extends_documentation_fragment: FRAGMENT_NAME`` in your module documentation. Use the fully qualified collection name for the FRAGMENT_NAME (for example, ``community.kubernetes.k8s_auth_options``). ```::```suggestion If you would like to contribute to ``ansible-base`` by adding a new feature or fixing a bug, `create a fork <https://help.github.com/articles/fork-a-repo/>`_ of the ansible/ansible repository and develop against a new feature branch using the ``devel`` branch as a starting point. When you you have a good working code change, you can submit a pull request to the Ansible repository by selecting your feature branch as a source and the Ansible devel branch as a target. ```::```suggestion If you are working on the ``ansible-base`` code, writing an Ansible module, or developing an action plugin, you may need to understand how Ansible's program flow executes. If you are just using Ansible Modules in playbooks, you can skip this section. ```::```suggestion The ``ansible-base`` code runs on both Python 2 and Python 3 because we want Ansible to be able to manage a wide ```::Heh, me neither. Maybe ""calendar entry""? or ""calendar invite""?::```suggestion The Documentation Working Group (DaWGs) meets weekly on Tuesdays on the #ansible-docs channel on freenode IRC. For more information, including links to our agenda and a calendar invite, please visit the `working group page in the community repo <https://github.com/ansible/community/wiki/Docs>`_. ```::@bmillemathias thanks for the suggestion, I will think about wording here and open a separate PR.::",91187cb896d7019236f8ef7a6ba9c5c54ae8f75a::1426996218c8d0fadc044dc5ad3bcf55a3df13ef::ba03a0a1c6566d0e8d7bbd4287365fab94437051::6a02992d44c688544acee279ec2bd9dab50e373e::5b8372d2379f2ce5e43f3dd93a263918604f1fec::4b56837aefce3f5f5dfd5f972a7cfdab2d568665::ab796b0af000b6c3392e08ab96e2a1573c40bbea::e57bcf4d30215f21d8868fe1395f703afc935b98::fea6074d9b34b40d3c62d06749a478f42acaa176::6596b7108a93bde6faa9ef9242d1dcc1a377bc4d::26a4d0d9b94dc56a3894f03e680053e663cbbd7d::cb2a8c4d04f812723fa35bb5ecc8cbb270d0f217::8fe7ef24413c79dceaeb3edde026146fb7ac50d1::ec31de134b48f8c62f37bf71797c963d1a507d17::ab7f8c3946e3c4ba4f4be97d67f55c5a4fe14f48::3db02bc21b1c0e64fe3271537fb1eca1175ab146::e231e2e445d15a4b8e70802033993d726f8b7875::ea937fc036fcd0a48c885e8236440703eeb35b16::08a0444d9504486d872a5c770d3bf58b23895a88::6e08184252003d43d208c4b3e3e527ae6d2ded0f::6ae7d33d73fac39d35f01fc78742d73f7fde96ac::
https://api.github.com/repos/ansible/ansible,71463,templar-get_plugins-to-jinjapluginintercept::devel,0,merged,affects_2.11::feature::has_issue::shipit::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME <!--- Write the `short name of the module, plugin, task or feature below --> `lib/ansible/template/__init__.py`Will roles that provide filters or tests, and are loaded using `include_role` end up being excluded due to this?::Not according to my testing. That check is basically an equivalent of what we currently do: https://github.com/ansible/ansible/blob/9792d631b1b92356d41e9a792de4b2479a1bce44/lib/ansible/template/__init__.py#L628 From my understanding it works (this PR and the current code) also for roles due to us creating templars several times so filters/tests are loaded correctly for roles. We might want to make some adjustments/optimizations but for this PR I just wanted to move `get_filters/get_tests`. We have an integration test that somewhat tests this https://github.com/ansible/ansible/blob/devel/test/integration/targets/template/filter_plugins.yml.::+1 So it seems that we must just load `Templar` at the right places, that it doesn't make a difference.::You didn't change this, but should we use something other than a private method (`._parse`) here?  Not sure why we haven't just used `Environment.parse` from the beginning, other than it does some exception handling.::Just because I like to comment on places where I wasn't sure about something. This confused me at first. But since the filters listed in `STRING_TYPE_FILTERS` should never produce a generator or other iterator, we need not wrap them with `_unroll_iterator` also.::Note that this is also being removed in https://github.com/ansible/ansible/pull/68560::Good point. I added a FIXME there.::The above PR has been merged and I rebased this PR so this change is no longer here.::Do we have a deprecation warning somewhere for 3rd party stuff or has it not been usable for a while? It looks like we still have code that's passing shared_loader_obj to Templar too. Looks good to me besides that.::I looked at the `Environment._parse()` and public equivalent impls back to Jinja2 ~ 2.6; the public version just rewrites the tracebacks to omit frames from Jinja internals, so unless that rewriting code is getting tripped up by something we're doing (unlikely, but should be correctable on our end if so), it seems like we should just be using the public `Environment.parse()`.::I think the original code (and thus this code as well) might be incorrect here- we should only be applying this for builtin filters that match `STRING_TYPE_FILTERS`, not any collection-hosted filters that happen to have the same name... ::Good catch. Since `STRING_TYPE_FILTERS` is configurable we should also allow for collection-hosted filters to be specified there as FQCN, so something like the below? ```diff diff --git a/lib/ansible/template/__init__.py b/lib/ansible/template/__init__.py index bfc0251408..c37ab3f9f7 100644 --- a/lib/ansible/template/__init__.py +++ b/lib/ansible/template/__init__.py @@ -510,7 +510,7 @@ class JinjaPluginIntercept(MutableMapping): for func_name, func in iteritems(method_map()): fq_name = '.'.join((parent_prefix, func_name)) # FIXME: detect/warn on intra-collection function name collisions -                    if self._jinja2_native and func_name in C.STRING_TYPE_FILTERS: +                    if self._jinja2_native and (fq_name in C.STRING_TYPE_FILTERS or (fq_name.startswith.(('ansible.builtin.', 'ansible.legacy')) and func_name in C.STRING_TYPE_FILTERS)): self._collection_jinja_func_cache[fq_name] = _wrap_native_text(func) else: self._collection_jinja_func_cache[fq_name] = _unroll_iterator(func) ``` Either way this should be fixed in a separate PR so it is easier to backport to `2.10`.::Sounds good. Done.::Looks like I missed some places where we still pass `shared_loader_obj` to `Templar` which I have just removed. `shared_loader_obj` variables that we still have in the codebase are basically `ansible.plugins.loader` now. I am not aware of any deprecation warning for 3rd party stuff nor do I know how do we handle cases like this. I don't think we need to necessarily keep that arg there since we don't support Python API. Do you think we should remove it?::I was mostly just curious since you have `""used""` on the line below and it made me think it might not have really worked. It's not a direct comparison, but we used to allow importing cache plugins directly so when I switched that over to use the config manager I kept backwards compat and deprecated the behavior to try to give external stuff a heads up (like here https://github.com/ansible/ansible/blob/devel/lib/ansible/plugins/cache/__init__.py#L65). It's probably less important in the current landscape of collections.::Yeah, separate PR is fine, though we should also not be relying on config for that for anything but the builtins and maybe local non-collection plugins- collections should be able to provide that metadata directly (probably via something like the metadata-only decorator stuff I was playing with).::Opened https://github.com/ansible/ansible/pull/71801 to address this.::Fixed in https://github.com/ansible/ansible/pull/71801::",b3c16872183a46d3c6ca47bd64da02e9dcd0da0b::6591c71ee114093ad0fa79ee3440036b35bd62c1::0df19ee0aafd9712adfb0b22c8a9b5345d50cc9d::59550f34137ab10e3c5877030a5e6fa062ac6bd7::de148d28c2fbe421f77a4d8a0708344535917345::91117a5ce8c2902faa2925d76699ee4c795d7971::9a2a2064021a190c21973927fef157f965c30214::4343cec907bbdc6d2213078df4125bd42e68922f::b32f6c6d2c65d655e9d940c558e832c03b244879::
https://api.github.com/repos/ansible/ansible,71211,eol_27::devel,0,closed,affects_2.11::core_review::docs::small_patch::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> 2.7 is already EOL.  This is an independent PR so it can be backported to 2.10, 2.9, and 2.8 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Partial for #70925 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docs.ansible.com ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",0bfaafd2460d7499dc670e468745e9cf7828e84b::
https://api.github.com/repos/ansible/ansible,71161,backport/2.8/71155::stable-2.8,0,merged,,"##### SUMMARY backport of #71155 <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Test Pull Request ##### COMPONENT NAME tests",c3c83fef0a41aae38c74e5d515730cedfa5c08ca::
https://api.github.com/repos/ansible/ansible,71160,backport/2.9/71155::stable-2.9,0,merged,,##### SUMMARY backport of #71155 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Test Pull Request ##### COMPONENT NAME tests,cbcac6b3c59fcd47b33186c28ac7000e77a314fa::
https://api.github.com/repos/ansible/ansible,71159,backport/2.10/71155::stable-2.10,0,merged,,"##### SUMMARY backport of #71155 <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Test Pull Request ##### COMPONENT NAME tests",5b4a30f22b0f71f3c9f28c4583bccc64f7255252::
https://api.github.com/repos/ansible/ansible,71156,backport/2.10/71151::stable-2.10,0,merged,,##### SUMMARY backport of #71151 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME changelog,e1ce036dac6982ce2f018e434ae796488a75867b::
https://api.github.com/repos/ansible/ansible,71136,delegation_ask_pass::devel,0,merged,affects_2.11::bug::collection::has_issue::needs_revision::support:community::support:core::,"##### SUMMARY The change in https://github.com/ansible/ansible/pull/69244 stopped combining the original vars with the delegated host vars. This meant certain variables set by the play context on the host was not transferred to the delegated host, like `ansible_password`. This change reimplements the combining of connection vars to replicate the original behaviour. Fixes https://github.com/ansible/ansible/issues/71103 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME task_executorno, combine vars with inventory_hostname variables is specifically what we want to avoid, this does not only bring the `-k` defined password but any that where set in inventory for the inventory_hostname, then applying possibly wrong password (among other settings) to the delegated_to host.  What we do need to do is pull the play_context passwords  (in the end they should really be applied to the task, but that is future fix) and let delegated_to host override if set.::need to x2 check, but `  self._play_context.update_vars(cvars)` shoudl do the trick here::currently other plugins use play_context directly as a fallback ` conn_password = self.get_option('password') or self._play_context.password`::after thinking for a bit, bets place should be to add passwords to the `set_options` calls in  task_executor, both for connection and become by merging into 'task_keys' before passing it in (at lowest priority) which will allow settings/vars to keep the right precedence and insure its always present ::https://github.com/ansible/ansible/blob/devel/lib/ansible/executor/task_executor.py#L903::actually .. it seems we do attempt to do that .. could it be we have a bug in that code?::ah ... winrm uses `remote_password` not `password` .. why it is not getting picked up.::not sure how we want to fix it, add 'remote_password' as another task field or update the winrm plugin?::may I ask please why WinRM uses remote_password and not password ?::@samalv they are just keyword names for the config options which they never really were used for anything special before. I mostly followed the same standard for `remote_user` and `remote_addr` but after this change it does have a meaning. I've added the alias for `password` and fixed the code to actually use the aliases when setting the options for keywords.::@jborean93 thanks for explanation, should we expect this fix to be pushed in next Ansible release 2.9.12 ? or shall I do the same fix manually on my installed version 2.9.11 ?::I'll be creating a backport for this so the next 2.9 release will include it. Unfortunately it is too late for 2.10.0 so it will be in the 2.10.1 release later on.::yes I saw them, what about 2.11 ?::",632fe1e4cb6e307ff2c86c149e599bcdc6b4597d::621cec5a3afdf4857aaa589309a17843909d704e::2b6ef1eeb758aa6890053f04c77fa3c18a10a9ad::61ef89814394e8055fa0a75a99cd5e03bf7f0a13::bdbadf111d28c944a29801757e1fea97b727b6cc::6eb7a5b7673eef415f40a4b0b3c6ba281239d879::
https://api.github.com/repos/ansible/ansible,71024,complete-2.10-porting-guide::devel,0,merged,affects_2.11::core_review::docs::support:core::,"##### SUMMARY ""Fore-ports"" the 2.10 porting guide changes from #70985, which have been added only to the stable-2.10 version of the 2.10 porting guide. Without this, this change would get lost when backporting #70891, or would make backporting a lot harder. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs/docsite/rst/porting_guides/porting_guide_2.10.rst",dd7f914519a804f624691c4a68726fca2ce9291c::
https://api.github.com/repos/ansible/ansible,70902,fix-changelog-fragment-type::devel,0,merged,affects_2.11::bug::community_review::owner_pr::small_patch::stale_ci::support:community::,##### SUMMARY The changelog fragment should use category `security_fixes` and `bugfixes`. (`bugfixes` is only needed for backports to stable-2.9 and before.) CC @samdoran @acozine ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME changelogs/fragments/67794-atomic_move-default-perms.yml,a2577cf22605870bf60ee5b62bbe7af73a017c68::
https://api.github.com/repos/ansible/ansible,70853,connection_vars::devel,0,merged,affects_2.11::bug::core_review::support:community::support:core::test::,##### SUMMARY A change in https://github.com/ansible/ansible/pull/70331 caused any connection vars for a host to appear in the result output which could leak information. This is pretty much just reverting this section of the PR https://github.com/ansible/ansible/commit/84adaba6f5f020b2f0b1f13129d093b326bf5065#diff-76ffc0551f8cf3d6255500316568e60bL700-R717. This should be backported to stable-2.10 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME task_executor,6fb2f51ca4eb630e4a459c19cb49f466d2229689::7e2cd2e930ade1aa81fc8857dd7f06726bd0ce1d::1d1e7162656b86b8bcd8e09f9e6ecfcbe719c9c1::
https://api.github.com/repos/ansible/ansible,70766,umask_note::devel,0,merged,affects_2.11::core_review::docs::docsite::small_patch::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> fixes make webdocs failure on fedora systems (or anyone who's umask default is not 022) <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Will need to be backported to 2.10 once the docs pipeline is backported ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docs.ansible.com ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` ```suggestion After checking out ``ansible/ansible``, make sure the ``docs/docsite/rst`` directory has strict enough permissions. It should only be writable by the owner's account. If your default ``umask`` is not 022, you can use ``chmod go-w docs/docsite/rst`` to set the permissions correctly in your new branch.  Optionally, you can set your ``umask`` to 022 to make all newly created files on your system (including those created by ``git clone``) have the correct permissions. ```::",54324be026753360a5cda455c860a266738ea115::ef5e412d595987bcba647e895d9f4f2f19056812::
https://api.github.com/repos/ansible/ansible,70764,fix_rstcheck::devel,0,merged,affects_2.11::core_review::docs::small_patch::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> - fix an ansible-test sanity --test rstcheck error - gitignore the new rst/collections/ dir <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> This will need to be backported to 2.10 once the collections pipeline PR is backported ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docs.ansible.com ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",a4563d31de69756109adc0a6d3fc6c3fe4828f5e::
https://api.github.com/repos/ansible/ansible,70704,reboot-plus-notation::devel,0,merged,affects_2.11::bug::feature::needs_revision::new_contributor::support:community::support:core::,"##### SUMMARY This change makes the reboot module work on a Void Linux target. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME reboot ##### ADDITIONAL INFORMATION The runit init system used by void linux dosen't support the default command used, it needs a `+` before the mintues.```suggestion bugfixes: ```::We discussed this today during triage and this can be considered a bugfix, which means it can be backported rather than having to wait for the 2.11 release. Please update the changelog and I'll merge this.::",d4d9590f64ad9df47aa3ded40d22f5019aff655e::
https://api.github.com/repos/ansible/ansible,70635,test/integration/async/stderr-py2fix::devel,0,closed,affects_2.11::bug::community_review::python3::support:community::,"##### SUMMARY Remove python3-ism in async test Change: - Use stderr.write() instead of print(file=stderr) - This is mainly so that the stable backport doesn't cause a needless divergence. Test Plan: - CI ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME tests, subelements lookup plugin",8ec8c87ae530960e54ea9f3f8a6d8786a55392a0::
https://api.github.com/repos/ansible/ansible,70524,add_scm_download::devel,0,merged,affects_2.11::bug::core_review::docs::has_issue::support:community::support:core::,"##### SUMMARY Fixes #70429 The fix for the traceback should be backported, but since downloading collections from git repositories is technically a feature, maybe only the first commit is backportable. @sivel @samdoran @jborean93  Do any of you have thoughts on that? ##### ISSUE TYPE - Bugfix Pull Request - Feature Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` `os.makedirs` fails if the final dir already exists and the kwargs `exist_ok` was only added in Python 3. `scm_build_path` doesn't have any unique values in it and would cause a conflict if more than 1 download hit this path.::Minor nit, `temp_download_path` looks like a text string and we usually use byte strings when dealing with file paths.::> Ansible 2.10 skips SCM collections. This won't be true if this gets backported, will it?::thanks for noticing that::",ec6795dd15ff8823cf644c0396271f6269afa4e2::7b75b7c859346bdac391910c75714dcf64a4a659::e5cba7f275d2532b7133c7be556d62e404a7bdc0::ac03a2980e69d5a53040aa5cd10563b32af1553f::6e6f0cc19337c2b58949273b0ea506325a615633::
https://api.github.com/repos/ansible/ansible,70403,collection_meta_yml_cloader::devel,0,merged,affects_2.11::bug::core_review::support:community::support:core::,"##### SUMMARY * parse collection meta with libyaml if available (thanks @sivel!) * require only Mapping for validation * add explanatory text for _meta_yml_to_dict 2.10 backport candidate ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",be547169fcf1043326ee3401f74ab880fe26623c::f9da273285ddd7ff3264818dffc74aa4494a0e0f::
https://api.github.com/repos/ansible/ansible,70319,modules_sanity_tests::devel,0,merged,affects_2.11::bug::commands::core_review::files::has_issue::m:unarchive::module::net_tools::packaging::source_control::support:community::support:core::system::test::utilities::,"##### SUMMARY Trying to reduce ignores from module sanity tests as possible as I can. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME collection```suggestion aliases: [ update-cache ] ``` To match other parameter styles.::```suggestion aliases: [ default-release ] ```::```suggestion aliases: [ allow-unauthenticated ] ```::```suggestion aliases: [ filename ] ```::```suggestion aliases: [ update-cache ] ```::```suggestion - If python-apt Python library is not installed this module will not work. ```::```suggestion module = AnsibleModule(argument_spec=dict(manager={'type': 'list', 'elements': 'str', 'default': ['auto'], choices=['apt', 'auto', 'pacman', 'pkg', 'portage', 'rpm']}, ```::I'm not sure If I've changed correctly as your suggestion, could you please review this? https://app.shippable.com/github/ansible/ansible/runs/169575/2/tests::Also this: https://app.shippable.com/github/ansible/ansible/runs/169575/1/tests::```suggestion module = AnsibleModule(argument_spec=dict(manager={'type': 'list', 'elements': 'str', 'default': ['auto'], choices: ['apt', 'auto', 'pacman', 'pkg', 'portage', 'rpm']}, ```::Oops. My bad. Changed it.::```suggestion module = AnsibleModule(argument_spec=dict(manager={'type': 'list', 'elements': 'str', 'default': ['auto'], choices: ['apt', 'auto', 'pacman', 'pkg', 'portage', 'rpm']}, strategy={'choices': ['first', 'all'], 'default': 'first'}), ``` No need to remove `strategy`::Oops. My bad. Changed it.::Shouldn't choices be in '' ? It got fixed, if anything else needs to be changed, please let me know.::Why did you add this new alias (both in docs and in code)?::This changes behavior. If `mode` is `None`, in https://github.com/ansible/ansible/blob/bad591cfbe3e254f02768fa4af7679a88af2343e/lib/ansible/modules/apt_repository.py#L334 `this_mode` will be `None` (since `module.params['mode'] == None`) and thus `self.module.set_mode_if_different(filename, this_mode, False)` in the next line will be a no-op.::`dest` is only required for some values of `state`. It should not be marked as required.::The defaults here also change behavior IMO. Even if these are the default values used by yum, this could lead to repository files being changed.::Few lines below the line you've mentioned there is: ``` filename = module.params['file'] ``` And this was in `test/sanity/ignore.txt`: ``` lib/ansible/modules/apt_key.py validate-modules:parameter-type-not-in-doc lib/ansible/modules/apt_key.py validate-modules:undocumented-parameter ``` To remove these two lines in `ignore.txt` I added this alias (both in docs and in code).::So I assume `default: '0644'` has to be removed from docs instead of adding it in module argument_spec?::I couldn't think of a situation where this module would work without specifying `dest`. Also `state` is not defined in this module, so I'm not sure what variable you meant. Anyway I'm going to remove `required=True` for `dest` if you think it's not required and ignore it in `ignore.txt`.::So maybe this has to remove from docs too instead of adding it to argument_spec?::@aminvakil yes, imo, a general rule should be like if there are deviations between doc and arg_spec, changing the doc would be preferable because it doesn't affect actual module's behavior, so safer::`filename` is a Python variable inside the module. It is not visible in any way to the user. The module option is called `file`. I don't know what exactly the warnings were about, but it was not that a Python variable was not mentioned in argspec.::If it would be changed the other way, it would need a `breaking_change` changelog and should better be done by the maintainer(s), since they (hopefully) know what was intended. Maybe in this case we still need a changelog fragment (`bugfixes`?) because some people might have relied on the `0644` assumption and didn't notice it didn't happen.::See https://github.com/ansible/ansible/blob/bad591cfbe3e254f02768fa4af7679a88af2343e/lib/ansible/modules/subversion.py#L284-L285 The `required` should be removed from documentation (resp. needs to be mentioned in the text there instead, in which case exactly the option is required).::Yes. This should probably be mentioned in the description, that yum's default value is `true`, but not in the `default:` value.::what about the comment in arg_spec ? ``` # This should not be needed, but exists as a failsafe install_python_apt=dict(type='bool', default=True), ``` i think this parameter was removed from the doc intentionally::```suggestion - Name of the package. ``` while you're here:)::It's a good question. This comment has been there like forever (I checked quite some years back in history). For this we probably need core team input, or input from someone who knows the history of this module well.::On minimal Debian `python-apt` is not installed for example and right now ansible shows a warning **after** it installs `python-apt` on the server being managed by ansible which would be a problem for someones which are sensitive about packages installed on their server. I mean there would be a situation where a sysadmin would prefer installing a package herself instead of installing `python-apt` and the package from the playbook. It should be mentioned in documentation that by default this module installs `python-apt` and people should have the choice whether to disable installing it or not.::This was added because of this in `ignore.txt`: `lib/ansible/modules/apt_key.py validate-modules:mutually_exclusive-unknown` In order to remove this ignored validation I added `filename` as an alias to `file`. Right now it has not been added to `file` as an alias as ignore line is present in ignore.txt. Could you please let me know if it needs to change?::Is this OK? https://github.com/ansible/ansible/pull/70319/commits/2b346b58ff8b4aa50619220bb3e2515069acd979::Is this OK? https://github.com/ansible/ansible/pull/70319/commits/92c57aff202adf76493fab6e38e5e6966dada507::Fixed.::Could you please check the description format and see if it's OK or not?::The error is that `mutually_exclusive` contains `filename`, which is not an option. It should contain `file` instead. (Adding an alias `filename` would be wrong, since then `mutually_exclusive` would not work correctly.) This is a potentially breaking change, so it needs a changelog fragment and a porting guide entry.::I think so.::```suggestion - The destination directory must be specified unless I(checkout=no), I(update=no), and I(export=no). ```::Yes, almost (see my below comment).::I'd use `C(true)` for the value; besides that, yes.::OK, so is it appropriate if this gets fixed in this PR or leave it be this way for now?::I know what you mean, and I think it's better to document this properly, but I think this PR is the wrong place for it since this needs further discussion, which would delay the whole PR unnecessarily. It's better to create a new PR for only this change (once this one is merged f.ex., or already now if you don't mind that you might have to resolve conflicts), so that it can be properly discussed.::Could you please explain more?::Fine, I will revert the changes to way `devel` branch is now and will create a new PR and put the link here.::Fixed in https://github.com/ansible/ansible/pull/70319/commits/65503c2b7a98843dbf867b8a9fd90d2f7b43c6e1.::As @felixfontein said it got removed from this PR and it can be further discussed in https://github.com/ansible/ansible/pull/70462.::> I'd use `C(true)` for the value; besides that, yes. Fixed in https://github.com/ansible/ansible/pull/70319/commits/66ec490a8acf5441329564f6c6343c5b14c68f50.::Both is fine, but if you address it, you definitely need a changelog fragment for that change. (Since it potentially breaks people's roles/playbooks if they implicitly relied on that specifying `file` together with other options works. It's probably better to have this in a separate PR, that cannot be backported to stable-2.10.)::```suggestion - apt_repository - fixes ``mode`` doc to remove ineffective default (https://github.com/ansible/ansible/pull/70319). ``` I'm not sure whether there should be a changelog fragment for this change at all, though, since this doesn't change detectable behavior for users. That's just my personal opinion though :)::Will fix it in another PR then.::Could be further discussed in https://github.com/ansible/ansible/pull/70492.::Options should not be removed without a deprecation cycle.::@felixfontein Could you please check https://github.com/ansible/ansible/pull/70319/commits/cfcacaa1cf4d98fad68120b270b545bf0148fbb4 and these minor fixes in https://github.com/ansible/ansible/pull/70319/commits/c7c3a51e81761df7e94db0dc307f74627e0d2851 and https://github.com/ansible/ansible/pull/70319/commits/ea20be4462c4bd8d47082fa433e425f115990d8a?::```suggestion key=dict(type='str', removed_in_version='2.14', removed_from_collection='ansible.builtin'), ```::Remove this `if`.::```suggestion - apt_key - the paramater ``key`` does not have any effect, has been deprecated and will be removed in ansible-base version 2.14 (https://github.com/ansible/ansible/pull/70319). ``` The deprecation cycle is four versions (changes in devel will end up in 2.11, so this will get removed in 2.14).::```suggestion - apt_key - the paramater ``key`` does not have any effect, has been deprecated and will be removed in ansible-base version 2.14 (https://github.com/ansible/ansible/pull/70319). ```::This is the only change I'm not really sure whether this behavior is wanted. Right now, even though the documentation forces you to stick to this list of values, you can specify something else. The code below valides this option, and potentially allows new values that are not yet listed in `choices`, as long as support for them has been implemented. Also, right now, `PACMAN` for example is also accepted, and converted to `pacman` by the module (https://github.com/ansible/ansible/blob/c6ce08bb5d93f7d625905d031a4567d54f00a961/lib/ansible/modules/package_facts.py#L419). With this change, this is no longer possible.::It seems that ignoring `doc-choices-do-not-match-spec` is reasonable because of the module implementation, I'm going to ignore it in this PR.::You still need to remove the `choices` from `argument_spec`.::better to remove approximate comment ' (probably 0644)'. Also putting a value that likely to change over time can be wrong, except if we could extract that from a constant.::This has been discussed on https://github.com/ansible/ansible/pull/70319#discussion_r448980070 too. But now that you mentioned this, I haven't seen this line before: https://github.com/ansible/ansible/blob/db519bc17c1ff0c6e095d022bfe988eb87630090/lib/ansible/modules/apt_repository.py#L143 https://github.com/ansible/ansible/blob/db519bc17c1ff0c6e095d022bfe988eb87630090/lib/ansible/modules/apt_repository.py#L322 It seems that default `mode` is `0644` and maybe that was why it has been mentioned on `mode` doc, am I right? If so I think adding `default: '0644'` on doc would be appropriate because it explains the module behaviour as it is.::Also these: https://github.com/ansible/ansible/commit/127b854d2c0eda8de6954cc5eac46e6681577c65 https://github.com/ansible/ansible/commit/a5b80464df92c2ebdc7ca73159763d10d4ed7068#diff-355558b0484f1dfbf4d532cbc563c9bdR136::Please undo this change.::`this_mode = self.module.params.get('mode', DEFAULT_SOURCES_PERM)` returns `None` if `mode` is not provided as a module parameter. Changing the `default` of this option is thus a breaking change.::@felixfontein Thanks, I didn't know this. What's your opinion on removing `(probably 0644)`? It can be helpful for those who care about their `apt_repository` file permission, also it gives a hint that they can use setuid, setgid and sticky bits and they should put a leading zero if they don't want them, so maybe changing it to `(for example 0644)` would be better than removing it.::I think it is ok to leave it for now. I guess the core team needs to decide whether they want to fix the default to be `0644` (that would require a behavior change), or remove it completely.::Is this a change in behavior to match the docs?::Looks like that is the case.::",1a9638bc189fdaa7a31831b84a01a87ffd0deaaf::c2743cf8d8cd3cc850532dc7046cc6d8063e4d00::e080bd4dd4776598381db4935fed2e07f0207a62::a739a99d31fac4dd4317d8b35989e8a66cf18da4::7a6af93d1ddb07c7604eb0b17f032ad943cf9ceb::bfb259b0e0ebe4ea86e20bd0a04927e9c377629d::d3a7926e0f67544315e9564e87e847011443813f::83c75d2a7172b700e46f7992c59974004a43eec7::4310b5e156e38ebbb5deffc7760d7ee57e21bed9::2830d57238ed39ed083150db1d61695f8a1f8c49::05e5a6d5b4d81b5110b6568e30e5ba94ef4d2950::45dd81ddc4b070e1d6555266234644ea0f8aa9d5::3503786f8a99f0555835535d846acc6e301cea79::8ecb3722d3ea1ddacd593dfdce2fbc76440068da::bb3e6b075d696bf42a8a3df086b2f7986ede8465::ddfe9aa81d06080ce2fc18e710554cdf47a81551::3d385737d8777cd4c27c6714bbb727ebf9345fce::11d9926fe1fe04f23c2febc153ccaf922bd0353b::ec1f6306f6a065703dbbc050e8ef73580b3dee95::c27c23940a48ef74b8bab0f1e1f867985ab214e5::0016d368f48f6af6b31c9e328bd6323f14870ac5::008ce7f50ff5ac8b60a623bc94ca5e591db017b2::35133d5d93d5c169ae8967f281d78cb53905ca73::26a5de82afe26ac72ab2f4691e1101c75d2c6724::841555730cec4b9675b14ff2c128c133aedf950c::340d148efe5e67c9312c57fb97744190866ffd17::3128297924b054743789008ae1b778544e1b143f::33667d4a8f737e2e7c52488a44c2b18ccdb49e55::a1824e818c6fcf64cd844db3a434981ce82ca38b::
https://api.github.com/repos/ansible/ansible,70299,patch-2::devel,0,merged,affects_2.11::core_review::has_issue::support:core::,Changed from dellemc_networking to dellemc as we have changed the namespace from dellemc_networking to dellemc Please backport to stable-2.10 branch,a6d3550687c796afa488eab6522d26e9fcf81b7b::
https://api.github.com/repos/ansible/ansible,70293,revert-reverted-delegate-fixes::devel,0,merged,affects_2.11::bug::collection::collection:cisco.meraki::core_review::has_issue::support:community::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Fixes https://github.com/ansible/ansible/issues/70168 Introduced in https://github.com/ansible/ansible/pull/69604 which was backported to `2.9.10`. This would need to be backported to `2.9` and `2.10`. This is another take to get these fixes in after they were reverted in https://github.com/ansible/ansible/pull/70272 due to issues with testing the fixes in our CI. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ` lib/ansible/plugins/action/__init__.py`we should always have ansible_facts here, the if/set to empty should not be needed here, nor above.::not sure this is needed either, its only called from 2 locations and they always pass task_vars .. i would make it a required field at this point not a blocker to this PR, just random note::I went ahead and made the `task_vars` required method argument in this PR.::",792bc8fef122df25dcd5f2cfc3256002e36fe0ce::6b1bc73d702f3afe04e1d49259faad45efe1fcac::08a9f5ae3079d97e93484750998d79dfaf637739::9a0d3a36ae730b0ce32e8e29fc57c094609b3589::d6342e931f6aa86db0294c5fc5d0132cf3b88ca7::7175c51549fa02a95b8c313fcbf5719b6a7ac9bf::4529788c5efd59a62c1ed43febb8a3cc23d22329::dbf76c88f6107bd146905858745a472de79a586c::
https://api.github.com/repos/ansible/ansible,69832,doc_r::devel,0,merged,affects_2.10::core_review::docs::docsite::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> A recent PR added support for R() within module docstrings. This works much like the sphinx :ref: but requires both the link text and the rst label. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docs.ansible.com ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` > As of Ansible 2.10, do not use ``L()`` for relative links to other Ansible documentation. Use ``R()`` instead. So care needed if backporting docs fixes from devel to `stable-2.9`? ::```suggestion * ``R()`` for cross-references with a heading (added in Ansible 2.10). For example: ``See Cisco IOS Platform Guide,ios_platform_options).`` Use the RST section label for the cross-reference. ``` saying ``.rst`` makes me think of the filename::Yes.  This is predominantly driven by collections, but it's safer to just start using R() imo.  @abadger can correct me if I'm confused on that point :-)::Yeah, except that `R()` inside of options and returndocs won't form a link.  At the moment, the tables for options and returns are created using raw-html embedded in rst.  Because of that, sphinx doesn't get a chance to process them and thus can't turn it into a link::```suggestion * ``R()`` for cross-references with a heading (added in Ansible 2.10). For example: ``See R(Cisco IOS Platform Guide,ios_platform_options).`` Use the RST anchor for the cross-reference. ```::Isn't the above true for all links? I don't think L() or U() would create a link within the options or return docs either. Would they?::```suggestion For modules in a collection, you can only use ``L()`` and ``M()`` for content within that collection. Use ``U()`` to refer to content in a different collection, or ``R()`` for cross-references to other Ansible documentation, based on the anchor for the page or section of the ``.rst`` file. ```::maybe link to https://docs.ansible.com/ansible/latest/dev_guide/style_guide/#adding-anchors somewhere too::`L()` and `U()` should form links in the options and return docs.  Those take a URL (relative or absolute) and therefore it has all the needed information to make a link in html without having to be processed by sphinx.  Here's an example which should show the difference between those two and `R()/M()`: Here's what could be in the DOCUMENTATION variable: ``` yaml options: - name: verify_certs description: - Verify the L(certificate, https://en.wikipedia.org/wiki/Public_key_certificate) of the server when True. - Use M(community.crypto.openssl_cert) to manage that on your server ``` Here's an approximation of the jinja template: ``` jinja2 .. raw:: html <table><tr> <td>{% for line in option['description'] %} @{line | html_ify}@ {% endfor %}</td> </tr></table> ``` And here's what combining those two should generate in the rst file: ``` rst .. raw:: html <table><tr> <td> Verify the <a href=""https://en.wikipedia.org/wiki/Public_key_certificate"">certificate</a> of the server when True. Use <span class=""module"">community.crypto.openssl_cert</span> to manage that on your server </td> </tr></table> ``` The difference between `U() / L()` and `M() / R()` is that the former have enough information to generate an `<a href=URL>` on their own.  The latter only have enough information to generate a sphinx `:ref:`.  The sphinx ref would have to be processed by sphinx (ie: outside of a `.. raw:: html` block in the rst) in order to turn into a link.::A few notes about this section * `L()` can be used for content outside the collection.  So maybe that part is better phrased as: > you should only use relative links with ``L()`` and ``U()`` if the content lives within the collection. * relative links can work outside of the collection, but only if you know the directory structure outside of the collection.  In particular, that means that a relative link that works with docs-pipeline probably won't work on the collection maintainer's website and vice versa. * `M()` and `R()` should work inside of a collection always.  Pointing outside of a collection, they can work in the docs pipeline.  They may be able to work on a collection maintainer's website if they have intersphinx setup appropriately and there's no conflicts in the ref names.::I'm confused now. 1. I thought U() was only for full urls, not relative links?  At least that is the example we use. 2. For L() as a relative link, is that to the collection docs folder? to..??? not sure what a relative link within a collection looks like. 3. For relative links outside a collection, that just seems problematic and I suggest we don't advertise it. 4. M() and R()  - @acozine - I'm of two minds here - it's a good point that people building their own docsite would need to know they need intersphinx to get them working, but I'm not sure we are/should be in the business of documenting how someone builds their own docsite from module content.  I could just add a phrase after  that last sentence to say something like ""These cross-references to other Ansible documentation work based on the intersphinx extention'. ? ::1. The only difference between 'U()' and 'L()' that I can see in the code is whether to include the bare link or to include a heading.  for example: ``` html <!--  U(""../../collections/index.html"") turns into --> <a href=""../../collections/index.html"">../../collections/index.html</a> <!-- L(List of collections, ""../../collections/index.html"") turns into --> <a href=""../../collections/index.html"">List of collections</a> ``` (absolute URLS will work for both of those as well) 2. Relative links are relative to the html page.  So, if I am working on documentation in the yum module from ansible-base, I could refer to the apt module's documentation via: ```L(The apt module,apt_module.html)``` because the apt module is also in ansible-base and will therefore be placed in the same directory.  If I am working on the  yum module docs and i wanted to reference something in another collection, I could use ```L(Ansible documentation,../../../index.html)``` to reference the toplevel index page of the docs.ansible.com website.  (But on a collection owner's website, that might not be the correct location for what they want to reference). 3. Yep.  Agreed 4. I know you're really asking acozine but I just wanted to say I agree, something that says this is possible but points them elsewhere to get the details seems like a good compromise.  Although, we may want people to know that if they're only developing for publication on docs.ansible.com, they don't have to know about intersphinx?::Okay so U() is for raw links so to speak (no title) and L() includes a title for the link. Relative linking needs more explanation, and I think we should limit it to -use docs.ansible.com relative links only if you are in ansible base.  Use relative links in your collection only to your own collection.  Use L() or U() to link from your collection to docs.ansible.com pages outside your collection.::Discussed in #ansible-doc and we will mention intersphinx w/ a link to the intersphinx docs for how to get M() and R() working on a separate docsite.::",aba132cffd87d96e87bc24cb000e62cc8250cc02::1062294f7fb2ad6427c6c0006054b8bb4bd42c42::b60f26494e2ccad81c5a3f7a83c4e65b815b2a81::00b33a0a8e9dc467742b108c67a89b57d5b8dc4d::92e1c402bea25ddef269e09e35ac419b1e139497::a374f20c8367de7067520f09259b672c67e197c2::
https://api.github.com/repos/ansible/ansible,69817,win_get_url-tests::stable-2.7,0,merged,,##### SUMMARY https://redhat.com/ now uses a cipher suite that isn't supported by older Windows hosts. This change just swaps to Google for now. Newer branches aren't affected as they use the httptester container which could not be backported to this version. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_get_url,a538cd3daf83247afa83a4267ae03a4bbaaf17bc::570dbd3a8b316d9976511d11e3009c16159a61af::
https://api.github.com/repos/ansible/ansible,69773,add_frr_userguide::devel,0,merged,affects_2.10::core_review::docs::docsite::networking::support:core::,"Signed-off-by: NilashishC <nilashishchakraborty8@gmail.com> ##### SUMMARY - Add platform guide for FRR. - Fixed a line in VyOS platform guide. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME user_guide/platform_frr.rst user_guide/platform_vyos.rstshould this use FQCN?::Not sure about this. This guide would be valid for the FRR modules in ansible/ansible 2.9 as well and none of the other platform guides have the examples in fqcn format, afair.::Hmm perhaps I misunderstood. I thought the purpose of column Q in John's internal spreadsheet (update platform guides) was specifically to have them use collections. Also, what you are changing here is the 2.10 FRR platform guide. You would need to backport this to 2.9 to have it applicable/available for 2.9. But this brings up a bigger issue. All of the 2.9 platform guides are... for 2.9 :-)  None of them have details about collections, yet  the 1.0.0 collections will all point to these guides. So for now, just keep it as you have it (no FQCN) and backport please. I'll discuss more openly what we should do to cover the fact that the batch of 1.0.0 network collections will work with 2.9 and what if anything we should put in 2.9 platform docs.::+1::",22d07af93d1897ddda6d8ab946f03772f1e04940::5bac90f52866d467aa38fdd1d9a73c36e740c272::
https://api.github.com/repos/ansible/ansible,69057,bugfix/67050-yum-handle-releasever::devel,0,merged,,"Signed-off-by: Adam Miller <admiller@redhat.com> ##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> fixed handling of releasever for all known scenarios Fixes #67050 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> yum ##### ADDITIONAL INFORMATION Needs backport to 2.9 and possibly 2.8",905b507b4313584aa669c464bf64d431190c640d::033428729f8df5ece572409ac655458bce53fef3::1b0e8846910012b10ae57b766dd6d123794061de::
https://api.github.com/repos/ansible/ansible,69032,ansible-doc-fix-json::devel,0,closed,affects_2.10::bug::core_review::stale_ci::support:community::support:core::,"##### SUMMARY `ansible-doc --json community.aws.aws_s3_bucket_info` crashes before this fix, and works afterwards. Fixes #69031. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ansible-doc a simpler fix i was already working on: `+    display.display(json.dumps(text, cls=AnsibleJSONEncoder, sort_keys=True, indent=4))`::That still crashes for non-string keys, i.e. for `ec2_vpc_vpn`. That really seem to need pre-processing to get rid of all non-string keys in mappings.::```.py File "".../ansible/cli/doc.py"", line 59, in jdump display.display(json.dumps(text, cls=AnsibleJSONEncoder, sort_keys=True, indent=4)) File ""/usr/lib/python3.8/json/__init__.py"", line 234, in dumps return cls( File ""/usr/lib/python3.8/json/encoder.py"", line 201, in encode chunks = list(chunks) File ""/usr/lib/python3.8/json/encoder.py"", line 431, in _iterencode yield from _iterencode_dict(o, _current_indent_level) File ""/usr/lib/python3.8/json/encoder.py"", line 405, in _iterencode_dict yield from chunks File ""/usr/lib/python3.8/json/encoder.py"", line 405, in _iterencode_dict yield from chunks File ""/usr/lib/python3.8/json/encoder.py"", line 405, in _iterencode_dict yield from chunks [Previous line repeated 2 more times] File ""/usr/lib/python3.8/json/encoder.py"", line 325, in _iterencode_list yield from chunks File ""/usr/lib/python3.8/json/encoder.py"", line 353, in _iterencode_dict items = sorted(dct.items()) TypeError: '<' not supported between instances of 'int' and 'str' ```::^ that seems to be an expression not really a data type issue (sorting keys, this is another known json issue), in any case, there is also an existing `jsonify` in module_utils. ::The `jsonify` in this PR is a stripped-down version of the one in module_utils. Anyway, the problem *is* that there are dictionaries with wrong key types in the data. ansible-doc should really not die because of that.::well, not die with unexpected exception .. tempted to say there is no real reason the type should be incorrect for any keys. So ending in an error should be fine, just not an unhandled one.::If it dies in any form, it makes ansible-doc useless for bulk docs generation.::do we have any 'valid' keys that would cause this? at this point i think we SHOULD error out and inform user that the plugin author did something wrong.::Depends on how you define 'valid'. I guess validate-modules could be more strict about what is accepted for module return value `sample`s. That's where the bad values were hiding in the cases I found.::I'll create a PR for stronger validation (both validate-modules and ansible-doc sanity test) this weekend. That would also solve this.::but sample is the key, it could have any value, and there I do expect such things to occur, but not on the keys themselves.::Sorry for being imprecise. It is not the key `sample`, but what is the value for `sample`. Often this is not text, but also something that the YAML parser parses. And for example for  `ec2_vpc_vpn` in stable-2.9 (already fixed in the collection and backport exists which fixes this, so it won't ""work"" forever), the `sample` value for return value `vgw_telemetry` contains a structure which ends up being parsed by the YAML parser as something which contains a `dict` where one key is not a string.::PRs for more sanity tests are #69287 and #69288.::",6322ff2cf58d61ecfb56e2bcd4eafb3a2fe01988::
https://api.github.com/repos/ansible/ansible,68382,68251/devel/add-support-for-boolean-bios-attributes::devel,0,closed,affects_2.10::bug::module::needs_rebase::needs_revision::python3::remote_management::stale_ci::support:community::,"Currently the redfish_config module will convert boolean bios_attribute_value settings to strings (type str). This will cause BMCs expecting booleans to error out. This PR will change the default type of bios_attribute_value to 'raw' in order to support strings and booleans. Fixes #68251 ##### SUMMARY This fixes the behavior in Ansible 2.10 (also present in Ansible 2.9 and Ansible 2.8) that converts boolean based BIOS values to strings. Note that I opened another PR against `stable-2.9` initially: #68254 I can close this out and open a separate backport request to fix this bug in `stable-2.9` and `stable-2.8`. The backport request will require a _slight_ tweak to `redfish_utils.py` to fix this bug because #62764 was only added in `devel`. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME redfish_config ##### ADDITIONAL INFORMATION Sample snippet demonstrating both the ""new"" `bios_attributes` method (added in `devel`) and the deprecated `bios_attribute_name`/`bios_attribute_value` methods of modifying boolean based attributes: ``` --- - hosts: all gather_facts: false vars: bmc_username: admin bmc_password: hunter2 bmc_address: 192.168.100.100 tasks: - name: Configure boolean BIOS Settings redfish_config: category: Systems command: SetBiosAttributes bios_attribute_name: ""ConsoleRedirection"" bios_attribute_value: True baseuri: ""{{ bmc_address }}"" username: ""{{ bmc_username }}"" password: ""{{ bmc_password }}"" - name: Configure string BIOS Settings redfish_config: category: Systems command: SetBiosAttributes bios_attributes: ConsoleRedirection: True baseuri: ""{{ bmc_address }}"" username: ""{{ bmc_username }}"" password: ""{{ bmc_password }}"" ``` ``` (68251-devel) [jyundt@aurora tests]$ cat supermicro_redfish.yml --- - hosts: all gather_facts: false vars: bmc_username: admin bmc_password: hunter2 bmc_address: 192.168.100.100 tasks: - name: Configure boolean BIOS Settings redfish_config: category: Systems command: SetBiosAttributes bios_attribute_name: ""ConsoleRedirection"" bios_attribute_value: True baseuri: ""{{ bmc_address }}"" username: ""{{ bmc_username }}"" password: ""{{ bmc_password }}"" - name: Configure string BIOS Settings redfish_config: category: Systems command: SetBiosAttributes bios_attributes: ConsoleRedirection: True baseuri: ""{{ bmc_address }}"" username: ""{{ bmc_username }}"" password: ""{{ bmc_password }}"" (68251-devel) [jyundt@aurora tests]$ time ansible-playbook  -i 10.39.70.28, supermicro_redfish.yml [WARNING]: You are running the development version of Ansible. You should only run Ansible from ""devel"" if you are modifying the Ansible engine, or trying out features under development. This is a rapidly changing source of code and can become unstable at any point. PLAY [all] ********************************************************************************************************************************* TASK [Configure boolean BIOS Settings] ***************************************************************************************************** [DEPRECATION WARNING]: The bios_attribute_name/bios_attribute_value options are deprecated. Use bios_attributes instead. This feature will be removed in version 2.14. Deprecation warnings can be disabled by setting deprecation_warnings=False in ansible.cfg. [DEPRECATION WARNING]: Distribution Ubuntu 18.04 on host 10.39.70.28 should use /usr/bin/python3, but is using /usr/bin/python for backward compatibility with prior Ansible releases. A future Ansible release will default to using the discovered platform python for this host. See https://docs.ansible.com/ansible/devel/reference_appendices/interpreter_discovery.html for more information. This feature will be removed in version 2.12. Deprecation warnings can be disabled by setting deprecation_warnings=False in ansible.cfg. changed: [10.39.70.28] TASK [Configure string BIOS Settings] ****************************************************************************************************** changed: [10.39.70.28] PLAY RECAP ********************************************************************************************************************************* 10.39.70.28                : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0 real	0m8.885s user	0m2.631s sys	0m0.290s (68251-devel) [jyundt@aurora tests]$ ``` cc @nlopez  @billdodd",9c51f202091bdbc55601a53d3c619c584682dfa2::
https://api.github.com/repos/ansible/ansible,67866,ldap-params-fix::devel,0,closed,affects_2.10::bug::deprecated::docs::module::needs_rebase::needs_revision::net_tools::security::support:community::support:core::test::,"Fix for CVE-2020-1746 Module options that circumvent Ansible's option handling were disallowed in: https://meetbot.fedoraproject.org/ansible-meeting/2017-09-28/ansible_dev_meeting.2017-09-28-15.00.log.html Additionally, this particular usage can be insecure if bind_pw is set this way as the password could end up in a logfile or displayed on stdout. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME * lib/ansible/modules/net_tools/ldap/ldap_entry.py * lib/ansible/modules/net_tools/ldap/_ldap_attr.py I'm happy with the shorter cycle from a community point of view::Is this so the same code can be backported to previous Ansible releases?::Correct. we removed params from yum_repository and jenkins_plugin on a short cycle before but didn't backport the changes.  Since this is a security issue, we should backport it.  I tried to make the change do less for 2.9 and earlier (only disallowing bind_pw usage).::```suggestion ``bind_pw`` with the ``params`` option was disallowed in Ansible-2.7, 2.8, ```::```suggestion * **Security** The ``ldap_attr`` and ``ldap_entry`` modules have had the ``params`` module option removed ```::```suggestion was set with ``params``, the value of the option could end up being placed in a logfile or ```::```suggestion displayed on stdout.  Set these parameters directly with the available module options instead. ```::```suggestion - The ``params`` module option in ``ldap_attr`` and ``ldap_entry`` are deprecated on a short cycle (to be ```::```suggestion the ``bind_pw`` option is set with ``params``, the value of the option could end up being placed in ```::```suggestion * **Security Issue** Setting ``bind_pw`` with the ``params`` option for the ``ldap_entry`` and ```::```suggestion ``ldap_attr`` modules has been disallowed.  If ``bind_pw`` was set with ``params``, the value could ```::```suggestion have ended up in a logfile or displayed on stdout.  Set ``bind_pw`` directly, with the modules' ```::`fail_json` requires a `msg` keyword argument. Needs to be updated for the other places fail_json was added too.::Doh.... I'll fix that here and also open an issue to change that behaviour in fail_json.  It's a mandatory parameter so there's no reason it shouldn't be accessible as a positional arg too.::Fix pushed::",0ff609f1bc5e391fa25710b9a0baaf669f347eb1::2f2611e16cdc867db716efd7d9b6164d41b75a2c::
https://api.github.com/repos/ansible/ansible,67752,no_log_when::devel,0,closed,,Output the variable name rather than the value in the deprecation warning I'll also backport this ##### SUMMARY Fixes #67735 ##### ISSUE TYPE - Bugfix Pull Request,d51a493b7e509a7dd5a45ce57eb8213e2ba115d5::
https://api.github.com/repos/ansible/ansible,67614,postgresql_info_publications::devel,0,merged,affects_2.10::community_review::database::feature::module::postgresql::support:community::test::,"##### SUMMARY postgresql_info: add getting publication statistics for databases i also added ```version_added: ""2.10""``` to ```subscriptions:``` in RETURN section because it was merged today earlier and i forgot to add this https://github.com/ansible/ansible/pull/67464 also fixed the server_version check for the subscription and publication related parts ``` ""acme_db"": { ... ""publications"": { ""first_publication"": { ""ownername"": ""postgres"", ""puballtables"": true, ""pubdelete"": true, ""pubinsert"": true, ""pubowner"": 10, ""pubupdate"": true }, ""second_publication"": { ""ownername"": ""postgres"", ""puballtables"": true, ""pubdelete"": true, ""pubinsert"": true, ""pubowner"": 10, ""pubupdate"": true } }, } ``` ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME ```lib/ansible/modules/database/postgresql/postgresql_info.py``` Was this an error?::yes:) definitely. It doesn't work in PG versions < 10 (we have tests only for 10+ here).  I tested them manually with lower versions, found this, fixed::Would it make sense to fix it in another PR (and backport)? Or was that feature also added for 2.10?::yep, it hasn't been released yet::Ah, perfect!::",61e3c357152d14525bda2a464c08f0f311f2acfb::528798dcf993372fbce2965eca4c583a26e29961::99e46745799d614b269a3df7f84aff1a45809e08::98b583fd5d6af471ae84ecae0e987e1b1fcbca98::
https://api.github.com/repos/ansible/ansible,67452,issue_67020_aaa::devel,0,closed,affects_2.10::bug::community_review::huawei::networking::stale_ci::support:community::test::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below Some cloudengine modules have options which should have been removed for Ansible 2.9 #67020 So try to fix them. ``` ```suggestion removed_features: ```::Now you're also removing `provider`, which has not been deprecated and is not scheduled for removal. It might be better to simply remove `ce_top_spec` from module_utils/network/cloudengine/ce.py and then try to update everything else.::Same problem here.::Same problem here.::Same problem here.::Same problem here.::Yes, you are right.It is my misstake. Maybe you mean remove these [lines](https://github.com/ansible/ansible/blob/8aec05847334449ecff64de8888569ad5ce2e239/lib/ansible/module_utils/network/cloudengine/ce.py#L73)? I also plan to fix some ingores,and to do it next ...::Yes, these should be removed. Also, I'd suggest that you move the `type: xxx` updates to another PR, since these are things that could (and should) be backported to stable-2.9. Feature removal cannot be backported.::Done::Done::Done::Done::Done::",04da80505956f751b4a22c952bac8aa62de13077::f7c79b9f709d0af4078c484db695855f8e7ff8c1::2aa6f00a6e82efc7cf1f6943f0ac297efdef32a3::f956eec2d8ce99a312d3579130bb836452db9080::3b93f8c75bbf31b2c2c687fe7fc85ff003f5ed3f::4d9cea089f12c62720d7da77d7dabbff3b249ede::61c1671bc606c2c7fa963b99b4d74f74a2792de5::ea38dda56e280972daea7b09ba562d34fecd7403::b2c254db3809f10e3dd7314f57ec18384728710e::42780fdf81081836753529d6a63224816306b4a4::02ec348e9b88d6a6bdc4e3cdf869e13ff3ce9316::5f57bf4ca55cc232169998f2338ce3796b1144e0::6700d319824fa000c05cbe326956d30825236eab::e24198d611ce65bd16dcf36f4bac13ed392c412b::d9ef21d9cba965dc93a8220992bd2970d588c3a3::fe5adae87b5387ee9365c415eae62260644c83a3::fb4143432f669a55511ea45e46e9ee9c56087059::cd0830dad9c412075df01e74f181dd8b0a0f48e8::837034273675de25b930c27afdd8e01f6d97dfa8::31eed79a6a6d51535807864f327ee4dd91390758::
https://api.github.com/repos/ansible/ansible,67436,galaxy-role-list-fix::devel,0,merged,affects_2.10::bug::shipit::support:community::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> I forgot to add the `roles_path` parent to the `role_parser` object, so no paths were being passed to the list function. Oops. Add basic role list tests to prevent future regressions. This was introduced in #65022, so no need to backport this fix. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> `lib/ansible/cli/galaxy.py`",7e539f00feaac66ff3bec369463301836a63a549::
https://api.github.com/repos/ansible/ansible,67312,issue67303::devel,0,merged,affects_2.10::bug::cloud::community_review::module::support:community::vmware::,"##### SUMMARY IP specific firewall rules don't work with Python 2. Fixes #67303 for devel, I will open a backport PR as soon as this one is merged. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME vmware_host_firewall_manager.py ##### ADDITIONAL INFORMATION I've had a look at some other modules that use `ipaddress.ip_address()` and just stole their solution.",927d004cad54b385a894fcf6ea3ac531a6f839a4::
https://api.github.com/repos/ansible/ansible,66965,validate-modules-dep-aliases::devel,0,merged,affects_2.10::bug::core_review::has_issue::module::support:community::support:core::test::windows::,"##### SUMMARY The `validate-modules` check was failing if a module used the `deprecated_aliases` option in its spec. This is a validate option so I've added it to the schema for validation. This PR also removes the ignored sanity checks that were failing due to this issue. cc @tremble @felixfontein ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ansible-test validate-modulesI don't think this needs a changelog fragment, since the bad test has only been merged for a couple of days, and hasn't been released so far.::Wouldn't we want to backport this to stable-2.9 so that's actually validating `deprecated_aliases`? While it fixes the issue in devel we currently don't validate `deprecated_aliases` in stable-2.9 at all. That's sort off a bug for people who use that in a collection.::You would have to either backport #65747 as well, or completely rewrite your PR, since there was no schema validation for argument_spec until three days ago. And if you also backport #65747, I would argue that this doesn't need a changelog fragment since it is a bugfix for #65747.::(Also, I'm not sure whether such extensive new tests should be backported, since I would consider them new features. But maybe it's different for ansible-test?)::Ah fair enough makes sense.::I've added the question whether such tests should be backported to the public project meeting agenda (https://github.com/ansible/community/issues/519#issuecomment-580457957).::",47dd1d505da5c0345e14b528d0f609ea13e188fd::ad1456464cbf0571d8b8433c441b12300a1ca55d::
https://api.github.com/repos/ansible/ansible,66792,fix/vultr_discontinued_plan::devel,0,merged,affects_2.10::cloud::community_review::feature::has_issue::module::owner_pr::support:community::vultr::,"##### SUMMARY Plan used to created a server in the past may no longer exist in the future. Handle this case as gentle as possible. fixes #66707 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Feature Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> vultr_server vultr_server_info ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` Shouldn't this be `bugfixes:`?::I decided to call it minor change because it fixes an edge case of the api and I would not create a backport it because it is hard to test and probably I missed something.::",757b450a8a06ba743fc2c67ea596bdd920aebfea::26981a0073aff1ab9867fbb62facfa0c919cd85b::
https://api.github.com/repos/ansible/ansible,66600,docker_container-volumes::devel,0,merged,affects_2.10::bug::cloud::core_review::docker::docs::has_issue::module::support:community::support:core::test::,"##### SUMMARY Fixes #19103. This is similar to #19105 and what was discussed in the [comments](https://github.com/ansible/ansible/pull/19105#issuecomment-322881886), except that it covers another case (anonymous volumes with permissions) which wasn't covered in the original discussion. This seems to work fine, and doesn't seem to restart existing containers - except if the user specified `volumes: strict` (or implicitly via wildcard) in `comparisons`. Therefore, I think this PR should **not be backported** to stable-2.9. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME docker_container",0d190e889717fff03c6efa5ec497281aa134da05::8785a62a1fbc6b3bbb2bcd2568bc462aab2aa596::bd7052b7dc931d9d1149d422fb24c97a5f6c34f2::0f96c2ae4f5d513bc696e11b7850b3e8311e1c96::
https://api.github.com/repos/ansible/ansible,66382,docker_container-random-port-ranges::devel,0,merged,affects_2.10::bug::cloud::core_review::docker::docs::has_issue::module::support:community::support:core::test::,"##### SUMMARY The current behavior for one-port ranges on the container side is different from the docker CLI command. If for example `8080-8085:80` is given to the docker CLI program, it will assign the container port 80 to a free of the host ports 8080 to 8085 (which one will be decided by Docker daemon). If the same option is given to the `docker_container` module, it will assign the container port 80 to the host port 8080 (because it uses the shorter of the two ranges). This PR changes the behavior of the module to behave the same as the docker CLI program. Fixes #66225. While this can be seen as a bugfix, I think this should *not* be backported to stable-2.9 or stable-2.8 since it will cause container restarts for containers (trying to) using this feature right now. (If the host container port range contains more elements than one, the behavior will not change and containers are not restarted.) ##### ISSUE TYPE - Bugfix Pull Request - Feature Pull Request ##### COMPONENT NAME docker_container Hi. Does `cname2` need to be deleted as well? ::Yep, it should be! Thanks for spotting that. (In the end all containers will be cleaned up anyway, but it's definitely better to do that already here.)::Ah ok. Was browsing through to get familiar with how tests are added with PRs and had come across this but i wasnt sure if that was intended or not 😛 ::I think these may be in reversed order, ie should be `8000-8100:9003`?::And should this be `#Publish host ports 9010-9020 to container ports 7000-7010` ? Or written as `#Publish container ports 7000-7010 to host ports 9010-9020`?::Also think the comment can mention that it starts with lowest available one, not a random one, in that range. Maybe something like `# Publish container port 9003 to next available host port in range 8000-8100, going from lowest to highest range value` or `# Publish container port 9003 to lowest available host port in range 8000-8100` (the latter sounds better).::Indeed! Looks like I got confused when switching back from the single-port variant to the two-ports(-ranges) variant... And good point about ""random"", it is not random indeed. I wouldn't specify the exact behavior though, just that it uses a free port in that range.::Sounds good, but it had the ""random"" word in the sentence and thought it might give a slightly incorrect impression. ::",71c763c554b7aca31e3df6ec16e25526f0f27fac::e12542428c4022051480da193408a30705b2bab9::2ac31ac355a7c07c856eb31dd9a057601053d65f::
https://api.github.com/repos/ansible/ansible,66214,wcwidth::devel,0,merged,affects_2.10::bug::core_review::support:community::support:core::,"##### SUMMARY Use libc wcwidth to calculate print width in display. Fixes #63105 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/utils/display.py ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` Hrm, if `lib/ansible/utils/display.py` relies on this, it makes its use fragile.  I think it may need to exist in `lib/ansible/utils/display.py`.  Which should be ok, because since nearly everything uses `lib/ansible/utils/display.py` it should happen early enough everywhere.::Since Ansible subscribes to unicode sandwich, this should be the callers' (actually, where the data enters the system) responsibility.::It feels wrong to put this in display because it's a program global initialization (which can have an effect on other things than just wcwidth, for instance).  Perhaps we need a layer of abstraction for things that are needed to initialize the environment which ansible runs in? ``` python def first_initialization(): global first_initialization_finished locale.setlocale(locale.LC_ALL, '') # Could also do things like set up an initial logger [prior to reading configuration of logging] here first_initialization_finished = True # Call first_initialization() from the cli code somewhere ``` and then document in display.get_text_width() that the initialization function has to be run prior to running this?  Perhaps using a global variable to enforce and throw a nice error if it isn't? ``` python def get_text_width(text): if not ansible.initialiation_module.first_initialization_finished: display.error('danger will robinson') [...] ```::The algorithm in here looks good.  There are some extra corner cases where wcwidth is returning -1 that we might want to handle.  Maybe adapting this test: https://github.com/fedora-infra/kitchen/blob/develop/kitchen3/tests/test_text_display.py#L48 to the unittests for this function and then making it pass. One thing I note is that the unicode tables are updated when new versions of the unicode standard are released.  Python is generally updated quickly [but not backported] but the various libc implementations are much slower.  So if we rely on libc there will be platforms where wcwidth returns the wrong value.  In previous code I've bundled tables mapping codepoints to width to do better than libc but I'm not sure if we want to do that (For one thing, pure python is slower than wcwidth).  Maybe as a fallback in case libc is extremely broken (like, it doesn't handle hangul, kanji, or devanagari?  Although I'm not sure how we'd check for that.)  I do have code to generate those tables if we want to adopt that strategy.::I originally had it in the CLI, but since this code is dependent on it, it felt wrong to have code that depends on it, not be responsible for ensuring it was set.  It made it more complex to use, for example in the case of tests, the tests had to be responsible for setting it. I'm still on the fence here.::",790b64d1cff57177d81c359f471e79e669bd0c9c::f5800652da53c62fcddcbfa3e406192c61a37df5::86e1d1c8a2069f6b5f126a8090dac4d375630828::c789fc531ef1a0055e27e38b6c3cdd34bd18c6ae::012f9f1ecf2160e8871bac08dd605378352da0ac::2b1599a67ad05107bb212ca270447b48fa02e0cd::fca62e02a28c7165709bab4a4fee7a923481f000::4238acfa11ef6d70ee3cf79427a7a84a81c5edf3::24ad9a49d2c8eee5b5024f1b1e97974a297f4b8b::529d3abe1545c10ec9ba4bef8e37d4f8d999954f::5ad14c332db0a50c42375f955032d12825051f45::759c597df26ee05ed739f6b603ac1ae030291278::cf05d7fbe7a0f1e8eea6e14f12f12de956a537d2::
https://api.github.com/repos/ansible/ansible,66176,zabbix-sanity-tests::devel,0,merged,affects_2.10::core_review::docs::module::monitoring::owner_pr::support:community::support:core::test::zabbix::,"…anity requirements ##### SUMMARY Edited zabbix modules to be compatible with sanity requirements for new modules by improving modules documentation blocks and argument_spec. Unnecessary hard-coded check for parameter presence were removed as well, because this should be handled by argument_spec implicitly. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME zabbix_group_info zabbix_group zabbix_host_info zabbix_hostmacro zabbix_host zabbix_maintenance zabbix_map zabbix_mediatype zabbix_proxy zabbix_screen zabbix_template zabbix_user zabbix_valuemap test/sanity/ignore.txt This is a change of behavior. Right now, the module also works when none of these are specified, and returns `ok=False` and `hosts=[]` in that case. Not that this makes any sense, but it *could* be that a role or playbook relies on this behavior, so this can't be backported and requires a changelog fragment and potentially even a porting guide entry.::This is a breaking change. Right now, the module only requires one of them if `state == 'present'`. If `state == 'absent'`, both are not used at all.::Probably it makes sense to also add `options=dict(...)` to `interface` in `argument_spec`. Since that can break existing playbooks/roles, it's probably better to do that in a follow-up PR (which should not be backported).::Is there a reason this is removed (and not documented above)?::Why remove this test? Is `""""` a valid screen name? If yes, there should be a changelog fragment (bugfix since a valid screen name was not allowed by the module).::```suggestion type: list elements: <type of elements> ``` probably ```str```, and so on, would be cool to see types of list elements determined for all params where possible::@felixfontein thank you for reading attentively (however as always) :)::Where is the ```type``` suboptions?::Yes, it is unused. Proxy interface is different from Host interface. Parameters `type` and `main` were never supported by Zabbix API. [Doc for reference](https://www.zabbix.com/documentation/4.0/manual/api/reference/proxy/object#proxy_interface)::Same reason as given in this [comment](https://github.com/ansible/ansible/pull/66176#discussion_r363656004)::`screen_name` is set to `required=True` in `argument_spec`. If an empty value is given `""""` a module should fail implicitly rather than provide explicit message. In this case, this condition will never be met, but please correct me if I am mistaken in this behavior. Edit: To answer your question - `""""` is not a valid screen_name::Thanks, wanted to add it within this patch, but I've thought the same. Will open a new PR for this. ::Added `elements` where possible. I hope that `elements: dict` is valid as well::I don't know what I was thinking, but it seems that I've completely forgot about `state: absent`. Thanks for noticing~::Type=str and elements=dict ?::oh my, thanks for noticing. What a horrible typo::`required=True` does not ensure that strings are not empty. It only makes sure that they aren't `None`. So it's better to keep this test.::It is valid.::This will be a part of separate PR::Reverted, thanks for the clarification! :)::",ff94dd9a2fd1325cba485e00c99e0975447bd136::
https://api.github.com/repos/ansible/ansible,65869,fix-59183-properly::devel,0,closed,affects_2.10::bug::collection::collection:ansible.posix::has_issue::module::needs_collection_redirect::needs_rebase::needs_revision::new_contributor::new_plugin::stale_ci::support:community::system::,"##### SUMMARY Fixes #59183 without breaking non-device-based filesystems like NFS and tmpfs. See more discussion in #65544. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME mount ##### ADDITIONAL INFORMATION In #59183, it was requested that it should be impossible to get into a situation where a line is added into /etc/fstab, but mount fails. Commit 72023d7 attempted to fix the bug, but broke NFS, tmpfs and other filesystems that mount something else than a valid path. Test cases (assuming that /dev/sdb1 contains an XFS filesystem, and 192.168.0.1:/mnt/bigdisk is a valid NFS share): ``` # Should succeed ansible -i hosts myserver --become -m mount -a 'src=/dev/sdb1 path=/mnt/local state=mounted fstype=xfs' # Should also work, was broken before the change # ""Unable to mount 192.168.0.1:/mnt/bigdisk as it does not exist"" ansible -i hosts myserver --become -m mount -a 'src=192.168.0.1:/mnt/bigdisk path=/mnt/big state=mounted fstype=nfs' # Should fail without changing /etc/fstab and without leaving /mnt/bad ansible -i hosts myserver --become -m mount -a 'src=/dev/sdb1 path=/mnt/bad state=mounted fstype=ext4' ``` ##### RELEVANT PEOPLE @Akasurde @MartinVergesCould you please add a changelog entry for this change - [here](https://github.com/ansible/ansible/tree/devel/changelogs/fragments)::I don't think it is needed, as it is not really a change, just a doc clarification. I could not find any other changelog entry for doc clarification.::If you do insist on the changelog entry, would this be good enough? ``` --- minor_changes: - mount - documented that NFS and other non-device-based filesystems can be used ```::Sorry, I should have been more clear. Actually, I meant for overall change, not just this line. Adding a changelog entry will help to backport this change to 2.9 release.::OK, understood, will prepare it in a few minutes.::Done. For the record, the NFS breakage was specific to the development version, and I am not 100% convinced that the fix for #59183 (i.e. better error handling in the case of a failed mount) should be backported to stable versions.::OK, let me use different words, hopefully more clear ;) The original (bad) fix for #59183 was not deemed important enough to be backported, so why do you treat my (hopefully better) fix differently?::What if name is /mnt?::Will either fix or remove this logic. Thanks!::Well, the new code is consistent with the existing logic regarding `state == 'absent'`: it would remove `/mnt`, too, and there is no possibility to implement the ""if the module created it"" test. So I see no sane solution other than never removing the mount point. If you have a better idea, you are welcome to express it.::Sorry, this is my confusion between 'absent' and 'unmounted'. Will implement the ""remove dirs that we created"" logic.::Fixed the objection, please look again.::",52e1a7ec67c451e394a2c8fb60a09c7bab2ac32f::f53a9f1fda19a5e46fde62cef89aa247623f049e::251b3e85f2be4b3c4931647d94859d635f555bc9::b64e2d4bb89361cec73062e76fed8d1c01b8d93f::
https://api.github.com/repos/ansible/ansible,65854,docker_container-wait-for-removal::devel,0,merged,affects_2.10::bug::cloud::docker::has_issue::module::shipit::support:community::,"##### SUMMARY Fixes #65811. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME docker_container ``` def wait_for_state(self, container_id, complete_states=None, wait_states=None, accept_removal=False): delay = 1.0 ``` i wonder if we can implement this as a new module's parameter (maybe leave this as you implemented in order to backport, then add the option to 2.10)::That's what I intend to do :)::Perfect reader’s feedback on a column “You said exactly what i wanted to say but didn’t know how” , Thomas L. Freedman, Thank you for being late It’s cool, feeling my progress:)::",5d05445bdc1d07c5a2f08de36d81a1c67fc726a3::5b2630b1fe72892fd84fb3e3310803199ff1cc73::6d546f77b662627e29c36c100aa585df1926b740::d31a3ff24c24f29269e35d9653ddd41be96b256d::
https://api.github.com/repos/ansible/ansible,65733,update-vmware-guest-module-doc::devel,0,merged,affects_2.10::cloud::docs::module::needs_revision::new_contributor::support:community::vmware::,"##### SUMMARY Updated documentation reference in the `vmware_guest` module ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME * `vmware_guest` modduule @sabre1041 Thanks for the PR. Could you please point the exact location of vAPP properties list page so that users will directly go that link? Right now, it is pointing to index.html. Also, add a changelog entry [here](https://github.com/ansible/ansible/tree/devel/changelogs/fragments) so that we can backport this change to older release. Thanks,::@Akasurde done::",97db4bbc8387acba6753a94c4dcd4131a68cd1da::a5e2f4ccfb815272e80e73c0000c634d1864a216::
https://api.github.com/repos/ansible/ansible,65533,fix-typo-in-changelog::devel,0,merged,affects_2.10::community_review::docs::owner_pr::small_patch::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Fix typo in a changelog fragment But I submitted backport PRs (#65492, #65493) which are in review . Should I do cherry-pick this commit and push it to the backport PRs again? ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> changelogs/fragments/64902-fix-allow-duplicates-in-single-role.yml ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below None ```",33094e6c8ef39f4ca292c30a32268ee889600d5e::
https://api.github.com/repos/ansible/ansible,65369,devel::devel,0,merged,affects_2.10::bug::infoblox::module::needs_revision::net_tools::networking::support:certified::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Fixes for #64034, #56301 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> - nios_fixed_address - nios_txt_record - api.py ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` I see there's two if's for NIOS_TXT_RECORD comparision, plz merge this to 1::you have added new params `new_ipv4addr` and `old_ipv4addr` for updating IP address but u haven't added the params in doc param. Also, since adding of new param is a new feature, so it's better to handle the scenario in different PR as the respective PR won't be backported to `2.9.x` but other bug fixes of this PR can be backported to `2.9.x`::can u put a Note, why the param has been changed to required param::can u put a Note, why the param has been changed to non-required param::This change was made to fix bug #56301::This change was made to fix #62377::It is repeated twice since the first condition is to check in the following scenario: - When old_name, new_name, old_text and new_text parameters are supplied from the playbook for modification. The second scenario is implemented in the following scenario: - When only old_text and new_text is supplied for modification requests ::I added it here as a fix for #64045 Let me know if you need me to remove it.::ok::yes, u need to create a diff PR for this fix as this fix needs addition of new param and which is considered as new feature. Also, u need to add these two new params in module documentation (ref: [nios_host_record](https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/net_tools/nios/nios_host_record.py#L32)) And for other fixes u can create a backport to 2.9.x branch::I've implemented the requested change.::#64045 implementation where `nios_a_record` new params `new_ipv4addr` and `old_ipv4addr` are introduced need to be moved to separate and new PR, else this PR cannot be backported to Ansible 2.9.::@krisvasudevan have u opened a new PR to handle `nios_a_record` scenario.::Have opened a PR for both nios_a_record and nios_txt_record scenario::",5bd80c07f7e4c282f3efda97760b133519d3115c::544dea6145b2aee97a55ba2328fa3e5e805407d3::245a48d889c851f51cfd21777ab4ce87a92e0056::7a476b07dc9b05b92919d9d4bf0db91f929944fb::9c5bfdd52516882ef344ee85d04adc34d7a789ed::ed18c29d272424835e7255489ae3616efd4bd1d4::bf69b4b8a4e7b9a21b7f23dff911f43f3a855146::0a6958d419ef4aff2807e5e350b55ad7cc582610::7e3d4df92bc2876aab3e96fedc418a63e5e68784::6ae84ed18095b3700084b1a36895e64c372b3324::bd4a496a6deaa38ac7f33126e3a9ad0d835e963c::
https://api.github.com/repos/ansible/ansible,65300,add_vault_version::devel,0,closed,affects_2.10::bug::needs_rebase::needs_revision::stale_ci::support:community::support:core::test::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> A recent update to fix specific key lookups for version 2 KV credential stores changed the way version 2 KV store lookups worked when not specifying a lookup key/field.  This means the fix for version 2 KV credential lookups with a key/field cannot be backported into ansible 2.8 or 2.9. This PR returns the original v2 KV credential returned data to original state and maintains the fix of the previous PR. A future PR will be to implement a new option to this lookup allowing specific credential versions to be requested from a v2 KV store. Data for V2 KV lookups are now returned as: ``` { 'metadata': ..., 'data': ... } ``` See example below in additional information. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Related PRs: * https://github.com/ansible/ansible/pull/64288 (merged) * https://github.com/ansible/ansible/pull/41132 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> hashi_vault ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> Example playbook: ```paste below --- - name: Lookup Hashicorp Vault hosts: localhost gather_facts: false tasks: - name: Debug output v2 secret engine (v2 all credentials and meta data) debug: msg: ""Vault detail {{ lookup('hashi_vault', 'secret=secret/data/test: auth_method=approle validate_certs=no')}}"" ignore_errors: true - name: Debug output v2 secret engine (v2 specific credential and meta data) debug: msg: ""Vault detail {{ lookup('hashi_vault', 'secret=secret/data/test:foo auth_method=approle validate_certs=no')}}"" ignore_errors: true - name: Debug output v1 secret engine (v1 all credentials) debug: msg: ""Vault detail {{ lookup('hashi_vault', 'secret=kv1/test: auth_method=approle validate_certs=no')}}"" ignore_errors: true - name: Debug output v1 secret engine (v1 specific credential) debug: msg: ""Vault detail {{ lookup('hashi_vault', 'secret=kv1/test:foo1 auth_method=approle validate_certs=no')}}"" ignore_errors: true ``` Output after this PR: ``` PLAY [Lookup Hashicorp Vault] *********************************************************************************************** TASK [Debug output v2 secret engine (v2 all credentials and meta data)] ***************************************************** ok: [localhost] => { ""msg"": ""Vault detail {'data': {'foo': 'baz', 'pub': 'bar'}, 'metadata': {'created_time': '2019-11-26T04:42:51.5506236Z', 'deletion_time': '', 'destroyed': False, 'version': 1}}"" } TASK [Debug output v2 secret engine (v2 specific credential and meta data)] ************************************************* ok: [localhost] => { ""msg"": ""Vault detail {'metadata': {'created_time': '2019-11-26T04:42:51.5506236Z', 'deletion_time': '', 'destroyed': False, 'version': 1}, 'data': 'baz'}"" } TASK [Debug output v1 secret engine (v1 all credentials)] ******************************************************************* ok: [localhost] => { ""msg"": ""Vault detail {'foo1': 'bar', 'pub1': 'bar'}"" } TASK [Debug output v1 secret engine (v1 specific credential)] *************************************************************** ok: [localhost] => { ""msg"": ""Vault detail bar"" ``` Output before this PR: ``` PLAY [Lookup Hashicorp Vault] *********************************************************************************************** TASK [Orig Debug output v2 secret engine (v2) ] ************************************************ ok: [localhost] => { ""msg"": ""Vault detail {'foo': 'baz', 'pub': 'bar'}"" } TASK [Orig Debug output v2 secret engine (v2 specific credential)] ********************************************* ok: [localhost] => { ""msg"": ""Vault detail baz"" } TASK [Orig Debug output v1 secret engine (v1 all credentials)] ************************************************************** ok: [localhost] => { ""msg"": ""Vault detail {'foo1': 'bar', 'pub1': 'bar'}"" } TASK [Orig Debug output v1 secret engine (v1 specific credential)] ********************************************************** ok: [localhost] => { ""msg"": ""Vault detail bar"" } ```",39a4a479a222315523332dced5c498f73183d846::798e0fa3a6fd5474fb5e321a82682588c815a2a2::9fe3d04ff7270e84e927c458f1a1a25ac84faf9f::c3d58e255bc2717c2a3b3ec16471fce0d5194d16::f980a2096c5805cc786204e5171f5e2fe132bf61::
https://api.github.com/repos/ansible/ansible,65238,fix_localized_pacman::devel,0,merged,affects_2.10::bug::module::needs_revision::new_contributor::packaging::support:community::,"##### SUMMARY `pacman` output is localized and the Ansible module is parsing its output. So, we need to force the locale. Fixes #65237 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> module `pacman` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> I think the following should be sufficient: ``` module.run_command_environ_update = dict(LC_ALL='C') ``` because https://pubs.opengroup.org/onlinepubs/7908799/xbd/envvar.html : > The value of the LC_ALL environment variable has precedence over any of the other environment variables starting with LC_ (LC_COLLATE, LC_CTYPE, LC_MESSAGES, LC_MONETARY, LC_NUMERIC, LC_TIME) and the LANG environment variable.::Indeed. Good catch. Fixed. There are some other modules that could benefit from this simplification as well.::Could you please add a changelog entry for this change [here](https://github.com/ansible/ansible/tree/devel/changelogs/fragments) so that this change can be backported to 2.9 branch? You can find the documentation on [How to backport merged PR](https://docs.ansible.com/ansible/latest/community/development_process.html?backporting-merged-prs#backporting-merged-prs) Let me know once you are done with this change.   ::@Akasurde : I added a changelog fragment. I can submit the backport PR against 2.9 once this one is one is merged on devel.::Backport to 2.9 is in #66045.::",bf1cd43fa6d6f104a0906262783559f0860dcda1::b0d2b9567e170eaaf83cb393fb7c79a8fce73261::
https://api.github.com/repos/ansible/ansible,65183,remove_print_from_elb_application_lb_module::devel,0,merged,affects_2.10::bug::community_review::small_patch::support:community::,"##### SUMMARY There are `print()` statements, which results in task errors, even if the task itself was successfull. This fix should also be backported. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME elb_application_lb",48a020081757e0b38b62b6869fa42880acc6c034::
https://api.github.com/repos/ansible/ansible,65085,win-coverage-test::devel,0,merged,,##### SUMMARY When we run with coverage we run the module from an actual file. This changes the way the PowerShell engine reads a string from a pure string value (non-coverage) to something relying on the BOM of the file with a fallback to the system's codepage if no BOM is specified. This test had a unicode character which would be read as different chars due to the different encoding applied which screwed up the test assertion. No need to backport as this was a test added only in devel. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_csharp_utils tests,93cb3dc414798af581333145b3eb9efea6915b88::
https://api.github.com/repos/ansible/ansible,64895,fix/archive-empty-file::devel,0,merged,affects_2.10::bug::files::module::new_contributor::shipit::support:community::,"##### SUMMARY Fixes #34569 Removes a call to filecmp that probably protected against adding the archive file to itself (but is unnecessary). This change fixes an issue where empty files were not being added to archives This PR is just a rebase of PR #56139, stale for months. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME `archive` module ##### ADDITIONAL INFORMATION <details><summary><i>ansible-test integration  --allow-root --allow-destructive --docker archive</i> </summary><p> ```bash Running archive integration test role PLAY [testhost] **************************************************************** TASK [Gathering Facts] ********************************************************* ok: [testhost] TASK [archive : Ensure zip is present to create test archive (yum)] ************ skipping: [testhost] TASK [archive : Ensure zip is present to create test archive (apt)] ************ changed: [testhost] TASK [archive : Set liblzma package name depending on the OS] ****************** skipping: [testhost] TASK [archive : Ensure liblzma-dev is present to install backports-lzma] ******* skipping: [testhost] TASK [archive : Find brew binary] ********************************************** skipping: [testhost] TASK [archive : Get owner of brew binary] ************************************** skipping: [testhost] TASK [archive : Install package] *********************************************** skipping: [testhost] TASK [archive : Ensure backports.lzma is present to create test archive (pip)] *** skipping: [testhost] TASK [archive : prep our files] ************************************************ changed: [testhost] => (item=foo.txt) changed: [testhost] => (item=bar.txt) changed: [testhost] => (item=empty.txt) TASK [archive : archive using gz] ********************************************** changed: [testhost] TASK [archive : debug] ********************************************************* ok: [testhost] => { ""msg"": { ""archived"": [ ""/root/ansible/test/results/.tmp/output_dir/foo.txt"", ""/root/ansible/test/results/.tmp/output_dir/empty.txt"", ""/root/ansible/test/results/.tmp/output_dir/bar.txt"" ], ""arcroot"": ""/root/ansible/test/results/.tmp/output_dir/"", ""changed"": true, ""dest"": ""/root/ansible/test/results/.tmp/output_dir/archive_01.gz"", ""expanded_exclude_paths"": [], ""expanded_paths"": [ ""/root/ansible/test/results/.tmp/output_dir/foo.txt"", ""/root/ansible/test/results/.tmp/output_dir/empty.txt"", ""/root/ansible/test/results/.tmp/output_dir/bar.txt"" ], ""failed"": false, ""gid"": 0, ""group"": ""root"", ""missing"": [], ""mode"": ""0644"", ""owner"": ""root"", ""size"": 217, ""state"": ""file"", ""uid"": 0 } } TASK [archive : verify that the files archived] ******************************** ok: [testhost] TASK [archive : check if gz file exists and includes all text files] *********** ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : archive using zip] ********************************************* changed: [testhost] TASK [archive : debug] ********************************************************* ok: [testhost] => { ""msg"": { ""archived"": [ ""/root/ansible/test/results/.tmp/output_dir/foo.txt"", ""/root/ansible/test/results/.tmp/output_dir/empty.txt"", ""/root/ansible/test/results/.tmp/output_dir/bar.txt"" ], ""arcroot"": ""/root/ansible/test/results/.tmp/output_dir/"", ""changed"": true, ""dest"": ""/root/ansible/test/results/.tmp/output_dir/archive_01.zip"", ""expanded_exclude_paths"": [], ""expanded_paths"": [ ""/root/ansible/test/results/.tmp/output_dir/foo.txt"", ""/root/ansible/test/results/.tmp/output_dir/empty.txt"", ""/root/ansible/test/results/.tmp/output_dir/bar.txt"" ], ""failed"": false, ""gid"": 0, ""group"": ""root"", ""missing"": [], ""mode"": ""0644"", ""owner"": ""root"", ""size"": 317, ""state"": ""file"", ""uid"": 0 } } TASK [archive : verify that the files archived] ******************************** ok: [testhost] TASK [archive : check if zip file exists] ************************************** ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : archive using bz2] ********************************************* changed: [testhost] TASK [archive : debug] ********************************************************* ok: [testhost] => { ""msg"": { ""archived"": [ ""/root/ansible/test/results/.tmp/output_dir/foo.txt"", ""/root/ansible/test/results/.tmp/output_dir/empty.txt"", ""/root/ansible/test/results/.tmp/output_dir/bar.txt"" ], ""arcroot"": ""/root/ansible/test/results/.tmp/output_dir/"", ""changed"": true, ""dest"": ""/root/ansible/test/results/.tmp/output_dir/archive_01.bz2"", ""expanded_exclude_paths"": [], ""expanded_paths"": [ ""/root/ansible/test/results/.tmp/output_dir/foo.txt"", ""/root/ansible/test/results/.tmp/output_dir/empty.txt"", ""/root/ansible/test/results/.tmp/output_dir/bar.txt"" ], ""failed"": false, ""gid"": 0, ""group"": ""root"", ""missing"": [], ""mode"": ""0644"", ""owner"": ""root"", ""size"": 163, ""state"": ""file"", ""uid"": 0 } } TASK [archive : verify that the files archived] ******************************** ok: [testhost] TASK [archive : check if bzip file exists] ************************************* ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : archive using xz] ********************************************** changed: [testhost] TASK [archive : debug] ********************************************************* ok: [testhost] => { ""msg"": { ""archived"": [ ""/root/ansible/test/results/.tmp/output_dir/foo.txt"", ""/root/ansible/test/results/.tmp/output_dir/empty.txt"", ""/root/ansible/test/results/.tmp/output_dir/bar.txt"" ], ""arcroot"": ""/root/ansible/test/results/.tmp/output_dir/"", ""changed"": true, ""dest"": ""/root/ansible/test/results/.tmp/output_dir/archive_01.xz"", ""expanded_exclude_paths"": [], ""expanded_paths"": [ ""/root/ansible/test/results/.tmp/output_dir/foo.txt"", ""/root/ansible/test/results/.tmp/output_dir/empty.txt"", ""/root/ansible/test/results/.tmp/output_dir/bar.txt"" ], ""failed"": false, ""gid"": 0, ""group"": ""root"", ""missing"": [], ""mode"": ""0644"", ""owner"": ""root"", ""size"": 224, ""state"": ""file"", ""uid"": 0 } } TASK [archive : verify that the files archived] ******************************** ok: [testhost] TASK [archive : check if xz file exists] *************************************** ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : archive and set mode to 0600] ********************************** changed: [testhost] TASK [archive : Test that the file modes were changed] ************************* ok: [testhost] TASK [archive : debug] ********************************************************* ok: [testhost] => { ""msg"": { ""changed"": false, ""failed"": false, ""stat"": { ""atime"": 1573821619.1603184, ""attr_flags"": """", ""attributes"": [], ""block_size"": 4096, ""blocks"": 8, ""charset"": ""unknown"", ""checksum"": ""0d51d04c0531f7252cae80f58823fd0f4b20ab2f"", ""ctime"": 1573821619.1603184, ""dev"": 49, ""device_type"": 0, ""executable"": false, ""exists"": true, ""gid"": 0, ""gr_name"": ""root"", ""inode"": 258093, ""isblk"": false, ""ischr"": false, ""isdir"": false, ""isfifo"": false, ""isgid"": false, ""islnk"": false, ""isreg"": true, ""issock"": false, ""isuid"": false, ""mimetype"": ""unknown"", ""mode"": ""0600"", ""mtime"": 1573821619.1603184, ""nlink"": 1, ""path"": ""/root/ansible/test/results/.tmp/output_dir/archive_02.gz"", ""pw_name"": ""root"", ""readable"": true, ""rgrp"": false, ""roth"": false, ""rusr"": true, ""size"": 217, ""uid"": 0, ""version"": null, ""wgrp"": false, ""woth"": false, ""writeable"": true, ""wusr"": true, ""xgrp"": false, ""xoth"": false, ""xusr"": false } } } TASK [archive : Test that the file modes were changed] ************************* ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : remove our gz] ************************************************* changed: [testhost] TASK [archive : archive and set mode to 0600] ********************************** changed: [testhost] TASK [archive : Test that the file modes were changed] ************************* ok: [testhost] TASK [archive : Test that the file modes were changed] ************************* ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : remove our zip] ************************************************ changed: [testhost] TASK [archive : archive and set mode to 0600] ********************************** changed: [testhost] TASK [archive : Test that the file modes were changed] ************************* ok: [testhost] TASK [archive : Test that the file modes were changed] ************************* ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : remove our bz2] ************************************************ changed: [testhost] TASK [archive : archive and set mode to 0600] ********************************** changed: [testhost] TASK [archive : Test that the file modes were changed] ************************* ok: [testhost] TASK [archive : Test that the file modes were changed] ************************* ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : remove our xz] ************************************************* changed: [testhost] TASK [archive : test that gz archive that contains non-ascii filenames] ******** changed: [testhost] TASK [archive : Check that file is really there] ******************************* ok: [testhost] TASK [archive : Assert that nonascii tests succeeded] ************************** ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : remove nonascii test] ****************************************** changed: [testhost] TASK [archive : test that bz2 archive that contains non-ascii filenames] ******* changed: [testhost] TASK [archive : Check that file is really there] ******************************* ok: [testhost] TASK [archive : Assert that nonascii tests succeeded] ************************** ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : remove nonascii test] ****************************************** changed: [testhost] TASK [archive : test that xz archive that contains non-ascii filenames] ******** changed: [testhost] TASK [archive : Check that file is really there] ******************************* ok: [testhost] TASK [archive : Assert that nonascii tests succeeded] ************************** ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : remove nonascii test] ****************************************** changed: [testhost] TASK [archive : test that zip archive that contains non-ascii filenames] ******* changed: [testhost] TASK [archive : Check that file is really there] ******************************* ok: [testhost] TASK [archive : Assert that nonascii tests succeeded] ************************** ok: [testhost] => { ""changed"": false, ""msg"": ""All assertions passed"" } TASK [archive : remove nonascii test] ****************************************** changed: [testhost] TASK [archive : Remove backports.lzma if previously installed (pip)] *********** skipping: [testhost] PLAY RECAP ********************************************************************* testhost                   : ok=52   changed=22   unreachable=0    failed=0    skipped=8    rescued=0    ignored=0 ``` </p></details>",1e0bfa5a1bce298001dcf84e22368d725db2094e::111bed042a046d82abc336b8fe2d362ff875c57c::
https://api.github.com/repos/ansible/ansible,64512,rabbitmq_policy_3.8::devel,0,closed,affects_2.10::bug::messaging::module::needs_rebase::needs_revision::pr_day::rabbitmq::small_patch::stale_ci::support:community::,"### SUMMARY In RabbitMQ version 3.8.0 rabbitmqctl output is not in json anymore. So rabbitmqctl status returns plain text and current search return None instead of rabbit version. This results in getting wrong policies inside _list_policies as we need to omit first line from 3.7.9 While PR #62996 is not merged, this PR worth placing, and is pretty backportable. Signed-off-by: Dmitriy Rabotyagov <noonedeadpunk@ya.ru> ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME rabbitmq_policy ##### ADDITIONAL INFORMATION Current output of rabbitmqctl ``` # rabbitmqctl status Status of node rabbit@aio1 ... Runtime OS PID: 2578 OS: Linux Uptime (seconds): 49 RabbitMQ version: 3.8.0 Node name: rabbit@aio1 Erlang configuration: Erlang/OTP 22 [erts-10.5.3] [source] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:128] [hipe] Erlang processes: 435 used, 1048576 limit Scheduler run queue: 1 Cluster heartbeat timeout (net_ticktime): 60 Plugins Enabled plugin file: /etc/rabbitmq/enabled_plugins Enabled plugins: * rabbitmq_management * rabbitmq_web_dispatch * rabbitmq_management_agent * amqp_client * cowboy * cowlib Data directory Node data directory: /var/lib/rabbitmq/mnesia/rabbit@aio1 Config files * /etc/rabbitmq/rabbitmq.config Log file(s) * /var/log/rabbitmq/rabbit@aio1.log * /var/log/rabbitmq/rabbit@aio1_upgrade.log Alarms (none) Memory Calculation strategy: rss Memory high watermark setting: 0.2 of available memory, computed to: 3.3639 gb code: 0.0296 gb (32.47 %) other_proc: 0.026 gb (28.54 %) other_system: 0.0134 gb (14.65 %) allocated_unused: 0.0103 gb (11.26 %) reserved_unallocated: 0.0059 gb (6.46 %) other_ets: 0.003 gb (3.29 %) atom: 0.0015 gb (1.63 %) plugins: 0.0009 gb (0.98 %) metrics: 0.0002 gb (0.23 %) mgmt_db: 0.0002 gb (0.17 %) binary: 0.0001 gb (0.14 %) mnesia: 0.0001 gb (0.09 %) quorum_ets: 0.0 gb (0.05 %) msg_index: 0.0 gb (0.03 %) connection_other: 0.0 gb (0.0 %) connection_channels: 0.0 gb (0.0 %) connection_readers: 0.0 gb (0.0 %) connection_writers: 0.0 gb (0.0 %) queue_procs: 0.0 gb (0.0 %) queue_slave_procs: 0.0 gb (0.0 %) quorum_queue_procs: 0.0 gb (0.0 %) File Descriptors Total: 2, limit: 65436 Sockets: 0, limit: 58890 Free Disk Space Low free disk space watermark: 0.05 gb Free disk space: 97.472 gb Totals Connection count: 0 Queue count: 0 Virtual host count: 1 Listeners Interface: [::], port: 25672, protocol: clustering, purpose: inter-node and CLI tool communication Interface: 0.0.0.0, port: 5672, protocol: amqp, purpose: AMQP 0-9-1 and AMQP 1.0 Interface: 0.0.0.0, port: 5671, protocol: amqp/ssl, purpose: AMQP 0-9-1 and AMQP 1.0 over TLS Interface: [::], port: 15672, protocol: http, purpose: HTTP API ``` In my point of view, it is better to use `rabbitmqctl version` command. It was introduced in some 3.7 release. It seems `status` output is an unreliable source of information - status format can be changed from one release to another. I suggest the following workflow: * try to find a version in `rabbitmqctl version` (use --node option like with other commands) * if this command return error - try `status` with old regex Anyway, I'm not maintainer here ) I don't think that my approval can change anything.::",cb1e7d6b7be1eaa1a214a4e0b125722db1033728::
https://api.github.com/repos/ansible/ansible,64342,jinja-test-compat-2.10::devel,0,closed,affects_2.10::bug::needs_revision::new_plugin::support:community::support:core::test::,"##### SUMMARY fixed ansible template failures on older jinja due to missing built-in tests ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> jinja tests ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> Playbooks and roles written on ansible 2.8 on a modern would fail if run with ansible 2.8 on RHEL 7 due to missing tests on that platform. relevant jinja PR: https://github.com/pallets/jinja/pull/665 <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` I'm not sure if this is compatible with the GPLv3 we use in Ansible.::This should probably be a  minor change rather than a bugfix. ```suggestion minor_changes: ```::sure, but I'm hoping to backport it::We most likely will not backport this.::Jijna itself is licensed with BSD 3-Clause (new BSD?) [0]. \[0]: https://github.com/pallets/jinja/blob/master/LICENSE.rst::Move the unit tests to the proper directory under `test/units/`.::Never mind. I completely misread this.::> I'm not sure if this is compatible with the GPLv3 we use in Ansible Looked it up: https://en.m.wikipedia.org/wiki/License_compatibility#GPL_compatibility > Many of the most common free-software licenses, especially the permissive licenses, such as the original MIT/X license, BSD licenses (in the three-clause and two-clause forms, though not the original four-clause form), MPL 2.0, and LGPL, are GPL-compatible. Hence, I can apply the GPLv3 label of it helps get it merged.::",89a637b534b5d91fcc9c5ffe6492ce3cb43b8950::97f38f161e27ddb54cc351860887b4d761f123b2::5b129fb3ea8862da95e68b90731415bc85bf4a09::87288860afebbe72a012aeda42f6255b85ea9769::7cdfe6a833c33dc62f1ac96bb9ca9b0d2073ba6d::670825d426853dc7a194af074b74bdb816b41d36::
https://api.github.com/repos/ansible/ansible,64103,changelog-fixes::devel,0,merged,affects_2.10::cloud::community_review::docs::module::support:community::vultr::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Fix changelog spelling problems in devel for 2.9 release prep. will need to be backported to stable-2.9 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Relates to #64102 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docs.ansible.com ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",44bf0486faec4d6f67e1a93637d05add44b0ad98::
https://api.github.com/repos/ansible/ansible,63961,sanity_iam::devel,0,merged,affects_2.10::aws::ci_verified::cloud::docs::module::needs_maintainer::needs_revision::support:community::support:core::test::,"##### SUMMARY - Cleanup IAM_ sanity tests - Fixup docs - Deprecate unused parameter (iam_managed_policy - fail_on_delete) ##### ISSUE TYPE - Docs Pull Request - Feature Request ##### COMPONENT NAME lib/ansible/modules/cloud/amazon/iam.py lib/ansible/modules/cloud/amazon/iam_cert.py lib/ansible/modules/cloud/amazon/iam_group.py lib/ansible/modules/cloud/amazon/iam_managed_policy.py lib/ansible/modules/cloud/amazon/iam_mfa_device_info.py lib/ansible/modules/cloud/amazon/iam_password_policy.py lib/ansible/modules/cloud/amazon/iam_server_certificate_info.py lib/ansible/modules/cloud/amazon/iam_user.py ##### ADDITIONAL INFORMATION - doesn't touch iam_role because the sanity checks are fixed in #63944 - doesn't touch iam_policy because the sanity checks are fixed in #63924I think such changes need a changelog fragment (and can't be backported). It's probably better to separate them from the rest of the PR, so that the rest can be backported.::```suggestion fail_on_delete=dict(type='bool', removed_in_version='2.14'), ``` This needs a changelog fragment and porting guide entry.::Ok, will come out on the next push::```suggestion - ""iam_managed_policy - The ``fail_on_delete`` option had no effect and will be removed in Ansible 2.14."" ```::This should be in `Deprecation notices` IMO.::```suggestion default: false ```::```suggestion - The I(fail_on_delete) option does nothing and will be removed in Ansible 2.14. ```::You don't need this anymore, a deprecation warning will automatically be issued when someone uses this option.::",a36fa570da543d8eb80cdfb0fb286515e4c702c6::e0716b72d57a01071b14832c24d3bbc499407d03::7106c6a2cf1e0d4cae513f71f3d9b0b145ed703d::
https://api.github.com/repos/ansible/ansible,63679,parted_negative_numbers_fix_43369::devel,0,closed,affects_2.10::bug::module::needs_rebase::needs_revision::stale_ci::support:community::system::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Make parse_unit() understand negative numbers, allowing specifying part_start and part_end relative to disk end Fixes: #43369 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> parted ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> Trivial change, I hope it will be backported to 2.7 soon, I need it.",fb8438b15af87e5fdefd26ed8695917f00c9acd9::99855cc51786acdb252e46a1cd4a894e36d04456::
https://api.github.com/repos/ansible/ansible,63541,improve-return-values::devel,0,merged,affects_2.10::aws::cisco::cloud::core_review::docs::files::has_issue::meraki::module::needs_maintainer::networking::openstack::ovirt::support:community::support:core::vmware::windows::,"##### SUMMARY Some more parts of #63411 resp. similar changes which can be backported back to 2.8. The changes here contain less trivial changes than #63477 and #63478. It also includes a new return value for `ec2_vpc_vpn_info` as suggested by @s-hertel in https://github.com/ansible/ansible/pull/63477#discussion_r334869663; according to @s-hertel, that return value can also be returned in Ansible 2.8 and 2.9. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME ali_instance ali_instance_info ec2_instance ec2_instance_info ec2_vpc_vpn_info aws_codebuild aws_codecommit aws_secret ec2_instance ec2_instance_info ec2_vpc_nacl_info ec2_vpc_vpn_info os_coe_cluster ovirt_auth vcenter_folder stat meraki_mx_l7_firewall win_updates Has @kbreit taken a look at this one? Since the descriptions and samples are different than the properly indented `id` and `name` above, I wonder if this was actually intended to have the same indentation as `applications`.::I don't think so (yet). @kbreit please take a look :) From the description, I (now) think you're right. It sounds like they should be one level up (at same level as `applications:`).::Good catch. Yes, it should be at the same level as applications. Here is some output from a live query. Will one of you update or should I? ``` { ""applicationCategories"": [ { ""id"": ""meraki:layer7/category/1"", ""name"": ""Email"", ""applications"": [ { ""id"": ""meraki:layer7/application/4"", ""name"": ""Gmail"" }, { ""id"": ""meraki:layer7/application/2"", ""name"": ""Host-based email (POP3/IMAP/SMTP)"" }, ```::Thanks for checking this! I've re-added it (with the correct indentation).::",75584ec38506cc026376953337f31c1a62f9a44e::6449198dd76ce7c9e4a6cbc63550feee05db40ec::8dc4e8655a31d82285b7bb46621e0fd94d3b82b9::cd98d784903b915336dcbf9915c3acf8ebcb86a4::
https://api.github.com/repos/ansible/ansible,63385,bugfix/40879::devel,0,closed,WIP::affects_2.10::bug::collection::collection:community.mysql::database::module::mysql::needs_rebase::new_contributor::stale_ci::support:community::support:core::test::,"##### SUMMARY > DO NOT MERGE - This PR depends on #63384 `mysql_user` plugin has some issues with handling column specific grants: - If a column name matches a reserved keyword, ansible fails because of the lack of quotes. Add quotes where needed, depending on the mode (ANSI quoting or regular). Fixes #40879 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME mysql_user ##### ADDITIONAL INFORMATION The code changes are obtained from a patch attached to #25158 A backport to 2.8 would be appreciated.",7efba09af5234a65b06f7da215a522128b605661::0239755f1f2e305f1874906425931a197388c302::
https://api.github.com/repos/ansible/ansible,63384,bugfix/25158::devel,0,closed,affects_2.10::bug::collection::collection:community.mysql::database::module::mysql::needs_rebase::needs_revision::new_contributor::stale_ci::support:community::support:core::test::,"##### SUMMARY Re-implementation of #58928 as requested on IRC. `mysql_user` plugin has some issues with handling column specific grants: - MySQL doesn't keep track of the order of specified columns which results in ansible reporting the task as changed, even though the required grants are set. This change splits the columns and sorts them to work around this. Fixes #25158 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME mysql_user ##### ADDITIONAL INFORMATION The code changes are obtained from a patch attached to #25158 A backport to 2.8 would be appreciated. Example of how MariaDB/MySQL handle grants: ``` MariaDB [(none)]> create database a; Query OK, 1 row affected (0.001 sec) MariaDB [(none)]> use a; Database changed MariaDB [a]> create table t1 (c1 int(1), c2 int(1), c3 int(1)); Query OK, 0 rows affected (0.035 sec) MariaDB [a]> GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY 'pwd'; Query OK, 0 rows affected (0.010 sec) MariaDB [a]> GRANT SELECT (c2, c3) ON `a`.`t1` TO 'user'@'localhost'; Query OK, 0 rows affected (0.010 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | | GRANT SELECT (c3, c2) ON `a`.`t1` TO 'user'@'localhost'                                                     | +-------------------------------------------------------------------------------------------------------------+ 2 rows in set (0.000 sec) MariaDB [a]> REVOKE SELECT (c3, c2) ON `a`.`t1` FROM 'user'@'localhost'; Query OK, 0 rows affected (0.010 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | +-------------------------------------------------------------------------------------------------------------+ 1 row in set (0.000 sec) MariaDB [a]> GRANT SELECT (c3, c1) ON `a`.`t1` TO 'user'@'localhost'; Query OK, 0 rows affected (0.005 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | | GRANT SELECT (c1, c3) ON `a`.`t1` TO 'user'@'localhost'                                                     | +-------------------------------------------------------------------------------------------------------------+ 2 rows in set (0.000 sec) MariaDB [a]> GRANT SELECT (c1, c3) ON `a`.`t1` TO 'user'@'localhost'; Query OK, 0 rows affected (0.013 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | | GRANT SELECT (c1, c3) ON `a`.`t1` TO 'user'@'localhost'                                                     | +-------------------------------------------------------------------------------------------------------------+ 2 rows in set (0.000 sec) MariaDB [a]> REVOKE SELECT (c3, c1) ON `a`.`t1` FROM 'user'@'localhost'; Query OK, 0 rows affected (0.009 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | +-------------------------------------------------------------------------------------------------------------+ 1 row in set (0.000 sec) MariaDB [a]> GRANT SELECT (c1, c3) ON `a`.`t1` TO 'user'@'localhost'; Query OK, 0 rows affected (0.010 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | | GRANT SELECT (c3, c1) ON `a`.`t1` TO 'user'@'localhost'                                                     | +-------------------------------------------------------------------------------------------------------------+ 2 rows in set (0.000 sec) ``````suggestion - mysql_user - column specific grants no longer report as changed (https://github.com/ansible/ansible/issues/25158). ```::Thanks for working on this! We also should: 1. check that privs for the columns c1, c3 was actually changed (by SQL via shell module, and we should do it after each following step because if the module returns changed it doesn't mean that anything was actually changed) 2. check that privs for column c2 was not actually changed 3. try to do the same again and it must return changed=false 4. try to change privs for c2 in check mode, changed must be true but actually must not be changed 5, 6, ... check all of previous points for state=absent (in check and real mode)::I've changed the tests a bit to accommodate the suggestions. Setting state=absent removes all grants (for now), mysql 8.0 added support for revoking column specific grants but afaik this hasn't been implemented in the mysql_user module.::",2834b14d5b4bb8ca821bc6f45aa52a7d750f0fb7::
https://api.github.com/repos/ansible/ansible,63107,validate-modules-plain-format-fix::devel,0,merged,affects_2.10::bug::core_review::support:core::test::,"##### SUMMARY When we switched from integer codes to string codes, the plain format output was not updated. This is not used by ansible-test, only when calling directly, so I'm not sure we need to backport. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME test/lib/ansible_test/_data/sanity/validate-modules/validate_modules/main.py ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",78c4556b33f7cad6efc13a5d1f92bac83683a293::
https://api.github.com/repos/ansible/ansible,62470,collection_loader_fixes::devel,0,closed,affects_2.10::bug::needs_revision::new_plugin::support:community::support:core::,"##### SUMMARY * fix for relative imports (PEP302 compliance- verifying our loader can find a module before returning itself to do so) * ensure that internal pluginloader caches use the full name of the code object so same-named objects in different collections can't clobber each other * ensure that Jinja2 plugin loader doesn't look things up in function cache before it's fully-populated * add relative import tests for controller-hosted plugins (JInja2 plugins, connections) * supersedes #60317 needs backport to 2.9 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME collection_loader ##### ADDITIONAL INFORMATION Oops.... When you were talking about this yesterday, I thought you were going to change the return value to be a dict rather than passing in a dict.  Mea culpa.  I just read what you said you were planning to do wrong.  I don't think operating by side effect, is the best way to write this, especially when we have a side effect and returning a value from the function. Since we're under time pressure I could see doing it this way for 2.9.x  but I think it should get changed to being the return value in devel.  (Unless it's simple to take what @mattclay did to identify the locations that need to be updated and then use a dist instead of a tuple for all of those).::",c76c763d5730e74f84504c45f4a315740642735a::
https://api.github.com/repos/ansible/ansible,62465,document_plugins_in_collections::devel,0,merged,affects_2.10::core_review::docs::docsite::has_issue::support:core::,"##### SUMMARY Fixes #62231 Add some documentation about things that require FQCN, limitations on inventory caching, and code sharing. Vars plugin documentation is in #61078. Vars plugins in collections are ignored prior to #61078. ##### ISSUE TYPE - Docs Pull Requestdo we have a ticket to enable using cache plugins from collections?::Yes, there is this https://github.com/ansible/ansible/pull/56469.::Can you clarify why vars is removed entirely? I see the other PR (#61078) adds this documentation back. The problem I see - this PR can be backported to 2.9, but the other PR cannot. That would leave us with vars docs in 2.9 not having anything but 'not supported in collections'. ::```suggestion If you are using an inventory plugin in a playbook-adjacent collection and want to test your setup with ``ansible-inventory``, you will need to use the ``--playbook-dir`` flag. ```::Oh, oops! I thought this was in the docs/docsite/rst/dev_guide/developing_collections.rst file when I removed that. I'll put that back, thank you for catching it.::Fixed, sorry about that.::",9e7fc20552e24fc7f5abc0ebca0e2a9fb6f3e110::6fc14c635cec62613075fccdf10f6c6d9b000da5::eb1021590ad07f75e6801a4f8d50faf6f6d6a4ab::ae4a384890aeb90a523598761ea030da8a8cd4fd::
https://api.github.com/repos/ansible/ansible,62409,add_hcloud_floating_ip_module_finally::devel,0,merged,affects_2.10::cloud::has_issue::hcloud::module::needs_revision::new_module::new_plugin::support:community::support:core::test::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> This is now the completion of all Hetzner Cloud related modules. The first attempt was performed a long time ago for Ansible 2.8 (#53551). While developing it we noticed a small inconsistency within our resources - the Floating IPs was missing a user-controlled unique property - `name`. We have this now implemented in our system, so now we are able to contribute finally a `hcloud_floating_ip` Module to Ansible 2.10 🎉 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - New Module Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> hcloud_floating_ip ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` //cc @resmo AFAICS is home_location or server only required on ""creation"" right? and there is already a check for this. So change to this? ~~~diff -            required_one_of=[['home_location', 'server'], ['id', 'name']], +            required_one_of=[['id', 'name']], ~~~::could this check go outside the `if checkmode` conditio,  so a user get the same consistent ""error"" regardless if check mode or not?::probably worth considering is a check if floating IP is assigned and warn (same as in the update case). A `force=yes` (probably consolidate force_assign to force) could delete an assigned IP. ::I would suggest to default this to `ipv4` or alternatively make it required only if `state=present`. because it would be weird to delete an e.g. ipv4 by name and specify type=ipv6 right?::currently this example does not work but it would be nice it would this way::indentation looks wrong. else should be the outer if::should be `force`::This should be done in a separate PR so it can be backported to the stable branches which also disabled the test.::~~~diff -  - floatingIP is success +  - floatingIP is changed ~~~::not a blocker but this could be simplified: ~~~diff -       - floatingIP.hcloud_floating_ip.name == ""{{ hcloud_floating_ip_name }}"" +       - floatingIP.hcloud_floating_ip.name == hcloud_floating_ip_name ~~~::~~~diff -  - floatingIP is success +  - floatingIP is changed ~~~::~~~diff -  - floatingIP is success +  - floatingIP is changed ~~~::",204b77ec54cc34038896f8d7d9cc6f0d722d7f27::7839e339113e56d69953818ad9473d5c20cbd2e6::6aeba36e6ded20fda37d808a2cb987dfd81df422::fe1c9579eb24eaa7fb8a2ee500bfb1f4fa0515fe::cc67bc49ef13db3fcc0e800263dec4c32057d53d::228db0eefabc5452fbc152fc131677f95011b6f3::64a537f1973e72033f3d29e594d9a024ddbc60a2::
https://api.github.com/repos/ansible/ansible,62381,acme-new-testing-container::devel,0,merged,affects_2.10::cloud::core_review::crypto::support:core::test::,"##### SUMMARY Uses new test container ansible/acme-test-container#16. Needed for #60710, but kept separate so it can be backported. ##### ISSUE TYPE - Test Pull Request ##### COMPONENT NAME test/lib/ansible_test/_internal/cloud/acme.py",982661295730a1775aca9b52c9c99457a244126d::
https://api.github.com/repos/ansible/ansible,62285,setup_docker-rhel7-drop-system-python-docker::devel,0,closed,affects_2.10::bug::cloud::docker::needs_revision::python3::support:community::test::,"##### SUMMARY On RHEL7.6: docker-py 4.02 wants requests 2.22.0. RHEL ships requests 2.6.0, and pip doesn't upgrade it: `cannot uninstall  not possible (ERROR: Cannot uninstall 'requests'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.).`. The problem is related to the bump to pip 19.2.3 that happens with the default-test-container:1.9.3 image: https://github.com/ansible/default-test-container/commits/a95c5cb27261e3d73a5d66273bb03830b68d8590 The same task before the pip upgrade: ``` 04:46 TASK [setup_docker : Install Python requirements] ****************************** 04:48 [0;33mchanged: [testhost] => {""changed"": true, ""cmd"": [""/bin/pip2"", ""install"", ""-c"", ""/tmp/ansible.QqvrZz.test/constraints.txt"", ""docker"", ""requests==2.6.0""], ""name"": [""docker"", ""requests==2.6.0""], ""requirements"": null, ""state"": ""present"", ""stderr"": ""DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support\nERROR: docker 4.0.2 has requirement requests!=2.18.0,>=2.14.2, but you'll have requests 2.6.0 which is incompatible.\n"", ""stderr_lines"": [""DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7. More details about Python 2 support in pip, can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support"", ""ERROR: docker 4.0.2 has requirement requests!=2.18.0,>=2.14.2, but you'll have requests 2.6.0 which is incompatible.""], ""stdout"": ""Ignoring coverage: markers 'python_version > \""3.7\""' don't match your environment\nIgnoring cryptography: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring urllib3: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring sphinx: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring wheel: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring yamllint: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring paramiko: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring pytest: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring pytest-forked: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring requests: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring virtualenv: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring pyopenssl: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring pyyaml: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring pycparser: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring xmltodict: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring lxml: markers 'python_version < \""2.7\""' don't match your environment\nIgnoring pyvmomi: markers 'python_version < \""2.7\""' don't match your environment\nCollecting docker\n  Downloading https://files.pythonhosted.org/packages/95/47/5560c9cf0c92b50da24216f0e7733250fbed5a497f69e3c70e1be62143fe/docker-4.0.2-py2.py3-none-any.whl (138kB)\nRequirement already satisfied: requests==2.6.0 in /usr/lib/python2.7/site-packages (2.6.0)\nRequirement already satisfied: six>=1.4.0 in /usr/lib/python2.7/site-packages (from docker) (1.9.0)\nRequirement already satisfied: ipaddress>=1.0.16; python_version < \""3.3\"" in /usr/lib/python2.7/site-packages (from docker) (1.0.16)\nRequirement already satisfied: backports.ssl-match-hostname>=3.5; python_version < \""3.5\"" in /usr/lib/python2.7/site-packages (from docker) (3.5.0.1)\nCollecting websocket-client>=0.32.0 (from docker)\n  Downloading https://files.pythonhosted.org/packages/29/19/44753eab1fdb50770ac69605527e8859468f3c0fd7dc5a76dd9c4dbd7906/websocket_client-0.56.0-py2.py3-none-any.whl (200kB)\nInstalling collected packages: websocket-client, docker\nSuccessfully installed docker-4.0.2 websocket-client-0.56.0\n"", ""stdout_lines"": [""Ignoring coverage: markers 'python_version > \""3.7\""' don't match your environment"", ""Ignoring cryptography: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring urllib3: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring sphinx: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring wheel: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring yamllint: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring paramiko: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring pytest: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring pytest-forked: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring requests: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring virtualenv: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring pyopenssl: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring pyyaml: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring pycparser: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring xmltodict: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring lxml: markers 'python_version < \""2.7\""' don't match your environment"", ""Ignoring pyvmomi: markers 'python_version < \""2.7\""' don't match your environment"", ""Collecting docker"", ""  Downloading https://files.pythonhosted.org/packages/95/47/5560c9cf0c92b50da24216f0e7733250fbed5a497f69e3c70e1be62143fe/docker-4.0.2-py2.py3-none-any.whl (138kB)"", ""Requirement already satisfied: requests==2.6.0 in /usr/lib/python2.7/site-packages (2.6.0)"", ""Requirement already satisfied: six>=1.4.0 in /usr/lib/python2.7/site-packages (from docker) (1.9.0)"", ""Requirement already satisfied: ipaddress>=1.0.16; python_version < \""3.3\"" in /usr/lib/python2.7/site-packages (from docker) (1.0.16)"", ""Requirement already satisfied: backports.ssl-match-hostname>=3.5; python_version < \""3.5\"" in /usr/lib/python2.7/site-packages (from docker) (3.5.0.1)"", ""Collecting websocket-client>=0.32.0 (from docker)"", ""  Downloading https://files.pythonhosted.org/packages/29/19/44753eab1fdb50770ac69605527e8859468f3c0fd7dc5a76dd9c4dbd7906/websocket_client-0.56.0-py2.py3-none-any.whl (200kB)"", ""Installing collected packages: websocket-client, docker"", ""Successfully installed docker-4.0.2 websocket-client-0.56.0""], ""version"": null, ""virtualenv"": null}[0m ``` An example: https://app.shippable.com/github/ansible/ansible/runs/142789/101/console note: on RHEL7.6, cloud-init is the only package to depends on python-requests <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME setup_docker <!--- Write the short name of the module, plugin, task or feature below -->",f7d9bb8f4068bdc11f8e48c166ec50218d2e893d::
https://api.github.com/repos/ansible/ansible,62179,docker-use-elements-docs::devel,0,merged,affects_2.10::cloud::community_review::docker::docs::module::owner_pr::stale_ci::support:community::,"##### SUMMARY Since #59244 was merged, list options can be documented better. This PR adds the new feature to all docker modules. I've also added this for return data, even though it's not supported yet. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docker_compose docker_container docker_host_info docker_image docker_image_info docker_network docker_node docker_node_info docker_prune docker_stack docker_swarm docker_swarm_info docker_swarm_service Nice, haven't heard of it :)::There are some points which could be improved too while you are here :), e.g. 1. some descriptions end with dots, some not 2. in ```comparisons```'s parameter there are big bunches of texts, could be split 3. some sentences of descriptions are in quotes (without need) 4. too long sentences happen 5. seealso section could be added (at list with general links to the docker documentation, and other related docker modules) ::It has only been around since #59244, i.e. it is available only for 2.9 and devel.::These are things that can also be backported to stable-2.8, so I'd rather do that in another PR.::cool, thanks, will know!::",508f768d7443119680919f6955cdbb14ff7beff3::
https://api.github.com/repos/ansible/ansible,62176,openssh_keypair-porting-guide-entry::devel,0,merged,affects_2.10::core_review::docs::support:core::,"##### SUMMARY This is a follow-up PR for #61658. Needed to be able to backport it to stable-2.9 (see #61658). CC @abadger ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs/docsite/rst/porting_guides/porting_guide_2.9.rst ```suggestion * :ref:`openssh_keypair <openssh_keypair_module>` now applies the same file permissions and ownership to both public and private keys (both get the same ``mode``, ``owner``, and ``group``). If you need to change permissions / ownership on one key, use the :ref:`file <file_module>` to modify it after it is created. ```::Thanks a lot, I think that improves it a lot! I will change it a little more though, since the `etc.` is really needed - there are some more attributes (like selinux context) which will be set as well.::",c71d5a83d1987d6415cee83dd0bbf8bb44665496::e46a81713dc3876064a1131e93d3efb87f8a0368::c5c5629b471f8cc675004038b3729cac959b09e8::
https://api.github.com/repos/ansible/ansible,62022,vmware-test-add-vsphere-automation-sdk-dep::devel,0,merged,affects_2.10::bug::cloud::docker::needs_revision::stale_ci::support:core::test::,"##### SUMMARY The following modules depend on `vSphere Automation SDK`: - `vmware_rest_client` - `vmware_guest_info` - `vmware_tag_manager` - `vmware_vm_inventory` The associated test cannot be run with `govcsim`. But the situation is changing since we will soon run them on a regular lab, and so, we need to install the dependency. Depends-On: https://github.com/ansible/default-test-container/pull/31 Depends-On: https://github.com/ansible/ansible/pull/62285 Depends-On: https://github.com/ansible/ansible/pull/62412 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME vmware_rest_client vmware_guest_info vmware_tag_manager vmware_vm_inventory <!--- Write the short name of the module, plugin, task or feature below -->Is this SDK not available on pypi?::Nah, I asked myself the very same question: https://github.com/vmware/vsphere-automation-sdk-python/issues/38::No this is not available on PyPi :(::Can you split these two updates into separate PRs? We'll merge the default test container change first. We may end up only backporting the default container update.::",3d7ba5dc77b441251cae17d83e8e6173119b9760::
https://api.github.com/repos/ansible/ansible,61903,fix-rpm-packaging::devel,0,merged,affects_2.10::bug::core_review::small_patch::support:core::,"Needs to require ansible = version rather than ansible-version ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION This needs to be backported to the stable-2.9 branch",cddadd15db77ed3f0a9617ba63e0fd60b1ec8354::
https://api.github.com/repos/ansible/ansible,61643,patch-2::devel,0,closed,affects_2.9::bug::cloud::digital_ocean::has_issue::module::needs_rebase::needs_revision::new_contributor::stale_ci::support:community::,"##### SUMMARY The DigitalOcean API has been changed, and it throws an error on the droplet creation task now: `found unpermitted parameters: id`. We need to remove the key `id` when calling the API. The fix should be backported to 2.8 after merging ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request (Fixes #61664) ##### COMPONENT NAME digital_ocean_droplet ##### ADDITIONAL INFORMATION Task: ``` - digital_ocean_droplet: state: present name: XXX oauth_token: XXX size: s-1vcpu-1gb region: lon1 image: ubuntu-19-04-x64 wait_timeout: 300 unique_name: true ipv6: true ssh_keys: XXX ``` Output: ```paste below fatal: [localhost]: FAILED! => { ""changed"": false, ""invocation"": { ""module_args"": { ""backups"": false, ""id"": null, ""image"": ""ubuntu-19-04-x64"", ""ipv6"": true, ""monitoring"": false, ""name"": ""XXX"", ""private_networking"": false, ""region"": ""lon1"", ""size"": ""s-1vcpu-1gb"", ""ssh_keys"": [ ""XXX"" ], ""user_data"": null, ""volumes"": null } }, ""msg"": ""found unpermitted parameters: id"" } ```",b8b416d30282d6aef4b3ffb7fcb01a0dd2da9f59::
https://api.github.com/repos/ansible/ansible,61256,elb_target::devel,0,merged,affects_2.9::aws::bug::cloud::core_review::has_issue::module::support:community::support:core::test::,"##### SUMMARY Fixups for the elb_target and elb_target_info integration tests - Migrate to module_defaults (and cope with not being passed security_token) - Finish the rename from elb_target_facts to elb_target_info - Lookup AMIs by name rather than a hard-coded list of AMIs - Update AWS policy to enable management of TargetGroups I've bundled these into one PR because they required the same updates to hacking/aws_config/testing_policies/compute-policy.json ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/modules/cloud/amazon/elb_target.py lib/ansible/modules/cloud/amazon/elb_target_info.py lib/ansible/modules/cloud/amazon/elb_target_group.py hacking/aws_config/testing_policies/compute-policy.json ##### ADDITIONAL INFORMATION @s-hertel Two more entries for #55775Not sure about this one, these timeouts generally address problems that happen only intermittently.  I'm leaving this test on a loop locally 100x overnight, will report back if it hits any issues with the lower value.::```suggestion name: ""ansible-test-sts-{{ resource_prefix }}-lambda-execution"" ``` To match the security policy in aws-terminator please.::So far I haven't seen any failures from the reduced pause.::@jillr ansible-test-sts feels wrong as a prefix, this role has nothing to do with sts testing. Running the tests using ansible-test will [automatically generate a prefix of ""ansible-test-"" ](https://github.com/ansible/ansible/blob/devel/test/lib/ansible_test/_internal/cloud/__init__.py#L388) Rather than renaming to `ansible-test-sts...` how would you feel about renaming it to `{{ resource_prefix }}-elb-target-lambda-execution` and updating terminator to clean ansible-test-* ?::Thanks for fixing this role name. When this gets merged please also backport to 2.9.::@jillr I've submitted #61806.  Once that's in I'll update this to `{{ resource_shortprefix }}-lambda-execution` as per the various discussions.  (`ansible-test-123456-lambda-execution`)::Are you good with the reduced pause here?::Yeah seems to be fine as best I can test, we'll see what happens once it hits CI for real but I haven't been able to trigger any issues at least.::Renamed in latest version.  If #61806 goes through first I'll remove the temporary definition of resource_shortprefix from this PR.  If this one goes through first I'll clean it up in #61806::This has actually uncovered a bug in the arg spec (or docs) for this module.  `elbv2.delete_target_group` only needs an ARN, however the module defaults `target_type` to instance and requires `['protocol', 'port', 'vpc_id']` if `target_type` is set.  So this task is failing: `target_type is instance but all of the following are missing: protocol, port, vpc_id` @tremble - would you be up for tackling that bug here, or else we'll need to add the extra parameters like in https://github.com/ansible/ansible/blob/devel/test/integration/targets/elb_target/playbooks/roles/elb_target/tasks/main.yml#L343:L351::Believed fixed with ac97bf5 ::```suggestion lambda_name: '{{ resource_prefix }}-elb-target-lambda' ```::I don't think that will work. AnsibleModule will make sure that `'target_type' in module.params` (with value `None` if the user didn't specify it), so `module.params.get('target_type', 'instance') is None` if the user didn't specify it. ```suggestion target_type = module.params[""target_type""] or ""instance"" ```::",a5e60f37ceae5f550f3366e8c6723fc800b0e873::d13fc9f31544634d86f948328a2448b897de680c::2f645267304a55d8ae768cd2db7e1db483c95428::0258ed462c27145cecc85d7e58f1b679d997a5bb::faa31be6c091f37672ccb2c17039e9decdb75842::51dbda3183706564667db8e3b5e5951dedd0e191::482401c76038b5ac78d83cb7a21138d2787ed4e0::2ba4f23997ab8c9c6604bbfce6fb353e7ee0ae1b::67be8e3035bf704b2f43b54c7fd42751cddb4dd0::d15367a311eff275e614eba9ef4d4c8df54c186f::d38ed76965985a3840576ca974a6f80fd6f1e7b2::f875f5cf5f5c70a1b0c4af1e79768167c2316ebd::d6686296dab431f10a36fd41699e67cb87e4d233::7887a7034b9ce11b534c18cb2a8c9982b6677b5a::510d53d280b0d4c885132d025d090130e681835a::
https://api.github.com/repos/ansible/ansible,60912,warn_when_sanitizing_constructed_groups_option::devel,0,merged,affects_2.9::bug::core_review::inventory::support:community::support:core::,"##### SUMMARY Fixes #59508 The `keyed_groups` field has used sanitization since 2.6, but `groups` only started doing so in 2.8. I'm not sure how widely that has been used, but it seems like at minimum a warning for the change in behavior should be given, or perhaps the previous lack of forced sanitization + a deprecation warning for that behavior should be reinstated. Whichever solution, should also be backported to 2.8. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME constructed",f45a8faf7583cf3366d8331dc21f4345bbf4903c::8b05f01af8cbfc7c6c639abc4c1039429bf028b9::
https://api.github.com/repos/ansible/ansible,60508,route53_octal_chars::devel,0,merged,affects_2.9::aws::bug::cloud::community_review::module::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Fixes octal chars returned by AWS Route53 API <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Fixes #30077 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> route53 ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> This seems to work in both Py 2 and Py 3 for the examples I tested, but I have no idea whether it works in general (need to do some research). Is there a reason you need this? For which strings did you have problems?::The original implementation only fixes two cases (""*"" and ""@""), this new one is generic. I had problems, for example, when I used ""#"" as prefix to disable some records (it's suppressed from route53, and from Bind, while still a valid record) Then, instead of adding it, I've generalized the function. The encode with ""unicode_escape"" replaces escaped Unicode literals, so it works for all returned values from route53, which are Unicode encoded.::I'm mainly wondering whether there is a case where this breaks something :) But if `name` is only using ASCII chars, this should work fine. I've tested the module with the DNS entries at work, and it doesn't seem to break there. So I'm happy ;) Could you add a [changelog fragment](https://docs.ansible.com/ansible/latest/community/development_process.html#changelogs-how-to)?::Changelog fragment added::If you want this to be backported, it's better to also label it a bugfix in the changelog fragment: ```suggestion bugfixes: ```::Since you mentioned it explicitly: ```suggestion - route53 - improve handling of octal encoded characters, for example for ``#``. ```::",0193c67ccf80bcd05a0573ebbf7fd30287732d5c::dff0e6515b0571ac70d0ce2dafc72dd0c13c0c41::
https://api.github.com/repos/ansible/ansible,60360,59485::devel,0,closed,affects_2.9::bug::core_review::module::owner_pr::stale_ci::support:community::support:core::windows::,##### SUMMARY Fixes: #59485 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_domain_user win_domain_user.ps1 ##### ADDITIONAL INFORMATION Didn't want to introduce new parameters since this will probably get backported,14cc6f3b986a55e4a072b2e0f199cd2185f57b1c::9a2d70c980fc36e18b6d2fef3996df3356af5b49::
https://api.github.com/repos/ansible/ansible,60342,gcp_compute_snapshot_info::devel,0,merged,affects_2.9::automerge::cloud::gce::module::new_module::new_plugin::shipit::support:community::,##### SUMMARY New GCP module: gcp_compute_snapshot_info This PR is the result of the following Magic Modules PRs: - [Fix generated iam parent resource name](https://github.com/GoogleCloudPlatform/magic-modules/pull/2136) - [Changes to info->facts module rename](https://github.com/GoogleCloudPlatform/magic-modules/pull/2131) - [[ansible] adding type info for facts filter](https://github.com/GoogleCloudPlatform/magic-modules/pull/2127) - [changing description on networkInterfaces.network](https://github.com/GoogleCloudPlatform/magic-modules/pull/2124) - [backporting gcp_util changes](https://github.com/GoogleCloudPlatform/magic-modules/pull/2123) - [adding labels to instance templates](https://github.com/GoogleCloudPlatform/magic-modules/pull/2122) - [Pub/Sub Geo Restriction](https://github.com/GoogleCloudPlatform/magic-modules/pull/2114) - [add redis_4_0 as supported](https://github.com/GoogleCloudPlatform/magic-modules/pull/2085) - [[ansible] rename facts modules to info modules](https://github.com/GoogleCloudPlatform/magic-modules/pull/2002) ##### ISSUE TYPE - New Module Pull Request ##### ADDITIONAL INFORMATION ``` This was generated by [Magic Modules](https://github.com/googlecloudplatform/magic-modules) ```,2e69a852082c5cab93e6dbb58c0c4f78650c6c24::
https://api.github.com/repos/ansible/ansible,60341,bug_fixesmm-bugaf::devel,0,closed,affects_2.9::bug::community_review::small_patch::support:community::,##### SUMMARY Bug fixes for GCP (as of 2019-08-05T17:42:59Z) This PR is the result of the following Magic Modules PRs: - [Fix generated iam parent resource name](https://github.com/GoogleCloudPlatform/magic-modules/pull/2136) - [Changes to info->facts module rename](https://github.com/GoogleCloudPlatform/magic-modules/pull/2131) - [[ansible] adding type info for facts filter](https://github.com/GoogleCloudPlatform/magic-modules/pull/2127) - [changing description on networkInterfaces.network](https://github.com/GoogleCloudPlatform/magic-modules/pull/2124) - [backporting gcp_util changes](https://github.com/GoogleCloudPlatform/magic-modules/pull/2123) - [adding labels to instance templates](https://github.com/GoogleCloudPlatform/magic-modules/pull/2122) - [Pub/Sub Geo Restriction](https://github.com/GoogleCloudPlatform/magic-modules/pull/2114) - [add redis_4_0 as supported](https://github.com/GoogleCloudPlatform/magic-modules/pull/2085) - [[ansible] rename facts modules to info modules](https://github.com/GoogleCloudPlatform/magic-modules/pull/2002) ##### ISSUE TYPE - Bugfix Pull Request ##### ADDITIONAL INFORMATION ``` This was generated by [Magic Modules](https://github.com/googlecloudplatform/magic-modules) ```,
https://api.github.com/repos/ansible/ansible,60340,bug_fixesmm-bugae::devel,0,merged,affects_2.9::automerge::bug::cloud::gce::module::new_plugin::shipit::support:community::,##### SUMMARY Bug fixes for GCP (as of 2019-08-05T17:42:59Z) This PR is the result of the following Magic Modules PRs: - [Fix generated iam parent resource name](https://github.com/GoogleCloudPlatform/magic-modules/pull/2136) - [Changes to info->facts module rename](https://github.com/GoogleCloudPlatform/magic-modules/pull/2131) - [[ansible] adding type info for facts filter](https://github.com/GoogleCloudPlatform/magic-modules/pull/2127) - [changing description on networkInterfaces.network](https://github.com/GoogleCloudPlatform/magic-modules/pull/2124) - [backporting gcp_util changes](https://github.com/GoogleCloudPlatform/magic-modules/pull/2123) - [adding labels to instance templates](https://github.com/GoogleCloudPlatform/magic-modules/pull/2122) - [Pub/Sub Geo Restriction](https://github.com/GoogleCloudPlatform/magic-modules/pull/2114) - [add redis_4_0 as supported](https://github.com/GoogleCloudPlatform/magic-modules/pull/2085) - [[ansible] rename facts modules to info modules](https://github.com/GoogleCloudPlatform/magic-modules/pull/2002) ##### ISSUE TYPE - Bugfix Pull Request ##### ADDITIONAL INFORMATION ``` This was generated by [Magic Modules](https://github.com/googlecloudplatform/magic-modules) ```,d75405cdfa7a3ff546fc57adc9daaf5fe193bb3d::
https://api.github.com/repos/ansible/ansible,60339,bug_fixesmm-bugad::devel,0,merged,affects_2.9::automerge::bug::cloud::gce::module::new_plugin::shipit::support:community::test::,##### SUMMARY Bug fixes for GCP (as of 2019-08-05T17:42:59Z) This PR is the result of the following Magic Modules PRs: - [Fix generated iam parent resource name](https://github.com/GoogleCloudPlatform/magic-modules/pull/2136) - [Changes to info->facts module rename](https://github.com/GoogleCloudPlatform/magic-modules/pull/2131) - [[ansible] adding type info for facts filter](https://github.com/GoogleCloudPlatform/magic-modules/pull/2127) - [changing description on networkInterfaces.network](https://github.com/GoogleCloudPlatform/magic-modules/pull/2124) - [backporting gcp_util changes](https://github.com/GoogleCloudPlatform/magic-modules/pull/2123) - [adding labels to instance templates](https://github.com/GoogleCloudPlatform/magic-modules/pull/2122) - [Pub/Sub Geo Restriction](https://github.com/GoogleCloudPlatform/magic-modules/pull/2114) - [add redis_4_0 as supported](https://github.com/GoogleCloudPlatform/magic-modules/pull/2085) - [[ansible] rename facts modules to info modules](https://github.com/GoogleCloudPlatform/magic-modules/pull/2002) ##### ISSUE TYPE - Bugfix Pull Request ##### ADDITIONAL INFORMATION ``` This was generated by [Magic Modules](https://github.com/googlecloudplatform/magic-modules) ```,708ba7dff78a1ee1e51b79f1058d6ffc735c3e6f::
https://api.github.com/repos/ansible/ansible,60338,bug_fixesmm-bugac::devel,0,merged,affects_2.9::automerge::bug::cloud::gce::module::new_plugin::shipit::support:community::test::,##### SUMMARY Bug fixes for GCP (as of 2019-08-05T17:42:59Z) This PR is the result of the following Magic Modules PRs: - [Fix generated iam parent resource name](https://github.com/GoogleCloudPlatform/magic-modules/pull/2136) - [Changes to info->facts module rename](https://github.com/GoogleCloudPlatform/magic-modules/pull/2131) - [[ansible] adding type info for facts filter](https://github.com/GoogleCloudPlatform/magic-modules/pull/2127) - [changing description on networkInterfaces.network](https://github.com/GoogleCloudPlatform/magic-modules/pull/2124) - [backporting gcp_util changes](https://github.com/GoogleCloudPlatform/magic-modules/pull/2123) - [adding labels to instance templates](https://github.com/GoogleCloudPlatform/magic-modules/pull/2122) - [Pub/Sub Geo Restriction](https://github.com/GoogleCloudPlatform/magic-modules/pull/2114) - [add redis_4_0 as supported](https://github.com/GoogleCloudPlatform/magic-modules/pull/2085) - [[ansible] rename facts modules to info modules](https://github.com/GoogleCloudPlatform/magic-modules/pull/2002) ##### ISSUE TYPE - Bugfix Pull Request ##### ADDITIONAL INFORMATION ``` This was generated by [Magic Modules](https://github.com/googlecloudplatform/magic-modules) ```,af32f73fca1f66ef58d545ca0a8eab7c4edf276f::
https://api.github.com/repos/ansible/ansible,60337,bug_fixesmm-bugaa::devel,0,merged,affects_2.9::automerge::bug::cloud::gce::module::new_plugin::shipit::small_patch::support:community::test::,##### SUMMARY Bug fixes for GCP (as of 2019-08-05T17:42:59Z) This PR is the result of the following Magic Modules PRs: - [Fix generated iam parent resource name](https://github.com/GoogleCloudPlatform/magic-modules/pull/2136) - [Changes to info->facts module rename](https://github.com/GoogleCloudPlatform/magic-modules/pull/2131) - [[ansible] adding type info for facts filter](https://github.com/GoogleCloudPlatform/magic-modules/pull/2127) - [changing description on networkInterfaces.network](https://github.com/GoogleCloudPlatform/magic-modules/pull/2124) - [backporting gcp_util changes](https://github.com/GoogleCloudPlatform/magic-modules/pull/2123) - [adding labels to instance templates](https://github.com/GoogleCloudPlatform/magic-modules/pull/2122) - [Pub/Sub Geo Restriction](https://github.com/GoogleCloudPlatform/magic-modules/pull/2114) - [add redis_4_0 as supported](https://github.com/GoogleCloudPlatform/magic-modules/pull/2085) - [[ansible] rename facts modules to info modules](https://github.com/GoogleCloudPlatform/magic-modules/pull/2002) ##### ISSUE TYPE - Bugfix Pull Request ##### ADDITIONAL INFORMATION ``` This was generated by [Magic Modules](https://github.com/googlecloudplatform/magic-modules) ```,506cf5d71bef500c0aca2b7c3fd8513667c80811::
https://api.github.com/repos/ansible/ansible,60334,abadger_unsafe_improvement::stable-2.8,0,closed,,"##### SUMMARY backport the requested change to UnsafeProxy for 2.8 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",cfe01390aad55b1ec2c3962aabaa1c2dabbb833c::db26fe2f1e468073ff784a7534ae9575eed940b9::9b9066d10f21ab27c68f0ac9067796e55855bb6c::9551528ba06e7875d1bcdd4d19b95c5049e6d5e3::488ee408792345a152094440a9ce4f4c689c7973::a5d409a8b2912b2adac832c966313a8ec7addcc2::3c8838f0f7493fcfc034e20bed4e73ccc20cbd23::b232a9337e4eba64b3ac5e5ebc3eed4a2bf616ea::723da331762f186fdcb7a585b68cc63a353df5dc::3ceeae0de92a425d3315f35f682a45f2f2bc29e0::9e0a3fcc2a17760f6a49cd391dba946f675ed6d9::3a103405b19f7fcb0e803b32f64c41856b504f7f::49da47d09fa72670d3f87bf16305d7cccd0465c1::c1ee1f142db1e669b710a65147ea32be47a91519::db7e9aa0518b927b776e3d55d93f90583692a2c2::cf9999692a27bb68a6a2d8100e154c1929bbd02b::3da4c0dd3a7c02006ce324af2f8efdcb3189f497::37dd0832a45e7ebd813487180add91a094b4b7cb::d82446652fcac3d039bb4485865ce5f9a162e859::06c7b87613cc24b100a10074746d39e934eccfa7::08b9e18d4f80a0164b8d5c52ec6a0dade64be5f3::964783fbd2f738e938deedf338d8a36c1b54ccd6::8a821d57bd5a322967bac1d21b61f172614cad33::65013c40015658532d437adf52c82df2a2a81c8b::4e8df9a4b85ac485cad961d9196a4993c01151e0::db783eb2b9f38b54df30db3a24adcd46d5a55a4a::5ed469f6b71962d16d038669e977cd0372a236b9::f8f3986871dde66437a68b23e2ee6243569b3194::3cdc6678880b3a8070a44c5499840676d042e374::2f6de3aea41dbca7a3628b39d953f285e9bd426f::b4494fa5476a055df343f1c6d17ea0a135d4498a::c3d1f9b08549f12d3a0db52e2d9eb8a2f3f6c39d::007fe842b904184b67bbc814b076b492f71a99b6::3b5a96fcb760aa83cb67f904013c3016839117ad::5b1a4f959ac515dbdc9e84e0e910f9a0d8ce46b7::30c1d9754dbfe58a27103b809f2a388ac949c316::7c6fb57b7d2dedb732fe7d41131c929ccb917a84::f274cefa5978b64b6ba776f5b44cdb60b1127595::0e9f002073829aa1cc8367763ab556dce0bf36ea::c24b841c0a8ec60f8eabafc2dbba99358ecbf294::fe3459ef86e44869e7c8cd61ea56e8a392e44d5f::a589cac18aaa05b764e68214e067654754b33d67::86937e06e36f47fbc5eb21f6f4f5c81ff99eb135::c562b53cb2efc85862b88aeb482043ad14e9de2d::6aaf0ea3825b1f86bb82f4157c0a59a6c3ab37ee::08d7905be2a45e51ceed315974e25d1008bf4263::336be58665e946b4c4c071ced83186fddc128448::373e887e7ff4266b7b5e40f3cffae405e70a8717::4d775cbbf12c748a3de80084ca047ce6529111f4::9182d54e986c149e76d34ea42dd5d27cc1b77898::93ea9612057d47b28c9c42d439ef5679351b762b::0b8354751b3ecbdba1813030411701af1895bdfa::ecddbdf0cbc62508f2eed694940e440bf85dab15::66654475e18eb5323585702d6e4ae9b9534c7356::4a7e11ba9afd84e78b9ad8403afe51db372f1c5f::ed4a729fd6af17c4962fe41a287222b7858b889a::8944be32bf1c95949cca171b6c4bce43abea7042::32de51adacdce52a4654d8fd07a58b7c387e7f91::978fe81a6d047391990298aa5081214dd3f74d98::2bc0eecdb39ae72cfa9c5ac89282522dd47d3869::19299f3310d14ea7589f74caf2593045997b4513::f7af4875d30d23b2cb5daf8f85162ad20ea768b1::e9d7156f533f44e46248aa856d89d5a680e41654::5d7cc993dde8ef32fafb606747be0ef03d31dc82::127bd67f6e927321dafbd11a492ca8756cf8d89f::fd899956b427be38f425a805f0ab653af7fd3300::20c4ad3b95ff7b35c36737f85ed600afd5628bea::dbe618c0840eb066e26b88e09d88867697a7fb9d::3c7e8f79050912d435b5bb50755129c73d83b24c::0b27ec3ddcc8023c5032c09475b260d0edc0a64c::5bddd2f04af3d4ca2d1c0e4a8fba7474b86bf084::1ec155e7733a8b408bb54cd29f8e84bdc3a82b0c::05c586e3ef46dd7ba4c676a60142e11af5ddf0f3::1d560e5ce99e4f785c7fe215ac0440ee424af5d0::2f403981b5fc10b79c12ff78f88c8c232c660c50::8a6c7a97ccedf99d5bf4c39e0118ef61501d15ee::2ebc4e1e7eda61f133d9425872e2a858bae92ec4::9f41a4273ee907ce996c044650129c46d786d644::53af57b08bdd901cfa4911c1ac1bdaf83d38468d::e1c289118836ec0bf84a38133b38143d62c53ae6::1351962eee4d4afb8919d27d5e6ab279f27f4a09::691976c3d0be3c5c29ff92da46cf8b1d7cacb233::6a53147a153b1b3ac1993aafa12ffa81c14585bf::6208294054268a1bcfaa64c419d3c39286705a09::24d8e82655e6ca2bf479095b656fcfe800abf8eb::27c60a7cec0c267259c9322dcbc5136e89484e2f::4c1f52c6c0003cfeb271342a579a1f6887c8eb9c::652bfc7e19f3bab086c1d0389c8d87933f261d54::e07c4f41d71d0c78c6622d115059a7264e0de847::196347ff326e0fdd1d0c72adbc4aff42362b15aa::04ec47bdf16112435a1278149146bdb81de2b979::c06751fb26d2b280e7d14e54ae0d8564b527369e::57e4312a36e41f9647ab57ed5490b9eb9de19543::f61b044bf0aa730556252bca90f99b99f0a7260e::2198ecb1d2021bf949dd93fa0daf865a083b026f::ef6be41bf1fde2986662dc09451f6db46590b1e2::dc427ff6d587edd587e55449bec9183d3da5d717::32fa4b15d1ce48e92174e5576056d55ed46b2c3b::f944bd2358763acfd07489c93f3e6e90de5c1d18::93931810c8411bacdf5274d6e32d82c844d95b07::98df8e01db9ad5023980d91326a872064d5f6be1::80d8058f5c49c5d10eb3e527bd9d72052143a629::47f9f43b0d4b092550957b2d320913c743a224f5::58a53fe0ebc80e2c663010729e634a8ad1e16495::f2cb44633aad25e8668997e088139ed5354c6f3d::9aa3130cd10cc6f3e5710f6b77baad44657f7241::1534d6aea3264ec96ebab83c4c1a0dcd5de678d0::7afa5913a715c77e4d05da2d15a66c6bd0e1a687::516b39b79a4bb66da113f6496e6c3c7555f8bbec::d105c205ef2267e2f7d4ea513780f3a0a68fbd4d::b09fbc3bf3f5d10c8c1d6605c22de53ec9a3b054::c1e5758c4cb563cf727681ce798a682cc5f8acaf::3eeaf2f9746fd6709bd565d88d0680019f261de3::934d25a820c29b885329675453748e4f88750c63::cb9ab42ab8708108e36e8df359e7e075ddd11122::75be309242f17cc7c7d52fa680509f12a049e90c::81d254da4c3c34afd4b0969ddc12202730d2b244::c4bb38d2b1b69c8bdafd8df1e03889ec0c85b555::d6fd4eb8e6b84d51b7344f8a2c9321faf1dd0ce3::288d74ca482ea8dbf182213b39d7e2e3da1ce915::730fa78ca42d9347fe3482f53bc62be22d50a9e7::f46eb8ebcda98e2f61c5fd0b7e8051d96b97cdbe::f1fd13c0efdfb901c82517699781ec36b47c8134::eb15ee91dfdb28c77060b332bb5461e9c7015d4d::dacfd72bd6c661a3ee2565ca081bfe75882e6d0c::093e2460b27476541baa3457ac7c9c887117c285::349b2bdf43258cb66e889798719cd3def48ca12c::adfbd04b3ab611a9807a36c7d4ab648d53a811be::b2db38bbc66be927600773ff50ef9000c7d06d85::3aa73cb6b89402aae71ffefc89ce1ee02d1a41f0::c35b512413a8caa1b1966d6ecd80c76916f38ff6::07e7b69c04116f598ed2376616cbb46343d9a0e9::eea46a0d1b99a6dadedbb6a3502d599235fa7ec3::4eb156b2f5ac49583f581a4ba39a6397f234e399::025e30ea0c9976a4357cf988f675e990fdf43ffd::17f2b5f73efa39601fab2f76766ea420c2beb15e::a01ee2759d309f8433aefbdaf477903fe0156639::26fff6f5c32fa4396a8c72872c729b367739499c::ea209e1c2f9ba7354e1fbafb3fbca295894f8cbd::6838a8209bd13aa660152863518108d619278f92::20b5ff5ab7fdc1fca7c6c402f5447cf4cfdd9c33::88e34491895ec0f4241ef2284b5711d06b878499::bb1256ca9aa4c22225dbeef0ef23a20fa9388b2f::056aac1e3012d0e65991b73f2478b844b7cbdfc8::309e342aaa8b2fcc1255e4f0fe37de99629b6b25::e410dcbfedb93cc54586cc74d5a8aaea9fc8f1d7::372f21e3b59600ab79f1cc23e4673d15b89aff89::2be2ae366ea3779d247c9c4f0294fa43f3d1ef84::6d074d8a9488dffd33719e30a631362de709e1c9::18aae0a02b8066b11b92bfac465218dc81430ebc::b8473276455cbeb49629b502f1f163be0c7eb45a::c0c17a303106eb70521fe759cc5e994b5749ec65::f94772f807fed7fd6329faae25aa600dd9f030cf::a7573102bcbc7e88b8bf6de639be2696f1a5ad43::fc558fb85f03d3864f159e3c156fe48ab3550026::64e3cb0fa883e653af4ecd03c085b69e5ab40ca7::f3e20346cb39ab04650414077b21128df1a646c8::38eee51057254a5fcce821e43ddc533e7f396e4d::1b246d89e3dc27d5cee43b37594270533fa67cc6::97d36881e21dd6bd714cae0a5af020d20bedfafb::8d1f658ce46e74f537bf1df610ddef4b2bfb035f::14aaa24522b42691b02de05e42496b6cdd155dff::41e198b429b909ecdb84e4c5e313cdc328adb68f::5b349a28d4b21cec455123434d9fd5f351d31ef4::a9fe21bc623b70244a75af7c57bba0f4d00de54f::6e8798fa8853629ee274fa15d957a71909fbf57f::c9a9621a022fb6af476a3a4e3353f188c367e047::2e54ac37b016db76194e725750484291f1f48332::d224a7ccf649b042a2194471a84ea13baef76121::95ef456bb75c427239b2200aaa65dd2ed03d31a9::12689935065226a355a7166d759eb437cc5ae94a::ee0c19e5190ecdf8743b342566bfd36e5088950a::178db5f3edb7c0394a642506c9e57ab4cb1bbe99::9610f2b8acf5c6db0cb0380d6d5196803f7efd53::021b1810c941171b8b8d81d1d8a65ef9e101fc7d::0377c51c3ae7c012d17dba1123aca45d997ec92c::8a5bde798a055abc952aabc77874ae3c2b9c5396::e46237d705623587b117e20931efb683906dcb08::38848a4b0c5e9f08459a426b3622ad410f8391b7::be24db8886292398a2591782b5601ece38b9f552::df6b8d2a4a91e59d40bfb7c2b8b80bad48cd4585::32a8d8ae2a227f807f46f59ce3144e6e18d22a13::16e237e095f44729082aa78b81d3545dbe93cc70::13c8f7b00c4a2ae8d93120dabd9e2f5eeb706ae5::4df97c20b6c55ca60fb0437dbff92facc3aa1727::41235ac05a7a52f102422da17d40b5952e722095::d3da8e4a5b7c87ea6bb4f1345300ddb0a833a6b2::0892d48ebc94210d3e0526aa425f7fe7a64d1d2f::aecdfd397ee7e96d7f2b40e3da2cbd24b7bc3f94::d2cc9f5f06816935747638f5b4019b84d5932a51::31c7a61f9d4ccf3ea44c0ddea084a82afa632c59::5e0bcc60b533b1adcb43d9a7fb06c436ecd921c7::9fd244319eb9fd5897a1cae3cacf87564abf29e9::71e607dceb86219f8445e2ef090f3abcd62c7f4b::b446ca100f22f8be8d84387ed70e824874a33828::c1a99c390cd06212bd4f739a38b27a7260714a36::de8d42815799a8c4f3f6cdb5b2b1c66c63890794::0234937ca378b65618e2576e8b97c1ee02dc7d6b::fcc869ab7a7b2e5931c78135768ce64672ceb71b::8241fd88de5a8150f0c2c7f3eed2cc28796d96ef::820cfbbb77a74ac8b95b696a292707da38b4ee75::26a2d84dbaa7ea30f4272fc742d3acc5ceea5dce::4317a97c4237b388d406faba216c6f9e47f9cc56::2a64a8466728af6c4b0f96fbdb3fb4ee4a98f29e::ac5228390c808dd63a6fd466e99a9496a042a3fe::fa2adf3b7b36b1a24f3eb801f8838cd9f578eb9b::dd7b9627ad29b8ce64c62ab4c14ee1f1a53beab9::b101fda4c6acce465619421fd6710c0514a8f2f7::2a1393e0e1a67e5d4ef86aa644bda0a908329cf6::e3681c049ce2414991ad4498f058b2e2c4b3fc89::2c432f8bc78ca492a5c4bf8cfd4a3b8e6442fa03::a9aeabb4564db60526b55b7fd409aa0e45bf948c::1c0b73348909268ecfc73486c09090f2234d5040::828e346f2c0bfad30574e08f6a2a4a6f9a97db83::faebe224398d1e5640f93158ecf3715413b6ca74::54b04f227eaec8ed7189184dc41cac81d05822b9::2af67f0dce9e31fe1ea8de5b0bcb323cf915a958::80e5b2ade5efc6746e2c3b8fd235ba125c8c13c5::acbffce0796ff8e28ac5646ed8b3fd4e19232223::94f5e2d9ed964d32271e193445f40557bb5892b6::61d60d07d1aaf2d270814921ece58db5e7c5ffec::923e21836b1a4fb91aa6e93463efe0aea4022144::d651bda12390e46c85c4487859f030ed8851867a::5673482460d225a0f1591c2d7864b834d719f6ef::233efe08862094d9015320570fa419b7dcb0cd49::9da5908afba1453040b32747a6707bd373ad0ff2::709a8c502672a388cb09552f81497d371b2623c8::18867847f43190df1b12f692f410d0f9e17cda82::9e31cf7270fcc6d08f3b69d8b37963feb76b1bee::24274b72c999defd7727bb0a6112b2c9be09a31f::d165223f7468e46737927cbe80e90fa97d2be6fe::7b583e114dcadbf6e0672fe94494240bc2153491::fb87bafaaefc0562a8a7824645423d7dd42e77d5::92187ae53e5d12ea6954d09189ef93384fe8ed6c::45d0e5994ab219f0a023c6b512ab6c3e378b005a::279617a94ebf2fbca2c548d1f2fa776b7b261d5a::d5bff7a87f0d257cc71310e3b3441f1b7628d3ce::041ede30b3c53f0aebcd52ec0cbb95b6ced19062::8c0ec5fd8204ea3fd8f6f9d0e1523a113efaa92f::875131982064fb898bc695fd2fa4456a3d402cd8::4308b87d72ad2666c15919949cc66b6eca636cf3::57cbfae797651df0b765eb47e23b5768e821fb09::0d92abad7d76eb93d321b900d2229864364ce8d2::47e3ed8100018dbbaba4b3590b0fc5e101e87400::7b97abf6a25b88caf66195af78db9190bf2228dc::77b323459fa6d1a8265028f67b75278c8848bd52::ce1f25cffd7dff7840c701dc11574bd706bd0987::18e0d679dd85d8662548bd3ce6b8668e3f5afa7c::d00aaf66d7f224d24bc66b1de751de086a3771b0::c1e23c22a9fedafaaa88c2119b26dc123ff1392e::
https://api.github.com/repos/ansible/ansible,60115,bug_fixesmm-bugab::devel,0,merged,affects_2.9::automerge::bug::cloud::gce::module::new_plugin::shipit::support:community::test::,##### SUMMARY Bug fixes for GCP (as of 2019-08-05T17:42:30Z) This PR is the result of the following Magic Modules PRs: - [[ansible] adding type info for facts filter](https://github.com/GoogleCloudPlatform/magic-modules/pull/2127) - [changing description on networkInterfaces.network](https://github.com/GoogleCloudPlatform/magic-modules/pull/2124) - [backporting gcp_util changes](https://github.com/GoogleCloudPlatform/magic-modules/pull/2123) - [adding labels to instance templates](https://github.com/GoogleCloudPlatform/magic-modules/pull/2122) ##### ISSUE TYPE - Bugfix Pull Request ##### ADDITIONAL INFORMATION ``` This was generated by [Magic Modules](https://github.com/googlecloudplatform/magic-modules) ```,124d1656d032b18516bf59ba55a1f534f9aef4e3::
https://api.github.com/repos/ansible/ansible,59887,k8s-scale-merge-type::devel,0,merged,affects_2.9::bug::clustering::has_issue::k8s::shipit::support:community::,"##### SUMMARY Fixes #59021 `k8s_scale` no longer subclasses `KubernetesRawModule`, which was causing issues due to parameters added to `k8s` that were not relevant to `k8s_scale`. This is just a (backportable) bandaid though, the `k8s_scale` module should probably be reworked significantly. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> k8s_scale",3d4999b6831ccb9c651cf306e6d0119674f8727a::2cfdd35560fc0825d81aea5eeac45c6655c0f7b6::
https://api.github.com/repos/ansible/ansible,59536,fix-nightly-rpm-release-timestamp::devel,0,merged,affects_2.9::bug::core_review::small_patch::support:core::,"The nightly rpm builds were using a timestamp from the last git commit in their Release field.  Unfortunately, that was using author timestamp which is nonsequential.  Change to using commit timestamp which is sequential. note that this still has a cornercase if the branch's history is ever rewritten. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### ADDITIONAL INFORMATION This will need to be backported to all branches so that nightlies built from them are sequential.",2bc9b04e17b6a788cfdc02a7184afc8e4493e77f::
https://api.github.com/repos/ansible/ansible,59500,patch-1::devel,0,merged,affects_2.9::bug::community_review::has_issue::new_contributor::python3::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> This commit fixes the following error while using Python 3: ERROR! Unexpected Exception, this is probably a bug: a bytes-like object is required, not 'str' <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Fixes #52625 Please backport this change to all still supported Ansible versions. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> cyberarkpassword lookup plugin Please use `to_native` from `from ansible.module_utils._text import to_native` ::Thank you, fixed.::It is a good idea to prefix variables that contain bytes with `b_`. This makes it easier to work with these variables later because you know the type of data they contain. ```suggestion self.b_delimiter = b""@#@""  # Known delimiter to split output results ```::Alternatively, you could convert it to `bytes` within the `get()` method where it is used and use that in the arguments to `Popen()`. ```python b_delimeter = to_bytes(self.delimeter) ```::`credential` from line 127 should be initialed as bytes, not a native string. ```python b_credential = b"""" ``` This makes the code on line 140 read more explicitly. ```python output_values = b_credential.split(b_delimiter) ```::Mixing bytes and strings in the arguments to `Popen()` is asking for trouble if there are non-ASCII characters in some of the arguments. It is best to convert all the arguments to bytes before passing to `Popen()`. ```python b_all_params = [to_bytes(v) for v in all_params] ```::Thanks a lot, I just pushed a new commit to this PR to address this comment.::Thanks a lot, I just pushed a new commit to this PR to address this comment.::",29ebc135f6f33e7107e5873e6956126a9573a223::645e4a8fb083a013b5571ebb99f72970707ce9a3::fc058c0822d891631e99c88ef0dcb914fa9e9bea::a401dae58813f4da27f469b8641f669534fd0fb2::
https://api.github.com/repos/ansible/ansible,59431,content-template::devel,0,closed,affects_2.9::azure::cloud::has_issue::module::needs_revision::new_module::new_plugin::support:community::vmware::,"New module for vm deploy from template in content library This is draft Pull request. ##### SUMMARY vmware_guest has deploy VM from template functionality. but it doesnt support templates stored in content library. New module will enable user to deploy VM from template stored in content library ##### ISSUE TYPE - New Module Pull Request ##### COMPONENT NAME vmware_content_library ##### ADDITIONAL INFORMATION Fixes Issue https://github.com/ansible/ansible/issues/37007 No default value for variable datacenter. This adds confusion rather than convenience.::How about - state with options like `present`, `powered-on`, `powered-off` etc. ?::```suggestion - Boolean parameter to set power state of vm after deployment. ```::```suggestion description: Virtual machine deployment message and vm_id ```::```suggestion vm_deploy_info=dict(msg=""Virtual Machine deployment failed"", vm_id='')) ```::Please check if VM with the given name should not exist in the given folder or datacenter before proceeding.::Check for check_mode, since this module support check_mode.::I would suggest to create a separate PR for this change. Since it would be easy to backport this to Stable version.::",
https://api.github.com/repos/ansible/ansible,59311,disable_s3_lifecycle::devel,0,merged,,"##### SUMMARY Opened #59310 to track the problem I can't get these to pass in https://github.com/ansible/ansible/pull/59302 to mark them as unstable, and @samdoran brought it to my attention that they were failing on the stable branches too and the fix needs to be backported. I've disabled this because I don't see built-in waiters to check that the bucket policy has been updated, so it probably needs some custom logic which may not be good to backport to 2.6. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME s3_lifecycle tests",50f86b472e2be9a6d376b847d7907db02b20444c::
https://api.github.com/repos/ansible/ansible,59280,revert-45572::devel,0,merged,affects_2.9::bug::core_review::files::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> This reverts commit 6069d09b9d7193a1896dfc2816e0e51833a53e6b. Fixes #57351 Also see https://github.com/ansible/ansible/issues/57351#issuecomment-512975042 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> This should be backported to `2.8` once merged. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> `lib/ansible/vars/manager.py`",45df506c32ec86ede07fb0d78899fbd2a32d2eb6::910e193b43daa6006124e9103ddce674fa9986f8::fb601186055a9d6d3607dc25091e1ed1a87886fc::
https://api.github.com/repos/ansible/ansible,59254,eol-banner::devel,0,merged,affects_2.9::docs::shipit::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Create an EOL banner to use as each release goes EOL. Placing this in devel so it is available here and all future releases. Will backport to earlier releases and add logic to turn it on in unmaintained releases. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",fc8f0ba0f0e62dc3ecc9443e9c9deb426676988c::
https://api.github.com/repos/ansible/ansible,59246,unsafe_passwords::devel,0,merged,affects_2.9::bug::core_review::support:community::support:core::,"So `hello{{world` is now a valid password at the prompt fixes CVE-2019-10206 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> coreThese passwords are byte strings, and `UnsafeProxy` and by extension `wrap_var` doesn't support byte strings.  Your fix would maybe work on py2, but wouldn't work on py3.  Currently on py2 it would be converting bytes to text, which is not what we want. I've wanted to add bytes functionality to `UnsafeProxy` before, but ended up not doing so.  I think we'll need something like the following added: ```diff diff --git a/lib/ansible/utils/unsafe_proxy.py b/lib/ansible/utils/unsafe_proxy.py index 2a180e6d4a..50ff4096af 100644 --- a/lib/ansible/utils/unsafe_proxy.py +++ b/lib/ansible/utils/unsafe_proxy.py @@ -53,8 +53,8 @@ from __future__ import (absolute_import, division, print_function) __metaclass__ = type -from ansible.module_utils.six import string_types, text_type -from ansible.module_utils._text import to_text +from ansible.module_utils.six import binary_type, string_types, text_type from ansible.module_utils.common._collections_compat import Mapping, MutableSequence, Set @@ -69,14 +69,15 @@ class AnsibleUnsafeText(text_type, AnsibleUnsafe): pass +class AnsibleUnsafeBytes(binary_type, AnsibleUnsafe): +    pass + + class UnsafeProxy(object): def __new__(cls, obj, *args, **kwargs): -        # In our usage we should only receive unicode strings. -        # This conditional and conversion exists to sanity check the values -        # we're given but we may want to take it out for testing and sanitize -        # our input instead. -        if isinstance(obj, string_types): -            obj = to_text(obj, errors='surrogate_or_strict') +        if isinstance(obj, binary_type): +            return AnsibleUnsafeBytes(obj) +        elif isinstance(obj, text_type): return AnsibleUnsafeText(obj) return obj ``` It should be noted however, that this will change behavior on py2 elsewhere in the code, so we may need to audit what may break due to this change.::a less intrusive change (and use class directly and not wrap_var in this PR), specially for backporting, then we can look at migrating to the more general and 'correct' version above ```diff --git a/lib/ansible/utils/unsafe_proxy.py b/lib/ansible/utils/unsafe_proxy.py index 2a180e6d4a..d1d2296fee 100644 --- a/lib/ansible/utils/unsafe_proxy.py +++ b/lib/ansible/utils/unsafe_proxy.py @@ -53,7 +53,7 @@ from __future__ import (absolute_import, division, print_function) __metaclass__ = type -from ansible.module_utils.six import string_types, text_type +from ansible.module_utils.six import string_types, text_type, binary_type from ansible.module_utils._text import to_text from ansible.module_utils.common._collections_compat import Mapping, MutableSequence, Set @@ -68,6 +68,9 @@ class AnsibleUnsafe(object): class AnsibleUnsafeText(text_type, AnsibleUnsafe): pass +class AnsibleUnsafeBytes(binary_type, AnsibleUnsafe): +    pass + class UnsafeProxy(object): def __new__(cls, obj, *args, **kwargs): @@ -75,9 +78,8 @@ class UnsafeProxy(object): # This conditional and conversion exists to sanity check the values # we're given but we may want to take it out for testing and sanitize # our input instead. -        if isinstance(obj, string_types): -            obj = to_text(obj, errors='surrogate_or_strict') -            return AnsibleUnsafeText(obj) +        if isinstance(obj, string_types) and not isinstance(AnsibleUnsafeBytes): +            obj = AnsibleUnsafeText(to_text(obj, errors='surrogate_or_strict')) return obj``` ::You still need to explicitly do something with `AnsibleUnsafeBytes`.::other than use on the passwords?::Sorry, I see that in your fix, but it was not included in your above diff.::no, i stated that in the comment, but didnt put it in code (had not edited file yet)::",77400296c73c61100eb48d3b4dfd8a18b2e8cb27::9043702853081e0e98421b7a0695260e9b97ae96::26e079138d9f016227085c579fb404cb46c3b6db::
https://api.github.com/repos/ansible/ansible,59165,fix/proxmox-6-version-detection::devel,0,merged,affects_2.9::bug::cloud::module::needs_revision::new_contributor::support:community::virt::,"##### SUMMARY This should fix #59164 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME proxmox (https://github.com/mrdrogdrog/ansible/blob/6430205d396b7c1733de22a898c51823f67d5bf4/lib/ansible/modules/cloud/misc/proxmox.py#L484) ##### ADDITIONAL INFORMATION Please add this fix as soon as possible. Otherweise you can't use the proxmox nor proxmox_kvm module.I think #59356 handles this better. Could we combine them?::@apple4ever I can imagine, `int` might not be sufficient, but still. `int` is way better than float. I would use `int` over `tuple`, at least.::@limakzi I also liked that it set it to the right version instead of just defaulting to 4. So 5 would be 5 and 6 would be 6. ::@mrdrogdrog could you make that change? If you can do that, I will find who needs to sign off so we can get this merged and released.::I would change this to: `PVE_MAJOR_VERSION = int(proxmox.version.get()['version'].split('.', 1)[0])`::How about using `LooseVersion` from `distutils.version`? It usually handles version numbers pretty well. (Grep for `LooseVersion` in the modules directory to see plenty of examples.)::```suggestion return LooseVersion(apireturn['release'])  # >= Proxmox 6 ```::```suggestion return LooseVersion(apireturn['version'])  # < Proxmox 6 ```::```suggestion if proxmox_version(proxmox) >= LooseVersion('4.2'): ```::```suggestion VZ_TYPE = 'openvz' if proxmox_version(proxmox) < LooseVersion('4.0') else 'lxc' ```::You can also change the function as follows (and remove the `if`): ```suggestion apireturn = proxmox.version.get() return float(apireturn['version']) ``` This will also work for versions like `6.0-1`.::I really like the suggestion with `LooseVersion`. I'm going to adjust my code when I have free time. Thx @felixfontein !::@mrdrogdrog great! Once you made the adjustments and someone else also tested it (just to be sure), I'll merge it and create a backport PR. If this gets done by the end of next week, it should make it into the 2.9.2 release.::```suggestion return LooseVersion(apireturn['version']) ``` Or is there a reason for this comment here (and not in the other module)?::The reason is: I forgot to delete it. :sweat_smile: ::Hehe, happens ;-)::",511bea140143f9034e1d463c0f0d0d799de09969::597b25eb1994adf689e44f0bf340f9c80b62c99e::6160ed116e3f1d03ec8f06dc2ca6c3ba5a300a00::87251af7a6753c124d7d427f153e9a0217f94f72::c11ef9753664ab0cc4281042c919a133621393f8::69e8ecfd73d90135ebc432aae9acd428024ab9c9::
https://api.github.com/repos/ansible/ansible,58928,bugfix/mysql_user_fix_column_privs::devel,0,closed,affects_2.9::bug::database::module::mysql::needs_rebase::needs_revision::new_contributor::stale_ci::support:community::test::,"##### SUMMARY `mysql_user` plugin has some issues with handling column specific grants: - MySQL doesn't keep track of the order of specified columns which results in ansible reporting the task as changed, even though the required grants are set. This change splits the columns and sorts them to work around this. - If a column name matches a reserved keyword, ansible fails because of the lack of quotes. Add quotes where needed, depending on the mode (ANSI quoting or regular). Fixes #25158 Fixes #40879 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME mysql_user ##### ADDITIONAL INFORMATION The code changes are obtained from a patch attached to #25158 A backport to 2.8 would be appreciated. Example of how MariaDB/MySQL handle grants: ``` MariaDB [(none)]> create database a; Query OK, 1 row affected (0.001 sec) MariaDB [(none)]> use a; Database changed MariaDB [a]> create table t1 (c1 int(1), c2 int(1), c3 int(1)); Query OK, 0 rows affected (0.035 sec) MariaDB [a]> GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY 'pwd'; Query OK, 0 rows affected (0.010 sec) MariaDB [a]> GRANT SELECT (c2, c3) ON `a`.`t1` TO 'user'@'localhost'; Query OK, 0 rows affected (0.010 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | | GRANT SELECT (c3, c2) ON `a`.`t1` TO 'user'@'localhost'                                                     | +-------------------------------------------------------------------------------------------------------------+ 2 rows in set (0.000 sec) MariaDB [a]> REVOKE SELECT (c3, c2) ON `a`.`t1` FROM 'user'@'localhost'; Query OK, 0 rows affected (0.010 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | +-------------------------------------------------------------------------------------------------------------+ 1 row in set (0.000 sec) MariaDB [a]> GRANT SELECT (c3, c1) ON `a`.`t1` TO 'user'@'localhost'; Query OK, 0 rows affected (0.005 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | | GRANT SELECT (c1, c3) ON `a`.`t1` TO 'user'@'localhost'                                                     | +-------------------------------------------------------------------------------------------------------------+ 2 rows in set (0.000 sec) MariaDB [a]> GRANT SELECT (c1, c3) ON `a`.`t1` TO 'user'@'localhost'; Query OK, 0 rows affected (0.013 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | | GRANT SELECT (c1, c3) ON `a`.`t1` TO 'user'@'localhost'                                                     | +-------------------------------------------------------------------------------------------------------------+ 2 rows in set (0.000 sec) MariaDB [a]> REVOKE SELECT (c3, c1) ON `a`.`t1` FROM 'user'@'localhost'; Query OK, 0 rows affected (0.009 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | +-------------------------------------------------------------------------------------------------------------+ 1 row in set (0.000 sec) MariaDB [a]> GRANT SELECT (c1, c3) ON `a`.`t1` TO 'user'@'localhost'; Query OK, 0 rows affected (0.010 sec) MariaDB [a]> SHOW GRANTS FOR 'user'@'localhost'; +-------------------------------------------------------------------------------------------------------------+ | Grants for user@localhost                                                                                   | +-------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'user'@'localhost' IDENTIFIED BY PASSWORD '*975B2CD4FF9AE554FE8AD33168FBFC326D2021DD' | | GRANT SELECT (c3, c1) ON `a`.`t1` TO 'user'@'localhost'                                                     | +-------------------------------------------------------------------------------------------------------------+ 2 rows in set (0.000 sec) ```",29d0d4060a76b59535c2111fabced7f092aadfdc::25ad09dc662355a345879ee852db14c0d1add132::74ccf53c4dc0faac4b1ae06954b1d9676a02a487::bbfad1bd13bf26b05d7ef163957bc2a4ed682c2f::e7e94c86b5850a92fe7d221ffb2537991a299c76::
https://api.github.com/repos/ansible/ansible,58887,57974::devel,0,merged,affects_2.9::bug::core_review::has_issue::module::owner_pr::support:community::support:core::windows::,##### SUMMARY Fixes: #57974 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME setup.ps1 ##### ADDITIONAL INFORMATION You can definitely argue whether this is a bug fix or not but I would say this is more a change as I would not be able to backport this to earlier releases. I think we should change this to `minor_changes` and add this change in behaviour to the porting guide for 2.10 https://github.com/ansible/ansible/blob/devel/docs/docsite/rst/porting_guides/porting_guide_2.10.rst.::add it in this pr or a different one?::,9ce9d493bfb0d752f4c082065c5e1efdd2d2540d::8269610b319b6fb972ecce23a9026459ce50f762::1f647fe4c918c22735443184a03d17542fa0ec77::
https://api.github.com/repos/ansible/ansible,58812,fix-terraform-planfilepath::devel,0,merged,affects_2.9::bug::cloud::community_review::module::needs_maintainer::new_contributor::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> * adding support for absolute paths additionally to the relative path within `project_path`. * using `os.path.isfile` for more accurate condition <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Fixes #58578 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> terraform.py ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` In case you want your PR to be a bugfix, you should change this to `bugfixes:`. (In that case, I can create a backport PR for you so it has a chance of being backported to stable-2.9 and end up in 2.9.x.)::fixed::",e33486b0b1061f424ffe33bb7d9484fbeda5409b::7a6f3d5a983cf0bd7d175cf43ece657714ee5f2d::3989d2b310d57f79079e87bbc404ea5a2a50f46e::b30cedd73cbef48c73bbb6dc2369bb0e9f4056ff::
https://api.github.com/repos/ansible/ansible,58804,patch-3::devel,0,merged,affects_2.9::bug::community_review::python3::small_patch::support:community::traceback::,"##### SUMMARY PR https://github.com/ansible/ansible/pull/50301 overhauled network backup options. A change was missed in slxos_config, resulting in inability to use slxos_config. This applies to both `devel` and 2.8.2. We'll probably need to backport this fix ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/modules/network/slxos/slxos_config.py lib/ansible/plugins/action/slxos_config.py ##### ADDITIONAL INFORMATION PR #50301 removed lib/ansible/module_utils/network/common/backup.py. Most action plugins were updated to account for this, but slxos_config.py was missed. This means that `slxos_config` is unusable in 2.8 and `devel`. Simple playbook used for testing: ```yaml --- - hosts: slx01 gather_facts: no tasks: - name: NTP server 172.16.10.3 slxos_config: lines: ""ntp server 172.16.10.3 use-vrf mgmt-vrf"" save_when: changed backup: yes ``` Example output using Ansible 2.8.2: ```shell lhill @ Lindsays-MacBook-Pro $ ansible-playbook -i hosts slx_config_set_ntp.yaml -vvvv ansible-playbook 2.8.2 config file = None configured module search path = [u'/Users/lhill/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/lhill/venv/lib/python2.7/site-packages/ansible executable location = /Users/lhill/venv/bin/ansible-playbook python version = 2.7.10 (default, Feb 22 2019, 21:55:15) [GCC 4.2.1 Compatible Apple LLVM 10.0.1 (clang-1001.0.37.14)] No config file found; using defaults setting up inventory plugins host_list declined parsing /Users/lhill/github/ansible-extreme/slxos/playbooks/hosts as it did not pass it's verify_file() method script declined parsing /Users/lhill/github/ansible-extreme/slxos/playbooks/hosts as it did not pass it's verify_file() method auto declined parsing /Users/lhill/github/ansible-extreme/slxos/playbooks/hosts as it did not pass it's verify_file() method Parsed /Users/lhill/github/ansible-extreme/slxos/playbooks/hosts inventory source with ini plugin Loading callback plugin default of type stdout, v2.0 from /Users/lhill/venv/lib/python2.7/site-packages/ansible/plugins/callback/default.pyc PLAYBOOK: slx_config_set_ntp.yaml ****************************************************************************************************** Positional arguments: slx_config_set_ntp.yaml become_method: sudo inventory: (u'/Users/lhill/github/ansible-extreme/slxos/playbooks/hosts',) forks: 5 tags: (u'all',) verbosity: 4 connection: smart timeout: 10 1 plays in slx_config_set_ntp.yaml PLAY [slx01] *************************************************************************************************************************** META: ran handlers ERROR! Unexpected Exception, this is probably a bug: No module named backup the full traceback was: Traceback (most recent call last): File ""/Users/lhill/venv/bin/ansible-playbook"", line 110, in <module> exit_code = cli.run() File ""/Users/lhill/venv/lib/python2.7/site-packages/ansible/cli/playbook.py"", line 123, in run results = pbex.run() File ""/Users/lhill/venv/lib/python2.7/site-packages/ansible/executor/playbook_executor.py"", line 169, in run result = self._tqm.run(play=play) File ""/Users/lhill/venv/lib/python2.7/site-packages/ansible/executor/task_queue_manager.py"", line 249, in run play_return = strategy.run(iterator, play_context) File ""/Users/lhill/venv/lib/python2.7/site-packages/ansible/plugins/strategy/linear.py"", line 245, in run action = action_loader.get(task.action, class_only=True) File ""/Users/lhill/venv/lib/python2.7/site-packages/ansible/plugins/loader.py"", line 558, in get self._module_cache[path] = self._load_module_source(name, path) File ""/Users/lhill/venv/lib/python2.7/site-packages/ansible/plugins/loader.py"", line 536, in _load_module_source module = imp.load_source(to_native(full_name), to_native(path), module_file) File ""/Users/lhill/venv/lib/python2.7/site-packages/ansible/plugins/action/slxos_config.py"", line 26, in <module> from ansible.module_utils.network.common.backup import write_backup, handle_template ImportError: No module named backup lhill @ Lindsays-MacBook-Pro $ ``` Output after making changes in this PR ``` lhill @ Lindsays-MacBook-Pro $ ansible-playbook -i hosts slx_config_set_ntp.yaml -vvvv ansible-playbook 2.8.2 config file = None configured module search path = [u'/Users/lhill/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/lhill/venv/lib/python2.7/site-packages/ansible executable location = /Users/lhill/venv/bin/ansible-playbook python version = 2.7.10 (default, Feb 22 2019, 21:55:15) [GCC 4.2.1 Compatible Apple LLVM 10.0.1 (clang-1001.0.37.14)] No config file found; using defaults setting up inventory plugins host_list declined parsing /Users/lhill/github/ansible-extreme/slxos/playbooks/hosts as it did not pass it's verify_file() method script declined parsing /Users/lhill/github/ansible-extreme/slxos/playbooks/hosts as it did not pass it's verify_file() method auto declined parsing /Users/lhill/github/ansible-extreme/slxos/playbooks/hosts as it did not pass it's verify_file() method Parsed /Users/lhill/github/ansible-extreme/slxos/playbooks/hosts inventory source with ini plugin Loading callback plugin default of type stdout, v2.0 from /Users/lhill/venv/lib/python2.7/site-packages/ansible/plugins/callback/default.pyc PLAYBOOK: slx_config_set_ntp.yaml ****************************************************************************************************** Positional arguments: slx_config_set_ntp.yaml become_method: sudo inventory: (u'/Users/lhill/github/ansible-extreme/slxos/playbooks/hosts',) forks: 5 tags: (u'all',) verbosity: 4 connection: smart timeout: 10 1 plays in slx_config_set_ntp.yaml PLAY [slx01] *************************************************************************************************************************** META: ran handlers TASK [NTP server 172.16.10.3] ********************************************************************************************************** task path: /Users/lhill/github/ansible-extreme/slxos/playbooks/slx_config_set_ntp.yaml:6 <slx01> attempting to start connection <slx01> using connection plugin network_cli <slx01> local domain socket does not exist, starting it <slx01> control socket path is /Users/lhill/.ansible/pc/0dbd5c273e <slx01> <slx01> ESTABLISH PARAMIKO SSH CONNECTION FOR USER: admin on PORT 22 TO slx01 <slx01> connection to remote device started successfully <slx01> local domain socket listeners started successfully <slx01> loaded cliconf plugin for network_os slxos <slx01> ssh connection done, setting terminal <slx01> loaded terminal plugin for network_os slxos <slx01> Response received, triggered 'persistent_buffer_read_timeout' timer of 0.1 seconds <slx01> firing event: on_open_shell() <slx01> Response received, triggered 'persistent_buffer_read_timeout' timer of 0.1 seconds <slx01> ssh connection has completed successfully <slx01> <slx01> local domain socket path is /Users/lhill/.ansible/pc/0dbd5c273e <slx01> ESTABLISH LOCAL CONNECTION FOR USER: lhill <slx01> EXEC /bin/sh -c '( umask 77 && mkdir -p ""` echo /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540345.47-108247373026628 `"" && echo ansible-tmp-1562540345.47-108247373026628=""` echo /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540345.47-108247373026628 `"" ) && sleep 0' <slx01> Attempting python interpreter discovery <slx01> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '""'""'/usr/bin/python'""'""'; command -v '""'""'python3.7'""'""'; command -v '""'""'python3.6'""'""'; command -v '""'""'python3.5'""'""'; command -v '""'""'python2.7'""'""'; command -v '""'""'python2.6'""'""'; command -v '""'""'/usr/libexec/platform-python'""'""'; command -v '""'""'/usr/bin/python3'""'""'; command -v '""'""'python'""'""'; echo ENDFOUND && sleep 0' <slx01> Python interpreter discovery fallback (unsupported platform for extended discovery: darwin) Using module file /Users/lhill/venv/lib/python2.7/site-packages/ansible/modules/network/slxos/slxos_config.py <slx01> PUT /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/tmpi6pLG8 TO /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540345.47-108247373026628/AnsiballZ_slxos_config.py <slx01> EXEC /bin/sh -c 'chmod u+x /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540345.47-108247373026628/ /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540345.47-108247373026628/AnsiballZ_slxos_config.py && sleep 0' <slx01> EXEC /bin/sh -c '/usr/bin/python /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540345.47-108247373026628/AnsiballZ_slxos_config.py && sleep 0' <slx01> EXEC /bin/sh -c 'rm -f -r /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540345.47-108247373026628/ > /dev/null 2>&1 && sleep 0' <slx01> EXEC /bin/sh -c '( umask 77 && mkdir -p ""` echo /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596 `"" && echo ansible-tmp-1562540358.36-37340971994596=""` echo /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596 `"" ) && sleep 0' Using module file /Users/lhill/venv/lib/python2.7/site-packages/ansible/modules/files/stat.py <slx01> PUT /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/tmp3nnlWE TO /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/AnsiballZ_stat.py <slx01> EXEC /bin/sh -c 'chmod u+x /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/ /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/AnsiballZ_stat.py && sleep 0' <slx01> EXEC /bin/sh -c '/usr/bin/python /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/AnsiballZ_stat.py && sleep 0' <slx01> PUT /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/tmpzK8sa3 TO /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/source <slx01> EXEC /bin/sh -c 'chmod u+x /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/ /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/source && sleep 0' Using module file /Users/lhill/venv/lib/python2.7/site-packages/ansible/modules/files/copy.py <slx01> PUT /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/tmpmTwfLo TO /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/AnsiballZ_copy.py <slx01> EXEC /bin/sh -c 'chmod u+x /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/ /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/AnsiballZ_copy.py && sleep 0' <slx01> EXEC /bin/sh -c '/usr/bin/python /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/AnsiballZ_copy.py && sleep 0' <slx01> EXEC /bin/sh -c 'rm -f -r /Users/lhill/.ansible/tmp/ansible-local-19295wupicU/ansible-tmp-1562540358.36-37340971994596/ > /dev/null 2>&1 && sleep 0' [WARNING]: Platform darwin on host slx01 is using the discovered Python interpreter at /usr/bin/python, but future installation of another Python interpreter could change this. See https://docs.ansible.com/ansible/2.8/reference_appendices/interpreter_discovery.html for more information. changed: [slx01] => { ""ansible_facts"": { ""discovered_interpreter_python"": ""/usr/bin/python"" }, ""backup_path"": ""/Users/lhill/github/ansible-extreme/slxos/playbooks/backup/slx01_config.2019-07-07@15:59:18"", ""changed"": true, ""commands"": [ ""ntp server 172.16.10.3 use-vrf mgmt-vrf"" ], ""date"": ""2019-07-07"", ""filename"": ""slx01_config.2019-07-07@15:59:18"", ""invocation"": { ""module_args"": { ""after"": null, ""backup"": true, ""backup_options"": null, ""before"": null, ""defaults"": false, ""diff_against"": null, ""diff_ignore_lines"": null, ""intended_config"": null, ""lines"": [ ""ntp server 172.16.10.3 use-vrf mgmt-vrf"" ], ""match"": ""line"", ""multiline_delimiter"": ""@"", ""parents"": null, ""replace"": ""line"", ""running_config"": null, ""save_when"": ""changed"", ""src"": null } }, ""shortname"": ""/Users/lhill/github/ansible-extreme/slxos/playbooks/backup/slx01_config"", ""time"": ""15:59:18"", ""updates"": [ ""ntp server 172.16.10.3 use-vrf mgmt-vrf"" ] } META: ran handlers META: ran handlers PLAY RECAP ***************************************************************************************************************************** slx01                      : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0 lhill @ Lindsays-MacBook-Pro $ ```",08fa3de800923d9927f392a77522026a7fb49212::
https://api.github.com/repos/ansible/ansible,58738,58691::devel,0,merged,affects_2.9::bug::core_review::module::owner_pr::support:community::support:core::windows::,##### SUMMARY Fixes: #58691 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_get_url.ps1 ##### ADDITIONAL INFORMATION Will backport to 2.8 hen approved,a21d40474c636edb737f99aa98d70701badddc09::
https://api.github.com/repos/ansible/ansible,58260,na_ontap_gather_facts-lun_info-field_fix::devel,0,closed,affects_2.9::bug::module::needs_rebase::needs_revision::netapp::new_contributor::new_module::new_plugin::python3::storage::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> na_ontap_gather_facts lun_info does not return all LUNs when they have same volume name and LUN name, in different SVMs, due to lun_info field using LUN path as key. Added 'vserver' to LUN path for lun_info field (much the same as field for volume_info). Results in all LUNs having same LUN path being returned properly as dict key is unique. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> na_ontap_gather_facts ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ##### ANSIBLE VERSION ``` ansible 2.9.0.dev0 config file = /etc/ansible/ansible.cfg configured module search path = ['/home/jasonl4/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules'] ansible python module location = /usr/local/lib/python3.6/site-packages/ansible executable location = /bin/ansible python version = 3.6.8 (default, Apr 25 2019, 21:02:35) [GCC 4.8.5 20150623 (Red Hat 4.8.5-36)] ``` ##### CONFIGURATION ``` ``` ##### OS / ENVIRONMENT ``` CentOS Linux release 7.5.1804 (Core) NetApp Release 9.4P1: Fri Jul 20 23:17:19 UTC 2018 (ONTAP Select) ``` ##### STEPS TO REPRODUCE <!--- Describe exactly how to reproduce the problem, using a minimal test-case --> Create two LUNs in separate SVMs with same volume name and same LUN name. ``` cluster1::> lun show Vserver   Path                            State   Mapped   Type        Size --------- ------------------------------- ------- -------- -------- -------- svm1      /vol/vol1/lun1                  online  mapped   linux         1GB svm2      /vol/vol1/lun1                  online  mapped   linux         1GB 2 entries were displayed. cluster1::> ``` Execute following playbook to retrieve lun_info. <!--- Paste example playbooks or commands between quotes below --> ```yaml --- - hosts: localhost gather_facts: false vars_files: - globals.yml tasks: - na_ontap_gather_facts: state: info gather_subset: - ""lun_info"" hostname: ""{{ hostname }}"" username: ""{{ username }}"" password: ""{{ password }}"" ontapi: 32 https: true validate_certs: false - debug: var=ontap_facts['lun_info'] ``` ##### EXPECTED RESULTS <!--- Describe what you expected to happen when running the steps above --> Expect all LUNs to be returned by na_ontap_gather_facts. ##### ACTUAL RESULTS <!--- Describe what actually happened. If possible run with extra verbosity (-vvvv) --> Only last LUN is returned due to lun_info dict key being the same for both LUNs. First LUN is overwritten by second LUN. <!--- Paste verbatim command output between quotes --> ```paste below PLAY [localhost] ************************************************************************************************************ TASK [na_ontap_gather_facts] ************************************************************************************************ ok: [localhost] TASK [debug] **************************************************************************************************************** ok: [localhost] => { ""ontap_facts['lun_info']"": { ""/vol/vol1/lun1"": { ""alignment"": ""indeterminate"", ""block_size"": ""512"", ""class"": ""regular"", ""comment"": null, ""creation_timestamp"": ""1561163704"", ""is_clone"": ""false"", ""is_clone_autodelete_enabled"": ""false"", ""is_inconsistent_import"": ""false"", ""is_restore_inaccessible"": ""false"", ""is_space_alloc_enabled"": ""false"", ""is_space_reservation_enabled"": ""false"", ""mapped"": ""true"", ""multiprotocol_type"": ""linux"", ""node"": ""node1"", ""online"": ""true"", ""path"": ""/vol/vol1/lun1"", ""prefix_size"": ""0"", ""qtree"": null, ""read_only"": ""false"", ""serial_7_mode"": null, ""serial_number"": ""ZPevK+N7MJ8X"", ""share_state"": ""none"", ""size"": ""1073741824"", ""size_used"": ""0"", ""staging"": ""false"", ""state"": ""online"", ""suffix_size"": ""0"", ""uuid"": ""49c61b1f-a47d-4650-b724-03f5e7d040b2"", ""volume"": ""vol1"", ""vserver"": ""svm2"" } } } PLAY RECAP ****************************************************************************************************************** localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0 ``` ##### PROPOSED FIX Added vserver to LUN path for lun_info field (much the same as field for volume_info). Results in both LUNs being returned properly as dict key is unique. volume_info uses similar method for key uniqueness. ``` PLAY [localhost] ************************************************************************************************************ TASK [na_ontap_gather_facts] ************************************************************************************************ ok: [localhost] TASK [debug] **************************************************************************************************************** ok: [localhost] => { ""ontap_facts['lun_info']"": { ""/vol/vol1/lun1:svm1"": { ""alignment"": ""indeterminate"", ""block_size"": ""512"", ""class"": ""regular"", ""comment"": null, ""creation_timestamp"": ""1561163199"", ""is_clone"": ""false"", ""is_clone_autodelete_enabled"": ""false"", ""is_inconsistent_import"": ""false"", ""is_restore_inaccessible"": ""false"", ""is_space_alloc_enabled"": ""false"", ""is_space_reservation_enabled"": ""false"", ""mapped"": ""true"", ""multiprotocol_type"": ""linux"", ""node"": ""node1"", ""online"": ""true"", ""path"": ""/vol/vol1/lun1"", ""prefix_size"": ""0"", ""qtree"": null, ""read_only"": ""false"", ""serial_7_mode"": null, ""serial_number"": ""ZPevK+N7MJ8W"", ""share_state"": ""none"", ""size"": ""1073741824"", ""size_used"": ""0"", ""staging"": ""false"", ""state"": ""online"", ""suffix_size"": ""0"", ""uuid"": ""2f8f3c7e-72ad-496a-bd68-9509929f9366"", ""volume"": ""vol1"", ""vserver"": ""svm1"" }, ""/vol/vol1/lun1:svm2"": { ""alignment"": ""indeterminate"", ""block_size"": ""512"", ""class"": ""regular"", ""comment"": null, ""creation_timestamp"": ""1561163704"", ""is_clone"": ""false"", ""is_clone_autodelete_enabled"": ""false"", ""is_inconsistent_import"": ""false"", ""is_restore_inaccessible"": ""false"", ""is_space_alloc_enabled"": ""false"", ""is_space_reservation_enabled"": ""false"", ""mapped"": ""true"", ""multiprotocol_type"": ""linux"", ""node"": ""node1"", ""online"": ""true"", ""path"": ""/vol/vol1/lun1"", ""prefix_size"": ""0"", ""qtree"": null, ""read_only"": ""false"", ""serial_7_mode"": null, ""serial_number"": ""ZPevK+N7MJ8X"", ""share_state"": ""none"", ""size"": ""1073741824"", ""size_used"": ""0"", ""staging"": ""false"", ""state"": ""online"", ""suffix_size"": ""0"", ""uuid"": ""49c61b1f-a47d-4650-b724-03f5e7d040b2"", ""volume"": ""vol1"", ""vserver"": ""svm2"" } } } PLAY RECAP ****************************************************************************************************************** localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0 ``` So this isn't needed for this PR. A second PR is needed to merge this in to 2.8.X where this would be needed. https://docs.ansible.com/ansible/latest/community/development_process.html#backporting-merged-prs::I agree it would be better to use vserver as the first element of the key.::I've swapped vserver and path order for lun_info field.::Removed changelog fragment::",f907a2b690428289b51b2cfe17db08c406bc27a9::708f20b98563eb2b384bb59338aa0a235dcbf8be::35491742c0c5832f116b70a330a092f935a82f95::b45f7fb76c55c8ce2699f2364ea09516adc4a823::
https://api.github.com/repos/ansible/ansible,58210,fix-ios-test-for-bytes-text::devel,0,merged,affects_2.9::bug::core_review::support:core::,##### SUMMARY Recently modified unittests for ios would fail with non-ascii paths.  Correct that. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME test/units/plugins/cliconf/test_ios.py ##### ADDITIONAL INFORMATION Addition to https://github.com/ansible/ansible/pull/58159 and (backport) https://github.com/ansible/ansible/pull/58174,5eabf2191df322370ec39ddc7f978c9d6f968677::
https://api.github.com/repos/ansible/ansible,58152,fmgr_fwpol_package::devel,0,closed,affects_2.9::bug::ci_verified::fortimanager::module::needs_revision::networking::stale_ci::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Bug fixes for fmgr_fwpol_package regarding nested folders. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` @ftntcorecse Revision comments should be added to backports in the form of changelogs. You can refer to https://github.com/ansible/ansible/pull/56399/files. More on backport process: https://docs.ansible.com/ansible/latest/community/development_process.html#backporting-merged-prs::",6dcdd182065a4a0610a39f33d1d19cddb47ef2a3::40c92c720531a318408b3ec750f83845ac0f30d5::
https://api.github.com/repos/ansible/ansible,57993,add_ssh_comment_to_pubkey_output::devel,0,merged,affects_2.9::bug::crypto::feature::has_issue::module::shipit::support:community::,"##### SUMMARY Add public key and key comment validation ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME openssh_keypairProbably also needs documentation in the `RETURN` description around line 90.::Done::You can also simplify this: ```suggestion 'comment': self.comment or '', ```::Since this also overwrites the private key (which apparently also contains the comment), you need to also include ```.py if os.path.exists(self.path) and not os.access(self.path, os.W_OK): os.chmod(self.path, stat.S_IWUSR + stat.S_IRUSR) ``` from the `if not self.isPrivateKeyValid(module, perms_required=False) or self.force:` branch.::Now you need to update `self.public_key` another time.::It might be better to split this PR up into two parts: 1) validate public key and comment and update if necessary; this is more like a bugfix and can be backported to 2.8.x; 2) return comment; this is a new feature and has to wait for 2.9.0. At least if you want the improved validation in 2.8.x, that is :)::Maybe add another test here: a) copy `{{ output_dir }}/privatekey7` and its public key to `{{ output_dir }}/privatekey8`; b) run `openssh_keypair` again to change the comment to something else. Then in verification, check whether the public key (and thus the private key) itself (i.e. without the comment) stayed the same, and that only the comment changed.::Will do.::Why the self.public_key needs to be updated? Only the comment is updated within the private and public keys. The public key itself does not change.::Will split.::ack::Ah sorry, I got confused and thought the pubkey also contains the comment. It doesn't, so everything's fine!::Wait. You should not be confused. you are right. The public key contains the comment. And of course, the file is updated with the new comment once it changed. What I meant with the question, is that in the module, the return output contains only the public key output without the comment. The comment output will be returned separately as we agreed.::Done.::Split done. The key comment return will be introduced in another PR.::I added the following test. Create a key with comment. Change the comment of the key. Verify that the public key has not been changed. Currently, I'm unable to test the comment as the return value will be in the other PR.::You could test it by looking at the output file, or by calling ssh-keygen yourself and extract the comment from its output.::```suggestion bugfixes: ``` Otherwise the tool won't accept this.::```suggestion - privatekey7_result.public_key == privatekey7_modified_result.public_key ```::Thanks for catching. Fixed.::If I call ssh-keygen to show the public file, I will get just the public key without the comment. I thought to add the test for the comment when the second PR (#59268) will get accepted. What do you think?::I don't think it is a good idea to call `_get_pubkey_content()` multiple times. Better call it once and store the result, so it can be used both in `_pubkey_valid` and `_comment_valid`.::It looks to me like you're assuming that the commen this always there (is it like that? I don't know) and has no spaces in it.::Done.::That's not exactly the case. The structure of the public key, standardized. If comment os provided during the module call, the ""_comment_valid"" function is called. The last part of the public key is taken. If comment exists within the public key, it will always be the last section of the key. Then, the output compared to the self.comment. If equal, it returns true. If not, false.::If you would have `present_pubkey.split(' ', 2)[-1]`, I would agree, but you're calling `present_pubkey.split(' ')[-1]`. So if `present_pubkey` is `abc defgh my comment with spaces`, then `present_pubkey.split(' ', 2)[-1] == ""spaces""` and `present_pubkey.split(' ')[-1] == ""my comment with spaces""`. Anyway, please also consider that if `pubkey_present` is `abc defgh`, then both will return `present_comment == ""defgh""`, which is not what you want.::It might make sense to create an extra function for parsing public keys: ``` def parse_public_key(public_key): parts = public_key.split(' ', 2) return parts[0], parts[1], '' if len(parts) <= 2 else parts[2] ```::Regarding the change of the split, I agree with you. The ""present_pubkey.split(' ', 2)[-1]"" is implemented. Regarding the second part, I can basically create a separate function, but I think that is not required. For example, the public key missing the comment and the comment is passed to the module. pubkey_present is abc defg The result will be False for the return present_comment == ""defgh"" And that could be fine because in such a situation the comment will be readded to the public key in any case. What do you think? If you still would like to add the specific function, I could add it. ::That's true, but once someone starts refactoring the code to support empty comments, this can be a problem. (Also, in the very unlikely case that the comment equals the public key, this could be a problem.) Finally, it's much better for maintenance if parsing the public key is handled in one place, and not redone in many different cases. So adding a specific function for this is probably making life a lot easier in the future :)::Agree. Will add.::Sounds good as well.::",7d7d0b81fff94ddcf7e62e530cfd083d90edd49d::
https://api.github.com/repos/ansible/ansible,57940,rds_instance_fixes::devel,0,merged,affects_2.9::aws::bug::cloud::core_review::support:community::support:core::,"##### SUMMARY * Update testing policy to be correct for RDS test suite * Fix Iops bug when Iops is not present * Create read replica in same region to avoid more permissions being required * Ensure modifying DB doesn't try to downgrade engine version * Add tags to main test suite to limit number of tests run for problem solving ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME rds_instance I'm wondering if you could separate this so it can be backported.::yeah, of course::I've taken it out of this PR, once my currently running rds test suite is passing (I'm pretty confident it's all good now) I'll cherry pick onto a new branch::Thanks so much::",61e22ebc2f5ab7efc9d0ffb05170542e5a9d2072::
https://api.github.com/repos/ansible/ansible,57744,issue-57618::devel,0,merged,affects_2.9::bug::core_review::files::support:community::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> https://github.com/ansible/ansible/pull/51350 removed apending `state: absent` for missing files in the module's result. However `_get_diff_data` method was specifically checking for `absent` in the result. This changes that to check for missing `state` key instead. This needs to be backported to `2.8` if merged. Fixes #57618 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> `lib/ansible/plugins/action/__init__.py`i would do both `in ('absent', None)` as there are cases in which 'absent' would be a correct return.::I don't think there are. `peek_result` is a result of the file module being executed with `_diff_peek=True` which just checks if the file is binary and calls `exit_json`. From there `add_path_info` is only method that modifies `state` in the result and no longer sets `absent`. Having said that doing `in ('absent', None)` might be more defensive, so I'd be +1 for that.::you also have to take into account actions that have 'remote_src=true' as they might not rely on peek::",dc0ceff89a3bc58a44457c1e1502b8289d431fc8::8dfcf7cfa401a407047a3911645cc3c2ecc24162::
https://api.github.com/repos/ansible/ansible,57687,run-valid_include_keywords-tests::devel,0,merged,affects_2.9::bug::community_review::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> The test added in https://github.com/ansible/ansible/pull/56586 hasn't been actually running. This should be backported to `2.8` once merged. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> `test/integration/targets/include_import/runme.sh`",1bda3bdd728a98f2dc593373aa315ee091136b01::
https://api.github.com/repos/ansible/ansible,57662,winrm-vault::devel,0,closed,affects_2.9::bug::core_review::support:community::support:core::windows::,"##### SUMMARY When using an inline vault string for `ansible_user` in both the winrm and psrp connection plugins it will fail as it expects a string. This fixes up this problem and also forces `ansible_password` to be a string which was problematic on psrp. Also document the `ansible_<connection>_pass/password` vars to align with the normal standard we have for password management in Ansible. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME winrm psrpSeems like *maybe* `get_option` should handle this internally, just like with templating... @bcoca, thoughts?::ditto::type: string should do that::version_added? or this was just missing?::@bcoca unfortunately no, it fails with `Invalid type for configuration option plugin_type: connection plugin: winrm setting: remote_user : Invalid type provided for ""string"": option value` Sounds like `type: str` should be doing `to_text()` internally though. If that's the case I can add the following to https://github.com/ansible/ansible/blob/480b106d6535978ae6ecab68b40942ca4fa914a0/lib/ansible/config/manager.py#L147 ``` if isinstance(value, string_types) or isinstance(value, AnsibleVaultEncryptedUnicode): ``` That would mean `type: str` would do `to_text()` on this type of object but I'm unsure if that violates any security boundary that this type is meant to have.::Technically `ansible_password` has worked historically (just through play context) and because I was planning on backporting this I didn't think adding `version_added` would be ideal.::Alternative PR for the above is https://github.com/ansible/ansible/pull/65023::",e6d63a63568ee227eb176ad153a2d557ba97a188::79cc2b233eb707e7e37ea9ea7a14864d67a9df63::
https://api.github.com/repos/ansible/ansible,57657,backport/2.8/57093::devel,0,closed,affects_2.9::bug::needs_rebase::needs_revision::,##### SUMMARY backport #57093 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_pagefile.ps1 ##### ADDITIONAL INFORMATION,6179a94d9bfac26b63cbc6814db9746dfc5247f5::9bc5f72c1300899a947b8c127fc523d6b5a42678::bba6ca4db126dfc18702863bd083420004be3984::5b1645aca9dc7a07cba5429abf3f23a6ed49dbcf::3ac5ccda03d1d84253a93072cd8cf2eddc00ee78::89c3ebf053aeab510f59671814cd94844e05d611::ad918699d213c45ddc7afe8bd9301231911c425a::1f7bb82810ad39a9dca1c651c4501b34e286ed5b::3117495d430032958c4f72fd22590829bc7fead5::455aa542d049a1018a2ba1506798112d437db3f9::ebc717c3375be5994ac5c9419e1b78bf6c1d282d::9e60b212dd6b73345b535b477747f6180a30f642::9cdc2041390b966fee28604090a5faf119cda41b::e4d9a5185d8994d35d8c47c9a44821c1ebedc6f4::c975c0e69bf233f33e20f4e83fe75f4d441cbce2::fc37aed6d9fbcdeec1bd1187cfcff0de2c599a91::e62f75192d2c773c3962a4fe43bba44d9dfb8ec5::8448967c74de1d9e2addc3c19717f48e902b0b53::ffa7eaa7a76a6b3fda6d75cc0b299e1f9b31d30b::28348602f88ad7c19cd5904faa9a466db26b4d3f::424f385548cd49fed947810a0f8c60245f2842bf::c624eb994f123ba7123667f43dfc729696d2a17d::33824f313e2ed7f6320ba51b21d970462e15b321::5af5e70f6b5fb987594e67d8df591514083ffe10::8e801d5394bacc90e59cb18ec52233884da6aab5::a5a54455a46597a8c2106beed6ddda3d90887bd2::45ff67b7449b0598da284ccf1dd750019a0408ad::93758a5141f5d9f441ff77e7ba2d1fdf7fda25d6::0131ad25bf2571c868e38891f133b718e26c9ece::4378d8becf3732ca1088c3efe4195bfff5e753a6::2a118b4cbdbe3ac269b25100c5256b5f492d3e7d::1f84c4982fced18714cf380adff0f48deefa58ce::91bf8402d184a34c0ebf221ec3ba034bdde84715::77d5fa20d8ddf7b681f7f1ccf846d399f27d2c2f::1856babfa58d0569a9f561d7693023fd8e8079cf::2781230d8ecd729d001cc089f145a33d7f923ef8::57d3a17965d3002860219d156deaddf62755797e::1463fdd02aad43ee2c45af12a822219ff80a90b6::30906ff63288ce4b5d1c218755a4b18976fbecea::65035e2149dde928d793d3bc36aa2a0b30e44862::980e5cbdb493b441466981a16df66d19ad1d2e66::9562217680ff2a1924647b457be21bc799456dda::36225e16031090e2c6447b3b51e062e7383a7fb6::e64ea2a0b12f08ae60bfb840b4b40991e53bbef8::f5561c65bc3707f1c3f5864ca129813183479b7c::33ca2d192f9598d088c7e1ac4aac3460fb175d99::91afa0483f7e6af49ee0dc3d4dd2ed5db637dac9::80e4fc47c3c1ae60b706e5db52211a0892460ef2::564393a5e04f358b7c1f56662ad00d638262bab1::a851a0db08d96658c19ad16d75fee8fd80cf136e::49c52a89eac451a0291c2782dc5a9a10e20c572d::c4d98fa1342c9f54e30d4d4ac71a3f8d185374d6::d83adc4debc5dbada77b15918aec7398525893a4::d83e722b82a7c93b183041caa872391da1f84fa8::368375810ba7ef804e561787eaabfadae0b9067c::2e80441948d5ff327f29b07ae422ceb2a5ac8579::2e4c1dc3cbf7fbdde1fdcf544627a5b2310c8964::905b9b162da78b4b226b08fc94aa2d2bd79071ed::3cd3c0d7c6034e38f059aa4579c8c036f99dbd46::4dee11336c1737c4b09364ce137f02c0ae395fa9::cec67624bafc88b036a1be825f0ff0ef454be0fb::a87b36219ba87457fc2b8a621b41854e6856d1f7::ebd7820a449a987652724c1dc8c4497ce271d54a::6d8b124e161b70453bc3cc3c634bbdee263d5915::d73da98ecf84b58c68b63f4e272efba86e7dd770::ebe89926f0174940a6cee3d0b7f36404ab016148::7c678aaff824658c8e43b316c2851c632e21040a::8b88eecde3a10248b760c8af2328845b97ef9353::3044b855b4d8a76c9c46f67b4e389c31a4e1a9e7::4cd7c2987f75aa3d01a45f65271bf4e32a0c9d6e::d5cd383855f59ffa427cb81b85f5b2e3516f1717::14531144cfeacedb387e6cbc8aec7ff4a2171fd5::118f008c59222d157fcab2fe48c33ce52ca52b1d::99d3a641eb558ebad7b86ec511ed9e379039355e::942d38ae245d9746038aac5bf9e184c92958a7ed::9fd0254954381327e2cedc4c5b132db4d2d1acda::0cfbc1feb888e99d62ea5655f19bdeced39ee3d4::76f6d21ff3e7bb5118cb078b6924905ce012e9e6::f64e95f230458950e13cf8b8bdbaa0b02bd45b16::74e90f89bd69bed528db52c0daf1e2cff85aa1a4::e0a3c6214d0bbcd418c16e654c7e7d4cd2edfe2e::5c3c3fc8358568958cc69e161ff4afe781ab0b58::ebaf42bbbe1c4a7281a64cb180feb4e2891b7df9::104f39a41d21852b94295445eb2270f3722e87b9::630e8cb8e2b39d13122b22f164da77964f9e6366::57935b76d750a87616cec0dbeabf194bbd8b7e15::196018952bb9ac0157b569007d46a35f24e37ca3::f5de633197edd2393d1dcdc021101aa2685aeacc::17f90a68cc5a9db9ca7f999d36c7c6cd1eb5a1ad::fdbb83cea0582860fd2ff49ee7755fc5bbfdaedf::f03d9c14506383aa3f4dc2c255d5ee0359921c5b::22d7b7e5f218cfd01327f0be9f70d515316a5762::fba466a26fb9265ee24d679608a647d849d797e3::f084305466a8bd8710ee6724c3f15517e81a4113::0829325d213dd4f6bf6af85566cf515cfa3f243c::e925dd7713d084077ebe2714dec222bd7a3f54a1::457efa8136ea12d3bcedf9146e3cd415448628e5::5a6b9267445a3035c3381ca26f820f384bb3d626::543bfbbe7f36a5756c44aa2ffc7c251a8f47c4cb::72af010414f5451cbb3719f657f458143a91377b::387093a0d6f611f2c720a16d769adbacf090ec5b::a9b431357062f8301039df48bebe4a93f1aa05c4::cd9d6f095834ce736479d608532dd20b66fae119::6fcb71f51b4bd112cf456178b4ed1d54fd093fa2::d69da31cebcd26694c03306e97eeb39a1b4b08ee::c05b61777cbbc7f33954c78bb0336c385160794b::9b867fbe8404f1f67fc7cdfd6099e25e3b010b12::b9dc8056d791946bf587d5c35dfe77e4d7a8c73d::6df8ea0c2a2be39c828e43428d43d39f301d7853::2873741074083a413a381a0b9b4552704905a91e::0f749a84434453a81159d7a87433f08b38af306d::6dd65017424d77ea7cc58e1e7b980b45bb68ef9e::c4893d73b15d630d7cc9dc17e328f4c3f4d39511::d0196d0dad7ff36716961b640ea60256beb9f707::3a2901e3c628bf255eb01dd56599f01a49967c11::d123669a46473c46626f3b91129d83ad17422491::2611867fd1dc387ceaa0ffb8ce0f030aafc2a859::94e24d1039df808dff169bef3e20457e7f63ec18::22511a4eee158cfe88605f515424a35f286d1063::d8fb3cc7f0b3ed163e6239da0603da31505dd604::207fff7d360a63c56ad91cb75ede37d2e3b7349d::5375c5866db0f7ec431b158b1265652ed80490fe::019573b63da7e946fb3319fe64f86d69134d0f91::c99ee4081285b6ee478fb7dab5c8c141a2c3db92::40dbb28189897023ee1949e03e43c8869b27acc8::4818ec28233bb7f7025f05833aa91dd545a951bb::00b4a5263374293caf8589bfbfe078032fb5e39c::f7dd79a439fa40dcfcb3b70a0696dac15d4d27dd::d32543ba1077942f200e4041554f487f94945e8e::1769d9aebe740bd2e2ec850e04f26bc4698aa479::4dae67d712f2583cec5b8734c44cebba2b5cf864::99f450bbccc6686dce5059507c1e4bd15c382acf::e47c603f1dfd438932ebfb4b09327730d2d6f251::5145effbf668c77af75b9f24b11a10a747f1c854::043990bc0727c9f6f19ca46c3bafcd2159dfff89::9eecd869f0dab141d64550226e437319633dddc9::cf611c8a8e6156f919537c5aafe9ff8860d61b88::3fbe6e976cfcc7369d1aaf7750a76b521ff064c9::b66f77352dcef521d262c8c712a2ddbb9b1625e1::f65a1c4134f3c8773b82b874c2b0b32ce906d72a::c3e2f9f536d9429c49ac66b2b4f9ca9dc7621f0d::7333af4fbb06b12242a8573c239be3d4ba941ec7::a07ed8530f8ffebb7ae0408b840a73eb20e34c44::0cfc338cfe2c86bc461ad98f50dd9ab9620277f7::058653487cfdc01ee692ee5d165285e31a7e0777::3a237b505f52b141e3cc563bad90fbe24e07b8d7::a85461e569983105478e7fc97cf1e10c7459e971::c8037a541e3b125d04d8ec731335330dda00d9a3::05424bec1af627562bc2643551bc6f41184ecdb1::4f37ce32f301e1cde203a517a7a2945a7f5a2993::79ec0ec78f4091300cac03b5fa4af26a78af9875::46f185c2175184b8970d079a4b9bfcf10e0549da::d73b8d66ae567fa2b636541ed124e5a4a115be61::17dacf757b4877776168eb69b3fffb4355381ed6::1e0f140238b4f306aac68c52bf4b7412ce38cb25::f279ce5209388632b6043b3a0476c0cb15aa3fb7::bf8a838702bb69f258a5517571826a2a9933ba74::c74fd2e1ce33ece43f645d280f4d4d888de3cbc9::5e2aa93f7d233b25d0b47b486cebf01369f183fd::51fb9083697794a03fe786c6ffccbe831840c1b2::faee6a36762e8f18c29f00a7cc825d9d7f9c970f::a52bce11d2541c2f7d14af2460b9134adc35efdb::c82a27b89e4c7e1e0001a0aea0423bee74ec3583::235aa2b85b729e89709664bf9635141afe76bb56::411371a756c16f5360bb2d3fca1d83e82af4d5b3::ecef18d7441acd293fbc79fffb688654f280ac3a::2f767bda9b389ba7a5181b82d6dc3d6ecc8e9c33::314049aa712380092c95aa096752020169a6ab64::42fb862605d6bbbf132898ffe8d34ba1e40fe2b0::171ef3e337ae6d1696249a372938a266ee704074::f0e5f2cad0bce7f38c8c2f704bd3b5674669bafe::b2364fe7480f8bd47100154935f233f5b5d3c071::2c495821c2618a337b272c2e8fb144586e785097::e63818b7d0337f379d75ff5cbff75947c8e93630::3a3314e9ff1bd42970c0713166d49a915c420031::0176c8893b0cbb8d6340ad000a5abb01c5e4e7f0::e6ed517eed395e3ce3a760ce42602e22d971437d::a5dc9ff8b447ebab3ab812ac81edc5756177671f::fc7fb9d7c9816a852ce3cb9d507fa24d7a59fd26::a42c9d17dedff2d85a9d7224a9c850dd131e9ec4::f35a37f2893a6e136972943104e824d2c56118b2::ed0e874e47922f22dcb64e95ac371081ed268dea::40b3619c9aaa8820f1b10e693fa005b1911788d0::bc8f317637436c2a27af43b48d0b31327239cd4d::c92257daeb5adb5f77bec5f1a909d5f2752afb5f::8881adc098319135b6d92a01b1aad5085aa6646c::48189b95cded34fa6e25bf74b2cd43ad65d0f4b4::9ec7cdc4b0c4599d623fbbbd3d98035396860499::3115c95b4c878bda938b8fe6f50a9122e8f99d9b::5f67bd5ef95454f3f79a01a09e0a174cea6513e2::6c078e18a8b34df265bc20915c1b0d5f26a24952::206087e342ebed4fa3d9c020553ae4233d512f0b::53cfa055682e7c8787bf955610af99564cf01bf2::c52335a6163bc74f0217e601cc71c298e9392684::73484808c8d4cbd47a84cfa9371b047a3ca68404::e71b4e2e57fc687842f65e3540aba64ef0f63446::bd011688dd6ef7c06d83b8afaeae99893f22c0ac::eb9d1921303168f55a76934c9e8ec14d0b8bf168::9844ea49c58b05f6c4e65ca3ae0f893291c0807a::20d17fe0eae528ea79235be6ded8c9ec454ae1ee::92e4a982196d514fb4ceb572d9ca8d952f5ada54::0a40b0ed451bc3bd0dfff07408b0c3b4b601cd5f::39c5758a8748862a628ecc22f23a3b2cc5dff284::d617e6cd8490fea0be128a6a574c2e3e2ac75b22::cb6ece6b4e1e650f0fdab322afe9f6d7e7b38b17::0a3410f5c60cedc796047aad4c0bd716687c8e25::5a1985cb069363527112931888699289d0fde611::4b1c9c1b29c4a76adf425802a71e1a1cd8941dff::4ef102ae79e5c6d3b6db23abc9797b514822742b::4388886d489bbc3a794d377ac2c19520323712ca::0a624eaad38b60fbaf36885f82f8e08fb0c01e36::116262e5e8a4154c00c8f523d5afae251bbf1c2b::64890cc4563ec9dad6f5c1a786cbf74978e86a64::776aa014ac2bef43c265b9f544e6c018c6c7b159::7d9aa0d82987759748d2fb560ac31dacb4ad7443::01280060235f8b6102ddbaf0bd050218167b6d68::0d48ead82240768662e64fb70273ad3853c9c00d::f511bec4ff2d0371e5a90e5da2ea8887f5ff1ac2::0365d7310231b6c4212723cc20603474cecc00c1::77e50980b583d3cf7a367f6fd84cc3fe0f38eb55::4591f36dcdf8959a2de40c3071401bcba74d4194::f79af725fc025922c87d686d332baf4a5ea32c60::7d0237f4db2b637eb089ac3ecc6d5f56c5c554ef::01c6915eba32d77dbe82cf6ed88d105de63899b9::19ffe970f7022fe78130bfea0803ae6f0a8ebdd5::e826eca1f230bc62b4676ab6b484d0ea06fbda6d::2128e7c14f8143777ba135dbff9c03c6f4549b1a::918425534027feeb838c12f434056ede1931fe22::f0664476b7ca570f21ed482f89c1319a2ab6353b::3ae459b3b49579bab8c5b34ba44b1fe480598385::d2538a0dea3c02a659d0c98b04c1186aab9d03e6::059589794ef643d1b6ba9640c35179cbb672c3c1::6857fb2c392f89dd9ff070fa9d9c6d0169c863ce::5c88199db344f46e649d74425ecfe2f74be0e8c5::503eaea2ad7adf699115653273fbe2ecf5a198d3::36580c4450f30dc47c462028d5e3ee6ff7eae843::4ddc8b476958580dfaf345b4e3ba651cf7c94170::77e88ae5d420980489a3f7b85d75ddcc97c7100c::69696dc83e5ab90927feb47ee37d694fa7ba22b2::9f1bb4e1429bc3cf8aaa44c663268d847bf12cd3::f6600b5b99522b9e45f6fabf96f139c7a8ac7f6c::9a2e582eb2e0f513f0d51e6ce5eca8847869e73b::a31a8c2a534365f04c15a1f9ba930a6d7ec6fbac::bf9f21cc952ee8d55ce663fdd9b73d808ae13a0e::819507840f38ee5a6617c4be8c8dafd3bf0c31af::d701910bf02d95b8f10e1ac0cd4c5aaebbf047fe::c442508e302b20fa03f95ef29a1e430a8ce5d390::e07c7688c2b8e5e333f260187da5430b0194e103::5928e4fc13ed17582fc77aa30ef19d1d2b5c5320::041f65b35a24751e972fd6a2288abf7957fc754e::
https://api.github.com/repos/ansible/ansible,57588,fix_fauser::devel,0,merged,affects_2.9::bug::ci_verified::module::needs_revision::owner_pr::pure_storage::storage::support:community::,##### SUMMARY Internal CI bug causes this to slip through. Incorrect parameter api_token used which clashes with the default required parameter used to give access to the array. Change references to be more appropriate. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME purefa_user.pyplease remove version_added because this is a bug fix and will be backported to 2.8. I know the build willl fail but you can ignore this.::Thank you. I was uncomfortable with having to put this in to make the build pass.::,95e36ffa7561fdc902590adb5b3cb2e9e731b6ef::
https://api.github.com/repos/ansible/ansible,57518,tower_modules_handle_tower_verify_ssl_alias::devel,0,merged,affects_2.9::bug::shipit::small_patch::support:community::tower::web_infrastructure::,"##### SUMMARY `tower_role`: fix exception when `tower_verify_ssl` parameter is used integration test provided. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME tower modules ##### ADDITIONAL INFORMATION Caused by #54315. Once merged, i will create propose a backport.",a1e53a13f61c94eb4b68fdb01aaf748466cd0e8c::6e9d2201ee2903e1b139e40d5f76139e91f7ba64::
https://api.github.com/repos/ansible/ansible,57359,kubevirt_affinity::devel,0,merged,affects_2.9::cloud::community_review::feature::module::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> This PR add three new parameter to kubevirt modules, node_affinity, affinity and anti_affinity <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Feature Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> kubevirt ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` Lines 58-60 have inconsistent indent.::Not sure what the rules for this are. 2.9 for now, then change to 2.8.2 if a backport does get merged would be my guess.::> scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum You missed the parentheses.::Missing parentheses.::Missing parentheses.::Also missing parentheses: > during vm execution (e.g. due to a vm label update),::> during vm execution (e.g. due to an update),::I would need to then change back the version in devel branch. Let's see what maintainers say.::This should be `2.9` as we don't backport features.::Thanks. I've seen you've did some exceptions, so I've thought it's now permitted in case there is  changelog. But OK, I will move to 2.9/::Exceptions shoud be handled case by case discussed in an IRC meeting. Feel free to put this on the agenda https://github.com/ansible/community/issues/474.::Aha, thanks for the info. This PR isn't that urgent.::",183ef3ea7140d35bccc5c6ae776580cc9f2e8e15::
https://api.github.com/repos/ansible/ansible,57318,group-chars-ignore-doc::devel,0,merged,affects_2.9::core_review::docs::has_issue::support:community::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> There were no docs for the `ignore` option to `TRANSFORM_INVALID_GROUP_CHARS`.  This remediates that lack of documentation. This should be backported to 2.8 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` It's a commonly-understood French word, but would still trip up translations. ```suggestion - When 'ignore', it does the same as 'never', without issuing a warning. ```::I guess it should also be changed two lines below then.::",b0f873d7fb5526444166d0d5e4ec2bb512b69ed2::bab17e759c6997b1b5e48ad7eccccad595c71ae3::
https://api.github.com/repos/ansible/ansible,57312,group-chars-default::devel,0,merged,affects_2.9::bug::inventory::needs_revision::support:community::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> This squashed the ""future default change"" deprecation warning in cases where the user is not using the default value for the TRANSFORM_INVALID_GROUP_CHARS setting. This is a minimal change as requested in https://meetbot.fedoraproject.org/ansible-meeting/2019-05-23/ansible_core_irc_public_meeting.2019-05-23-15.00.log.html#l-319 This should be backported to 2.8. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",75fde8b42ea785bca84e3038b17705a778cb32b2::
https://api.github.com/repos/ansible/ansible,57256,pr-56147::devel,0,merged,affects_2.9::clustering::feature::k8s::shipit::support:community::,##### SUMMARY Tests are separate for easier backporting ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME k8s,6e00f64e65264cf79c471378be61434977b7ef24::
https://api.github.com/repos/ansible/ansible,57120,devel::devel,0,merged,affects_2.9::bug::cloud::community_review::module::new_contributor::new_module::new_plugin::openstack::support:community::,"##### SUMMARY Added new module named os_group_facts, based on os_project_facts, to retrieve groups data. Fixed os_user_role module problem that didn't validate groups correctly. ##### ISSUE TYPE - Bugfix Pull Request - New Module Pull Request ##### COMPONENT NAME os_project_facts do these example tasks need a ""register""?::@cloudnull Sorry for the late answer. No, this module don't need a register, It returns a variable named ""openstack_groups"".::```suggestion required: true type: str ```::```suggestion - Name or ID of the domain containing the group if the cloud supports domains type: str ```::```suggestion this dictionary may be additional dictionaries. type: dict ```::```suggestion - Ignored. Present for backwards compatibility type: str ```::Does it make sense to have this in a new module?::```suggestion description: Description of the group. ``` You added a period most of the time, but not here (and for `domain_id`'s description).::In which way is this a fix? You should add a [changelog fragment](https://docs.ansible.com/ansible/latest/community/development_process.html#changelogs-how-to) for this. And maybe it's better to do this in a separate PR, so this fix can be backported.::```suggestion - Retrieve info about a one or more OpenStack groups. ``` The description should have full sentences.::```suggestion - Name or ID of the group. ``` (and some more)::Don't thing so. Removed that option.::You're right @felixfontein. Reverted the code to open a new PR.::",7872090943d38c917a1aeb1ea7c6775db0c41338::8e6b6e95de8ee9c45ee8943216e41b9d20be1ff9::ed84a20a515c2fce3c561f255a2a26246290ae2e::cfc48fca3935dbf6a2e7b1abef3e412e83957328::53b1f697de019d4233bbf1620105480842276093::7028f0887daaa52fc82e346067ac7dc9991cff9f::4b1c30df8d3b4cb72c6a7016903e8a5b7d32d31f::96a5d8c8524c61eddfeb9e52e500857d4fb9398c::5aaf19daf0ad9189cd9e44ecdeed79a1d35185cc::c7530e94e870209d04a6fc54318e574331b8ed3c::c93dfd9b0d78eee2db16c900f82e5c26cd8de267::20155c0b0f5b5b7ec88a9ef4abe1fb56a56ccd87::6e031d6a4f5a8351e7c6c6de50c1eaf7bd415729::f0d72417f9cf7698e2a0700195386a7bb9e56beb::
https://api.github.com/repos/ansible/ansible,57106,collection-init::devel,0,merged,affects_2.9::docs::feature::needs_revision::new_plugin::support:community::support:core::,"##### SUMMARY Add the sub command `collection` to `ansible-galaxy` that can be used to manage Ansible collections. Adds the following commands for `collection`. * `init` - Create a collection skeleton struct * `build` - Create a collection artifact from a directory * `publish` - Publish the collection artifact to a Galaxy server * `install` - Installs a collection(s) from a Galaxy server or local file path. The PR has ""moved"" all the existing commands for roles under `ansible-galaxy role ..` but can still be called like it is today to ensure existing workflows don't break. Further improvements that will be looked at/add in future PRs are; * Improve documentation around command line examples, requirements files and general collection structure * Support specifying galaxy servers in the `~/.ansible_galaxy` config file ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME ansible-galaxy```suggestion - ansible-galaxy - Add ``collection init`` command to create a skeleton Collections directory. ```::```suggestion Creates the skeleton framework of a role or collection that complies with the Galaxy metadata format. ```::```suggestion 'build', help='Build an Ansible collection artifact that can be published to Ansible Galaxy.', ```::```suggestion help='Path to the collection(s) directory to build. This should be the directory that contains the ' ```::```suggestion ""You can use --force to re-initialize this directory,\n"" ```::```suggestion description: patterns of files to ignore inside a Galaxy role or collection skeleton directory ```::```suggestion # this can be a company/brand/organization or product namespace ```::Is there any guideline saying that collections should be lowercase?::Can this be generated from `.gitignore` contents?::Casting to list isn't needed here ```suggestion elif any(fnmatch.fnmatch(item, pattern) for pattern in ignore_files): ```::It's cleaner to use matches: ```suggestion with pytest.raises( AnsibleError, match=""- the skeleton path '/fake/path' "" ""does not exist, cannot init collection"", ): ```::I'd turn this into a pytest fixture::https://github.com/ansible/galaxy/ and https://github.com/ansible/mazer use a CollectionInfo model based on https://www.attrs.org/en/stable/.  The intention being to help keep them aligned (and eventually share the code) so all the tools use the same data validation. I don't know if 'attrs' is an option for ansible-galaxy, but it may be worth trying to keep them consistent. Granted, CollectionInfo is the fairly complicated use of 'attrs', with lots of uncommon validators involved to enforce the spec for galaxy.yml, but overall 'attrs' has been useful.::'readme' is required. Galaxy artifact import enforces that the field exists when validating the galaxy.yml. Later in the import process, it's verified that the file 'readme' points to exists in the archive (https://github.com/ansible/galaxy/blob/devel/galaxy/importer/collection.py#L102) ::Either 'license' has to exist (and be a non-empty list) or non-None 'license_file' is required. https://github.com/ansible/galaxy/blob/devel/galaxy/importer/models.py#L236-L247::s/'file_manifest'/'file_manifest_file' https://github.com/ansible/galaxy/blob/devel/galaxy/importer/models.py#L301 https://github.com/ansible/mazer/blob/devel/ansible_galaxy/models/collection_artifact_manifest.py#L21::This isn't incorrect in this code, but it might be worthwhile to use a different name (`license_id` etc) for the local `license` variable name just because `license` is also a python builtin so some static checkers won't warn if a local `license` isn't defined. (And using the builtin `license` by accident can cause some very obtuse errors and sometimes seem to ""work"")::We have no intention of adding attrs as a dependency.::@webknjaz we have no gaurantees that the artifacts are being built from a git checkout.::I'll change to the lower case, it seems like I've used collection with the lower case more and it's not like collections is a product, just the name of a feature.::Also this is meant to cover other version control programs like subversion mercurial and so on. We do have https://docs.ansible.com/ansible/latest/reference_appendices/config.html#galaxy-role-skeleton-ignore and could create something similar for this if we wanted to.::Thanks I wasn't aware of this, looks like the kwarg is just `match`.::Yea I originally was following the existing test setup but looking back it's probably best to just ignore it and follow the pytest fixture standard. I'll change it on the next test commit.::I was mostly just trying to get something simple with less dependencies in for the first round. We can have a look at making it more extensible in the future if need be.::Will have to update the doc I must be looking at an older version. Thanks for the pickup.::Ok, will have to adjust the function, right now all those values are being passed in as a kwarg but I'll work around it.::Is there a default directory the README should be placed in, the initial skeleton seems to be in collection dir but then others said it should be in the Docs dir. How is Mazer currently finding this file, is it expecting it to be somewhere in particular? Is there a preference for the default being .md or .rst? Thanks for the info on the license keys. Does Mazer do anything special to check if a license file is used or not?::Oh, right. it's just `match=`::Previous check (line 492) suggests that the key has to always exist, no need for fallbacks: ```suggestion assert metadata['namespace'] == 'ansible_test' ``` In fact, it should fail loudly if not exists.::(so remove all fallbacks)::This set of checks is completely redundant: you already verify that those keys exist in the further assertions. If something's not there, `pytest` will report a KeyError properly. There's no need for flexible logic in tests since it makes them less robust. ```suggestion ```::```suggestion ```::```suggestion ```::No need to do this assertion, it doesn't check any properties of the collection skeleton. It will fail on `open()` which is fine.::You repeat this everywhere, just return it from the fixture. It's not test-specific.::In what case would it be missing? I think `mkdtemp()` should always return an existing dir. *Also*, you just need to use a built-in `pytest` fixture called `tmp_path_factory` for this. Ref: https://docs.pytest.org/en/latest/tmpdir.html#the-tmp-path-factory-fixture::```suggestion def collection_skeleton(request, tmp_path_factory): """"""Generate a collection skeleton in a temporary directory."""""" test_dir = tmp_path_factory.mktemp('ansible-collection') ```::You probably don't need this unnecessary var ```suggestion GalaxyCLI(args=galaxy_args).run() ```::What you really need is this: ```suggestion meta_path = collection_dir / 'galaxy.yml' with open(str(meta_path), 'r') as galaxy_meta: yield yaml.safe_load(galaxy_meta) ```::This is not needed with `tmp_path_factory` because of tmp files are scoped to test run and are being garbage collected by `pytest` itself. ```suggestion ```::```suggestion ```::```suggestion galaxy_args += ['--init-path', str(test_dir), name] ```::```suggestion ```::```suggestion ```::```suggestion ```::```suggestion collection_dir = test_dir / namespace_name / collection_name ```::I saw that `collection_dir` itself is used in a few tests, so maybe it makes sense to have a separate fixture just for reading the meta.::If the exception is only expected in the `run()` method, move this instruction outside of the context manager scope.::Same, move this outside of the with-block::It'd be interesting to add some Unicode symbols in the file name and see what happens :) cc @abadger ::In general, it's better to implement a `trap` with a cleanup function here. Example: https://github.com/ansible/ansible/pull/38111/files#diff-aaa2d0f79a3acc45dc595393859b5146R25::Maybe render smth like this? ```suggestion {{ namespace }}/{{ collection_name }}/ └── plugins ```::Plz use a context manager to have a safe resource closing ```suggestion with tarfile.open(tar_filepath, mode='w:gz') as tar_file: ```::```suggestion deps = {name: {'version': version} for name, version in dependencies.items()} ```::I think I only saw it capitalized. That's why it looks weird now :)::Maybe save the previous state and then restore it?::Same: just use a built-in pytest fixture rather than creating dirs outside of the tmp context of pytest session.::I think that at this point I'd like all the new additions below this line to be moved to a separate module for better maintainability.::Won't work due to dict comprehension not being supported in Python 2.6 and it will fail the sanity checks. Anyway this format isn't needed anymore as I was originally working on older docs.::I just copied it from another test, we run with `--boxed` that makes this largely irrelevant in CI but it helps when running it locally through a debugger.::There are only 2 tests that actually use this, I prefer the simple 2 lines for each test instead of having another fixture. The fixtures are already complex enough for people who are unfamiliar with it that I prefer not complicate it even more.::See https://github.com/ansible/ansible/pull/57106#discussion_r294098042::I don't see much point, this is a file in the `plugins` dir already and having it render the namespace/collection is just unecessary noise IMO.::I disagree, I've been moving some common functionality to another file and keeping `galaxy.py` just the stub that invokes the new actions. Because of this I don't think it is really necessary to split test_galaxy into more than 1 file.::I originally tried that but using it would mean it won't match our loader regex https://github.com/ansible/ansible/blob/devel/lib/ansible/utils/collection_loader.py#L33.::As per the talk offline the context manager for tarfile was only added in Python 2.7. While we don't support it we still run unit tests with 2.6. I've created our own context manager to handle this.::There's already an existing trap https://github.com/ansible/ansible/blob/devel/test/integration/targets/ansible-galaxy/runme.sh#L7 in the same script. It was my assumption that adding a new trap statement would replace the existing one so I just keep the flow as it was already written.::But it's not a part of tests, having pre-requisites there is even more confusing. I think that not using framework-recommended tools just because somebody else may be too lazy to read the docs is not a proper excuse.::So maybe write a negative test and test for failure?::well, you can just extend that trap :)::This is redundant. The next assertions will fail if it's not a dir ```suggestion ```::This is not needed. It'd fail on reading below. ```suggestion ```::Better use a built-in fixture which takes care of this making this one way cleaner.::Just keep the next assertion line. It already implies the file existence. ```suggestion ```::I thought we agreed that it'd be cleaner with a CM. Weren't you going to implement it? Did I miss it somewhere?::Where's it? I cannot see it.::I recommend using braces instead of escaping EOL. ```suggestion expected = ( ""The collection path specified '{0}' is not a tarball, "" ""use 'ansible-galaxy collection build' to "" ""create a proper release artifact."" ) ```::I did https://github.com/ansible/ansible/pull/57106/commits/648a2520707a5fd56a1add386576fbf1d6fac4fa#diff-2de3c8cc3e7fae814d02b3058f0c8f9eR124, this is just for a test that I can just import and use it with. Will update on the next commit.::Ah, I was looking for it in test files and missed that :)::Personal preference really, I'm more of a fan of the other direction.::See https://github.com/ansible/ansible/pull/57106#discussion_r294229128::Have added it to https://github.com/ansible/ansible/pull/57106/files#diff-aaaff1b1dc993363be7a8c59decd5673R589 on the next commit.::I see. I usually don't want that trailing ` \` to be accidentally removed which can later lead to the next line being readjusted creating a perfectly valid string literal part not assigned to anything (like docstrings). Also, shorter lines improve readability in general, allowing readers to stop jumping back and forth with their eyes and just read the thing vertically w/o losing the context.::I thought you wanted to target 2.6. What happened? Do we still need that CM then?::For such things, it's always better to use an explicit Unicode string literals (i.e. `u""Ånsible.collection""`)::If you turn this into ```suggestion if not os.path.exists(collection_output): _build_collection_tar( collection_path, collection_output, collection_manifest, file_manifest, ) return ``` you could reduce some nesting which improves readability.:::+1:::I think this may read better: ```suggestion if missing_keys: ```::Are you only doing this to support Python 2.6? Those keys are already unique.::I think this approach might read simpler: ```suggestion new_galaxy_yml = dict.from_keys(optional_strings) new_galaxy_yml.update(dict.from_keys(optional_lists), []) new_galaxy_yml.update(dict.from_keys(optional_dicts), {}) new_galaxy_yml.update(galaxy_yml) ```::Maybe you could use a CM here as well.::I'd do this unconditionally.::maybe just ```suggestion part_boundary, b""--"", ```::May I ask you to implement an exponential backoff algorithm here? https://en.wikipedia.org/wiki/Exponential_backoff::We may want to use some filter to rip off starting quotes or urlencode them. otherwise, we're risking to generate invalid YAML, like: ``` - 'Broken Author <example@domain.com> ```::another place for a CM::Should it be none or missing in the spec?::I think, that a better name would be smth like `collection_artifact` maybe. Do I understand its purpose correctly? Also, it'd be nice to add a docstring here pointing out its purpose.::Why did you choose to use strings instead of a `Path` instance? The best practice is to use the object representation and only turn it to string in places where you pass it into functions which don't support the fspath protocol. Like stringify it in that `galaxy_args` list but `yield` the original `Path` object which then later could be used nicely down the control flow.::Empty string? ```suggestion """", ""invalid"", ```::Isn't it better readable with pathlib? ```suggestion skeleton = Path(__file__).parent / 'cli' / 'test_data' / 'collection_skeleton' ```::Or ```suggestion skeleton = (Path(__file__) / '..' / 'cli' / 'test_data' / 'collection_skeleton').resolve() ```::Since `pytest` already pulls in a backport for it, you could benefit from that: ```python try: from pathlib import Path except ImportError: from pathlib2 import Path ```:::laughing: ::I'd just put a deprecation warning here right away...::Maybe do it unconditionally?::Should be None::The code requires the `filter` kwargs in `tarfile.add`. This is a lot more complex to try and support in 2.6 compared to the context manager work. Becasue of this we will have to skip the tests on 2.6.::I'd do ```suggestion if not ignore_errors: raise ```::You can save some indentation by reverting this clause: ```suggestion if not os.path.isdir(collection_path): continue ```::I'd avoid such double negation + you can save some indentation here as well: ```suggestion if no_deps: return dependency_map ```::This is on the 7th level of indentation and is hard to read. Can you split subroutines a bit?::This probably reads cleaner ```suggestion return '/'.join(to_text(a).rstrip('/') for a in args + ('', )) ```::Why not do this unconditionally? It'd read better.::I'm pretty sure that @abadger advised against loading JSON from unicode text because it's faulty under Python 2.::Will see what he has to say but it was complaining on 3.5 that it couldn't load from bytes on 3.5 hence why I removed the `b`.::Yeah, he also said to use `loads`, not `load`. I remember debugging its internals and it was processing the stream in chunks internally and turned some of them into unicode while keeping the others in bytes and then crashed trying to combine those...::Ah... It was about dumping: https://github.com/ansible/ansibullbot/pull/1078#issuecomment-430394122. I was creating some shims when making the ansibullbot repo py3-ready.::Interesting, I've tested this with BytesIO and it works...::I think it's a good practice to use explicit unicode string literals in places like this ```suggestion test_dir = to_text(tmp_path_factory.mktemp(u'test-ÅÑŚÌβŁÈ Collections')) ```::It'd be more obvious that it's a YAML document if you multiline this ```suggestion req_obj.write( b'---\n' b'collections:\n' b'- namespace.coll\n' b'- name: namespace2.coll\n' b""  version: '>2.0.1'\n"" ) ``` (or use a tripple-quoted multiline string)::```suggestion help=""Force overwriting an existing collection and its dependencies"") ```::```suggestion :param source: The Galaxy server URL to download if the collection is from Galaxy. ```::```suggestion :param versions: A list of versions of the collection that is available. ```::```suggestion :param skip: Whether to skip installing the collection. Should be set if the collection is already installed ```::```suggestion :param collections: The collections to install, should be a list of tuples with (name, requirement, Galaxy server). ```::It's unclear if i would just use --validate_certs to Validate the certs, or --validate_certs=True to validate certs.  If I just use the flags, then this an ignore_errors should remove 'Whether to...'::```suggestion install_collection(). The requirements file is in the form: ```::```suggestion # the filename for the readme file in markdown (.md) ```::```suggestion ```::most recent meeting between docs and galaxy folks are limiting this to .md for now as that is compatible with ansible-docs output and .rst is not.::please also add  collection install, publish, and collection parse to the list.::It's actually missing `--ignore-certs` CLI arg that implies `validate_certs=True` according to the code I saw...::Yep the internal API uses validate_certs but the actual cmdline call is `ignore-certs`.::Thanks for letting me know, will fix up the skeleton.::Fewer negations is easier to read. ```suggestion if is_collection_ref('ansible_collections.{0}'.format(name)): return name raise AnsibleError(""Invalid collection name, must be in the format <namespace>.<collection>"") ```::A whitespace or `\n` is missing: ```suggestion raise AnsibleError(""- the directory %s already exists. "" ``` Current version produces ` exists.You `::It's simpler like this (less branches + takes into account `collection_input == 'pkg_name:'`: ```suggestion name, _sep, requirement = collection_input.partition(':') if not requirement: requirement = '*' ```::or even It's simpler like this (less branches + takes into account `collection_input == 'pkg_name:'`: ```suggestion name, _sep, requirement = collection_input.partition(':') collection_requirements.append((name, requirement or '*', None)) ```::No need for an intermediate list in memory. ```suggestion if len(p for p in collections_path if p.startswith(output_path)) == 0: ```::Another `return` statement returns an integer. I think it's not a good idea to mix up return types and use `None` here. ```suggestion return 0 ```::Probably a typo: ```suggestion Publish a collection into Ansible Galaxy. ```::maybe? ```suggestion api_key = context.CLIARGS['api_key'] or GalaxyToken().get() ```::```suggestion from ansible.module_utils import six urlparse = six.moves.urllib.parse.urlparse ```::1) No need to inherit from object explicitly due to `__metaclass__ = type` set above 2) It's nice to properly support all stringifications ```suggestion @six.python_2_unicode_compatible class CollectionRequirement: ```::You don't need a copy of the list in memory here. Better use a generator expression: ```suggestion versions = (v for v in self.versions if v != '*') ```::OTOH this all can be made way easier: ```suggestion return max(v for v in self.versions if v != '*', default='*', key=LooseVersion) ``` (no need for sorting, faster)::But since Python 2 doesn't support the `default` keyword argument, here's a cross-compatible shim for you: ```suggestion try: return max(v for v in self.versions if v != '*', key=LooseVersion) except ValueError:  # ValueError: max() arg is an empty sequence return '*' ```::eliminate intermediate list ```suggestion new_versions = set(v for v in self.versions if self._meets_requirements(v, requirement)) ```::str.join() accepts an iterable. You use a list comprehension which first creates a `list()` in memory and then gets fed to `str.join()`. You can use a generator expression which will gen unwinded by `str.join()` internally without consuming memory for an intermediate list representation. ```suggestion ""\t%s - '%s:%s'"" % (to_text(p) if p else 'base', str(self), r) for p, r in self.required_by ```::You do iterable unpacking in all places where you use this. Maybe it's easier to just use accept an iterable rather than a bunch of separate args? ```suggestion def _urljoin(slugs): ```::Does this support `pkg_name >= 3, < 4, != 3.5`?::It seems like you could simplify things if you had an operator map and do smth like: ```suggestion import operator ... op_map = { '!=': operator.ne, '==': operator.eq, '>=': operator.ge, '>': operator.gt, ... '*': operator.eq, } ... pos = 2 if req[1] == '=' else 1 op_map(req[:pos])(LooseVersion(version), LooseVersion(req[pos:])) ... ```::> file ... is not a ... string This sounds odd. Maybe smth like `doesn't contain a JSON document`?::How about: ```suggestion if not os.path.exists(file_path): continue ```::Typo? ```suggestion files = info.get('files', {}) ```::No the files entry contains a key called files which is what we want.::Oh. That sounds hard to parse. Is it in the accepted standard already?::```suggestion while resp['next'] is not None: ``` ?::```suggestion return False ``` ?::`ansible.module_utils.six` is a package, not sure you can import from moves like this.::> Also, shorter lines improve readability in general, allowing readers to stop jumping back and forth with their eyes and just read the thing vertically w/o losing the context. Isn't that why we have a line length of 120 chars :)::It is done because I am using the `difference` method to find keys are that don't exist in the valid galaxy.yml keys.::That's a bit too much for me. I still need to loop through the entries anyway for the list keys to convert a single string to `[string]`. Prefer keep the format the same there.::Mainly because I didn't want to deal with stringifying it when it was needed. Honestly I just prefer it this way and because it's a test I don't really want to deal with the other way. Call it lazy but I prefer just dealing with a string than the object.::tmp_path_factory fails on Python 2 for unicode strings as it just conditionally tries to encode it as ASCII.::The author is hardcoded to `your name` right now. If that changes we would then look at it but for now it's not needed.::It's just a byproduct of how I store the `FILES.json` object in info. I'll change the first key so they actually differ and remove the confusion.::Won't work because we need to run the loop at least once. If the versions doesn't contain a 2nd page then `resp['next']` is None and we would never pick up any versions.::Seems like there is on Python 2.7, fails without it.::Why are you suggesting this, [docs](https://docs.python.org/2/library/tarfile.html#tarfile.TarFile.add) indicate that it should return None if you want to filter it? Even so after testing it again it does not seem to be needed as we run `os.path.realpath` so no links should be detected here.::I've added the decorator but personally prefer being explicit about the base and will keep `(object)`. Edit: just to keep @abadger happy I've already removed `(object)` :)::It seems to work but I've changed it in the latest commit based on other changes.::I was originally trying to do something like this but didn't know about `operator`. Will give it a shot and see how it goes thanks.::Doesn't look like that's the case, maybe I've change it in the last commit but I see only 1 instance where I pass a list, the rest are direct args.::Thanks I've never knew about partition, looks a lot cleaner.::In a very limited sense. Seems like `LooseVersion('1') < `LooseVersion('1.0') == True` and so on. So things like `>2` will work with packages `2.0`, `2.0.0`. This is pretty much governed by LooseVersion and if we want to expand on it it's probably best done in a separate PR. This one is already quite large.::Added in the latest commit with a rate of `1.5`. Will wait for a maximum of ~60 seconds before ultimately timing out as well.::@jborean93 The  typical case is just a README.rst or README.md in the top level of the collection archive. At the moment, 'readme' is a required field though. https://github.com/ansible/galaxy/blob/devel/galaxy/importer/collection.py#L102 But the galaxy code looks like it is preparing for 'readme' to be nullable, in which case it will default to lREADME.rst' or 'README.md' in the top level dir. https://github.com/ansible/galaxy/blob/devel/galaxy/importer/utils/readme.py Also note, that there is now a max filesize limit for the README of 512k (https://github.com/ansible/galaxy/blob/devel/galaxy/importer/utils/readme.py#L37). Though I don't think that needs to be enforce by 'build', since it will likely change for different galaxy servers.::At first glance, this seems to conflict with the idea that Collection versions are always semver. Is 'version' here already validated to be semver compatible? Does LooseVersion handle semver consistently? Is the 'version matching spec' implemented here consistent with the one used by Galaxy? (which at the moment at least is just the implementation from the 'semantic_version' package https://python-semanticversion.readthedocs.io/en/latest/#requirement-specification)::Are there tests for error handling of `ansible-galaxy collection install some_namespace.some_name:1.2.3.4` or other invalid version or version specifier formats? ::The code right now just relies on Galaxy to handle the semver strictness. It doesn't validate that the version specified matches semvar and just relies on LooseVersion. This is mainly because I cannot rely on the semver package to be installed and this was the path of least resistance.::So talked about this a bit more internally and the prevailing thought was we don't want to add any deps and want to make this as simple as possible. In the end we will not validate the versions but just leave it for Galaxy to deal manage. A potential issue of using LooseVersion that ordered a prerelease string (2.0.0-beta.1) as newer than the actual release (2.0.0) has been fixed in the latest commit. Any pre-release versions are filtered out unless an explicit requirement for that pre-release was set.::No, it just uses `LooseVersion` so it is quite liberal in what it supports.::",00339d7e68df0d77e624e2f82971ce5be9950f5e::84b08c4813dca64b0c3499511de8583a923730b1::b9ecb818f32f5b62e607b648b48ff6b56406f7eb::20a6cfceaf3c56ac23972007e64b39b5bed1cfed::b60c6079441931740f1dbc2ec36bbd9a961f915c::b61b30e5b705fdc66498e2a7e770fffa4ecb0a7e::cd524ca131864111ed1aa226b029a26093153a30::0051a1e2f3c5d3c517d0ed708721104bad202fd9::ad057a8431b4bfe8c01c4d247a1abc48dfebe64c::648a2520707a5fd56a1add386576fbf1d6fac4fa::9d35e5db98df69e3bca0f39c28f762c1b14c021d::59233d5ab61e042da31059b07a6f3cc2a1e447f8::6839ff51974106babc989b7d33fa4d4b1fcbfe72::23805135131384ef381907fd9f16d80ca8cbb549::343e9ae360efd07c5b36108b9685a673521d9363::596710a272dfaceca4fd81c4e2650da219bcedcb::d3d33dd30840cd21e52dbe84bf3f1211cf13db3a::acced7712696f57e5653f83657ac0f92dd5574eb::ccab32f72a1d28d4c4c4472d2b50aa1bce74adca::bf2224ec6eb06cc9d6ca8bf1530b3828583f43c0::89ac465879fd19ae8c311dde5ad681f8dd5a2a0c::1cb1edb335af23efb5710dfbb0756fba7ac384fa::d5577e43d8dacb3adba02056fd793f6cdfb9e0f4::
https://api.github.com/repos/ansible/ansible,56906,fix-hcloud-volume-idempotence::devel,0,merged,affects_2.9::bug::cloud::community_review::hcloud::module::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Fixes #56905 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> hcloud_volume ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` This PR needs to be backported to Ansible 2.8.",5646ba41cd3acb6043f24d5a26e2ca054d0abd93::
https://api.github.com/repos/ansible/ansible,56806,patch-1::devel,0,closed,affects_2.9::bug::module::needs_rebase::needs_revision::networking::new_contributor::python3::small_patch::stale_ci::support:community::support:core::traceback::,"##### SUMMARY With Python 3.8.0a4+, we get the following RuntimeError in Fedora: ``` PYTHONPATH=../../lib ../bin/dump_keywords.py --template-dir=../templates --output-dir=rst/reference_appendices/ -d ./keyword_desc.yml Traceback (most recent call last): File ""../bin/dump_keywords.py"", line 49, in <module> for a in oblist[name]: RuntimeError: dictionary keys changed during iteration ``` Python change: https://github.com/python/cpython/pull/12596 Downstream bug: https://bugzilla.redhat.com/show_bug.cgi?id=1712531 <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docs? This has already been fixed in 2.9 and devel::If we want it to work on 2.8 and previous we'll need something like this there.  However, 2.8 is soon going to be in critical fixes only, so perhaps this is not needed there.::These two have been fixed in 2.8 and more recent.  2.7 is currently critical fixes only so this does not need to be backported.::",702e044b90fd0a0524fa4574648fe7dae4d4f2fe::
https://api.github.com/repos/ansible/ansible,56783,urlencode-comma::devel,0,merged,aci::,"##### SUMMARY It appears ACI fails signature authentication when commas are encoded in the URL. It expects its signature to be created with commas intact. Since urlencode doesn't support *safe* on Python 2.7, I am reverting the change to urlencode the query_string. This ought to be backported to stable-2.8 to be included in v2.8.1. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ACI modules",eb1b8ac23edc307ed1771796673a73663fca0215::
https://api.github.com/repos/ansible/ansible,56168,k8s_raw_fixes::devel,0,merged,affects_2.9::bug::clustering::k8s::shipit::support:community::,"##### SUMMARY Ensure `wait_condition`s with `Status: Unknown` actually complete Return k8s object after wait rather than k8s object before wait when object is patched. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME module_utils/k8s/raw ##### ADDITIONAL INFORMATION Candidate for 2.8 backport. Should we also return one step up from this conditional, in case they didn't specify a `reason` but did specify a `status` of `Unknown`?::Or change to `condition.get('reason', True)` ?::Could also be more explicit with `condition.get('reason') or 'reason' not in condition`::is this removed by intention?::ah I see duplicate code...never mind::",18b7abca3c151d2577ad2b832e282181e6dcd35c::
https://api.github.com/repos/ansible/ansible,56166,allow-python-requirements-with-dashes::devel,0,merged,affects_2.9::bug::community_review::module::support:community::system::,##### SUMMARY ``` python_requirements_facts: dependencies: - kubernetes-validate ``` should work as expected ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME python_requirements_facts ##### ADDITIONAL INFORMATION 2.8 backport candidate,5b3305c71505ffd4b0fd7dc5a6a17a4d5cb4cd77::757a73653df4a98959ef9918e90f2b5bcddce3b6::
https://api.github.com/repos/ansible/ansible,56045,devel::devel,0,merged,affects_2.9::bug::core_review::infoblox::module::net_tools::networking::support:certified::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Bug fix: Error while trying to create HA member and adding management network details using NIOS member module <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> nios_member ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` @krisvasudevan I think you are trying to check if the `member_spec[key] is not None`, if yes plz modify the check as: ```suggestion if key in member_elements and member_spec[key] is not None: ```::@justjais I've committed your changes. Thanks for taking the time out to review this.::@krisvasudevan changes lgtm, once CI passes I'll merge the PR, also as suggested in mail plz create a backport PR for the changes to take effect in `2.8.1`::",56da2486268380295003fc217c8e4c0a43f3ab93::f8fee2eafee6144c614e27422ac62ba670cd0050::cb6018a9cb466b05c70568347b0fd03c493678e5::
https://api.github.com/repos/ansible/ansible,55862,PSLintFixes::devel,0,merged,affects_2.9::bug::module::needs_revision::support:community::support:core::test::windows::,"##### SUMMARY Handles: * PSAvoidTrailingWhitespace * PSAvoidGlobalVars * PSAvoidAssignmentToAutomaticVariable * PSAvoidUsingCmdletAliases * PSAvoidUsingWriteHost * PSUseDeclaredVarsMoreThanAssignments * PSUsePSCredentialType * PSAvoidUsingPositionalParameters * PSAvoidUsingEmptyCatchBlock * PSAvoidUsingWMICmdlet [Original errors file](https://github.com/ansible/ansible/blob/devel/test/sanity/pslint/ignore.txt) ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME windows pslint errors ##### ADDITIONAL INFORMATION More to come :smile: +label: windowsis trailing ; on the Out-Null needed?  ::No, in powershell you can leave out ; , but im used to writing with and i guess that one slipped::any idea what the 'i' at the end of L81 is for? - it looks like it might be unintended to me.::I appreciate it was already there before!::The changes in this module should be in a separate PR as they modify how the module behaves.::This is a change to how the module behaves, should be in a separate PR.::This is a change in how the module behaves, this should go into a separate PR.::This looks like a change in how the module behaves. This should not be part of PSLint fixes.::Please don't make changes to module behaviour in this PR.::Not sure if this should be part of this PR. May need to be discussed separately.::Wrong indentation.::Honestly, I just added it on the fly since it seemed the most logical thing for that section, I don't mind removing it of course::Why this is considered a behavior change? it just inserts the vars of that function into it.::Same as with win_domain::Same as with win_domain_controller::Because before this wasn't done ?::This was one of the problems with pslint and it is the same implementation just with CIM without any functional change::It's not wrong, but it belongs in another PR where it will be discussed/accepted on its own merits.::Fixed::As I said, I am not sure. Someone else has to verify this.::before, the same line was a global var outside the function that is why I don't think it should be considered a behavior change. If this was a module it could have a lot of repercussions::removed but for the record, I do think a different PR just for this is an overkill::This would be much easier to review if these entries remained on their original lines, since we want to make sure new entries are not being added.::I moved them to the end to have a better order in the file for future work::Should also add the exception message, e.g. `retrieval: $($_.Exception.Message)""`::No need commented out unused code, just remove it altogether.::If we really wanted to do this (and I don't think it is necessary), make it `AnsibleCredential` or `CredentialObj`.::Remove instead of comment.::I wouldn't add this warning, it just means there wasn't a forest that was found which is expected in some situations.::To add to this, prefer not to make this change, especially for an untested module. We can look at this in a separate PR if you wish.::I agree this shouldn't be in this PR, keep behavioral changes to a separate PR.::Set-Workgroup looks like it returns something, we should case piping to `$null` or using the var.::`Join-Workgroup` can call `Set-Workgroup` which can return something, we will still need to make sure the output is put somewhere and not returned back to the controller.::Best to keep this the way it was before instead of making a change that would affect the git blame.::I would leave this as is for now. We need to look more into win_find and how it enumerates but prefer to do that sometime in the future without adding more warnings for now.::I would leave this as is for now. We need to look more into win_find and how it enumerates but prefer to do that sometime in the future without adding more warnings for now.I would leave this as is for now. We need to look more into win_find and how it enumerates but prefer to do that sometime in the future without adding more warnings for now.::I would leave this as is for now. We need to look more into win_find and how it enumerates but prefer to do that sometime in the future without adding more warnings for now.::I would leave this as is for now. We need to look more into win_find and how it enumerates but prefer to do that sometime in the future without adding more warnings for now.::Remove if not used.::This looks like it should be in it's own PR with a changelog and subsequently backported.::If we aren't using `$type` just remove the call, we shouldn't be outputting anything to the output pipeline unless it's the return json.::I can redirect to null::I don't think this is right, I was not aware of `foreach` having an `else` statement in .NET.::Why was this added?::My comment still stands here, `Set-Workgroup` returns something and we should be redirecting it to `$null` to no confuse the json parser on the controller side.::`Join-Workgroup` can call `Set-Workgroup` which returns something, we need to redirect to `$null`.::rebase fun - fixed::no idea - removed::aren't they always :)::and my response too :), changing it breaks the CI - you want to keep it or should I look into changing the tests? ::changing it breaks the CI - you want to keep it or should I look into changing the tests? ::Hmm I don't see how based on looking at the code, do you have a link to the failure? I'm just looking at `Set-Workgroup` and the return statement is on a newline but still part of the failing brace so it doesn't even look like that does anything https://github.com/ansible/ansible/blob/66e0041b3ab5d24ae51f28938cf6a90af60374e6/lib/ansible/modules/windows/win_domain_membership.ps1#L158. So maybe just return that line from the function as the module will exit out when calling `Fail-Json`.::https://app.shippable.com/github/ansible/ansible/runs/125201::Ahhh, it's because we call `Fail-Json` which outputs the return json in the output stream instead of stdout. While we exit it early the json string is redirected. Ok If you can just fix up the indentation of line 158 and remove that return statement I think we are all good.::you want the function to not return anything then?::Yes, the `Set-Workgroup` function has the following line https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/windows/win_domain_membership.ps1#L156. It makes it look like the function returns that result but because the brace for the if statement is placed after this call it is actually being run after `Fail-Json`. `Fail-Json` stops the pipeline so nothing will ever be called making the `return` line unreachable. So right now it works it's just horribly confusing and leads to the conversation above.::removed, let's see what happens - fingers crossed::So now that we've cleared up the confusion and found that the return statement in `Set-Workgroup` isn't needed you can remove the `> $null` part from here.::Same here, no need for `> $null` anymore.::done::done::",c319bf36dcff5b5256241529898b671f74a47ede::54ea5c5ca58d34244cb744eab849c084c3c8c5a0::48ee62906fa61918373e2a2ab869839ab767e3c3::31028a89ac62cd0d275d437ccfdc984d614862bf::a67779f12ffb5b0de7a37a8cf370a74f0844787c::c4fa34fbbf16c4f49a402fef6a298e24c224574f::8a40109e59aba486fb88af99a8d7aaac59d0d664::7c630928346efbde75fbe4b112faa95fc23bddfa::ace8dbdfe9ae5a7ce3837b28c706e649b498d381::02834cfdee702014913868b21c35d0646791d433::9bf19cef9c71ac7744ee6ea2e0db80ffb66b6b92::162eb5a2ad55eff87d577bffea750076d845be17::6f8c9f78e66951d6dde71b1fe93d8950e6950e01::73ee7d98de5f741bf5899ab28257848fc2983849::0746d0ee2b5f16b4d063a0b8304c508061b4d649::3ca09be0267769f2a3e1c0a61a563d56b2c8cf8c::dc3ed3d80fd15f2876a3424b7fe69c963a17be2e::66e0041b3ab5d24ae51f28938cf6a90af60374e6::8ac8376ee8ad17a136266cbab47de4b9e08a8651::07b7af06df332e11febe7a31e06a83e9357db02b::b451b9bfd8cb58f9bd96c247853e96afc3a83631::d03323e1d4e3b4554077dc73175db4f527232eea::067f8f2304d1e61dd935b587a61dd08924fc1650::7d1c44e5425f6f8faa5a058a6b599a0979339eeb::
https://api.github.com/repos/ansible/ansible,55853,skip-tests-with-unsatisfied-deps::devel,0,merged,affects_2.9::bug::core_review::support:core::,"##### SUMMARY Tests for modules or other plugins whose deps fall outside of ansible's core dependency set need to check whether the deps are installed and skip if they are not. This PR skips for several tests which were found to be running even when their deps were not installed. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION backport to 2.8 when merged.",07a6778b3bd436210804ec4a85ede0d91509a95b::1b4b6bee8c2c902ae43a149e41cbb0fa454477ff::8c9feaf3c1efda4c3b4ed3b331b2fc593a202152::9d6266f9aa6c7a39f61e5ee258cd98928d932a9d::
https://api.github.com/repos/ansible/ansible,55716,ec2_instance_int_volume_size::devel,0,merged,affects_2.9::aws::bug::cloud::module::needs_revision::stale_ci::stale_review::support:community::,"##### SUMMARY Makes sure `ebs.volume_size` and `ebs.iops` are `int` to avoid issues with Jinja2 templating Fixes #55704 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ec2_instance.pyCan suboptions handle this? It seems preferable if this was defined via the argspec rather than casting to an int where used.::I have tried adding the argspec validation, but it doesn't seem to work, have a look here https://gist.github.com/Shaps/b0430ce00787cd62a14bcd5b16358fc6 for the change I have made. I just get the same validation error back from boto?::Seems like a bug in suboptions to me - can we raise that?::Sorry for bugging, this is now in devel branch, but what would be needed for it to make it into a release version..? ::@dnmvisser - it will end up in 2.9 by default, but to end up in the next 2.8 release, this would need backporting: https://docs.ansible.com/ansible/latest/community/development_process.html#backport-pull-request-process You can also just use ec2_instance from source without updating ansible itself: http://willthames.github.io/2017/12/12/using-updated-modules-with-stable-ansible.html::@dnmvisser I've raised the backport PR in #59687::",9ef60c73a5fe94e7a7c7c67c5f7a24d95ad9d5aa::ba311900ba2437f32c02167b796f60043cc5cbd8::b923da574bc41084605fec50514633c13b9c12d7::8ce2b0599543b25c2d594e7279c6ceea892fcddb::
https://api.github.com/repos/ansible/ansible,55591,docker_swarm_service-fix-secret-uid::devel,0,merged,affects_2.9::automerge::bug::cloud::docker::module::shipit::support:community::test::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> This PR fixes an issue which causes a task failure when options `gid` and `uid` are used on `secrets` or `configs`. The Docker API expects them to be strings but the current implementation forces them to be `int`. I also added some documentation to the `mode` option on `secrets` and `configs` clarifying that they are expected to be octal numbers. This issue is also present in Ansible 2.7 so we need to make a backport to that version as well. I think the `mode` option is also problematic in 2.7. Looks like it is passed as a string to Docker when it expects an integer (octal). This is solved in Ansible 2.8 because we now specify the type on the options. Fixes #55581 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docker_swarm_serviceHow about: ```suggestion - ""docker_swarm_service - Change the type of options ``gid`` and ``uid`` on ``secrets`` and ``configs`` to ``str``."" ```::",05b91a96069681e840d371a90744f34828af1bcf::fdd23cf632221c675a78d7a42fa7317697b446f9::4bdd443d75e51b9889a0c130d0d419c41dc0f822::66b02dbdc64ac878a6ec2177e5405f58ff42110d::4008c0e287497636a5337de23856afe890195aea::
https://api.github.com/repos/ansible/ansible,55514,connect_to_db::devel,0,merged,affects_2.9::community_review::database::docs::module::owner_pr::postgresql::support:community::,"##### SUMMARY postgresql modules: move connect_to_db and get_pg_version to module_utils/postgres.py ##### ISSUE TYPE - Docs Pull RequestWould it make sense to move build the `kw`s inside this function? I think we should be able to move the following section into here since we already have the module so it should be all we need to build the connection details. ```python params_map = { ""login_host"": ""host"", ""login_user"": ""user"", ""login_password"": ""password"", ""port"": ""port"", ""db"": ""database"", ""ssl_mode"": ""sslmode"", ""ca_cert"": ""sslrootcert"" } kw = dict((params_map[k], v) for (k, v) in iteritems(module.params) if k in params_map and v != """" and v is not None) # If a login_unix_socket is specified, incorporate it here. is_localhost = ""host"" not in kw or kw[""host""] == """" or kw[""host""] == ""localhost"" if is_localhost and module.params[""login_unix_socket""] != """": kw[""host""] = module.params[""login_unix_socket""] if psycopg2.__version__ < '2.4.3' and sslrootcert is not None: module.fail_json(msg='psycopg2 must be at least 2.4.3 in order to user the ca_cert parameter') ``` It would reduce the duplicate code and might make it easier to manage in the future, since every module is now using the `postgres_common_argument_spec` they should have the correct params too.::@andytom , very good note, thank you! I should think and try::@andytom , I think it's necessary to keep kw because we return kw that contains connection params as well.::I suggest to merge this PR and after that we can think about optimizations.::@andytom , I made a short note in [#PostgreSQL](https://github.com/ansible/community/wiki/PostgreSQL). The first aim of this PR is to move connection_to_db and get_pg_version to module_utils (as gundalow and I wanted). However your suggestion is very interesting, so after merge this one we should think how to implement it safely::@andytom Good suggestion thanks. Let's get this merged and backported then we can look at further improvements.::",a1ab9dda33f1b4b39140674bc84b606c071ef663::cb8f8d5224756c1b2750f9f15ce95b17b0cf757e::664fe35709319b0c56bdf8b83f3ba686699ac4dd::
https://api.github.com/repos/ansible/ansible,55427,patch-1::devel,0,merged,affects_2.9::community_review::docs::support:community::,"##### SUMMARY Add missing changelog fragments for ""Introduce 'insertbefore' and 'insertafter' to specify the position"" #44811 Should be backported to v2.8 ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME xml ##### ADDITIONAL INFORMATION N/A",fc0895ea497f50e90497814ff8b24ff630c26d04::
https://api.github.com/repos/ansible/ansible,55034,backport/2.7/50183::devel,0,closed,,##### SUMMARY Improve the documentation on gcp_compute as a dynamic inventory plugin. Fixes parts of #44404 ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs/docsite/rst/scenario_guides/guide_gce.rst ##### ADDITIONAL INFORMATION This is a backport of documentation improvements done in #50183,f759b5463b5814a07235dbed3c0c760b938968a3::51cd9c991bab0473c5a0519995de7badb855f7aa::14bb798052daac398f6171f957c050314ca35655::a22f46bacf8c743a2103a174f040e393f9ed2723::50d06d9889fbc14b19850423122c6d53ed45ee25::6c61fabdd12d05a0fa5000a279dd3ae7b22beb4b::34113f6cc5b91bdeca77187e07b010f555d234d6::c372d95c69773bf41c3ad6b10b6515b44c8bdce6::0d5f083a5289bb7c43c9e7522974f260b7241e00::97a3e4acc04193d25d316e47e81f39ee8c76ac87::30824c92e6954daea4d47794ea652467c10b3d9d::67606bfa66e9d86353575ee80461e14b82f5b093::1d3f29d4be0b1c90f66c34736f38887904cb0264::7b0c342dcedaa63facb14f8d2f0769fd1dfdc5a9::03bc4be1c34a5051488abe844d21afe1df76060e::af977daec7867a047ae4c4beaf5562f707f8fa08::aa37d4bdd79403d291d65338a7be9e889cd0179c::3bf030ddccdff017392d368b07d4c25d3e3d880a::ce033c676269718fdf754c3c8b59a1191c13e6f6::9168e6844ad7b228da017f6a0e95e6779be47b01::6ce98295c1c29fab0453d357d6d332277a5fc7cd::22c4745b9605562062d48e8d08f18361404dffbf::483aa6421661e504706d26b905e9d9b43c90caf1::d064534df62f5f7258433c1adc6c9b92f4d05448::d56d7997c41b73305df40f5beb5f103433bb4571::06505fc521bc8cefb6264cf827c2f2faefda7a53::aedad64c8f8ee3e6a833ccda3ae954e8aeb824a3::bdf7f42b7c879c592a3c5fe7fd01fde12e178b2e::7589d496fc719c13945262d3a231260fa11f0d17::ac3a3ce599fa8e2eb9ac6cf06e2d06f94d841a73::ad71a9a7edebb2eb6866ca158ae57a8d0d68ca21::11a2bafa2191bdcf9f059d4eaec6ebc7a3ed17cc::bedfa3f3ff29c6567240a48a0fbdea41527a6c63::fe795344157640eda8ea1cd001f72ff34a262601::90203d0a1114fec449eccd38dcdb1cf0609bc1bf::0708c80c409084604154ef4e844fe17034b933fc::718e0111686b42d74ac1767ac983eb6a2c6a9cf9::a200cfb07f5c0244223bd252e6d2ef2fd35deb1d::1492f46d789262180a6b2e00dc3223c354171f59::aa73f8ea3c2615b6918f11c0d2706324fd615817::df359e036c095c67eca66bbc20d067e2fe5382b1::ec6a30b9ca4e92f99c8a279fb955651705fe8bb6::e7e47ca1fcd42dff151ca55501f38b3c65eb61f6::0093b699351f1395b5e66ad5ee04fbb72205b021::c3271befda9cda053c9caf2a4d2d4e0758fdcb79::7f33c7def5c3cf308b02435270cec6e52560b6a9::cc5088c9e197996f95d2b7cc04cd767157d76ded::03100cb647334b49a27a370a4e0f640b94eed4da::821f43eb9a0967e15fc0b8c45f5999dadf14032f::6438ab2c463b12b78e302f78b3058cf1d0bb7051::7918323832cc478220a03f97ae9510817cf3feb4::396a2f74717477d80600450e2b7e45349d7b5110::b7b4182bbd3eb9f34116abf559bb3358042da73b::805c9fa7125344df08370fbf79b1d914e31186a5::b97caade8a625e749e370a38fc6f0ca70defe268::dc3b7aebd619b9f3add6ceff79e65bc623f5c711::7fb15491527134abaa286bbe425e77440ab82c35::b159fc38ceecf04886d1641142544392f7d6e639::bbf2d6b637d6413069a88c09691d938d7817d3de::e531356d07aa61cbe022c2baa8e3fe1fd32f8fef::3929cfea85cf2569e28cb545e2f6ee0f384266ed::7ab05d551f75c671b77c165d64c16e7b21b04fb6::f8e29c81f13df3bc04e98bead22070e6df82bc44::2800f2327450033b83fbc0b1ff2f1d0ccef178b8::f85cd0b0c2f163545fbb6916d9865e8cf1d5fa35::0fed03fa850c09403187362c9aa4f5853ebeee1b::0e4f07b5ae96cd8ee40810d2a602d894d49029b7::40055b45073cb142fa55c607baa864f3b6bada72::474d76c0dde91fa446d0aeb4fa267e28ff471077::211fe600a4cb4833df2c6d13e7a2108d3ff6f05a::a17d9f1cc69a7efbc7aa8c65cac9c8f4c18e5c69::cb844ae32b896f116bde9f5c3f76a096fd666ba5::cf6c7658714402ff320e111d268fb688d23ae0b0::fd881d9407a0973a3b3c24276c37bfb48b575505::bf7597efe1093c90019da7e4b416742bc624defc::773b20886c532947049774cfb1b07b5b42ab5cbb::a998c267c2ad2ff93641471d84997ad78dfd1e3d::24318d51e5ea4f6e0c1e21fa99b73115e152c967::ec8c1cb34aa00bc940ffb8efd4b7ba5a3feb5ab2::f80e9070a537475405221a98c468fea4ce2a66c9::f1566f07db07944d5493ffbebe68df659500e8df::eb1f8e60e02d040db267b627769f76300900da73::ac4447f2c4c46961385e2099607e5acfa7caa7e0::573a1106cd82caf9395bcf9721c1af2eae49aff7::b8e8e2baa0ee45ab1b7727583df0dbb9edd207f9::cc45ba277c58cedebf75e004054288dd5c91e267::bcd1289ff22322b100f9e8af6dd98f8e01816443::e7cf6b7513a5e502fffe7c73dc6f105762b16a69::2d4096daf0cbfeaac579a03c756f387b98047941::6cef018b71354695d9b01adc3d8ab9fc2288d3ce::8fba0ab1996ac13917041f3a2c796d82181e4cda::affba46115c76b80b468011d94f22eed58efecc9::6ac135e8b3ebef7f744fd1aa0c30527a9fcb4ecf::788ba0b911a34ad846d8f14025db712d21fac439::441e4ff99f1a2e9c0b4e921d5e17818fa9b6e5bf::6c131061a0b26552b0c0536605feb0572c7a4e90::a79523acff6ca8e689e7a119c473d2a763940c7d::8de92123f3dfbdc0e5c94716986718faf5e7bb4a::096b3f8eb990a69c3e50f16be031983f96e0c8a5::f56c3fdc89b496ba0d5665366d8ba0f97d822b03::2c1381aeb5418471f87d645baac9fed0bcc3d4f6::88106ce626806455ccf8380d0e6a5a82b381a578::2aa96cdec5910392360323310a2156806188c6bd::6bd7ef48388fabd72d763d7018de9d523d8a8c09::8ae9f99979c2c2e2ee781bdc0e970f8d0d8b406c::23d9efc1f37dd86272f22c3fa25c5c123e5682cc::7a9e7daf4404ea1011b9f300de4d3547d42a4f4c::aed59e5695cd31d35c78f2a88d923618e446ca31::2ee64fd50790556d63b11290070400a296e12c13::7c500a4002ac9adf72e2dc538c65e924a86afd2b::c4144398bb7bac2021acc0197864abd06b3bae84::05f7fbc93a87364fe2dfa0ae719c29a42f962b36::25ca40de8827bbe16e4393286cd6929a6f88a36e::8b9c96aad520572894c89220479e97d08693a879::9e40404d9aaad8294b79de34d9eb534ee390f5d7::5d4a777d16fc992333137d477d8d23098393b729::9c7d36ccb517319e5e8bf8c448a7bea67f840c32::d44f80cb925703fa8bad915e03b5a4f59233efa7::0b453abfa4b8ec4b9948b6a0c48bde6ff7b865c2::bded9a1d65741782c2c8bf20dcaf63a4f731d07a::59beb460d82103ace61f9a3b64f1ec964739e4fb::597db1dc287f39329ff0e9689080e471a91726ec::122e73d062f33ec4a39deeae34d9deb96d355a0e::5aabb5ea026be09ddaaff6164e0233b954c3bd2c::03ceec9c78ba9eb68783d2524c8e5dc9e58008ca::72f4d1b22b4060066fb0569b76aa74707ce6d44c::2f91d399ec17348c80f77c3d889e23dc6ee1523c::2f0b727acf10c0d7053ecec14584b235ea9a5e24::ed12e93f73886b155c556caa35cf6d7d79183289::bfe072c9dcb6dc1739ea86f46f6f47c0536377c6::8bb830c1b487d39b6645463c25b3ea6f2e860f63::ba261abe29bc244dcd18e14747e24f77d27276b5::94b5a03b0ecf0180fd51ed5840918b3ab67e8812::3d351c536780b375ede91e06f6616cb11aa7466e::3eccd83891c2f91baf12ed91a33d677179201b4c::3380defd677eaa9842de244deff60476efb2fe51::96aa6babc1cfaedc9bcd6c0d4b96d2a8720f5ae2::63b279460707c06864badf7c198aa87f35a24641::82ccbd939c3f8a0fee6eff580db09c3289048267::9135dbd820582a98ecc69c1bb87e0b04f0405122::c4748fd011d14dbdde83fb3a7556e5186de26635::e0294275d7945f12584cb4fad3e460c295ffb445::edd7e53b8b762158122d5cc883a007ed4f96c5a6::b658139d63c03b538c04f61c18dba94dd54d623c::7e83675227d2d49ea4304b626c3e698566b1e20e::a32e8c42b94b8d4f13e690885577499a95afd986::3944f516777de479bd8f127f4a3fe82f8f6219cb::c93bfe9931c90c6825907ba5e15d4906fc60c1d3::07e4ae0806f96cc37d1f223205ffcbedde0a7967::b84d9a8365430795d0a54d1f7c27c686d504e2a8::2773e215f7281eb4e1af456e437c41ec8545b398::5769d46aa367a1f915ef00e03adb8e56cabbd106::ca63a2a96868fd8e262b34af8eded35238c89d0e::091c7c46d3ca09cae7612c93305c8e4f572dde22::bd15658f2c5473ed9302758ba4ec124960b9c28f::15c5d8525109836d9a61121fe8bac18abb56d9af::b4cba61b6725e2d2a9c9039504648ba552abff6b::ac93b3d5e7742b88d8565200ca75f9136367c594::0a03d0ee0efc4c4fd63d7b121de40a4da4b5c24a::e0db8e6efbc2ac51d14b5e9503f067637a2882a3::1b14a2d94610479a022f0da94b02c86ceb77c54f::abf5f7583e6d35fa1e9121cad15d40371b999d88::81d893d6eea32ccb3e1464c1440b2105a6313f01::166ef9f66880a5fac0bf5ed514b8ec804d25bd6a::f7a1911758ff65b216d83f600184889e8169d0fd::4840952f3df148d85cd063a1b7d21870cb227a38::799b51ba0b067c5cf97408b1b5c10caa94a93a7f::aa859597b1d02f0fb952e21d87d2bbc0f58e88a0::833b29b39cc54dad1f67813b2e0492e996e52f06::d8a75faa53e1c00bc2be8b4dc267b53353e5ddcc::1cd21e2f508f030276758d4fc882e8788224a043::b0c6499b60d471a0fedf6a22806a89e9a92883b0::73bf34ed414cd64a458ab58ddca04109be769fd5::f9e6a8999354c4adc2f8a77e36472a16c9aa0323::edfc44ec51ebe15483786cc72f8db4f3d5584486::19385f1ee172223a39fe89d9c183a71091fcace5::c8914a1678c8117304bba1a883dd37751a07f88b::ee3a7033fd7a2e1849ca28a0ba120e4576b48a87::0668265bdb955507fc4b910233289317cff9157b::16be92f4808ba377a79d78d2b072b627fdfc9d57::c37646cf56968257c5c0e0f73774e2b960525368::22c540a7c5044e92cc49da3c7de13737842285e7::a11a56f27d471631919e26a49cde31ade168e2e7::7ef076db0e6f1578c367733a24dc4e7f9ae0a0d5::05772233ad1130b392f51cf93338d182876f54e0::8856a01eab863a37df40252f296009744ba42674::e8dcf0f0889776b629d01fbc8273f98725d75085::1d55f4a4e546415b6c10cda6e076f1a5dbc107fa::a4dc6b78eb9f8959b0cceab2ad0d3a02750ddec9::dedd76899aebfbf2cf715afd23f11c83affd13bf::e55cd56bd96c8540606b13698a1debfedf0b4e92::3d5bf87b9de06009d360d489669b1d1783a19d3b::917394110091748340be21a5d838466c87e1d5ee::6e4c344a6bcbad12edfb03d01517ab390634f35c::ae5e6b5aef69fc0f9b91cc94d47f57d3dee46965::0f4c6793f92dd2cf9330b12841237d73a4c3846a::3546594331b1461451ab61bd849b9cb1aa531b1b::e6bf08d9ec50854b8060a76c9f8c71cd4288e812::59000d01b67f262f2b5c1f958dfce22a65592330::1cc5196922caa0a4328052900452f7ed10aee484::3c4affeafc13089258a608bb5b1d92d1c16a8f5d::e31620e9db8562ebbd2bf567c67678f2b1e274e0::08dbeff2045429918b1280ba8b22a64c820e5a17::78844c800fd2a565d77ccbecdab0d011d0f72c6c::13ab3a4f3d583f0c2c3b86ffb36103ad388c16e6::68c5555cc5333b5aa4e80f2f6884cf88d3853f01::8a05e372988acb7cf71d5a65501772d143465348::b967c99ea3f1c6a6a6095caa74e4a23c2c637306::748fc4612c5f824695523a3216be2b04435cc97d::71bec852536fd3b9357db85aab9c30234a7de889::635ff3966fae21da8569425393ac34992e5f3f7b::fc2336aef22ece2d6ef9563b4379498ddf2afd66::384781d0ea636c96f5a4d00c5386b9dd022a4e53::110b60fdb822e22cef13c0fc30f676434e52e5ac::56bb3d53f2ff6ffe1227f632c5119b0069220ee2::e75f58f30591ce47afc1705488d5124fabee60c9::3af578ff20418b798a98ad32792e36816b0a0429::78ebe74b61fe363456a96f8853d4125323527bca::b6f52a4b812a73da0c56eb5a42c3250692229dd5::03764027c570aa9f98a5c0ea5e2a95f563d34d9d::0ca658e562cadacd127ec0fe62cd4f50a2bea607::34cf510d779bb221d8ddc6a1782bf985eaed8e94::cb5f043df284a536cdd69811925bf784cd64d22d::5d73a9800011cf04d3c284444728bb43cc4b2ecc::49d6a18343fef05a514b7a2d2ce3e85958e2ed99::d06193d01362ebdcf281b2b6e2dad33314e68075::41d999998d0a87f619852d4826c1d421479f5bb3::0bb0729455b9c2bd9eeaac553df388943e2fcde1::ca5467b5f2b43441f8ec44ab13618b739545b06f::8b1a934f1c3c0f42c091be4ab72f54976ce94cbf::fbc8171a8612a2266ede032d07d7879e3e8610a3::0684744c0144864b3f1b7a96250373000a25b0e0::3dbb182d418c2258f65e74d479ee10ce2a72af6d::1f5d412cc314f935eff92c50b3be6a24de7a1339::bb5f18f61e6cb28482100d83351304a08e91a2a8::a8f56197861e0a914633fb7aaa4dad7c86cc0342::57607ffcd26f29cd9ba1bbc91687c0f147a72404::2985d32e2928be33b2ad83e0864a0c3e8e17e78e::e6baa855179035b82e781a86e21e67f4913e2498::7dcfa2c45c7f24b55c81c448cfd3ef7b4cb3bbbe::903e6cd2d68e7577601cea67229aaffe138b4493::5d9bac9cfb9b05ec39856927b067b10b829df6dc::b79d1002f8985001f893a3b71b667e29c6630368::7871e637837b9d635b307144af436d89206cb86e::a8a318e588c8beb8f3dfd3c4817f5201ccd98010::eeb6ec109710937789cd668e98eef2ec540c9f6c::e852164d48849c2a385cea31129af01dd4b28b11::737cd948d68014eddc6d0ab4242b83013d18c82a::e173c547e09638bf41ffbaa11542b88694004bd7::7d195c0be1bdabfe9a68e3349d4dbba00ce0bebc::
https://api.github.com/repos/ansible/ansible,54656,openssl_certificate-acme::devel,0,merged,affects_2.8::bug::crypto::module::shipit::support:community::,"##### SUMMARY Fixes #41396. The fix changes the default value of `acme_chain` from `yes` to `no`, since the resulting command line argument to `acme-tiny` hasn't been available for some time. I'm not sure whether this qualifies for a backport, since it changes behavior, but I'll try (so the RM can decide) once this is merged. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME openssl_certificate I would change this in: ``` ... command anymore. This default ... ```::",91aaf8865a23aa6a63979f1de5f52a76a775ea9e::e128aaec30c563a9079d812b98033bee2867e202::ec08ededda1c5d0fb6d783dcb586a3611dfb95d4::eed7f6f5a6b57255db95cc7c878e90824a2ff7b1::
https://api.github.com/repos/ansible/ansible,54353,openssl_certificate-absent-fix-2::devel,0,merged,affects_2.8::bug::crypto::module::shipit::support:community::test::,"##### SUMMARY There was a problem with #54298. This PR fixes it and adds a test. (Tests are also added in #54294, but I guess having a separate one which can be backported is always good :) ) ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME openssl_certificate",c66092e0fb3bf50398730da37006a58f68319c50::180e120fb572bed8f56ce83bd612bc8d95aa0467::
https://api.github.com/repos/ansible/ansible,54333,fix-for-51034::devel,0,merged,affects_2.8::community_review::small_patch::support:community::,"As pointed out by @abadger, PR #51034 introduced a bug where a code path would raise an exception because the type was set incorrectly. This will then be backported as part of #54101Shouldn't it be `return {}` though? Otherwise the line below will return `None`, and line 224 will fail since None is not iterable.::Yes, you're quite right. Update incoming.::Just noticed. Not a blocker, but I wonder whether we can avoid accessing the `ret` dict twice and do: ```suggestion if not ret or not isinstance(ret, MutableMapping): ``` and then on line 179: `return ret.get('all_parameters', {})`?::But that can be addressed in a separate PR :)::I'll put that in another PR so that we can get this bugfix in and backported.:::+1: ::",e94e80c79eab425637638205efa0eae368389dcd::545b98645d04b2d26eb95354d8edf4d8e9d4e2a2::
https://api.github.com/repos/ansible/ansible,54243,backport/2.7/54242::stable-2.7,0,closed,,"##### SUMMARY The last change to get_url moved its check_mode exit after code that examined the source and destination paths for usability, and this code could throw errors that were not previously thrown in check mode. This change moves the check mode exit back to where it was before, before the error checking, with extra code to calculate checksums so that check mode returns green / no change when it can, which was the point of the previous change. This is a backport of PR #54242 Fixes: #54180 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME get_url",9b595d6b6766ce0f80188921ec720db69eb9d36f::9fda2823bca8352edcbd002d30400dc50f75dee6::
https://api.github.com/repos/ansible/ansible,53381,fix/cloudscale_server_missing_param::devel,0,merged,affects_2.8::bug::cloud::module::shipit::support:community::test::,"##### SUMMARY in the refactoring in #52683 the param use_private_network was left out. This fixes it. adding tests for it. No need for backport. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> cloudscale_server ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",9fe37db28007513850c22d9659eccb52fe5b4bd4::ff1d65932d729eb947f35b8dddfb9fffb08aeff9::a2d79324f16bc688e38d7a7ed206f7d9a3fab8bc::
https://api.github.com/repos/ansible/ansible,53378,fix/cloudscale_server_missing_param::devel,0,closed,WIP::affects_2.8::bug::cloud::module::owner_pr::support:community::,"##### SUMMARY in the refactoring in #52683 the param `use_private_network` was left out. This fixes it. No need for backport. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",9fe37db28007513850c22d9659eccb52fe5b4bd4::6de1c2f15f80d4b652505a965d3203d4a83380f6::
https://api.github.com/repos/ansible/ansible,53305,win_regedit-path::devel,0,merged,affects_2.8::bug::core_review::module::support:community::support:core::windows::,"##### SUMMARY The main part of this module is to support using special characters like `/` in a registry path. Previously `/` would be considered a path separator causing it to create a key within a key. The PR also changes `win_reg_stat` to work with the registry key's `(Default)` value. This is returned under the `""""` key if no `name` is set but can also be queried directly with `name: ''`. The property is considered to exist if a value has been set. This first part includes a fix for `win_regedit` and `win_reg_stat` that is backportable to older branches. A future PR will include a deprecation warning for paths that currently use `/` as a path separator. Fixes https://github.com/ansible/ansible/issues/41791. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_regedit win_reg_statI believe you're missing the colon after HKU here...::",e41312db3ca163a29609e1806f2e14bf1c98cdd3::c0f59aa4aaee372348e6e23e4ba4a2db88c67bbe::
https://api.github.com/repos/ansible/ansible,53057,Optimize_CI_for_Windows::devel,0,merged,affects_2.8::community_review::feature::support:community::windows::,"##### SUMMARY The pull request disables running of integration test on Windows Server 2008, 2008R2, 2012, 2012 R2 due that PowerShell >= 5.0 is required to run tests. ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME win_dsc win_firewall ##### ADDITIONAL INFORMATION It should be backported to versions 2.5-2.7 too.",4e8dca8f21c41c6ed3932c5d1870a7618b6fb91b::
https://api.github.com/repos/ansible/ansible,53033,docker_swarm-hotfix::devel,0,merged,affects_2.8::automerge::bug::cloud::docker::module::owner_pr::shipit::small_patch::support:community::,"##### SUMMARY #52886 re-introduced something which causes test failures in #53003. ~~I don't know why tests didn't already fail in #52886, but at least this fixes it.~~ Since #53003 is going to be backported and #52886 is not, I don't want to include this into #53003 (to avoid conflicts during cherry-picking). ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME docker_swarm",3192fe9f81104a822a182d7270cbcd38fae78264::
https://api.github.com/repos/ansible/ansible,52958,aci_encap_pool_range-examples::devel,0,merged,aci::affects_2.8::cisco::committer_review::docs::module::networking::owner_pr::support:certified::,##### SUMMARY This fixes incorrect examples reported in private. This should be backported to v2.7. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME aci_encap_pool_range,19ea84427b4e67b9f3994274f7d7cb2cbf0eec7d::d20b3dae6776609d76eaa0e4767bc4aaea02c1c9::
https://api.github.com/repos/ansible/ansible,52890,devel::devel,0,closed,affects_2.8::collection::collection:community.general::feature::has_issue::module::needs_collection_redirect::needs_rebase::needs_revision::new_contributor::support:community::system::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Prior to this adjustment, if the underlying physical device was resized, the physical volume built on it would not be resized. An additional (optional) parameter was added with default to ""yes"" for ansible 2.8. When backporting, would probably change the default for ""no"" hence preserving compatibility only for already shipped versions. This is an important conceptual change, once the current behavior is misleading as described in the bug description. In order to detect if the physical volume must be resized, a simple check verifies if the difference between the physical device size and the sum of the physical volume size and extent start size (reserved for metadata) is greater than one extent. If that is the case, the resize occurs Fixes #29139 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Feature Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> lvg ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` please update to ""2.10""::The goal is to keep compatibility, and default to ""no"" would be safe in this case, (except it make sense to change the behaviour). Could you explain why it would be good to change the default to ""yes""? If yes is the default, I would suggest to make an entry in the porting guide https://github.com/ansible/ansible/blob/devel/docs/docsite/rst/porting_guides/porting_guide_2.10.rst.::Don't convert an argument list into a string if it is not necessary. ```suggestion rc, _, err = module.run_command([pvresize_cmd, device]) ```::```suggestion pvdisplay_ops = [""--units"", ""b"", ""--columns"", ""--noheadings"", ""--nosuffix""] ```::```suggestion pvdiplay_cmd_device_options = [pvdisplay_cmd, device] + pvdisplay_ops ```::```suggestion rc, dev_size, err = module.run_command(pvdiplay_cmd_device_options + [""-o"", ""dev_size""]) ```::```suggestion rc, pv_size, err = module.run_command(pvdiplay_cmd_device_options + [""-o"", ""pv_size""]) ```::```suggestion rc, pe_start, err = module.run_command(pvdiplay_cmd_device_options + [""-o"", ""pe_start""]) ```::```suggestion rc, vg_extent_size, err = module.run_command(pvdiplay_cmd_device_options + [""-o"", ""vg_extent_size""]) ```::Do you need to check `rc`? If you want to simply check whether `rc == 0` (and call `module.fail_json` otherwise), add `check_rc=True` to the `module.run_command` call.::If default behavior changes, it definitely needs an entry there!::changed default behaviour to false::",6c831fb21c167d26ec17a89d4b8aae3261a10e49::c6cf590c9ac1bc068e205528a6dd302211d118e9::666064ee1163dc1705084685965853c29d49c15f::8f7c08bd0d47751c6d6782ef37b708f4859e3135::85993f96bf269796cf93298db51f76b9a7b2d9e4::3da53ea5aabe6aed910dce54895343cea3b251a3::c304773581d03cab84ae56ac34f6f1051e6e0b3c::9d787fdab8c73b7c3559769afa8a3c95767b0267::7e082f37dc98af28356800e8180dbc5d8e64da78::d9d1b8754781d8d52b40edc62f04c09cfb159b3e::b672b81c70b26c773138c1205a8c7d3193279d65::aaa88bc4acff3716a1dd91e1eea37f296e8948f8::4f919b8fe83dd5eda4283d81a8c790a5cb47ca54::e7268756724d80d2c55b447595810990e4781623::eb54cb8c7343e8da0516f60246ff5382f2b92945::c805277e9e4b45cb015734b260cfc023d4ffb3ea::
https://api.github.com/repos/ansible/ansible,52693,foreman_env::devel,0,merged,affects_2.8::community_review::docs::stale_ci::support:community::,"##### SUMMARY This allows using environment variables to specify options for the foreman inventory script. Connect https://github.com/ansible/ansible/issues/52672 ##### ISSUE TYPE - Docs Pull Request - Feature Pull Request ##### COMPONENT NAME lib/ansible/plugins/inventory/foreman.py ##### ADDITIONAL INFORMATION For naming, I see `foremancli` https://projects.theforeman.org/projects/foreman/wiki/Foremancli https://manpages.debian.org/testing/foremancli/foremancli.1.en.html missing `version_added`::What about backporting to 2.7? I would like to keep that option open. Can I put 2.7 and commit to putting in the backport?::features dont get backported::I can added this via: ```diff diff --git a/lib/ansible/plugins/inventory/foreman.py b/lib/ansible/plugins/inventory/foreman.py index 6827e558d6..8c6e522fc5 100644 --- a/lib/ansible/plugins/inventory/foreman.py +++ b/lib/ansible/plugins/inventory/foreman.py @@ -32,6 +32,7 @@ DOCUMENTATION = ''' required: True env: - name: FOREMAN_USER +        version_added: 2.8 password: description: foreman authentication password required: True ``` And that will give ``` = user foreman authentication user set_via: env: - name: FOREMAN_USER version_added: 2.8 ``` But this isn't actually correct - the field was not added in 2.8. Only the option to get the field from the environment variable is added in 2.8. The field has been there for a while. Alternatively ```diff diff --git a/lib/ansible/plugins/inventory/foreman.py b/lib/ansible/plugins/inventory/foreman.py index 6827e558d6..cbf64581d8 100644 --- a/lib/ansible/plugins/inventory/foreman.py +++ b/lib/ansible/plugins/inventory/foreman.py @@ -32,6 +32,7 @@ DOCUMENTATION = ''' required: True env: - name: FOREMAN_USER +            version_added: 2.8 password: description: foreman authentication password required: True ``` does not work, with a formatting error.::need to indent to match 'name:' also quote it , needs to be string, not float ::its the specific entry 'that env var' that was added, not the 'env' section, this way we can add/deprecate/remove specific entries and have multiple ones::> need to indent to match 'name:' I can do that, and then `ansible-doc -t inventory foreman`, but it also doesn't show any information in that command about the version. ``` - url url to foreman [Default: http://localhost:3000] set_via: env: - name: FOREMAN_SERVER = user foreman authentication user set_via: env: - name: FOREMAN_USER ``` If that's intended, then it's fine by me.::ansible-doc doesnt need it cause its 'current version' that is mostly for the html docsite::ok, current state of PR reflects this. Some other users who have touched this plugin: @milliams @vmpr, other people who touched it when it was still a script @keithresar @giovannisciortino Just thought I would ping them in case they have any other review comments for this behavior change.::",041727bbda2fb5acd8ad059ab0c3d08e5c2396b3::
https://api.github.com/repos/ansible/ansible,52689,jtyr-fragment_52086::devel,0,merged,affects_2.8::community_review::docs::support:community::,"##### SUMMARY This PR is adding changelog fragment for the PR #52086. Once merged, it will be added into the backport PR #52536. ##### ISSUE TYPE Docs Pull Request ##### COMPONENT NAME `jenkins_plugin` ##### ADDITIONAL INFORMATION N/A",649904b6b5bad9ecb57ffb0fa36fb762fcef8661::
https://api.github.com/repos/ansible/ansible,52687,jtyr-fragment_52051::devel,0,merged,affects_2.8::community_review::docs::support:community::,"##### SUMMARY This PR is adding changelog fragment for the PR #52051. Once merged, it will be added into the backport PR #52535. ##### ISSUE TYPE Docs Pull Request ##### COMPONENT NAME `jenkins_plugin` ##### ADDITIONAL INFORMATION N/A",21c02c1f84fe8297a69042c1af8206912055c641::
https://api.github.com/repos/ansible/ansible,52579,fix_ec2_regression::devel,0,merged,affects_2.8::aws::bug::cloud::core_review::module::stale_ci::support:community::support:core::,If the private_ip has been provided for the new network interface it shouldn't also be added to top level parameters for run_instances changelog ##### SUMMARY Fixes #48109. Introduced in #43954 (nice spotting @gamuniz) so this should be backported to 2.7. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/modules/cloud/amazon/ec2.py,d16ec175fcc17f29e081f4fab4d8b9fc5842ebae::
https://api.github.com/repos/ansible/ansible,52540,fixed-deallocated-vm-facts-problem::devel,0,merged,affects_2.8::automerge::azure::bug::cloud::module::owner_pr::shipit::support:community::,"##### SUMMARY This PR adds some checks. This is first part of the fix that is supposed to be backported. I will add another PR with additional return values which won't be backported, as changes in the UX can't be backported. https://github.com/ansible/ansible/issues/52181 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME azure_rm_virtualmachine_facts ##### ADDITIONAL INFORMATION",51199c3101dd50e35462250dd73fb929903ad272::
https://api.github.com/repos/ansible/ansible,51927,win_dsc-warning::devel,0,merged,affects_2.8::community_review::feature::module::support:community::windows::,"##### SUMMARY This PR has the `win_dsc` module capture warnings produced by the DSC invocation and returns them back to Ansible. This is displayed to the user as a normal warning in Ansible and can help with debugging problems or even being told that something is not 100% correct. I'm not sure whether this is eligible for a backport, @abadger will have to weigh in on this. Fixes https://github.com/ansible/ansible/issues/51543 ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME win_dsc",94f86ec97ef839e1512bddeba0d82f67bfcc5dc6::
https://api.github.com/repos/ansible/ansible,51795,acme-fix-module-fail::devel,0,merged,affects_2.8::bug::community_review::crypto::module::support:community::,"##### SUMMARY A tiny bugfix for `acme_challenge_cert_helper`: if `cryptography` was not found, it tried to call `module.fail()` instead of `module.fail_json()`. Found and fixed by @jborean93 in #51787, which will not be backported, hence this PR. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME acme_challenge_cert_helper",3e12f3fac652dbbaacecfab0e5f532bd33c0fbe0::a2d7d3367c45ba5caae5de51976148e20031133b::
https://api.github.com/repos/ansible/ansible,51787,imp-errors::devel,0,merged,affects_2.8::database::deprecated::feature::k8s::m:xml::module::mongodb::needs_revision::postgresql::rabbitmq::support:community::support:core::,"##### SUMMARY Start to get modules to use the shared `missing_required_lib` error message. This error message builds a common error message in the case of an error when importing a required module. It includes information such as; * The module name * The host it is required on * An optional reason if the module wishes to add this * The Python executable that ran the module ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME lotsneeds a space before the quote here too::Thanks for the pickup, will wait to see if the tests pass before making the chagnge::Should be fixed now::Thanks for spotting this! Will this PR be backported?::Unfortunately I won't be able to backport this PR as `missing_required_lib` was only added in the 2.8 cycle. Feel free to open another PR that fixes this and backport it. I can rebase this once that is done or just create a manual backport after this is merged.::Commited #51795 which fixed this separate and have rebased this PR.::",14001e4bdc4cb8bc4b9c0c95ea96d996566a47c3::f280948d83c890bfb8ba5d2749e216d076a09fad::
https://api.github.com/repos/ansible/ansible,51781,fixing-managed-disk-facts::devel,0,merged,affects_2.8::azure::bug::cloud::module::shipit::support:community::,"##### SUMMARY Fixing missing implementation resource_group parameter handling. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME azure_rm_managed_disk_facts ##### ADDITIONAL INFORMATION put this into backport rather than devel?::@jborean93 mentioned that it's best practice to add changelog fragments with pr in devel already, so I am adding now.::at least one test?::@yungezz the test is there. and it just started failing, so this fix is fixing that test::@zikalino why it didn't failed during time of module merging?::",0e842e7844382ae7fbd781f98dfddb286c026f76::4885fd490b60f7f5e66657913decd23233f067ec::75b80b9488c605d36c498504e798cd0456778be0::0af7e4734d534f84b3920fd9e489277fb075d36a::c350944ff9db9d0891d0448b8d8627ebfd04730a::
https://api.github.com/repos/ansible/ansible,51759,bundled-tests::devel,0,merged,affects_2.8::bug::docs::needs_revision::support:core::test::,"##### SUMMARY Add check that bundled code is up to date. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME Tests ##### ADDITIONAL INFORMATION The release manager will turn this on in a PR before release and then open bugs for any software that is out of date.  Otherwise, this test will always be skipped.Messages should be in the format: `path: message` Also, include a `update-bundled.json` file with: ```json { ""always"": true, ""output"": ""path-message"" } ``` That will tell ansible-test when to run the test and what format to expect messages in.::Exit codes are not necessary. Any messages will result in ansible-test considering the test failed.::Warnings are not supported. This will result in an error. Print the error in the format: `path: message`::Instead of raising and exception, print the error in the format: `path: message`::This exception is caught further down.::Yeah, I do want it to result in an error for the test harness.  I'm not fussy about whether the message should read warning or error.::In my testing, the exit code was necessary.  Maybe it is because I don't have an update-bundled.json.  I'll add that file and test again.::Done.::Yep, once the update-bundled.json metadata was added, the exit code was not needed. Removed the sys.exit()::Changed the message to read ERROR instead of WARNING.::The catch is here: https://github.com/ansible/ansible/pull/51759/files#diff-36a6eef1b3c45cf98f385ac3a81b0cadR83::Instead of hard-coding a list of files to check, why not check all `*.py` files for `_BUNDLED_METADATA` instead? That will be easier to maintain and won't require updates to this test every time we add/remove a bundled file.::Well, all `*.py` files under any directories where we allow bundling anyways.::I thought about that and I'm not sure.  The problem is a social problem and I can't figure out what technical implementations will be better or worse.... What we need is for all bundled code to be checked to make sure that it is up to date.  The problem is how do we detect that there is bundled code? If we solely key off of the _BUNDLED_METADATA variable being present, then the test will stop detecting that a file needs to be updated if someone drops a new version in place and forgets that they have to add _BUNDLED_METADATA to the new file. If we operate on files listed in this test case, then someone bundling new code needs to know that they have to add both _BUNDLED_METADATA to their file and list it here. I think that hardcoding a list of files here is good to prevent the updated-version problem.  Maybe what we can do is to also scan for _BUNDLED_METADATA in files and if the two lists don't agree, make that an error as well.  That way failure to do the right thing in both places will lead to an error that can instruct users about what they forgot.::Checking both seems like the safest approach. It still won't catch cases of bundled code being added without _BUNDLED_METADATA -- but there probably isn't anything we can do in the sanity test about that.::Okay, added that additional check::Use os.walk to find files and search them in Python instead of using grep. Although ansible-test currently doesn't support passing a list of all files (regardless of changes) to code-smell tests, that is something that is going to be fixed. Once fixed, tests will use that list instead of os.walk to discover files. This will allow ansible-test to handle skipping files so that individual tests don't need to re-implement the logic. If we use grep now then it will need to be replaced later once the file list is available. Using os.walk instead will make applying the changes much easier.::I'd rather use grep as using a list of files (generated by os.walk or by ansible-test) will require reinventing smarts that grep already has builtin and since it does it in C, it's almost certainly faster as well.::Using grep is almost certainly faster. However, if you're passing a list of files to grep you'll need to handle splitting up the file list into pieces small enough to avoid command line arg limits. Also, what grep ""smarts"" are you needing to use use?::We don't have to pass a list of files to grep if we're operating on all files, right?  We just need to pass it the top of the tree. In this case the smarts are word boundaries and include by file extension.  These are doable in python but I'm questioning what we gain by pushing the implementation of these things into our python code instead of letting grep handle those details?  It's not complexity and it's not speed but if there's another reason, then that's fine, just let me know what it is...::I've fixed the limitation in ansible-test that prevented code-smell tests from receiving file lists regardless of changed files. This test can now use the ansible-test provided file list and will not need to use os.walk or grep. The `update-bundled.json` file should be changed as follows: ```json { ""ignore_changes"": true, ""extensions"": [ "".py"" ], ""output"": ""path-message"" } ``` The script only needs the following to get the list of files: ```python paths = sys.argv[1:] or sys.stdin.read().splitlines() ``` As for the word boundary handling, a Python regex deals with that nicely: ```python for path in paths: with open(path, 'r') as path_fd: contents = path_fd.read() if re.search(r'\b_BUNDLED_METADATA\b', contents): pass  # do something here ``` Use of the file list provided by ansible-test means that the script does not need to know anything about files or directories which should be skipped, as that logic already exists in ansible-test. For example, directories like .git, .tox, etc. are skipped. As the logic is changed/improved in ansible-test all of the code-smell tests benefit automatically. In many cases this can lead to improved performance since the test is checking far fewer files, even though the checks themselves may be a bit slower since they're in python. Another benefit of avoiding grep is that we don't need to be worried about avoiding options that are not available in all versions of grep, since the logic is all in the python code. If the test only needs to look at certain directories, ansible-test will filter those out as well. Here's an example configuration: https://github.com/ansible/ansible/blob/06d83bae056bbc9de904a238e480acf1147fe80e/test/sanity/code-smell/no-main-display.json#L5-L8::<nod>  Yep, a Python regex can do what grep does but it is still taking the things that grep has been optimized to do and attempting to write our own code that can only do it slower and with more complexity than shelling out.  But if portability is the overriding concern then I can make that change.::This is not needed. The code-smell tests are always executed by ansible-test from the root of the source tree. Using basedir results in absolute file paths, but test results should be relative paths. Instead of making them absolute and converting them back, simply use relative paths instead.::Instead of scanning the filesystem again, the file list provided by ansible-test can be checked using fnmatch. In the future ansible-test will include support for ignoring files not tracked by git. Using the file list will make sure this test correctly ignores those files.::Since there is no `compat/tests` in devel, I assume this is here so this test can be backported?::Include an exception handler for files that do not exist.::I thought about that but thought that glob.glob() would need a full path.  (Not sure why I thought that... maybe I was testing calling the script directly as well as through ansible-test).  Switching from glob.glob on the filesystem to operating on the paths passed in will remove the need for full paths as well.::Makes sense.::I remember looking at compat/tests, seeing that it was now empty, but then I must have forgot to remove this later.  The script is very old, it's just that I'm getting around to automating it now (it lived in hacking before).::Does this need to work on both Python2 and Python3?::Done.::Done.::Removed as there is no compat/tests anymore.::Used ```except (IOError, OSError)``` so that it will catch File not found on both Python2 and Python3.::This is no longer necessary now that paths are simple relative paths.::Are we allowing bundled files to be placed anywhere in the source tree? If not, then the test will be more efficient if the directories allowed are added to the .json file as prefixes. Assuming `test/sanity/code-smell/` isn't one of those directories then this conditional could also be removed. Example of using prefixes: https://github.com/ansible/ansible/blob/06d83bae056bbc9de904a238e480acf1147fe80e/test/sanity/code-smell/no-main-display.json#L5-L8::Yeah, they're allowed anywhere.  I half heartedly tried a couple times to specify a single directory (or two directories, one for controller-only and one for module_utils) but it never got enough traction from others so there's no rule. If someone would care to make some rules and move the code around then the test could be changed later. ::Done.::",75eb675bdb262975361830aba843999170ccd90d::7161b915016853a7781d7156b8e85012db5b9483::
https://api.github.com/repos/ansible/ansible,51612,unkeyed_groups::devel,0,closed,affects_2.8::core_review::docs::inventory::small_patch::support:community::support:core::,"##### SUMMARY The current `Constructable` inventory plugin base class does not maintain feature parity with the deprecated inventory scripts. This patch allows a deliberate use of plugin keyed groups such that they use the same group names as the old scripts. ##### ISSUE TYPE - Docs Pull Request - Feature Pull Request ##### COMPONENT NAME `lib/ansible/plugins/inventory/__init__.py` lib/ansible/plugins/inventory/azure_rm.py Applies to other specific inventory plugins as well. ##### ADDITIONAL INFORMATION The old script can be invoked via: ``` AZURE_SUBSCRIPTION_ID=<foo> AZURE_CLIENT_ID=<bar> AZURE_SECRET=<foo> AZURE_TENANT=<bar> ansible-inventory -i contrib/inventory/azure_rm.py --list --export ``` This returns content that contains groups that includes: - eastus - azure - linux - (many others) I attempt the same thing with the inventory plugin: ``` AZURE_SUBSCRIPTION_ID=<foo> AZURE_CLIENT_ID=<bar> AZURE_SECRET=<foo> AZURE_TENANT=<bar> ansible-inventory -i azure_rm.yml --list --export ``` Where the inventory file looks like: ```yaml plugin: azure_rm auth_source: env keyed_groups: - prefix: null key: location - prefix: """" key: powerstate - prefix: key: name ``` You can see the docs for where I got some of these ideas from. Here, I am attempting everything thing I can possibly think of in order to restore the old groups - and none of them work. Examples of groups that this produces: - None_eastus - None_<infrastructure_specific_group> - _running (Note: this means that `None` is in `string_types`) If I wanted the prefix of ""None"", I could have put in the literal string ""None"". Even using the empty string still leaves the separator in. I need to upgrade people from the scripts to the plugins, and ideally keep referential integrity within the AWX database to the old groups. There's no way to do this without a code change, so that's why I'm proposing this patch. I'd like to consider it for backporting, if it's accepted. With this patch, `prefix: null` will produce a group named `eastus`. Ping @jladdjr @kdelee @bcoca",97461ffc6d2335388041286021cfdbc3238bf537::
https://api.github.com/repos/ansible/ansible,51575,win_power_plan-basic::devel,0,merged,affects_2.8::community_review::feature::module::owner_pr::support:community::windows::,##### SUMMARY Moves win_power_plan over to the Ansible.Basic framework now that https://github.com/ansible/ansible/pull/51471 has been merged and backported. Also fixes a slight issue around `Set-ActivePowerPlan` which were using variables defined outside of the cmdlet scope which worked but isn't really the correct way of doing things. ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME win_power_plan,f106b5c0b8720c0deebfa6cf6363e6540c9571f1::
https://api.github.com/repos/ansible/ansible,51495,k8s-always-check-envvars::devel,0,merged,affects_2.8::bug::k8s::shipit::support:community::,"##### SUMMARY This will make it so that all code using the `get_api_client` method will make use of the environment variables, instead of silently ignoring them if default values haven't been set. This affects at least the k8s lookup plugin. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> k8s This is probably a candidate for backport",84c23f769ec7eb05ba84edde2cf214342705f333::4ce4780b7cda71b9ff2311246fef119fc74d0061::
https://api.github.com/repos/ansible/ansible,51216,docker_swarm_service-correct-min-docker-py-version::devel,0,merged,affects_2.8::automerge::bug::cloud::docker::module::shipit::support:community::test::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> This PR removes all argument defaults. It will only send required parameters to docker. This fixes an issue where the current module arguments have defaults that are not compatible with the specified docker-py minimum version. Today the minimum docker-py version is 3.0.0 when the stated one is 2.0.0. This PR also includes a couple of documentation related fixes: * The yaml in the module documentation and examples have been indented and linted with yamllint. * The module examples have been updated. They were quite confusing and more looked like copy pasted test cases. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docker_swarm_service This is not a new paragraph :) ```suggestion the container ```::Don't you need to indent this and the following line as well?::```suggestion - Number of containers instantiated in the service. Valid only if I(mode) is C(replicated). ```::The numbers should be in C(...), I think.::Have you checked whether any of the value options where you removed the change overrides something defined in the image? If that's the case, this can't be a Bugfix PR (similar to changing the default of `user`).::Yes but I need to take another iteration over the defaults to really make sure that we're not making any breaking changes. Maybe this PR should be a Bugfix anyway since it've gotten so large and changes the module behaviour (not always passing most of the arguments to docker).::It's not :) I also fixed the actual text since it was wrong stating that it's compromised of both command and argument (extra confusing now that we actually have a `command` option).::Not passing arguments to docker which don't affect the resulting service is no problem. It's only a problem (and shouldn't be backported) if it affects the visible behavior as seen from a user (like it updates a service which hasn't been updated with the old version).::I think it would make more sense to write this (and the later ones) as ```suggestion - Maps C(docker service create)'s C(IMAGE) parameter. ``` or ```suggestion - Corresponds to the C(IMAGE) parameter of C(docker service create). ``` ``` $ docker service create --help Usage:	docker service create [OPTIONS] IMAGE [COMMAND] [ARG...] ```::Similar here (and all the other ones, I guess): ```suggestion - Maps C(docker service create)'s C(--constraint) option. ``` or ```suggestion - Corresponds to the C(--constraint) parameter of C(docker service create). ```::",ec14d4382e8d3066d8286df82b711aa69a318089::e29d93c4bfac3c2fa92d47e3bc71166b6b32981c::086a916c8691c040c3da5318c86c793eaf244275::f61be8b44e0cd544b787667eb3b60483dd2d1262::371ef419622f43adcb0224d66656c46b8d5ec816::46620dfa5d3ecdd63a8f64654f11192940f56c75::22fc43f9b98b7d89db6cbb52b31aced6c985ff05::12228ab17001ab6f277a48752f328b84ae0c765e::cc7f448ea1e1ab7a25e62dc5753c21f5f2bcbd13::6c02f27958fab218a2c389a521637c7cdb19afa7::96af384ad9460d6fb875db0bb40dd15ab340535f::a28661c3eb6c7ee292f34546cd7369a6c1137595::b04f57eaaab2f600a897b1daf1e7ff0140044391::f8e3fd532f7f6a30eed908b5b5d7f30a3115a0d2::1a862594c81891ef9357c61af2f493ddb14eeefe::66d75ddc9206c21c8f3abb8b8dbc50dc77180124::1ba1313025b129a1a0a6e672e98640ce2f058cf2::f37f23cbdcc2fd9aec759ce5a84b020d8a099cac::36b88f95031a5dec03b1ffa74cc837f2bb906508::c1cc5f25b62add04ec31a46b7783a3085c400d95::f7d96c6827275194ce185314405373e8d9111b28::945862ad0597c50737c10ac18268cad3cb588a6e::8e8d21593105265361bda5cb973208959fb9b001::77332031f6b3e6c778a85f70aaaa28b0dc345a19::88d6f2a920535ff549cd1cf1ffe2124ee1fecbea::f4aeeb7f2e27aac162b150735fbcc1066464a0ad::0a7813674735c6490febe3b269eae790d36ac177::4cba751965caff970c14a2bd134aed378776cae0::f6ec0681551adf42a3b14b75507f4559390ec361::12fb90a696e03372d988405dda09d09c26af11fb::0750aa9b17917c37b3995047775890452153fd41::40b1ce2f7bf0c06fa6541174fb9e5e01168f1806::73afad6585a4b391f510049c7f11a9d7659a1359::f1cb0c49f7d6ea90d87825b802a2ad9565afc2ed::
https://api.github.com/repos/ansible/ansible,51208,synchronize_remote_ansible_host::devel,0,closed,affects_2.8::bot_closed::bug::ci_verified::collection::collection:ansible.posix::needs_collection_redirect::needs_rebase::needs_revision::new_contributor::small_patch::stale_ci::support:community::,"##### SUMMARY The synchronize module does not interpolate the 'ansible_host' setting of the remote host when it is determining the correct rsync command to use. As a result, rsync treats the destination as an odd local path. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME synchronize ##### ADDITIONAL INFORMATION I noticed this problem and put together the patch while using the debian-stable backport package of ansible (version 2.7.5+dfsg-1~bpo9+1). I did not setup a development environment running the ansible devel branch to test the fix, and I'm not familiar enough with the ansible codebase to know if this causes any side-effects. Example hostlist: ``` --- all: vars: ansible_host: ""{{ hostvars[inventory_hostname]['internal_ip'] | default(hostvars[inventory_hostname]['external_ip'])}}"" hosts: website: internal_ip: 192.168.0.2 ``` Example task: ``` - name: Copy files synchronize: dest: ""/var/testdir"" src: ""files/testdir/"" verify_host: true recursive: true rsync_opts: - '--chmod=o-rwx' become: true ``` Example error: > TASK [Copy files] **************************************************************************************************************************************************************************************************************************************************** > fatal: [website]: FAILED! => {""changed"": false, ""cmd"": ""/usr/bin/rsync --delay-updates -F --compress --archive --rsh=/usr/bin/ssh -S none --rsync-path=sudo rsync --chmod=o-rwx --out-format=<<CHANGED>>%i %n%L /home/testuser/ansible/files/testdir/ syncuser@{{ hostvars[inventory_hostname]['internal_ip'] | default(hostvars[inventory_hostname]['external_ip'])}}:/var/testdir"", ""msg"": ""rsync: mkdir \""/home/testuser/ansible/files/testdir/ syncuser@{{ hostvars[inventory_hostname]['internal_ip'] | default(hostvars[inventory_hostname]['external_ip'])}}:/var/testdir\"" failed: No such file or directory (2)\nrsync error: error in file IO (code 11) at main.c(675) [Receiver=3.1.2]\n"", ""rc"": 11} this is a partial fix of the symptom, real fix would be to avoid the 'get' above that bypasses hostvars implicit templating, otherwise you need to template every access to dest_host_inventory_vars::",71145159839da526068f11b94845cdb63a738bcb::
https://api.github.com/repos/ansible/ansible,51121,feature/posgresql-scram-passwords::devel,0,closed,affects_2.8::bug::database::module::needs_rebase::needs_revision::new_contributor::postgresql::stale_ci::support:community::support:core::test::,"##### SUMMARY Added scram stored passwords check for modification Fixes #49878 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME postgresql_user ##### ADDITIONAL INFORMATION I've imported `saslprep` utility function from https://github.com/mongodb/mongo-python-driver/blob/master/pymongo/saslprep.py, don't know how to handle Apache v2 license correctly in this case though. I think that licenses for GPLv3+ and Apachev2 allow us to mix this code legally but I'm a little hesitant to say this is the right way to include the code.  It has a separate upstream and a separate license so maybe it would be better to but this into its own file in module_utils and then import it into this code? That would also make it theoretically possible for us to track updates in the upstream code (in case there were security issues or bugs that we'd want to address, for instance)::@abadger, I'm not really good at understanding of Ansible internals for a while but code separating sounds reasonably. Besides, in the future, it can be useful for other modules. @astorath can you realized it in own file as a class? (Better in a general reusable form)::@Andersson007 sorry, I'm in a business trip right now, so I'll finish next week.::FUY there is postgresql_query module. Pretty convenient and not so cumbersome :) than using shell. Look at postgresql_owner.yml, e.g.: ``` 190 # Check, rowcount must be 1 191 - name: postgresql_owner - check that ownership has been changed after the previous step 192   become_user: ""{{ pg_user }}"" 193   become: yes 194   postgresql_query: 195     db: acme 196     login_user: ""{{ pg_user }}"" 197     query: ""SELECT 1 FROM pg_tables WHERE tablename = 'my_table' AND tableowner = 'alice'"" 198   ignore_errors: yes 199   register: result 200 201 - assert: 202     that: 203     - result.rowcount == 1 ```::Please, add info that scram method is available from 2.9::```suggestion see https://www.postgresql.org/docs/current/catalog-pg-authid.html for reference. ```::```suggestion ```::```suggestion from hashlib import pbkdf2_hmac pbkdf2_found = True ```::Maybe your contact here?::then remove 'else'::```suggestion raise ValueError(""SASLprep: failed prohibited character check"") ```::Do we have to wait for 2.9? In the end, this PR does not change any interfaces, just fixing reapplying password on SCRAM encrypted installations. I'll remove this from doc::@gundalow ?::I think better to remove it you can use intro test_password.yml a condition like this ``` when: postgres_version_resp.stdout is version('10', '>=') ```::or define this variable into there::better to keep main.yml cleaner (better to use it only for includes)::agreed::fixed::ok::ok::typo::I've fixed that one, but there are plenty of such shell based queries out there...::This PR is listed as `Feature Pull Request`, if it's truely a bug fix please update that. This will not go into 2.8.0, though it *could* go into 2.8.1::I've removed direct mentions on howto format password manually, but fixed the one in comments::@Andersson007 I've removed this mention, cause it's not a feature (and it's available right now, without any fix) @gundalow Renamed the PR. May I backport it to 2.8?::I've changed this to a bug fix. 1) Please add a changelog/fragment https://docs.ansible.com/ansible/devel/community/development_process.html#making-your-pr-merge-worthy 2) Once this PR has been merged into `devel` you an create a backport by following the process on https://docs.ansible.com/ansible/devel/community/development_process.html#backporting-merged-prs::done::This code is copyright to MongoDB, Inc.  I don't think you can simply switch out copyright and license like this. My recommendation on IRC was that `pymongo` should just be made a soft dependency of the module, and only required as needed.::@sivel Yes, I should have kept the copyright. I don't want to add `pymongo` as a dependency, this makes no sense in this case. 1. I can keep the copyright and use dual license in this case (it is permitted by Apache2 / GPL3 AFAIK) 2. I can use another implementation licensed under BSDm keeping the copyright and replacing the license (it is permitted by BSD / GPL3 AFAIK) 3. I can rewrite this one from scratch... My personal preference is (2) if (1) is not an option. Are you ok with (1) or (2)?::@Andersson007 :: hey:) I saw and tried to ask @sivel in irc for looking at this yesterday. Probably we should try to do it again today later. (In my opinion, if I could I tried to rewrite this actually from scratch with a suitable license)::Use of any license other than BSD for `module_utils` is going to require at minimum core team agreement.  As far as dual licensing is concerned, we do not accept dual licenses.  You would need to convince the original authors to accept a new license.  Any work related to this is likely to require discussions with the Red Hat legal team as well. In short, our recommendation would be to find another bit of code that is BSD licensed, or to not bundle this code and require a new external dependency for modules needing this functionality. I think your preference for the 2nd option would be preferable. Finding another implementation already licensed under BSD.::We could look at using [Passlib](https://passlib.readthedocs.io/en/stable/) it is BSD licensed.::> We could look at using Passlib it is BSD licensed. @andytom @sivel Yep, I was going to take passlib implementation, it needs some work, but it's fine, thanks!::@sivel I've updated `saslprep.py` module sources (now under BSD license).::",bf32ab9326e44dd1ed1819d601ea9552639c9d17::d9ed4fc5fbc8c183055a33430109dd35cfcc130e::1005433d321a9efaf2f6e31020c11eef1087bce3::4e9fba7a50b939fe06ad43386fb381146640f343::0141dcbbcbf5229923338dbd89faf42544413b96::7ebfb71814f889f5e0d53cf760f8b90a37b7af21::21f44c50685bc2af485787cf35d2f01857e8409e::ee3b1158dccced52fbc2f66996840c0531b89ae7::c7fe4d7943cf7d98a4f4d09ed378e2c6ea869204::2fdc9738cd75f011d8b4c2f7dd2dfe4b1e023465::37d6047426ba82592ad790ab59b8f0656bac35a6::6a80c7f4523dd4f18c262a6d30f7950c81369e2f::f4aeeb662bb728971e81c5c1005b56910145defe::9de4c8a592184764bfc3ced4aea9539b9d902b86::e9fe4f4609b69055c43748f496013230af82f7f9::ceec8d867166816317397b460c0152f1cecb7355::5b1a8dfbfb2773d855925f9949093d80c6c61db6::630147d1b42a5082acea4df602639463fd749499::55712c9d16a0d56d135d53574d8b11d0d011b47e::02715acb8afb896cc2360e2aa6387592b2fdc9d5::63da4380cfd15ffcaae99b618cc6736c26f1971f::
https://api.github.com/repos/ansible/ansible,50984,docker_swarm_service-command-option::devel,0,merged,affects_2.8::cloud::docker::feature::module::shipit::support:community::test::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> docker_swarm_service is missing an option for `command`. This requires the user to create an image with an empty `ENTRYPOINT` and use `args` to customise what to run. This PR adds a `command` option which can be used to override the `ENTRYPOINT`. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Feature Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docker_swarm_service You might want to add an `elif` and check that the command is indeed a list of strings (and if not, fail).::How about ordering the arguments alphabetically? :)::Maybe provide the same command as a list here.::```suggestion A command may be either a string or a list of strings. ```::Most or all of the arguments to other initialisers of docker types are passed in the same order as they are defined in the implementation. In my opinion that's a pretty good practice to follow.::👍 ::Yes, always good with more tests.::You might also want to check the elements of the list here. If they aren't strings, you should fail (or convert them to string and output a warning) and tell the user to quote the values properly.::That's also fine for me. Then let's hope they don't reorder them ;-)::I think it would help if you could move all these ""cleanup"" parts of this PR which aren't part of the feature into a separate PR. That allows to backport that PR to stable-2.7; if these changes are part of a New Feature PR, they cannot be backported that easily (feature backports are prohibited in general) and that could make it harder to backport later bugfixes which touch something in the refactored parts.::Ah I see. I'll revert those commits and restrain myself next time :)::Fixing such stuff is in general a good idea, but it's better to do it in a PR which can be backported ;-)::It is probably better to do this as a loop, so you know the index of the (first) item where it is not a string. That allows to produce a more helpful error message. YAML has some tricky conversions (like `'off' --> False` or `'n' --> False`) which are hard to detect if you don't know about them.::Updated the error message to be more detailed and added tests.::Drop the double quotes here...::...and make this one the idempotence test.::This one is then no longer necessary.::",4e0bf4c0a402211d7054640cca5d919812d20f20::da6636e4c5655f883c8ac0ca9334cec6e46ccd46::edd95f0f11c0e71d66ed458f4fe5a2dff85b346d::e8c8ec2514f9d7a1cdac8e9c471585e4d5274341::8309cd2725f5033065d78b1ee05b1c4549a8e132::f9633c0a599615a6c72a9eee3e9e7c43ceee44e0::a38624317c77456f9bea3f9b203491f9b11001bc::1c43c2dd910876ceceba0251d09359eb0cb89d93::a93b3ee89381497f84a12ddc803140654e10a999::96ad92068cb252941f459f7595d1ab4f0cc26ad7::0d51e7685ee7c0ed0ed8f8563324865f039cac65::e71c21a156fd73361982ee25e96e861428b47511::bd09bbd77a74f327c8e18558fe1b69a532ff9f59::0f8ea8bcc287f9ec0b013fa1ee73c87c6f63b915::8dc08f79066c85d574631443911151ede16973c3::
https://api.github.com/repos/ansible/ansible,50900,pytest_mock_constraints::devel,0,merged,affects_2.8::core_review::feature::python3::small_patch::support:core::test::,"##### SUMMARY Some current (and some future) unit tests are using Mock methods assert_called() and assert_called_once() which imposes constraints on version of mock library. ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME test/units ##### ADDITIONAL INFORMATION assert_called() and assert_called_once() methods were introduced in Python 3.6 unittest.mock and were backported to mock 2.0.0. This PR ups the constraints for mock to version >= 2.0.0. It also ups constraints for pytest-mock to version >= 1.4.0 and puts pytest configuration option ""mock_use_standalone_module = true"" to tox.ini so that mock will be used instead of unittest.mock in pytest-mock. This is needed for Python versions that don't have native support for assert_called() and assert_called_once() methods (e.g. Python 3.5).",795fc3787f7905d51ba7e46cc352abe03bfad7d6::
https://api.github.com/repos/ansible/ansible,50869,fix-changelog-fragment::devel,0,merged,affects_2.8::community_review::docs::support:community::,##### SUMMARY The changelog fragment in #47671 ended up in the wrong directory (`/` instead of `/changelogs/fragments`). This PR moves it to the correct place. (I've already moved it for the backport PR #50865) ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME icinga2_host,830ad9ed7fa8d23b87e11e477c3f8b9d393c83eb::
https://api.github.com/repos/ansible/ansible,50337,fix/vultr_ssh_keys::devel,0,merged,affects_2.8::bug::cloud::core_review::module::support:community::support:core::test::vultr::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> vultr_server did not handle multiple ssh_keys as documentation says. Fixes #50304 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> vultr_server ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` Needs backport to 2,7",4be1d97cdbc7efcbde704d64b30568de5ba1ce24::82b7e96178c0b30d452118e42b4c852eb6fb4f97::
https://api.github.com/repos/ansible/ansible,50188,win_updates-changed::devel,0,merged,affects_2.8::bug::core_review::module::support:community::support:core::windows::,##### SUMMARY This fixes #50185 This should be backported to **stable-2.7** and **stable-2.6**. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_updates,7320852c9ed548b38436c2d9b0e1484336e8ddaf::03afb73437fb16cd4665aa5c5531ba8047040773::
https://api.github.com/repos/ansible/ansible,50046,update-os-client-config::devel,0,closed,affects_2.8::bug::cloud::collection::module::needs_collection_redirect::needs_rebase::needs_revision::new_plugin::openstack::owner_pr::stale_ci::support:community::,"##### SUMMARY The os_client_config module is still using the old os-client-config library. Update it to use openstacksdk same as everything else. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME os_client_config ##### ADDITIONAL INFORMATION A user with an otherwise complete install for doing openstack things can hit an error when trying to use the `os_client_config` module due to the library `os-client-config` not being installed. openstacksdk provides this functionality now. To make things nice for people, continue to support os-client-config as a fallback with a warning.Would people have `openstacksdk` already if they have `os-client-config`? Wonder if this should go into the porting guide https://docs.ansible.com/ansible/devel/porting_guides/porting_guide_2.8.html Wonder if this means it's a feature PR, which is for `devel` and not for backporting?::A quick hunt around shows that Debian makes python-os-client-config depend on python-openstacksdk (in Sid), however Jessie/Stretch do not require openstacksdk. Similarly, Ubuntu Xenial/Bionic do not require it. Installing os-client-config from pip does pull in openstacksdk (under python3 anyway).::Thinking about it more, I think it could be problematic to introduce this as a backport as it's not a given that the user will have openstacksdk installed. That being said, the module does return a sensible message back to the user if it's not present and will fall back to os-client-config if that's the case.::can you correct this typo?::Yes - done.::Yeah - it falls back to os-client-config so it should be safe. We could potentially improve it to not throw the warning - however, the rest of the os_ modules all just require openstacksdk at this point and we really just missed this special snowflake when we made the other transition.::",9d7cdffb793e5bcba776cb259908a74815ca635c::
https://api.github.com/repos/ansible/ansible,50004,ec2_nacl_ipv6_cidr::devel,0,closed,affects_2.8::aws::bot_closed::bug::cloud::collection::collection:community.aws::has_issue::merge_commit::module::needs_collection_redirect::needs_rebase::needs_revision::stale_ci::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> The ec2_vpc_nacl module  does not support IPv6 Network ACLs. It is possible to configure IPv4 NACLs, but not IPv6 NACLs. This PR adds support for IPv6 NACLs in the ec2_vpc_nacl module. Issue #27800 has been closed, however some modules are still missing support for IPv6. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> Fixes #27800 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ec2_vpc_nacl ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> The ingress and egress rules specified in the ec2_vpc_nacl module are written as an array of values, not as a dictionary; the CIDR block is specified in the 4th element of the array. With a dictionary, the idiomatic way to specify the rule would have been to pass a new ""cidr_ipv6"" attribute, however this is not possible without making significant changes to the contract. Instead, the 4th argument is parsed to determine if it is a IPv6 CIDR block. <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> ``` ec2_vpc_nacl: ingress: - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22] - [201, 'tcp', 'allow', '::/0', null, null, 443, 443] ``` <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ok: [localhost] => { ""vpc_nacl"": { ""changed"": true, ""failed"": false, ""nacl_id"": ""acl-XXXXXX"" } } ``` I know this isn't part of your changes but I just noticed that this will result in an unhandled KeyError exception if the user specifies a protocol number that isn't in the `PROTOCOL_NUMBERS` constant. Technically any valid protocol number is allowed but anything other than `-1 (all), 1 (icmp), 6 (tcp), 17 (udp), 58 (ipv6-icmp)` will result in the rule ignoring the port range or icmp type/code values. here are the confusing rules from boto3 for the protocol handling. > The protocol number. A value of ""-1"" means all protocols. If you specify ""-1"" or a protocol number other than ""6"" (TCP), ""17"" (UDP), or ""1"" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol ""58"" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol ""58"" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code. ::You could use the built in ip address verification from `module_utils` instead of using socket. You could also eliminate the `CIDR_REGEX` if you used the built in. i.e. ```python from ansible.module_utils.network.common.utils import validate_ip_address from ansible.module_utils.network.common.utils import validate_ip_v6_address ``` ```python if validate_ip_address(entry[3]): params['CidrBlock'] = entry[3] elif validate_ip_v6_address(entry[3]): params['Ipv6CidrBlock'] = entry[3] else: module.fail_json(msg=""Invalid CIDR value: %s"" % entry[3]) ``` NOTE: `validate_ip_v6_address` is only available in Ansible 2.6 and up. So if this change is going to be backported you should account for that in the imports. These use these functions in this module for reference. https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/network/f5/ipaddress.py ::Committed ab80ad07c163ff4a23a3f203140612e4e4da0bd6 to support ipv6-icmp.::Actually my mistake you would still need the CIDR_REGEX before passing to that validate function.::We would need a validate_ip_v6_cidr() helper function, because validate_ip_v6_address does not validate CIDR notation. The utils module does not have such a function. validate_ip_v6_address(""fe80::20c:29ff:fe3c:55f1"") returns True validate_ip_v6_address(""fe80::20c:29ff:fe3c:55f1/23"") returns False ::yes a validate cidr helper function makes sense and then just checking the cidr portion of the `CIDR_REGEX` match is 0 to 32 or 0 to 128.::It seems like it would have to come as a separate PR, being a shared module? Or do you think I can submit a change for ansible/module_utils? I'm concerned this may stall the PR.::Oh yeah, what I meant was you could add the helper function in this module. If you or someone else then wants to move that code to a shared place in module_utils that would be a separate PR. For now I think its worth using the two shared validate_ip_* functions in this module and wrapping a little code around those (in this module) to validate the CIDR as well. Thoughts?::After searching a bit, I see interesting modules such as lib/ansible/module_utils/compat/ipaddress.py::I put a helper function. It turns out the ipaddress module rejects values such as '0.0.0.0/0' and it seems to have a bug for the number of digits in the IPv6 cases.::",ab80ad07c163ff4a23a3f203140612e4e4da0bd6::e119bf7ab5cf63b1aab98c19530fdb08f0622398::fb6b06431143f046dbaf991746d00c9157f7f3fe::2cdf185e625d6c9225db6d4909eed9d57a9355c5::e5e658a565aeda02f52bc5bfef7a1d598449e1b5::a205ae971bcfe324b49736155d12c62e8d8dbc5d::b393a0908cde5706271a22776ae7a62d0180f4ba::1aa0761442d5bf3030556ee993a2810d65588d14::1abfebe12bd762e2ae582093852411cd96a43cdc::c93151b456cee981e2f3d4febe80ba255d17eaa1::539dd5a7e84d94457114ead545d34a33182201f1::210c8d2b1b66dd624befff8aca04a42728fb7d09::9538910fb11157c61f7ecbf6fb9047970450e68a::a6cff65907885468a39f72da6c9f39cfb58eb14b::1bfee6868ab47eaacdb09bfed9835606f38b4f52::e21c106c9ae8d0a4de630504f13546d9a5f55b94::1d8e4a4c6ef5eed1656b2ebd1fd1a7ceafaa56d4::eea437b353d393d719a0095f9efab5c1be96e7fa::
https://api.github.com/repos/ansible/ansible,49881,bug-47154::devel,0,merged,affects_2.8::bug::module::owner_pr::packaging::shipit::support:community::,##### SUMMARY Fixes #47154 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME urpmi ##### ADDITIONAL INFORMATION Need to be backported to  [stable-2.7],baae76d30d0c0c0cdc2f2836095fa15d70064fdf::
https://api.github.com/repos/ansible/ansible,49719,uri-flexible-method::devel,0,merged,affects_2.8::feature::module::net_tools::shipit::support:community::support:core::windows::,"##### SUMMARY Since various interfaces introduce their own HTTP method (e.g. like PROPFIND, LIST or REFRESH) it's better to leave this up to the user. This fixes #49716 Would this be something to backport to v2.7, considering this is quite safe? ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME uri, win_uriWe should probably make this required, otherwise, we might get to `.upper()` later and the value being `None` would cause an exception.::It has a default value, so required seems ineffective. But do we have to protect against null values ? I actually never considered that...::i would note 'since 2.8 we don't restrict this at the module level anymore but it still must be a valid method accepted by the service handling the request'::i would add same note as for the other module about the restriction being lifted::we force 'upper' so we don't actually require it to be upercase on input, same is true above::Correct, the message is more strict than what we expect. Is that a problem ? The message reflects correctly to what we test though.::that its not really correct on what user CAN input, since 'post' will become ""POST' by the time that is checked::Do we have to ? We are only creating more wall of text for something that's no longer an issue. PS The plan is to backport this to v2.7 and hopefully v2.6 as well.::Ok. Will add!::But would like to backport to v2.7 and actually also v2.6...::I know that, but that is for convenience. I don't mind hinting that uppercase is better.::```suggestion module.fail_json(msg=""Parameter 'method' needs to be a single word, like GET or POST."") ```::```suggestion $module.FailJson(""Parameter 'method' needs to be a single word, like GET or POST."") ```::Since we are no longer asserting that the provided method is allowed, and since we are already doing it in the module, I think we should be doing `method.upper()` here, for those people using this code directly, and not through `uri`.::The requests library internally uses lowercase methods, so I don't think this really is a problem.::",2519087ca1d7a0eb7a2ecdf557691d24417b5a15::2d05e35d0f72ec3cbdd7bbdf45a2f696da3b1aa8::c803c520d765c339c1cd52021873c89927686338::a52524602ce78feaf25e593101d5d1f0e0de9db9::
https://api.github.com/repos/ansible/ansible,49715,aci_rest-port::devel,0,merged,aci::affects_2.8::bug::cisco::committer_review::module::networking::support:certified::support:community::,##### SUMMARY This fixes #49553 This should be backported to Ansible v2.7. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME aci_rest,0f2436124baeb251a686e2d81a09a5cc12a08605::
https://api.github.com/repos/ansible/ansible,49611,devel::devel,0,merged,affects_2.8::bug::core_review::module::new_contributor::support:core::windows::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> The Powershell command behind the ansible_memtotal_mb uses a math round of the TotalPhysicalMemory, but it's always rounding the value down. Because of this, a server with 2GB for example reports 2047MB memotal_mb. This PR replaces the `round` method with `ceiling` so the actual value is reported by ansible_memtotal_mb. Fixes #49608 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ./lib/ansible/modules/windows/setup.ps1 We won't be able to just remove a fact without going through the deprecation period of 4 releases so we will need to keep this in. Looking into `TotalSwapSpaceSize` a bit more, the value itself is defined as part of the open standard [CIM_OperatingSystem](https://docs.microsoft.com/en-us/windows/desktop/CIMWin32Prov/cim-operatingsystem) but I don't believe actually uses it which is why it is null all the time. On Windows 8/10 there is now a file `C:\swapfile.sys` that is used by modern apps but `TotalSwapSpaceSize` doesn't report this. I think just in case we should keep this value as is and just report null in case this behaviour ever changes in the future. We should also fix this as the value of this property is in kilobytes and not bytes so if it was ever reported then it would have been wrong.::Up to you, if you add the new facts in a separate PR you can backport the rounding fix to stable-2.7. We won't be able to accept new facts on older releases.::I have re-added the ansible_swaptotal_mb fact and changed so it converts KB -> MB::So we cannot remove facts at this time. There is a plan to provide deprecation warnings for deprecated facts (when used). If we have this mechanism we can start thinking about reorganizing some of the facts. (I have a long list of things!)::",2c45a22d05981926e811678b69e1081822b1e49e::900a94eb0715931716c312244a7ae1fa3640e722::7cc0117e5abd4c55b026d18e9c2bdf00d29e6a6b::4a6e0f86b5cdd9538721718b2f84ca6c7777fa34::149d72049744119526bf06b26a1b366b17103c70::
https://api.github.com/repos/ansible/ansible,49516,fix-fact-cache::devel,0,merged,affects_2.8::bug::core_review::docs::docsite::performance::support:community::support:core::,"##### SUMMARY Fix FactCache.update() to conform to the dict API * Move ansible.plugins.cache.FactCache to ansible.vars.fact_cache.FactCache because this isn't part of the cache plugin API. * Add backwards compatibility when calling update on the new FactCache * Remove code for calling old FactCache. There's no way to call the old FactCache so there's no need for backwards compatible code for calling code.  Backwards compatibility is handling things which are calling the new FactCache. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/plugins/cache/__init__.py ##### ADDITIONAL INFORMATION This is a rework of the fact cache as discussed with @nitzmahone @mattclay @sivel and @bcoca.  It addresses most of the problems raised with the previous PR except that it does not handle any potential performance regression (@nitzmahone's critique of how the new update() code interacts with the code in ```VariableManager.set_nonpersistent_facts()``` to call .dict.update() many more times than before.) @nitzmahone's critique needs to be resolved before this can be considered ready to merge. @sivel pointed out that the original bug report (that we end up calling dict.update(key, value) instead of FactCache.update(key, value) in some cases can be solved in a different way as well: ``` python # in VariableManager.__init__(): try: self._fact_cache = FactCache() except AnsibleError as e: display.warning(to_native(e)) # fallback to memory cache plugin C.CACHE_PLUGIN = 'memory' self._fact_cache = FactCache() ``` If we want to backport a fix for the issue, I think sivel;s method is how we should backport it as it avoids introducing any deprecations into the older releases.  However, sivel's method does not correct the problem of the FactCache advertising that it follows the dict API (by subclassing MutableMapping) while implementing an incompatible update() method.  So we probably should do something more like this in devel.we can just remove it, it is not really in use::this should not be used, it should be querying vars manager instead, we updated other plugins the same way, but have not had gotten around to this one yet.::I had plans to remove this altogether from vars manager, not sure if it is worth moving. We should deprecate it either way.::Yeah... it seems like just a shim.  On the other hand, it gives us dict-semantics which is very nice for using the fact cache.  It feels like the cache plugins themselves should have implemented the dict-API but since they didn't this was built as a middle layer to make it easier to consume those.::originally it compensated for cache plugins not having dict semantics, but since then we updated the base classes to follow those. So this shim should not be needed anymore, though we don't inherit from MutableMapping in BaseCacheModule so we might still have work to do on that front.::~~Removed in https://github.com/ansible/ansible/pull/49516/commits/5beae97802cd2a14bbbbb8aa0174143170ff2888~~ EDIT: generator was removed, not this one.::We talked this over on slack and decided to remove FactCache from constructed separately because constructed should be using vars manager instead of FactsCache but there's some problem with doing that at the moment.::Removed in https://github.com/ansible/ansible/pull/49516/commits/5beae97802cd2a14bbbbb8aa0174143170ff2888::cache plugins don't yet have dict semantics.  They provide all of the building blocks but they are using the wrong method names and lack small bits of code which would make them usable as dicts. Since this is not used by cache plugins it makes sense to move this now.  It also lets us get a headstart on deprecating it from the public plugin API location which is nice.  I could change the wording, though, to tell people to port to using the cache plugin directly via ```loader.cache_loader()``` if you want, though.::",c3a56b0113239aaa1919984084a2323884e8cb13::d322add6b5992328b08bb06ad4852cd56e576566::b31ce8553203045a2515d3d3243078bb563e08de::
https://api.github.com/repos/ansible/ansible,49322,docs-clarify-handlers::devel,0,merged,affects_2.8::core_review::docs::docsite::support:core::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> ~ONLY MERGE AFTER https://github.com/ansible/ansible/pull/49249~ DONE, this should not be backported as it depends on the mentioned PR <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> docs/docsite/rst/user_guide/playbooks_intro.rst ##### ADDITIONAL INFORMATIONI'd make this: `To avoid issues with handlers, use unique handler names. If you do trigger more than one handler with the same name, the first one(s) will be overwritten. Only the last one defined will run. `::",2113f24f3bdd82cf80d1eee548aed796d47e7900::d46eb3cd9ea86a06347b87e0dc7b49ba6f81ba6c::
https://api.github.com/repos/ansible/ansible,49266,acme-improve-error-handling::devel,0,merged,affects_2.8::bug::crypto::shipit::support:community::,"##### SUMMARY Two general ACME improvements extracted from #48444, which should be backported: 1. In case `parse_json_result` is `False` and an error occurs, returns the return body instead of `{}`; 2. Remove the return body from the `info` dict. (So if someone dumps the `info` dict, it will only contain headers etc.). ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/module_utils/acme.py",f745c3ce0631ebdb8f1b48fd596aff8855381f07::2862705d36ef44d91e3b9c8df9e1c4cbd06a2504::d65b6f308f64732f28e29417161613772603c2bd::
https://api.github.com/repos/ansible/ansible,49197,mail-py27::devel,0,merged,affects_2.8::bug::module::needs_revision::support:community::,"##### SUMMARY Once again the mail module was broken on python 2.7. This fixes the issue and adds an integration test to avoid future regressions. During testing we found issues using 'localhost' on Ubuntu 1404 containers, so we default to *127.0.0.1* instead of *localhost* now. Needs to be backported to stable-2.7 as well. This fixes #48785 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME mailThe test server is failing to start with the error: `AttributeError: 'module' object has no attribute 'create_default_context'` On Ubuntu 14.04 we only have Python 2.7.6, but `create_default_context` was added in Python 2.7.9: https://docs.python.org/2/library/ssl.html#ssl.create_default_context::Instead of ignoring errors here, I'd do a feature check for `ssl.create_default_context`. That will solve the issue of trying to use TLS when it's not available. It will also avoid accidentally skipping the TLS tests if the pip install fails due to network issues.::Well, if the pip install fails, we can't do TLS testing anyway. So it's still the right thing to do.::That's true of dependencies for any test. Unless we have no other way to detect conditions which would prevent the installation, we shouldn't ignore the errors. Detect the condition(s) which we care about and skip the relevant portions of the test. In this case relying on the pip install failure doesn't give us what we need (detecting lack of support for `create_default_context`). It also will cause the SSL tests to be skipped due to network failures, which we shouldn't be doing.::The pip installation could fail because smtpd-tls is not supporting python 2.6, which is why I have that test and which is why I was ignoring the error. But even if it fails because of network-issues and it continues without TLS tests it is better than what we had before. If you would like to improve it beyond this, feel free to do so.::The pip install fails on Python 2.6 because it isn't supported. It succeeds on Python 2.7.6, which is also not supported. We need some way to skip testing with TLS in that case. Make the pip install conditional on the availability of `ssl.create_default_context` and the tests will use TLS when it's available and skip the pip install when it isn't. That will also eliminate the need for `ignore_errors: yes` on the install.::Thanks, I opted to make smtpserver.py aware of this instead. So that it would at least work without TLS.::I already spend too much work on this that should have gone elsewhere. So I fixed it quickly, feel free to improve it further. This is already a clear improvement over what we had before.::The default shouldn't be changed just because one particular platform running an old Python version happens to provide a less than helpful error message when the connection is refused. Also, defaults shouldn't be changed for bug fixes that will be backported. The examples don't need to be switched away from localhost either.::Yes, having tests for this is a huge improvement. Thanks for putting this together. It's a common theme putting together new tests. They look simple at first and then the corner cases take up 90% of the time required to finish them.::It's not providing a less than helpful error message, it plain fails. And there might be other reasons for it to fail (e.g. resolver issues or /etc/hosts being empty) so 127.0.0.1 from that respect is a better default. Same for the examples, 127.0.0.1 is a better guarantee it will work. So IMO it is an improvement after what we learned.::Where are you seeing a failure with localhost?::I was getting them when smtpserver.py was fixed to only do non-TLS connections with the most basic integration test that was lacking a host-parameter (hence using 'localhost').::I tried that on Ubuntu 14.04 but haven't been able to reproduce the issue you're seeing. Using localhost works for me as long as smtpserver.py is running and TLS isn't used.::Ok, since I can't test I only have circumstancial evidence. The reports about this specific error also indicated that using an IP address would fix that issue. So maybe the server wasn't running at all (which I can't see from the async task). I am working in the dark here, and already spend too much time on corner cases I am not interested in really. I just want to avoid the next guy fixing something and breaking everything else. This PR accomplishes that, so for me it's over and done for now.::Sorry, I must be missing some context here. What reports about localhost vs 127.0.0.1 are you referring to? The only issue I am aware of is with earlier versions of this PR where smtpserver.py wasn't running.::StackOverflow::I like the approach from this PR https://github.com/ansible/ansible/pull/49016/files#diff-51726da56deae6bf8b52a885b2b0d2afR268 better style-wise. It reduces duplication of the function call.::I disagree, I find it less readable for no real gain.::dagwieers +1  locality makes this version more readable with very little sacrifice of consiseness. The answer would be different if there were many conditionals or optional arguments to add but neither of those is the case here.::Agreed.::So.. wanting to move this forward.... @mattclay @dagwieers  would you be okay with the s/localhost/127.0.1/ going into a different PR?  That way the main bugfix here can be backported and the 127.0.0.1 change can go in for 2.8.  I do see how 127.0.0.1 would be more robust but the case it solves seems like an infrequent misconfiguration compared to the main bugfix so I wouldn't want changing a default value over that to become the holdup for getting this approved.::",013361c3b9f3f9ff6373978b9f52b4d259b73232::a68f795a1cff318bca1fb0fea4ddf7b2b7e9f7c6::86c479d2b1e1fa4547c3c03f66ee99d6de57ba0e::9d9e55d1b09af44f33d033d3539e9c9c593bdfcf::
https://api.github.com/repos/ansible/ansible,48734,community-dev_guide-reorg::devel,0,merged,affects_2.8::core_review::docs::support:core::,"##### SUMMARY * Make it easier to find existing content * Group content based on use-case/experience ##### ISSUE TYPE - Docs Pull Request There's a typo in the link - `comunity_working_groups` should be `community_working_groups`.::Duplicate what's in dev_guide, though this is an useful link ``` I want to :ref:`set up my Python development environment <environment_setup>`. ```::Move `Understanding Ansible's release cycle:` to under `Further info`::rename: How I can help::+easy ways you can contribute?https://docs.ansible.com/ansible/devel/community/how_can_I_help.html::There are some underscores missing to make this a proper link.::Looking for easy ways you can contribute? https://docs.ansible.com/ansible/devel/community/how_can_I_help.html::I'd skip this. If they're reading this page, they're already looking at the documentation, and they have lots of ways to get to other bits of it. Plus, but putting ""read the official documentation"" first, we're suggesting that you need to ""read the book"" before you can do anything else . . . which is not the message we want to send.::How about a link to https://www.ansible.com/community/events/automates? This also seems relevant: https://www.ansible.com/resources/get-started ::This needs a trailing `_` to turn it into a link. Might be better to have a little more context, too - if I clicked on a link for ""getting notified"" and found myself at a google groups page, I'd be confused. Do I need to check this page every week? Do I need to sign up? If so, how do I do that? etc.::This sentence scans strangely. How about ""I'd like to see a specific bugfix backported to an older version of Ansible. How do I do that?""::Indenting on this line is different. Not sure if that's on purpose or not. ::This line is phrased like a question but has not question mark. Could we make all questions look like questions?::`Comiters` should be `Committers`::This seems like an odd heading for these items - maybe ""Working with the Ansible codebase/repo"" instead? Working groups aren't logically connected to PRs.::There's a stray `i` in the middle of this sentence. Call the `i`-herding dogs . . . where's Lexi? ::Windows not Window.::typo: `contirbute` should be `contribute`::Shippable is complaining about Unicode quotes in this line (instead of ASCII quotes). Possibly copy/pasted from a doc?::Ask Marketing/Getting-Started-team what other places we have (and if we have one place that links to them all)::Add: Links to GitHub?::Add links to deprecation in here::Add rebase guide here (as we have specific guidelines)::Good point, removed::Better?::yes, thanks!::there's a link to the deprecation page under ""I want to work on other development projects"" - but now that I've played with the community page more, I think this page could use some improvements::https://github.com/ansible/ansible/pull/48734/files#diff-df5366db4400895a74aabc5e9ee4f56cR40::Added a link in the ""Working with the Ansible repo"" section of the community index page as well. ::I've lost track of what link to GitHub we talked about . . . but we can add it in a future change if we remember.::",d812243ceee26099b0e474be9a0262b105a8646a::30ef7f1033ad48ce236e005c9e390a4422576ec3::771f355bffbaa453796678d02bbd982e6f75cc50::1321140f359f7fea0b3d2a689450ae2dd4f75eea::50b9fc428b845ebaca6e341f6283e7bb856fabca::64d32a29bae5e859c5f9aa42f88a2e6adbf83fd7::18784cae39c6bb783c221bffeb7a78eb7ada09b6::4107cfccf5efacf835b01c4347118bc363f34a16::c8bdd8bb053c43c4e02b6f55d2736bbda4833892::5e7a255fb39e388a00eb305b5019962b6aa08c1b::aa6825ad6954090c5b997a581fd1bdb28c50ad50::8aa418280a170e1f2cdad8c29da49e7e2b774980::0ba42a6299628d7b5dacc470ea4802d6244612e1::dd61799fdf495d0167b421c94a33eb7c545b9e67::bd9a2ac7d74244b2f8ea845bd816eb1f054c09df::eebf6b22208c9265fe23704dc12bcc783bad1e7c::7a30800678836b9d89722689a042fabb2997778e::8676265e0f3049c4a0f1850c55a76f93c53fe6bf::
https://api.github.com/repos/ansible/ansible,48675,fix/cs_template_state_extract_key_errors::devel,0,merged,affects_2.8::bug::cloud::cloudstack::module::shipit::support:community::traceback::,"##### SUMMARY Reported by @onitake : ~~~yaml - name: extract new templates cs_template: name: mytemplate state: extracted ~~~ produces: ~~~ An exception occurred during task execution. To see the full traceback, use -vvv. The error was: KeyError: 'isextractable' fatal: [Linux-CentOS-6-64bit-20GB]: FAILED! => {""changed"": false, ""module_stderr"": ""Traceback (most recent call last):\n  File \""<stdin>\"", line 113, in <module>\n  File \""<stdin>\"", line 105, in _ansiballz_main\n  File \""<stdin>\"", line 48, in invoke_module\n  File \""/tmp/ansible_cs_template_payload_8ya2tZ/__main__.py\"", line 737, in <module>\n  File \""/tmp/ansible_cs_template_payload_8ya2tZ/__main__.py\"", line 731, in main\n  File \""/tmp/ansible_cs_template_payload_8ya2tZ/__main__.py\"", line 667, in get_result\nKeyError: 'isextractable'\n"", ""module_stdout"": """", ""msg"": ""MODULE FAILURE\nSee stdout/stderr for the exact error"", ""rc"": 1} ~~~ ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> cs_template ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` needs backport to 2.7 but not 2.6",be223142e5bf96f902d56370d71d6c5e31177045::04cd80478798e405548d68610f5690d93648c58b::
https://api.github.com/repos/ansible/ansible,48546,docker-diff::devel,0,merged,affects_2.8::bug::cloud::docker::docs::module::shipit::support:community::support:core::test::,"##### SUMMARY This PR implements ""proper"" diff (i.e. the user is shown something when doing `ansible-playbook --diff xxx`, instead of the current behavior, which just returns something which can be evaluated programmatically) for docker_container. It is kind of a bugfix, since the documentation for `docker_container` explicitly says ""Run with --check and --diff to view config difference and [...]."", which is only true if you inspect the return values of the module (as opposed to the output you get for example from the copy or template module when using `--diff`). ~~So, far I've just implemented it for `docker_container`, but I plan to also implement this for `docker_network`, `docker_swarm_service` and `docker_volume`, which already have some basic `--diff` support (which also doesn't output anything via `--diff`).~~ ##### ISSUE TYPE - Bugfix Pull Request - Feature Pull Request ##### COMPONENT NAME lib/ansible/module_utils/docker_common.py docker_container docker_network docker_swarm_service docker_volume ##### ANSIBLE VERSION ``` 2.8.0 ``` ##### ADDITIONAL INFORMATION Sample output from the tests ran with `--diff`: ``` TASK [paused] ************************************************************************************************************************************ Sunday 11 November 2018  20:16:48 +0100 (0:00:00.041)       0:07:59.637 ******* --- before +++ after @@ -1,5 +1,5 @@ { -  ""exists"": false, -  ""paused"": false, -  ""running"": false +  ""exists"": true, +  ""paused"": true, +  ""running"": true } \ No newline at end of file changed: [localhost] TASK [volumes (more volumes)] ******************************************************************************************************************** Sunday 11 November 2018  20:19:25 +0100 (0:00:00.607)       0:10:36.974 ******* --- before +++ after @@ -1,11 +1,11 @@ { ""expected_binds"": [ -    ""/tmp:/tmp:rw"", -    ""/:/whatever:rw,z"" +    ""/tmp:/somewhereelse:ro,Z"", +    ""/tmp:/tmp:rw"" ], ""expected_volumes"": { -    ""/tmp"": {}, -    ""/whatever"": {} +    ""/somewhereelse"": {}, +    ""/tmp"": {} }, ""running"": true } \ No newline at end of file changed: [localhost] ``` Also, I found some bugs while implementing this; I'll probably extract some of the commits into a separate PR to make backporting easier.",33978221f477c1f714d1b693d93ec8aa027dbb09::d3ab560c7f72ecbbad806a0d32045ff78452b138::82f72ec586c53e05a03e92eef4c5ef91416ace67::f7ef41d9ad23950cc38d18e23e1b73c5413dcbff::93b7b4d86331e99157a172fb13c299b611490032::810159e9334ddf2bc738bf366de16106d5380eca::561765a280e4488d044d7fde89c4d891db715ca4::85bfbbbe68753a8b0fee9d6b74cd2ead84b5c12f::be96464a207d962a30c7e903f1f62ad5c8f6df08::fcb6b3afd74d065e392bb99947307866e1557bc3::
https://api.github.com/repos/ansible/ansible,48443,alt_for_48023::devel,0,merged,affects_2.8::aws::bug::cloud::core_review::module::support:core::,"Fix comparison of determining which rules to purge by ignoring descriptions AWS uses rule type, protocol, port range, and source as an idempotent identifier. There can only be one rule with that unique combination. Rules that differ only by description are allowed but overwritten by AWS. Add a test Co-authored-by: Will Thames <will@thames.id.au> ##### SUMMARY Fixes #47904 See #48023 for an alternative, but I think this is safer to backport. The second reproducer playbook in #47904 fails with that patch, but succeeds with this one. I think it's probably better to optimize this by consolidating the logic of the loop I've added with the loop in the function for updating rules, since it is a little redundant. Another thing that could be improved is sorting the list of rules that differ only by description so AWS produces a consistent result (and maybe adding a warning for the superfluous rules?). ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ec2_group.py ##### ANSIBLE VERSION ``` ansible 2.8.0.dev0 ```",d42334479f42727139533b5db49ed230e9a35f67::
https://api.github.com/repos/ansible/ansible,48276,bug_fixes116::devel,0,merged,affects_2.8::bug::cloud::core_review::feature::gce::needs_rebase::needs_revision::,"##### SUMMARY This mostly does documentation formatting and a couple issue fixes. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request - Feature Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> gcp_* ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below 2.8 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` Looks like you've added new features here, so this is a `feature` PR, so can't backport it::",03b9a541bf3a6efb84a006906d54fe9664dd275c::2a8521a4d1ccf8ad11991ee819a5a77f28fc69ab::
https://api.github.com/repos/ansible/ansible,48113,aci_iplpg-aep-2.7::devel,0,closed,aci::cisco::networking::,##### SUMMARY This is a backport of  #48001 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME aci_interface_policy_leaf_policy_group ##### ANSIBLE VERSION v2.7,62b43ea28d77ea2a273957d7d45972c59320dab0::d9bd76dc8a58a278eaf0036361348825e649bf1e::d2c72040b5c107497985a3b5e9f7356b996cf08c::2293463320380536c75950375df506e9031e39b8::8715f96af03a6c4b61539af15c380af12ae08c9b::07ed487427ce8ea42f3f8a188728e48e2e18dd54::3a72e271ad22fd90aa5d70e3ca2e38ca8365f6c2::ff1aa50fdbd3acb7d9ed7b0d1d69041d2e06e646::01b6f02a80d904f2b9bec1874d6cae93561a977e::547be8c957782fd45a2988d464f4781650015ecf::bc08cf12ea18a1e651fd7f6b1707b62e272d252c::637c9b3c5f9c3d2029ffdd5e36beb0305e756a36::4b80f8c8e33cfb5737b43f93118d11c57589470a::2c788b6748abaaffeb44183b159c59047d93c681::0dec6db43fadb6796d622e101c1edaa59e3d5791::f360df4e10e7e729aabe7595053f4d76c9481fde::8da4113ec0fe6254baca10cd795a5d018398f7a6::fe528af1e0b87b93e404255df378bb5caa58eeb5::d7e9f24741e510634d13d904392e2240fa0e068c::0e4a7a5abca61213a8e34835dbca90d704db5877::8b0c46a51a33834d1eac7dc578197ea2eedcb712::14cccb9488822b0c3303ea9703302bccce9bdd16::f81229c85c6573120c188850200cbed1b0e5371a::2409ae5f2781d2542cbe10f04231e0cc5ce22e10::6ea0fccfe2607f923b67899c0f211350c1ef1701::df1aaab3df4ad8b1a9be283ceae4685bbfead1ea::5eef5f629edafd14b8ddee4a22703ae33a0b9b99::da801283ee6e19d157f89e5cf1b0d7e947324767::80c0693116a01c0a12f586ecde45dfb7c67dbe19::4215feeb5e4282e1810aecef000f63ae990eb605::2de895a07b879f652b24c6c5bceefc7376c708b1::7601f1c15342d398a4b72f9780cec3f6c1973401::6a27a4251e7bd7339f3fb614455f34e4296d2acb::f5bc8457e4614d870ef85c6d6ae7bf3b405849e9::3cfbc2791f0c10a6c2f0c5bee141f1750efea051::2388126bdf464ebaa68caaf746c1c2ca62cd2ce1::2703be8368f1e1510866b2c3049c329e40ccbebf::b6810eb37c576eb0688184fc97a402290f0d4326::b6276fe4a4e669e367a18d0cab514b257918a15e::ac56230d5b12f67ef709f8c08cdf384ba33b0d19::19fe83d786f66ac5d048a2d6b572c0fc32885148::10038a423b4d01c1196b4cd12f27fdcc021607f6::93b75558bbea5eae74fd6760bda09d014ca7a3e1::ee523beb8ea91426f851606559b4b83e9d181f0a::ccde3dc66b5129baa3f6a85f0cf1cb67a0b11cb8::190cdd3a297dce141ba52045ddeef3dfbff25917::cf28d22211e60656758691d74fd38a8ff0e8dff7::b1b93c7a226d9bcd557c0b2ed78bbee3d8bd916a::18b575b593221c3712dc87d5153a071bfa69eeca::1d01543e3428790286e4c16f0719e052aab6ea8b::85e227d338333cbefc1c4e2a4b57083b11f99146::c481a5bf4ae830ac907b38db2c06819409952873::083d2a6ad7ad28c23f7445e9416c1450b4b86c65::26de4f97493adeb388c1c8fad7a266bb7652bac6::83194a0a99676f70a285ab9ce6b20f670dfa44b2::e575f655c19a390513d19f28b3b779a2d3a5606e::09e61f29e9b877a314b9fe638a46aceb94243123::6d07cec5887ef2802e09da1871cc4777c835ebcd::ecc706f1225e4c05f88b7fc424ede8721e7c40e5::86f37620e6b143fb8d39648c7f85cbf3a926e2f6::5d19738af6581f79e522e98ac4c8267bfc9e41c4::434d9b2f2a0f4f7c7915f4ccbfae735829135cef::7842b99106c51427ed6bb0e05f10d499c1efeb19::cfe86582f2d76928455453b30becd0571421236a::0aa2aaa17553b7327b63d0215b1ae8eb9b3d2919::4389e2175a3eedbc2f0b4e5c820dc42c50a94fe0::f35f7e2e5499c898c1221bd3f9b13a76a74ceec6::b0b23d5a91b3fe022cfeefb3117b7ebabcad0152::76d71f034e29673000042803f0ec2c4264857ab4::54d06d042e512175d81578ec9b6b76e8c828b0bb::cc51d93f1bb46edf6996c8f1fb0cd5ec9c3e3e86::6d287de9bc6873d2f7562d1f7b3f861808aeb76a::970e6542b5289b69c71d791a314292933291a1df::8b5f2c3ae7f787b4fa2590f833a93a72457c37e8::37748d219c5e8a106be83e5d7765acfc2220843a::0183f2fc87dfff4eb2753022699d430800b83302::e2958881178afd6d4dfb90e69210f8c0b1307f99::4fb485a155e74c2403d49bbf224221269a771eca::7ce940cb4173f435d1b3d62235ae8d23becc25ea::24324cbca817cc9de1a327ba963034302ad97680::a6cf9af1bf767ad27d8cd5ad663c72d80a621730::a0f38bdab5ae0e183cb960fe9e964bf1edf7c326::5c6b4924820fcba5246960301ace49db65808ce7::4dee2c6d24ea3dffeb83c1c3ef95307822284798::c32c354995c7b3749bb60983507da85165bc0c93::10fd0251e832aecaaad75d97b091360aa9652da7::4ffc75ab44e3dab90cf0d575d853d062b96c040f::0e48544ae1f6ea1e5d0e28504b0fcf8202175604::4546057fc879abf3120953b810844120f4ee052c::c88805897348ef3937051a7c1a5419c56a0ed6e0::42183e562ae8cb92eb79b0184f079787e54adefa::ebc35bd79fa0bc1d692d777b793cae93587c3ad6::e9d42babbf8bf137d6e2ab17eafa8d8f30a0085c::f3b5e0359f77841ce4c5499b41a34bb7ce4cb14b::4fe7671d348fe34cb13f3532074173a0441158a2::d46ed88fa398a553d3eb5b3e6b4f3a2c069958c8::f5df17ca516bcc52ee4ef778d79e27b0581aa6a6::3eb5e27d6e2c0ef1d2fb7247d1edc46a0b146bb4::9a2e192e8a2fe8ffd9ff415cf0b1cbdfdca6306f::c982295f6c6af584f51c47db20360720cc026a05::dcc37b6eb910e1414580aadc5e7b8504ec24dc35::30c1a1933ed31d1f40bf66fc5fb01bcb61e31845::97a3e59ce8c0df534586d313411b45d3e717e6fb::e841e7b53d51cbbb3264b60f831ab637b5985b6f::f16bb4daf4eaf3d6bcd4532d5336859341816096::377540348c7d0a857ca92a61fb685230f9cef4d1::ff5073c10bafb6e7d54c883bd81c50219aa08fc0::3a02228b00465e9c7b32820854a3bfb4fe8f6a13::977f094741b38fb4fc565485418cad0bb76b1e47::da07b58c3b759cb6d8b86028f9c8e761c001f9f5::60e7f43998e2216285d576ad179138b710d4686a::02bd829dd279c3afeec7ac460dba8570486368ee::c085cae991115d23ef479986a08d1ea963cfeb16::0629fd96bddad0a61719b811213426d9547ba840::2eb148e7271d3df86112dbb8f40816833d64eacc::8810e9f9e2bcdd6bff8c091c450b1907d92cb330::b2381cfac9c6f21f4c4a31382cb7b54680e77338::c0b0dd7e6e1582ad2541a2ce471858772cd6f7d8::62914e04be472455fc137b8522e80a0fc46d3983::a2c2dffcebb757d3ae4f259d01e3c2b52eb34e93::7f4945a8f1233e1c95a6524fb276b6a8b0933674::7269eb54134a8d246ee8d84a7f15af4b3a81cf1e::20c1cf41a40a1817795626234aaf46bf8fe47789::940eb3ae471aff4578c07d60872755e5466e8943::20fc17a55fe57acd4f9266d0f872dafcc045e7ff::24d7ccd182004e73b655226fb34e2079e21bb68f::682e4957d4868c08229b36d35e52e622fa6062f0::429c8f50feb994a74a6c8fa3795a95e7c2644212::28ed7f722eec56057c150eb7604f1f87a02017b0::7690659f7fa11e0dc9952b33015649406229c607::d82c5fb55f5d1077030b3856542af33d2a63f6bf::441e6fdcc10e9b80a520cc7451ff58187f91d3b6::dcdd8c2544e634cf4cf58ffc226f005ec7a40931::f7c5c466be753d12829e745d0d9a046623072995::ee45520e05c2b9d9153c34081294ac9e49fd476d::46c217fedadffc2efaff9010fecdd967b77474e4::f1db8985e3f63b7f954279bb1ad23ba673d94fe1::7d936c12fde915c6f29c8428acdd1b454637e528::b47bf26c677239ac4343e74d84fa9f9504dc80db::69568b4ca8281c07a261bbcde1c9479c45aa35b9::a6365628181179e817f2a8d12c36115986d55238::5a0e016b4b52b17ca63fdab2505d62568a22316e::d130c166ad3e571669b4b082e255ab96b35c6d01::57c25636d89374a71effe7d6fc1f0ba26bcd1afe::17cd01589a20567062e7cee6b8ba602100053cfd::ce16286dee0af539749ea776b13e10cca7eb4c3c::0e933f76ba4edb0e06f0779f5fb4b0ea85191e8b::44ae37d78b5256b704a0edbc682e74a4c403822c::7812c065f46d1533163557839c1e44cc75f09074::b14c45a16c1f8393142a2fae297d91782e6c2182::b618339c321c387230d3ea523e80ad47af3de5cf::1a4604361f8df8e12c049ba49444b6fae6b9bb57::bac6f99608d370e9bf4b0971de24e0abd8a6971d::ab1834f035ba3b7cc61317e4780c8342b4458c19::3b2a0de548b4dbf348cd8400294ec8b0e84ee836::025c183307d93ef3aff1d1318ec2f113088b96b9::c204214df43f535f7bca8b99f94c7222a1a28d10::2d39ad036e8038af2ee512a1c7207bc77afa3925::47f2352d33b550ae897301820e07d56775b45588::816eee2c1e79c8f0f6ae07411bc0633e251119a3::1d60d34b8241366ff20d69b8d2538e05a1a1b0d2::c91139bde3f5d7034fb717f0680ea7ecdb4e5492::719b99a96e737916efa7a00c9f64dc6e859fd3e0::f4081c2d97189e46ce2f8561c6014c043a2ffadc::cb347c2096a8af5104d01953396d3255cbb3cf25::f0a706e4a0982a3c1d7cbaaa3df6767df2447c88::914eea8361298cf256139e5c1333edf4cdda1385::039cde8460b50dc310849ebe35ea598a6f013ca1::b5a887aa5e554ec3f6a3a770f82d82494ee0e95e::238939b523c097f02d833c1adfc6532014850551::702820d673f69303afb3df39d4861e6341b0a31c::a9128b9fb0fef93561ab8431f9015da89fed1b7e::18f07e828e67c98c089ed282bc15f0644cd56606::376b199c0540e39189bdf6b31b9a60eadffa3989::8a40514d2b72d5c57a84bae5e952ddf86f4db27c::916b1e34bd848f7366ac76a4a8e06d32d781bdcf::96b57a5c7a89ec323027e97b3e57fa51caa5afb2::1626b4c5cb1afe723666f5a374c326d1bc04e65a::136da25bbf0b2e86ab6bbfd107181ea956278030::1c9551f93d5d58c22877abb57e57778d0b3d8845::c5df4c538d6d993e7e19e4ba523161fba9f6ea13::c901f2c3c40043c6ac42a5f1ac4001858fec644a::fb8f18dcdeeb327736565db4ec1a3c041c77ecba::c963ef1dfbf73efea5106624eb48b346f01eaefd::b5c69b83ca3f25cc940738292cab3e2a8c80015a::be05dcdbfbb5013e9dbf9b3dea0c515adb260c9b::ffe80a14f6c69c10e47b3f37c527fb3f8dbb53cc::f17cd83826c5b375df98efab879d76320daaba4e::6cfdd9f4665b955d84e276df4f9d39e2711abf3e::0dc15986c2692f54bdde76a28ba3710d7496b495::5c760439647f77cce55d7db46b1f5f6afc566dfa::aaae3eb2c143e19e0e16bbbc7d9541e5cf16bf80::39e959eb0c90e3f7ca1877305ea3df6bd383ec52::21a0f0e78222b3c94ab0189744de29c9622323ae::b8cc4a3046f85b960a08cd6a2f77d4868a8dcf36::1bf3d54e01866ad82d72c1932f3412f581dbec07::853236d6509415b5aa084ca868790104261bfdce::6cf18141051086ff9504311e0f4f9c52c2fe127f::414ee4759d475458c41d366f837ae9de6212be51::37da0b2cecd411fb20352a6a1be3358c9e807528::f94ee895456e3f8f370321078c382c921befdfd3::5bacb732ce5dbaa8e00bda186c74fb9e7c1c6e32::08324198da0c9e6d998ef8472b99c33f73330ee4::009a3b34bc4069ffeac0fe73190bb5e0767054c2::44088ef64dfefe99640a8f562e3a745d070fe833::1293076d7b69c1cc73e6ccd08b8cef74367ef294::8a240ed54d0ac678efda4edcf9f03faf9c716ec2::01c0a6d699a7c56cf1d4cfca41cbf51c0aa58bfc::951572bec1278b00373c9684decd114edf28ed1c::e6ed883ffdc49bd7a29bbae6fbf3df390891810b::c18eb52ade49cb9a0808d89f1e8c38fc3c475fce::71ad7da2f81c8af6b57e1db7acdc1c57200449cf::a59c0dca2d76c1035e3e35d6e32a869b5135cb57::3bac8a23d19dae73929e4e6655e743b8907224a4::999674e7f0c986a1c839a6d630ea95d045804111::7229a9895f853ca87776ee8d03ea9b0076bdc726::40db4a9cdb5f9b6a0b370e87c967371d2b17079d::4b85940bd83a056816394d9662f39af6324f0061::67c75af4fe1c39969193e92841fbcbf755d87ec3::0812b87def9290b718b7707a38d8c227dad3d844::2f55215db2ccc0cf5ae12a894a267317c006c6e9::5273fc76c9f8a323cbdc05e4b351af5522184aa5::a89cd5a30f3bb9135bdf60b8242a3fb6ac2ab2e8::949ffe6da72af0eaa5ff7c794e3831983f4a684e::e8a6bdc17acc0d0c771c774d955cea53be7ac7ec::080aa35c5b1d3a8fd7fbc86aba930d188d2e84aa::5f0d69171671c305879d67bf1a4e29619b0a3c98::35eec7b1b087b120d3cd8e419060b283e4a375d5::ff467a2bdff1746acb4b5970874441e88697ead7::3362205f81219458287fa2202b49228cd36fa444::c63c4273dfa9f094d6635582275609c435b71d02::51532867193503a5f8e8cd46c4c52b836b356275::fb551bf62c5171e6fa23604a01e74e77a1c744e0::953568e21301fe69b069554f782e1dc82bf108fd::0dd8d73a38c9a7bf780723de0cbf769868e93b98::eef35f19bc8c73f718f4f597be1e59b6ad330e11::ccdf1a61c4966048f3d03ea41d2e8c0f348208eb::0742f00c299a2b5ab231d3ead41bee208e9e4c34::49de1f1c7c16cc6f7319e32168ae970f43514b2d::bb2281c3e2f5120cf20d918247687bee23fd7f0c::f3d47e918b8620b358b9e8662701388a209566c2::9ac8763df2141f1dc6eda358b9c77ac43690bfc9::b0b9b4f7dd2ca959ac101bffed358b174d87044e::ac2c1a89a86b6b1884a57625c13877f17a160fd1::7de09a46521e0c2e31f851b1070c5fe8bf79611d::d876421b413ae9558ad3967570649f7a60fca615::df52d60808eeaa8b49becf2dd6328e86ecfb2264::f8e4d63d520014e178cb96074aaf7bebc0848e26::9d74366314a6d44d68835b7c832a0b52c13aa5e6::6b3d409e0ccdb3a85084422007f456d621f5dc7a::
https://api.github.com/repos/ansible/ansible,48082,win-process-utils::devel,0,merged,affects_2.8::docs::docsite::feature::needs_revision::support:community::support:core::test::windows::,"##### SUMMARY A refactoring of the become and process utils used in Windows. This PR does the following; * Move the C# code that calls `CreateProcess` to a C# util * Refactor the become C# code to share the code in the new process util above * Also add support for become to another account without setting a password * Expand the tests to cover more scenarios Fixes https://github.com/ansible/ansible/issues/34343 ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME Ansible.Become.cs Ansible.Process.cs ##### ANSIBLE VERSION ```paste below devel ```If you split out the 2.5-and-forward docs changes, like this section, into a separate PR, it will be easier to backport the right set of changes to 2.7, 2.6, and 2.5. ::Ok, will do the doc fixups in another PR and just include the new features in this one.::Moved all the stuff that isn't related to this new feature here https://github.com/ansible/ansible/pull/48149::I'd be nervous about documenting `null`, as that only works if set someplace where YAML type inference occurs (eg, it will fail in any key=value context like ini inventory or cmdline). ::s/if this is needed//::I'm not sure it actually matters, but you went to some trouble to dispose the `Process` objects as you're looping over them. This short-circuit prevents all the processes you didn't hit yet in the loop from being disposed. At a quick glance, it doesn't look like Process has a finalizer, so maybe it does matter (at least if this code were to run lots of times in a long-lived process)?::Rather than duplicating this for the skip case, maybe a try/finally inside the loop (just put the one at the bottom of the loop in the finally)? Or maybe do the pointer math directly in the for loop. Not sure if either of those ends up with easier-read code, so your call.::Found that Component (which Process inherits) has a finalizer https://github.com/dotnet/corefx/blob/master/src/System.ComponentModel.Primitives/src/System/ComponentModel/Component.cs#L23 so the handles are still being disposed off when GC gets to it.::Done::",1b0670d27ac7b8cf02a70584547de36585ed7a37::f00400c03ecb91d341341adb95aab51ca854c65f::6e872b901d65fed8b7d042b67b0420de907fc06a::8bffcf8e50e6493c332bfcaec9e1abe61b92a416::105d4001910df4bec342000c0d17060a01c0151c::51349fd1d74b02e1e03f3ad2e037fe218da1f95a::a37fb27c1d16149f96cfd9db507c7a1c4293a636::
https://api.github.com/repos/ansible/ansible,48023,issue-47904::devel,0,closed,affects_2.8::aws::bug::cloud::module::needs_rebase::needs_revision::stale_ci::support:core::,"##### SUMMARY ec2_group should not remove security group rules that have their rule descriptions updated. Update descriptions first, then do the comparison of whether or not groups should be removed. Fixes #47904 <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ec2_group ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ansible 2.8.0.dev0 (devel 96a20e0780) last updated 2018/11/03 10:51:34 (GMT +1000) config file = None configured module search path = [u'/Users/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/will/src/ansible/lib/ansible executable location = /Users/will/src/ansible/bin/ansible python version = 2.7.15 (default, Oct  2 2018, 11:47:18) [GCC 4.2.1 Compatible Apple LLVM 10.0.0 (clang-1000.11.45.2)] ``` ##### ADDITIONAL INFORMATION Should be backported to 2.6 and 2.7",3085ecbc5344d9ac9c8f7e365ee291752aa8ac04::
https://api.github.com/repos/ansible/ansible,47992,aci_sls-policy_group::devel,0,merged,aci::affects_2.8::bug::cisco::docs::module::networking::shipit::support:certified::support:community::test::,"##### SUMMARY This fixes #47668 This should be backported to v2.7, v2.6 and v2.5. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME aci_switch_leaf_selector ##### ANSIBLE VERSION v2.8",08e0c094b9bed6a3d769dd9dc4fcb0aed5dd6eee::030bfc2a691e6938b58734a6d8cd80acda3fe38e::68f7b75ea44f3f9f096a127a264927b9b8edf009::
https://api.github.com/repos/ansible/ansible,47695,pamd_fixes_multiple_issues::devel,0,merged,affects_2.8::bug::community_review::module::needs_maintainer::python3::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Provides fixes for a multitude of issues in the pamd module. This PR  supersedes #47420 and includes changes from #47178 For #47418: - Update the regex to account for leading dashes that are allowed in the pamd config file spec. - Also created a VALID_TYPES constant to use throughout the module with all allowed types and their dash permutations. `['account', '-account', 'auth', '-auth', 'password', '-password', 'session', '-session']` For #47083 See changes from @mskymoore to fix update_rule() idempotence issue For #47197 See changes from #47178 for add_module_arguments() idempotence and duplicate argument issue. Also cleaned up and simplified the logic and forced `args_present` action to fail if a complex argument (a complex argument is defined in the spec as argument within square brackets) is passed in that we can't handle with this function (users is notified to use `updated` action instead. Fixes #47418 Fixes #47083 Fixes #47197 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> pamd ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ansible 2.6.5 config file = /Users/me/.ansible.cfg configured module search path = ['/Users/me/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules'] ansible python module location = /Users/me/.virtualenvs/ansible/lib/python3.6/site-packages/ansible executable location = /Users/me/.virtualenvs/ansible/bin/ansible python version = 3.6.6 (default, Jul 21 2018, 22:49:24) [GCC 4.2.1 Compatible Apple LLVM 9.1.0 (clang-902.0.39.2)] ``` Also tested with `2.7.0` and `devel` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> See #47418 See #47083 See #47197 See #47178 <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```Not a comment on this line, but on this commit: a better commit message would be: ``` make pamd idempotent with state=updated fixes #47083 ``` That avoids having to lookup what #47083 was about.::`is not` vs `!=`?  I may not be polished enough on my python...::better commit message would be ``` pamd args_present: properly update args, avoid dupes fixes #47197 ```::Does this handle the case  where there may be multiple instances of `=` within an arg?::Looks like we're no longer setting 'pamd' facts?  Were these documented?  Do we need to document removal?::Was this previously removed and not documented as such?::What does this check for?::Couldn't we just use the old behavior of adding it if it didn't exactly match an existing argument, and perhaps emit a warning?::`is` tests identity `=` tests equality. These if statements would always test true because `current_rule.rule_args` and `new_args` are two different objects. Using `!=` tests for equality of what is contained in each variable not if the two vars are pointing to the same spot in memory.::This code was changed in a later commit. ::The module never documented that it was returning ""facts"". I removed this because the module (prior to this change) doesn't actually return things that should be considered ""facts"" either. It returns data about the task run, i.e. how many changes were made, etc. Those aren't facts and if you ran the module twice in the same playbook you would overwrite the facts on a host. It just doesn't make sense to store this stuff in facts vs just in return data where one would expect it. Additionally if someone were trying to register the output of this module they would have to do some digging to figure out that instead of storing the return values as documented they would have to dip into facts to find the data.::I removed `action` from the return values in this change since the action taken is already available in the invocation details of the module. It is superfluous. I can add it back into the return values if desired. ::When `parse_module_arguments` is used from within the `PamdRule` class to parse out the arguments in an existing rule in a pamd file it can potentially send nothing if there are no matches. This checks for the cases where the passed in args are `None`, and empty list `[]` and the second one checks for a list with a single empty item. i.e `['']` and then returns early.::That would mean that you would potentially have duplicate arguments on a Pamd line which to me is unexpected and broken behavior. i.e. If I used this module I would not expect it to add duplicate arguments to a rule, in fact if it did that I would consider the module broken...which is why this was changed. imo `args_present` should really just be used for adding in simple arguments. i.e. `use_authtok` or `sha512` and not for a super complex argument like so: ``` [query=select user_name from internet_service where user_name='%u'  and password=PASSWORD('%p') and service='web_proxy'] ``` For those types of arguments one should use updated which is properly able to test equality and update it if necessary.::I'm fine w/ the change, since this was never documented, no need to mention its removal.::```suggestion absent. This was available in Ansible version 2.4 and removed in 2.8"" ``` We can change it to 2.7 or 2.6 when it gets backported.::looks like it checks that the first element is empty, but not that there is a single element...::Ok. That's reasonable.::The first part of the if handles module_arguments is: - an empty string - an empty list - None The second part of the if handles module_arguments is: - a list with a single empty item [''] I can add a check like `isinstance(module_arguments, list) and len(module_arguments) == 1 and not module_arguments[0]` if that is preferable.::Yes, and that would narrow it down to one `if`statement.::Yeah that's probably more defensive given `UserError`, it _could_ be possible, though probably not that likely that there would be some array `[None,'foo', 'bar']`::I don't think it narrows it down to a single `if` since `module_arguments` can be an empty string or `None` and if it is we still want to `return []` which the first `if` covers. My change for this would look like ```python if not module_arguments: return [] elif isinstance(module_arguments, list) and len(module_arguments) == 1 and not module_arguments[0]: return [] ```::Ack. Looks like a good change.::I mean, you could do an `or` but that might break pep8 on line length, I dont care either way, the major thing for me was just being defensive about index 0 potentially being a `None` value AND not the _only_ index.::Yeah my preference is for shorter/simpler if tests. I'll update this. I wonder if I can make a suggested change to myself and apply it hehe.::",b35a5708cc75bb2e9f3fa65131e972f96e5c9797::cab34f9f21f21a3ac06180011c30756ecf26ed7b::8a3b421a0f4fef287e7761dcbec258ee4fdf164e::767260657196f68c7fbd1536953a1edd9adf298a::4c47456c02902bca8e42c53cecfbd136e0d37e5e::5abaa3218b7340d3afd4f1c2770c4b70e524721f::d71cd3d82e3ae4adb0463fe02d281599b1a2567b::d09c340be9d86bb083fff2122c76eb17df8b9e6e::c0f5e056cf7e51ae7ff9609c4c2bf8593ae6449b::44d70ce5925adc2a699eca22d9506b22bdb2342a::c2427a2b19d6fe8d09b79451a26a73486484e109::99aae18c1d24bbbcf8941a6920815be3846845b6::9ad33a4ac47cbdf32c6323fd4d99505c2fc0183a::c00430f3d8bc065456ea7a7dee4da5c2bccab99b::d386521ee0b2fe4422a0b09a9f95975974bf146a::a597314687a6d150d2f6e37857f96aa3177b104d::3eef78342c0d5676f4c6d7e2974049e6a12d32fa::
https://api.github.com/repos/ansible/ansible,47627,fix-ansible-metadata::devel,0,merged,affects_2.8::bug::needs_revision::support:core::,"##### SUMMARY We created the metadata spec with default values for all fields.  This allows us to set metadata for plugins and modules that lack the fields.  Add that in. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below devel ``` ##### ADDITIONAL INFORMATION Could be backported but don't want to do that on a release day.wont this now make metadata optional for modules?::yes.  metadata *is* optional for modules.  That's how we designed it.::",2f87e1a2129220c6c95ddb9005ae8992f69f852f::16d00ac6abd6397ea1211e073bec31dcf2a3048d::
https://api.github.com/repos/ansible/ansible,47492,docker_network_ipv6::devel,0,merged,affects_2.8::cloud::docker::feature::module::new_contributor::python3::shipit::support:community::support:core::test::,"##### SUMMARY This PR enables support for IPv6 networks and allows defining IPv6 IPAM config blocks. The configuration options are based on the existing docker-compose documentation https://docs.docker.com/compose/compose-file/compose-file-v2/#ipam . So far, the parameter for IPAM config was named `ipam_options` but in recent docker versions, this is called `ipam_config` (see link above). Here is the example from the docker-compose docs: ``` ipam: driver: default config: - subnet: 172.28.0.0/16 ip_range: 172.28.5.0/24 gateway: 172.28.5.254 aux_addresses: host1: 172.28.1.5 host2: 172.28.1.6 host3: 172.28.1.7 options: foo: bar baz: ""0"" ``` So I changed the parameter name `ipam_options` to `ipam_config`. I also created a branch (https://github.com/smueller18/ansible/tree/docker_network_ipam_options) that handles the new parameter `ipam_options` well, but this change requires docker >= 2.0.0, so I cannot create a pull request for that change until support for docker-py and python 2.6 is dropped. Fixes #34855 ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME docker_network ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ansible 2.8.0.dev0 config file = /etc/ansible/ansible.cfg configured module search path = ['/home/sm/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules'] ansible python module location = /home/sm/git/github/smueller18/ansible/venv/lib/python3.7/site-packages/ansible-2.8.0.dev0-py3.7.egg/ansible executable location = /home/sm/git/github/smueller18/ansible/venv/bin/ansible python version = 3.7.0 (default, Aug 30 2018, 22:41:14) [GCC 7.3.0] ```This is a breaking change to existing functionality. Rather than outright replacing the option here, why not create `ipam_config` as a new option and include logic to use it preferentially if it's set? That way, upgrading users won't have their playbooks break immediately. Additionally, the `ipam_options` option should be marked as deprecated when doing so.::The `enable_ipv6` option was added in 1.10.0 of docker-py (see [changelog](https://docker-py.readthedocs.io/en/stable/change-log.html)). You'll need to either conditionally enable this parameter (see `docker-container` for examples of how to do this), or update the minimum version of docker-py required (in both the documentation above and the `AnsibleDockerClient` initialization below).::Simply removing an existing option is not acceptable. Adding a new option and deprecating the old one is the best way to do this correctly. (Also, you should include some logic which forbids to use both.)::I see your point. This is a bit sad, because the parameters then differ from the official docker specification. So I will add a deprecation note for `ipam_options` and implement the ""real"" ipam options as parameter `ipam_driver_options`.::Is it acceptable to set requirements for the whole docker_network to python >= 2.7 and docker-py >= 2.0.0 ? For me, this is the preferred method.::Why do the parameters differ? You can still name the new parameter `ipam_options`, as long as you keep the old one (marked as deprecated, to be removed in Ansible 2.12) and make sure that specifying both doesn't lead to problems (i.e. simply fail if both are specified). Internally, you can convert the old one to the new one if the old one is specified.::No, I don't think that's a good idea.::In Docker 1.10.0 (https://docs.docker.com/release-notes/docker-engine/#1100-2016-02-04, https://github.com/moby/moby/pull/17316) the new parameter `--ipam-opt` was introduced. But because the docker_network module already defined the parameter `ipam_options` (which actually is called ipam config in the docker specification) I cannot use `ipam_options` for the newly introduced parameter.::Ok, I was mainly confused because a third (not yet mentioned) name showed up. So the idea is to: 1. deprecate `ipam_options`; 2. add `ipam_config`, which is auto-created from `ipam_options` if that one is specified; 3. add `ipam_driver_options` (for the IPAM driver-specific options). That sounds OK for me. Otherwise, we could maybe also proceed as follows: deprecate `ipam_driver` and `ipam_options`, and add `ipam` parameter, which accepts something like [here](https://docs.docker.com/compose/compose-file/compose-file-v2/#ipam). This requires a lot more error-checking on the module's side, though, since Ansible won't do much (except guaranteeing that `ipam` is a `dict`).::I tried to implement the parameter `ipam_driver_options` (requires docker-py >= 2.0.0), but it requires a lot of changes to the docker_network module to guarantee backward compatibility. So I decided not to implement this feature.::Please add `removed_in_version='1.12'` to `ipam_options`.::Please remove this, and add an item with the deprecated explanation to `description`. Also, please use correct casing for `IPAM`.::If we really want to bump the docker-py version again (we've already done it once for 2.8 from 1.8.0 to 1.9.0 in #35370), we should not have two changelog entries (1.8 -> 1.9 and 1.9 -> 1.10), but merge them. The existing one is in https://github.com/ansible/ansible/blob/devel/changelogs/fragments/35370-add_support_for_docker_network_internal_flag.yaml::You should point to the docker documentation here, so that users know which options and values they can use.::Please don't add a default of `[]`. This makes it impossible to distinguish between ""the user didn't specify options"" and ""the user explicitly specified no options"" (this distinction is important for idempotency checks, even though not right now, but it might block future additions similar to the `comparisons` option for `docker_container`).::I don't think you defined `network_four` above, so why not keep `network_one` here?::The correct spelling is `IPv6`, not `ipv6`.::Please also use IPv4 and IPv6 instead of their lowercase variants in the comment/names (here and below).::Don't do this check manually, but let Ansible do it. (Search for `mutually_exclusive` in docker_service.py)::Has `net['IPAM']['Config']` always one or two entries, with IPv4 always being the first and IPv6 always being the second?::You might want to precompile this as a pattern.::Is `net['EnableIPv6']` always given? Or only for a new enough docker version? It's probably better to use `net.get('EnableIPv6', False)` instead.::Could you convert the arguments of `create_network()` into a dict `params`, and pass it using the `**params` syntax? That makes it simpler to only add parameters if they are really needed (like `enable_ipv6`; only pass that if it is not `None`).::For what precisely is this needed?::You should manually remove the network here if you don't need it later on.::The IP range doesn't lie in the subset. I don't think that's a good idea. It could even be that future versions of docker might fail because of this.::Please remove the default `[]`.::Most of the other options (e.g. `connected`) also have an empty list as default so I did the same. Changing to `None`.::Yes, network_four was never defined, reverting to network_one::ok::Yes, IPv4 is always appended first, see https://github.com/moby/moby/blob/cf72051c3746fa60d7e7995c0342eaca91f07bfd/daemon/network.go#L675::But there is a feature request for IPv6 only network (https://github.com/moby/moby/issues/37798). If this is implemented, the current logic would not work. Adjusting this code to work independently from index.::How should I merge them? Delete the second entry of #35370 and set my entry to ```""docker_network - Minimum docker-py version increased from ``1.8.0`` to ``1.10.0``.""``` ? ::As far as I know, this is always given. But your version sounds better.::see https://github.com/ansible/ansible/pull/47492#discussion_r227458601::I copied that from the earlier example. Fixing.::Done::Done::Yes, that's probably the best way. Or create a new changelog fragment `docker_network-requirements.yaml` which contains that one, and remove it from both yours and the other changelog fragment. In that case, there's one unique place where it can be bumped in the future.::`connected` is a bit different, since it is not an option passed to docker, but something processed completely by this module. I would have not used defaults for some of the others, but that's now too late to change (to keep backwards compatibility).::It might be possible to convert the existing values to a syntax simliar to the one used by the module, and then use the comparison functions of #47709 to do the comparison. That would probably simplify the comparison logic a lot. But that's also something we can change later on (as long as we change it before 2.8 is released, afterwards we have to watch out for backwards compatibility).::If you only add `ipv6_enabled` if it is set to `True`, there's no need to require 1.10.0 then.::Better remove the space after the comma in `L(...,...)`, as you'll otherwise might generate invalid ReST; and having `href="" https://...""` with the space also isn't too good.::Why not change this to ```suggestion if not camelkey or net_config.get(camelkey) != value: ``` and get rid of the second branch?::You could put `driver` and `options` in here already.::You can also leave `default=None` away. That makes it simpler to parse (IMO). (I don't know why it was already in there for some of the existing options...)::I don't know how the behavior is if one defines an IPv6 subnet without setting enable_ipv6 to yes with docker version 1.9.0. There might be errors.::And after checking docker-py 1.9.0 docs, I saw the newly introduced parameter `internal` requires Docker 1.10.0 for externally isolated overlay networks: https://docker-py.readthedocs.io/en/1.9.0/networks.html#network-creation::Ok, then let's keep it. (We can still change that later if we want, before Ansible 2.8 is released. If someone wants to invest the work...)::The reason why I did not include those two options is because they have a default. But changing is not a problem. Should I change it to ``` if self.parameters.driver is not None: params['driver'] = self.parameters.driver if self.parameters.driver_options is not None: params['options'] = self.parameters.driver_options ``` or without conditionals? ``` params['driver'] = self.parameters.driver params['options'] = self.parameters.driver_options ```::Sounds good::The second, or simply even do ``` params = dict( driver=self.parameters.driver, options=self.parameters.driver_options, ) ```::You should keep that line in this file.::merged it into the newly proposed file name ::This file should keep it's name as well. Only move the version bumps to the new file.::ah, reverting...::Looks good now :) Thanks!::``` self.assertRaises(ValueError, get_ip_version, '192.168.0.1') ``` should work with python 2.6 but you can't check the error message.::In the [test container](quay.io/ansible/default-test-container:1.4.1), the backported [unittest2](https://pypi.org/project/unittest2/) is available. So I added a switch to use the backported unittest2 on python < 2.7::I have just been told that new unit tests must use pytest and not unittest. (That should also solve the Python 2.6 problems...)::I have never used pytest before, but that looks way more elegant::Indeed! *And* it works with Python 2.6 ;)::[minor] This test's name should call out that it's testing the removal of the netmask. It'll make it easier to figure out what's failing if this test ever finds a regression.::It's not testing removal of the netmask, but produces a failure. The netmask must always be there for it to work. But yes, a more expressive name would be nice. But that can wait until another PR, let's get this one merged first :)::It's testing that removing the netmask produces the expected failure, hence why it should have a more expressive name. But as you say, it should be merged, which is why I marked my shipit in another comment on the main thread.::Ah, sorry, I think I misunderstood you :) Anyway, I think we fully agree ;)::",031f5a922d4d28ec1813c3fca7c99c757873ef49::85ff1d25284985cec083416beb52cdee604539fc::16d8e492fb62e8617f8af595442a36d35e033eaf::b86ced4236f55559c3b1ad29a73c3dda1584dca5::482567a78f9c2fd4d688053eaef5d11b2db04581::70b1e0cccaded15e6469dbfed2c6769d68f9fac0::4253ca69dfe2558add9d148eb4e39844b3a02bfe::de90c118e90ed07f7df08a4aed169f1a03e6ebf7::7a5a1ffb029ee05a5fd16586f731313ebbdce7e7::f128d3274bd62556530ee7eb1c7d57c1b40de2db::c614afde5104608f535449776055f23e08d9cdd8::8e78f027dee94f9d9ad4c100859a93a2336af96c::b4ca88da2a8874c789b6e6459d4eedf7a04d5fac::4ec231261906e56204b2788985797af4437ad621::4f3f073e30dc7be6edc7da50ce2c7b3087efd479::4f170942dbd5e1d948cf4ef5e127781b42b4e65b::ba2054f998c319becebf9ba52f7ed08c2db85b8c::2c2cee82aeb2b7992f387529a7f773fd4e6965d7::015b561c3a923f0e58460bf2fb7c114bd7150316::3b3e3ec24a1a06a8e54a2d911c8a8bdba9405c84::2ada7f4ee5338e68200c0155ff9d865b926b82b4::f447c51e8600f4a2c50bb7efb93f6f0b87de7910::f2b124bbe972815b759eefb1d4eb379e4bf6dbc5::f45d60454bf0026364319f8cda6a4ba7e56e2dcc::
https://api.github.com/repos/ansible/ansible,47466,fix-user-module-cve-changelog::devel,0,merged,affects_2.8::bug::community_review::small_patch::support:community::,"##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below devel ``` ##### ADDITIONAL INFORMATION Needs to be applied to the backport: https://github.com/ansible/ansible/pull/47445  as well",e02300870120f4cef0dbe20dc35cf364d7b99823::
https://api.github.com/repos/ansible/ansible,47465,fix-python3-problem-with-user-cve-fix::devel,0,merged,affects_2.8::bug::core_review::module::python3::small_patch::support:core::,"##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/modules/system/user.py ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below devel ``` ##### ADDITIONAL INFORMATION Needs to be added to the backport: https://github.com/ansible/ansible/pull/47445",7c619980483621fadc7d9e6a4d7df1bdf4f1137a::
https://api.github.com/repos/ansible/ansible,47412,mail_starttls::devel,0,merged,affects_2.8::bug::community_review::module::needs_maintainer::python3::stale_ci::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> #44552 was fixed module working with `SSL`. This PR also fixed module working with `STARTTLS`. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> mail ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ansible 2.7.0 config file = /home/k0ste/.ansible.cfg configured module search path = ['/home/k0ste/ansible/my_modules', '/home/k0ste/ceph-ansible/library'] ansible python module location = /usr/lib/python3.7/site-packages/ansible executable location = /usr/bin/ansible python version = 3.7.0 (default, Sep 15 2018, 19:13:07) [GCC 8.2.1 20180831] ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> After backport to 2.7 should resolve #46673. This is strange to me: the documentation of `smtplib` says that if you pass host/port to the constructor, it'll call `connect` for you: > If the optional host and port parameters are given, the SMTP connect() method is called with those parameters during initialization. So you're connecting to the SMTP server twice -- why?::First connect is a secure layer.::I tested the mail module on Ansible v2.7.1 on Python 3.7.1 and if you specify `secure: never` the mail module works fine. Changes are only necessary to be applied to the attempt to use ssl (which you did on lines 267 & 268). By changing the regular smtp section, it breaks functionality for ansible users that run on python 2.7.x. Is there a reason you changed this section as well?::@tpeyton, because `smtp_ssl` and `smtp_over_tls` is different things.::",3fb1bf305577eff992dc6703055950b1253c7ae7::
https://api.github.com/repos/ansible/ansible,47373,k8s_auth_fix::devel,0,merged,affects_2.8::bug::k8s::shipit::small_patch::support:community::,"##### SUMMARY kubeconfig should be loaded if *either* or both of context or kubeconfig is set (this allows picking a context and default kubeconfig or picking a kubeconfig with default context) Fixes #47149 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME k8s ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ansible 2.8.0.dev0 (devel acda7bae5f) last updated 2018/10/20 12:58:54 (GMT +1000) config file = None configured module search path = [u'/Users/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/will/src/ansible/lib/ansible executable location = /Users/will/src/ansible/bin/ansible python version = 2.7.15 (default, Oct  2 2018, 11:47:18) [GCC 4.2.1 Compatible Apple LLVM 10.0.0 (clang-1000.11.45.2)] ``` ##### ADDITIONAL INFORMATION Should be backported to 2.7",b726fe172fc69b8e88137977eeb82c98e4571037::
https://api.github.com/repos/ansible/ansible,47128,backport/2.5/44601::stable-2.5,0,closed,,##### SUMMARY backport of current pamd moduled ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME pamd ##### ANSIBLE VERSION ``` stable-2.5 ```,2e0667b098c403a2107619a261935088884b41a8::
https://api.github.com/repos/ansible/ansible,47127,backport/2.4/44601::stable-2.4,0,closed,,##### SUMMARY backport of current pamd moduled ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME pamd ##### ANSIBLE VERSION ``` stable-2.4 ```,eeeb0861bac3788dc58cb29dd602cc64a74d8fa7::
https://api.github.com/repos/ansible/ansible,47126,backport/2.3/44601::stable-2.3,0,closed,,##### SUMMARY backport of current pamd moduled ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME pamd ##### ANSIBLE VERSION ``` stable-2.3 ```,87f7e7b926424c2d5abf36f7a88e2d48627e9053::
https://api.github.com/repos/ansible/ansible,47012,plugin-docs-list-fix::devel,0,merged,affects_2.8::bug::support:community::support:core::,"The optimization quickly searches the plugin code for short_description fields and then uses that in the -l output.  The searching was a bit too naive and ended up pulling out malformed yaml.  This caused those plugins to be omitted from the list of plugins of that type with a warning that their documentation strings were wrong. This change makes the documentation parser aware that the documentation string could have a relative indent for all of its fields which makes it robust in the face of this particular problem. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME ansible-doc ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below devel 2.7.0 stable-2.6 ``` ##### ADDITIONAL INFORMATION This should be backported to 2.7 and 2.6 as well. Need to have a new sanity test that checks the output of ansible-doc -l  to prevent this from regressing.  Opened a ticket to track that.",ae1200196a54b7d553a34ea59edf1b22f10e9fd9::8bacf76bcbe0e37e5c206a6c6b6de164ff6cc237::
https://api.github.com/repos/ansible/ansible,46706,dagwieers-patch-1::stable-2.7,1,closed,bug::,##### SUMMARY This is a backport of #46403 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME mail ##### ANSIBLE VERSION v2.7.0,577864e69373bb4f271ec8e5cfb97cded83b3378::
https://api.github.com/repos/ansible/ansible,46676,devel::devel,0,merged,affects_2.8::azure::cloud::feature::module::new_contributor::shipit::support:community::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> StandardSSD_LRS have been introduced (generally available) in June 2018. This change will add support for this. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Feature Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> azure_rm_virtualmachine ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ansible 2.6.4 config file = /home/rnsc/<redacted>/ansible/ansible.cfg configured module search path = [u'/home/rnsc/VE/local/lib/python2.7/site-packages/ara/plugins/modules'] ansible python module location = /home/rnsc/VE/local/lib/python2.7/site-packages/ansible executable location = /home/rnsc/VE/bin/ansible python version = 2.7.15rc1 (default, Apr 15 2018, 21:51:34) [GCC 7.3.0] ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> This is my first PR, I hope I understood the procedure correctly. Not sure how to work it out if I want to have the feature backported to 2.6 along with 2.7 support. <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",fd23cf6ba6cea3fa4dcf8a1c0f581fc1fe612b2a::
https://api.github.com/repos/ansible/ansible,46672,devel::devel,0,closed,affects_2.8::azure::cloud::feature::merge_commit::module::needs_rebase::new_contributor::support:certified::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> StandardSSD_LRS have been introduced (generally available) in June 2018. This change will add support for this. <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Feature Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> azure_rm_virtualmachine ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ansible 2.6.4 config file = /home/rnsc/<redacted>/ansible/ansible.cfg configured module search path = [u'/home/rnsc/VE/local/lib/python2.7/site-packages/ara/plugins/modules'] ansible python module location = /home/rnsc/VE/local/lib/python2.7/site-packages/ansible executable location = /home/rnsc/VE/bin/ansible python version = 2.7.15rc1 (default, Apr 15 2018, 21:51:34) [GCC 7.3.0] ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> This is my first PR, I hope I understood the procedure correctly. Not sure how to work it out if I want to have the feature backported to 2.6 along with 2.7 support. <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",defe0b0c123a4ac30de979aeb026e5dca67b1fbd::57b4ff5d408bac7d48b3fd5d005a98f6580aa658::
https://api.github.com/repos/ansible/ansible,46653,fix-overzealous-mocking::devel,0,merged,affects_2.8::bug::support:core::,"##### SUMMARY This was found when using q to help debug failing tests and the tests being debugged came after the oneview tests were run. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME test/units/modules/remote_management/oneview/oneview_module_loader.py ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below devel ``` No harm in backporting this but it doesn't cause any immediate problems.",973f94efc82bea35ac05b8beece520da12e98625::
https://api.github.com/repos/ansible/ansible,46641,bugfix/46603-yum-config-empty::devel,0,merged,affects_2.8::bug::core_review::module::packaging::small_patch::support:core::,"Signed-off-by: Adam Miller <admiller@redhat.com> ##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Fixes #46485 Fixes #46603 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> yum ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ansible 2.8.0.dev0 (bugfix/46603-yum-config-empty c815343346) last updated 2018/10/08 14:20:35 (GMT -500) config file = /etc/ansible/ansible.cfg configured module search path = [u'/home/admiller/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /home/admiller/src/dev/ansible/lib/ansible executable location = /home/admiller/src/dev/ansible/bin/ansible python version = 2.7.15 (default, Sep 21 2018, 23:26:48) [GCC 8.1.1 20180712 (Red Hat 8.1.1-5)] ``` Just a nitpick but the same conditional `self.conf_file and os.path.exists(self.conf_file)` is a couple of lines above, why not just indent the original conditional `if repoq` there: ``` if self.conf_file and os.path.exists(self.conf_file): self.yum_basecmd += ['-c', self.conf_file] if repoq: repoq += ['-c', self.conf_file] ```::I honestly can't believe I didn't think of that. Will update, thanks.::is ` config_file: /etc/yum.conf` missing from this test?::@tamsky it shouldn't be since that's the default one in the container instance as it executes in shippable, I'm just passing it to exercise that arg passing but I realized that because of a change in Ansible 2.7 I need to conditionalize it.::@tamsky I'm a doof, it absolutely is. Sorry, I misunderstood.::There remains an apparent mismatch between: this test's name: `name: install sos with state latest idempotence with config file param` which includes the string ""with config file param"", vs this test's content, which lacks a `config_file` param `yum: name=sos state=latest` In the previous test being added, in this PR, back at L113... the test name matches the test content: ``` - name: install sos with state latest in check mode with config file param yum: name=sos state=latest conf_file=/etc/yum.conf ``` Would it be appropriate to update the second test's `name:` (on line 147) so that the test content matches the test name? Or... am I confused about all this? Any fixes, please backport to stable-2.7 as well. Thanks.::",10ac23eb352ba113682dc4de15d4ef959bb24f51::1db261c718d98d9c4ebb76ec1860d67eaa4d86b0::
https://api.github.com/repos/ansible/ansible,46436,openssh-module::devel,0,merged,affects_2.8::contrib_follow_up::crypto::module::new_module::new_plugin::shipit::support:community::,"##### SUMMARY Implements module for generating and managing openssh-keypairs. ##### ISSUE TYPE - New Module Pull Request ##### COMPONENT NAME openssh_keypair ##### ANSIBLE VERSION ``` ansible 2.6.2 config file = /etc/ansible/ansible.cfg configured module search path = [u'/home/xxx/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /usr/lib/python2.7/dist-packages/ansible executable location = /usr/bin/ansible python version = 2.7.12 (default, Dec  4 2017, 14:50:18) [GCC 5.4.0 20160609] ``` I don't think the `+` applies, if I read COPYING.::Communicating the passphrase as an argument to `ssh-keygen` may make it show up in process lists. This is not an acceptable leak. I did not see an easy way to make it listen on `stdin` for the password, though... ``` >>> import subprocess >>> subprocess.Popen(['/usr/bin/sleep', '100']) ``` ![the arguments to sleep are visible in htop](https://user-images.githubusercontent.com/974662/46491261-80be8d80-c80a-11e8-9cf1-f64663e96fca.png) ::if `self.path` doesn't exist, `self.path + "".pub""` will never get removed.::Typo::It should be possible to do this in Python I think... But that may be more complicated. I know PyCrypto can create RSA and P256 keys, but I don't think it supports ed25519. If you choose to stick to calling `ssh-keygen`, that's fine, but just so you're aware.::There are a *lot* of Ansible modules having exactly this line. (I guess @lolcube, like most people, just copied that from another module :) )::That's indeed quite a problem. I don't see how this can be solved in a good way (except to essentially rewrite ssh-keygen in Python). Related, but unrelated: to execute commands from an Ansible module, there's `module.run_command()`. There's also `module.get_bin_path()` to get hold of the path of the binary. Search the modules for examples.::I would stick to [cryptography](https://cryptography.io/en/latest/). PyCrypto was last updated in 2013 (!), so it seems pretty dead.::`pexpect` could be used to provide the password to the subprocess on stdin.::You should use `module.add_cleanup_file()` (somewhere above) instead of manually trying to clean up.::In the ""Generate privatekey6 - standard - with non-ASCII passphrase"" test, this fails with `'ascii' codec can't decode byte 0xc3 in position 16: ordinal not in range(128)`. Stacktrace: ``` File ""/tmp/ansible_openssh_keypair_payload_kCnMbD/__main__.py"", line 193, in generate tf.write(""#!/bin/sh\necho %s"" % quote(self.passphrase)) File ""/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/codecs.py"", line 706, in write return self.writer.write(data) File ""/usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/codecs.py"", line 369, in write data, consumed = self.encode(object, self.errors) ``` It seems to fail in all Python 2 tests; in Python 3 it seems to work.::The same issue was already happening with the `openssl_*` modules (pyOpenSSL is EOL already for a while and was even already mostly abandoned when these modules were written) - it is extremely hard to support even the most recent LTS distributions. The goal for the `openssl_*` ones that we needed internally was Debian Jessie (with backports being acceptable) --> https://packages.debian.org/jessie-backports/python-openssl This is even an issue even on RHEL/CentOS latest (https://pkgs.org/download/pyopenssl), where some parts of the `openssl_*` modules don't work. Potentially using/requiring `cryptography` ~~1.7~~ 1.4 (https://cryptography.io/en/latest/hazmat/primitives/asymmetric/serialization/#cryptography.hazmat.primitives.serialization.PublicFormat.OpenSSH for public keys, but I didn't find anything regarding private ones... - but PKCS#1 might be enough for those?) might be an option for this one, but writing parts of openssh-keygen in Python (probably Python 2+3 by the way for the next few years) is also not a great thing to do, but doesn't seem to hard for simple key files: https://stackoverflow.com/a/39126754 This might get hairy though if more advanced features get used.::it works either in py 3 or py 2 i haven't found a way to get it to work with both versions yet::i solved it by using the SSH_ASKPASS envoirment variable. Providing it through stdin jus isn't reliable enough. ::By the way, we plan to also write and ship a module for OpenSSH certificates (https://blog.habets.se/2011/07/OpenSSH-certificates.html) and these are even worse concerning support in any established library. That means for that one we need `ssh-keygen` anyways, so having this module use it too is more consistent. I'm sure that patches would be welcome though if someone wants to rewrite this module to use `cryptography` (maybe optionally?), shouldn't be too hard to do.::typo::Here and below: ~~private key~~ --> key pair::This gets called in check mode too and might change attributes on disk::Looks like an issue in https://github.com/ansible/ansible/blob/8a6059ad0a5c9e96adb24f9dec1da9687a415045/lib/ansible/module_utils/crypto.py#L129-L131 too::maybe `tmpfile_name`?::Maybe use a different class name?::Are both lolcube and bsod your github accounts? If not, please only use lolcube, as otherwise bsod will be informed for every issue and PR related to this module.::Use `C(ssh-keygen)`, and also `... generate C(rsa), R(dsa), R(rsa1), C(ed25519), or C(ecdsa) private keys.` to improve formatting.::And out of curiosity: what is `rsa1`? The ssh-keygen on my machine does not know about it (`unknown key type rsa1`); I've got OpenSSH_7.8p1 installed. From searching the internet, it looks like `rsa1` is a SSHv1 RSA key (and thus deprecated, as the whole SSHv1 protocol). If that's correct, you might want to mention that, and that not all implementations support it.::Are really both private and public keys written into the same file? Or is the private key written to `path`, and the public key to `path.pub`?::You should note that the comment is not used when checking whether an existing key matches the module's options (i.e. for idempotency).::When this message is printed, it will contain a newline followed by a lot of spaces. You should compose it as follows: ``` .py module.fail_json(msg=('For RSA keys, the minimum size is 1024 bits and the default is 4096 bits. ' 'Attempting to use bit lengths under 1024 will cause the module to fail.')) ```::The same problem here.::`pipes.quote` is deprecated in Python 2.7 already. You should import `shlex.quote` if available. try: from shlex import quote except ImportError: from pipes import quote::File missing newline at end of file.::What kind of permissions is this file created with? I find it slightly scary that we're creating some tempfile containing the password that's not entirely guaranteed to be removed (e.g. if system goes offline before ansible can delete it).::You need to make sure `tf` doesn't write a unicode string. tf.write(u(""#!/bin/sh/\necho %s"" % quote(self.passphrase)).encode(""utf-8"")) Ansible may have a utility function to do this.::No, `set_fs_attributes_if_different` respects `module.check`.::Passwords should not be written to disk. Is there a reason you can't use `pexpect` to provide the password? I did a quick proof of concept using that method: ```python #!/usr/bin/env python import pexpect def main(): password = 'testing' child = pexpect.spawn('ssh-keygen', ['-q', '-b', '2048', '-t', 'rsa', '-C', 'demo', '-f', '/tmp/keyfile']) child.expect('Enter .*:') child.sendline(password) child.expect('Enter .*:') child.sendline(password) child.expect(pexpect.EOF) if __name__ == '__main__': main() ```::Ah thanks, I checked the implementation again, it verifies this here: https://github.com/ansible/ansible/blob/f2dccb90e893df30c2b8bfc925dba80f6ceed6a7/lib/ansible/module_utils/basic.py#L1376::`rsa1` is indeed the old, deprecated (but still supported on some platforms...) format for RSA keys.::This is a simple enough operation it can be done inline in the test instead of as a dependency.::ok thank you::Don't use `C(...)` here, as this will be shown unformatted to the end-user.::Same here (and further below).::You should use `module.get_bin_path('ssh-keygen', True)`.::Out of curiosity: why aren't you using `module.run_command()` instead of directly using `subprocess.call` and `Popen`?::Same here.::typo: `cointaining` → `containing`::Shouldn't `changed` only be set to `True` if something is actually deleted? Otherwise, calling the module twice with `state == absent` will result in the module reporting a change twice (i.e. idempotency is violated).::I think you should also include at least one idempotency check for `state == present` and one for `state == absent`. Right now you're not testing the check code at all.::This is 1:1 the same code as in https://github.com/ansible/ansible/blob/8a671f54ddc5ec114ef807dc71f49d61261d2107/lib/ansible/module_utils/crypto.py#L150-L160::The same issue exists for the other modules in the `crypto` namespace e.g. https://github.com/ansible/ansible/blob/03bccdda9223f8b6ab4bb38a264e07b67f4ed890/test/integration/targets/openssl_privatekey/tasks/main.yml#L15-L22 and the check: https://github.com/ansible/ansible/blob/03bccdda9223f8b6ab4bb38a264e07b67f4ed890/test/integration/targets/openssl_privatekey/tests/validate.yml#L31-L39 which doesn't check for idempotency of the absent state. I guess a followup PR could be made to fix all modules in the namespace at once (e.g. first checking for file existence and only reporting ""changed"" if they existed). ::Ah, I think the point is that `os.remove()` raises an exception if the file isn't there, so `changed` won't be set to `True`.::In case the file doesn't exist, `keypair.check(module)` returns `False`, whence `changed` is set to `True`. I don't think that's correct.::Yep, that's something we should change for all tests. Let's do that once this is merged.::",90f601157bd974ca31fac7445b6d2b1cfec1070d::6297561c1ac601e15afee88eed889333df6d215f::287d304445840afb2727c82b4c7d6156bad2442d::
https://api.github.com/repos/ansible/ansible,46405,ensure_tag_type_before_waiting::devel,0,merged,affects_2.8::aws::bug::cloud::core_review::module::stale_ci::support:community::support:core::,"##### SUMMARY Tags that are integers and not explicitly quoted cause the module to fail. ``` - s3_bucket: name: ""{{ bucketname }}"" tags: 12345: 123543 ``` This should be backported to 2.6. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME s3_bucket ##### ANSIBLE VERSION ``` ansible 2.8.0.dev0 ```",f5e237cdd241c4718201265bf2347ca3448c7ad8::620294160d7d1a148750b5fb013822093c256ba7::
https://api.github.com/repos/ansible/ansible,46400,docs_version_update::devel,0,merged,affects_2.8::docs::shipit::small_patch::support:core::,"##### SUMMARY Related to #46399. Updates the version displayed on the `latest` documentation on docs,ansible.com. Merge and backport to 2.7 before building the docsite from `stable-2.7` with `Old_version=no`. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs.ansible.com <!--- Write the short name of the module, plugin, task or feature below --> ##### ANSIBLE VERSION 2.7 <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ```",9e047a6524b1a3aa59f2b31856015bfb5d5218d4::
https://api.github.com/repos/ansible/ansible,46399,release_27::devel,0,merged,affects_2.8::docs::support:core::,"##### SUMMARY Related to #46356 Updates the Release & Maintenance page for the 2.7 release. <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs.ansible.com ##### ANSIBLE VERSION 2.7 ##### ADDITIONAL INFORMATION Needs to be backported to all stable branches for supported versions.",c77bf1f3c92c435c1fc80660cfc773c7723b6bf2::
https://api.github.com/repos/ansible/ansible,46376,ps-linting::devel,0,merged,affects_2.8::bug::core_review::module::support:community::support:core::test::windows::,##### SUMMARY Ignore rules that are not relevant to Ansible and PowerShell due to the way Ansible works. Fixes https://github.com/ansible/ansible/issues/45891 cc @mattclay should this be backported once merged into devel? ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ansible-test sanity pslint ##### ANSIBLE VERSION ```paste below devel ```,8b8d5f91d4b6d066586aea36e305aa4d6ea327c9::
https://api.github.com/repos/ansible/ansible,46360,win_reboot-fix::devel,0,merged,affects_2.8::bug::needs_revision::support:community::windows::,"##### SUMMARY This fixes an issue where win_reboot would be ignoring the provided post_reboot_delay (and on Windows timing/waiting is everything!) This must be backported to the v2.7 branch. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_reboot ##### ANSIBLE VERSION v2.7 and newerBoth `reboot_timeout_sec` and `connect_timeout_sec` are valid for `win_reboot`. Since `win_reboot` is using this method, these options need to stay.::Since this is the same value as defined in `reboot.py` do we need it here?::Probably not, but I liked it to be clear locally. And the other discussion we are having with the Windows WG is whether we should increase this to something more safe, we know that a post reboot delay of 0 is akin to troubles. We definitely want to add a note to the documentation (in another PR) with respect to the general issue on Windows (not knowing when it has settled after a reboot) and add some examples of good validation checks that people can reuse.::You are right, I thought we were overloading this, but we aren't.::That shouldn't hold up this PR, we should file a new issue around adding more examples and improving the documentation for win_reboot and follow it up once this bug is fixed.::Doc update is here: https://github.com/ansible/ansible/pull/46377::Should this be shared in the `run` method after `perform_reboot` is called? That way the same code is used for win_reboot and reboot.::That's a good suggestion. I have updated the code like this.::Since this is now common code and `win_reboot` also accepts `post_reboot_delay_sec`, we also need to loo for that key here.::Correct. I would like to get rid of these _sec parameters and plan to deprecate them in a subsequent PR.::Agreed.::Same thing here: need `post_reboot_delay_sec` here since `win_reboot` accepts that.::This is being set a few lines higher with one of the values, so I think this one is correct.::Sorry, I've been staring at this too long. :)::No worries, I made my share of oversights in this case too :-)::",528014b90122aed59c9600179e324cf525a4dc0a::da3383fedbf7cde87af7f2773c5527ecc5d3ce48::
https://api.github.com/repos/ansible/ansible,46242,ec2_classic_fix::devel,0,merged,affects_2.8::aws::bug::cloud::core_review::module::support:core::,"##### SUMMARY EC2-Classic can have security groups with or without VPCs. I can't reproduce since I don't have a legacy account, but this seems straightforward to fix. The patch that introduced this was backported already to 2.6 so this needs to be backported as well. I'll add WIP to the 2.7 patch until this can be cherry-picked to that PR as well. Fixes #46241 ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME ec2_group ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ``` ansible 2.8.0.dev0 ```",b815f2d962a95f63ddb8d273762fb6220725b03c::304a12220447930ff2881a767f7de844cf9970c1::
https://api.github.com/repos/ansible/ansible,46164,bug/44725::devel,0,closed,affects_2.8::bug::ci_verified::module::needs_revision::new_contributor::support:core::,"Python 2.7 may have the lzma module, or it may need to use the backports.lzma module, depending on the user setup. Test for features rather than Python version. ##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME archive ##### ANSIBLE VERSION ``` ansible 2.8.0.dev0 (devel 5803d73400) last updated 2018/09/26 16:07:31 (GMT +200) config file = None configured module search path = ['/home/cyril/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules'] ansible python module location = /tmp/ansible/lib/ansible executable location = /tmp/ansible/p/bin/ansible python version = 3.6.6+ (default, Sep  1 2018, 01:05:25) [GCC 8.2.0] ``` ##### ADDITIONAL INFORMATION None",3cc4c23e6276075f53cccab5276ebedcd191f693::
https://api.github.com/repos/ansible/ansible,46013,azure_fix_45941::devel,0,merged,affects_2.8::azure::bug::cloud::core_review::module::support:core::,"##### SUMMARY * fixes #45941 * corrects regression introduced by #26104; when the resource group doesn't exist, the module exits prematurely with an error instead of creating it. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME azure_rm_deployment ##### ANSIBLE VERSION 2.7.0rc3 ##### ADDITIONAL INFORMATION needs backport to stable-2.6 and stable-2.7",21f9e6a965e05892b719732cfb7b9998756ad8bc::
https://api.github.com/repos/ansible/ansible,45787,fix_ec2_group_vpc_precedence::devel,0,merged,affects_2.8::aws::bug::cloud::core_review::module::support:core::,"##### SUMMARY Update the dictionary with the preferred values last to get the right order of VPC precedence Fixes #45782 This should be backported to 2.6 and 2.7. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ec2_group ##### ANSIBLE VERSION ``` ansible 2.8.0.dev0 ``` The VPC is used to filter above - but it doesn't only return results matching the VPC, it returns matches that meet at least one of the filters.::",8b1cb90adc6c8eeec579656339a5522975de0cd5::
https://api.github.com/repos/ansible/ansible,45712,fix/vultr_timeout::devel,0,merged,affects_2.8::bug::cloud::core_review::inventory::module::support:community::support:core::test::vultr::,"##### SUMMARY currently we run to often into a timeout because we wait for state server_state=ok which has been increased dramatically since the development of the module. It can takes 5 or more minutes to get into this state, even when the VM is fully booted. Another issue is that we should use retry also for all return codes other then HTTP 200, not only for API rate limits or server errors. This increases reliability. ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> vultr_server ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below 2.6 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below should be backported to 2.6, 2.7 ``` In general this can be simpliefied to `if info.get('status) == 200`::nit question: Why this change? Is it taking more time to get a server deleted? Also, should this be a parameter, (maybe reuse `api_timeout`) ? Is the behavior observed for `server_state` update also observed here or is it to play safe?::ditto::you are right!::I will make it configurable but first, I would like to get this in as a bug fix for 2.7. the timeout was 30 times 2 seconds, I just wanted to make it ""engough"" long for 2.7 (it seems the time to wait has dramatically increased)::Ack, shipit'able for me. Do you want to change the `info.get('status')` first?::",10a72f8744b8fe096abf12e86901d1ebc8cb0c6d::f35279dfa334b0817e690639f7b5fd19f65b7ee7::
https://api.github.com/repos/ansible/ansible,45697,exercising_module_code_locally::devel,0,merged,affects_2.8::bug::docs::small_patch::support:community::support:core::,"##### SUMMARY doc: fix the command used for exercising module code locally ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME doc ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ansible 2.8.0.dev0 (devel 66f03827d6) last updated 2018/09/16 17:09:22 (GMT +200) ``` ##### ADDITIONAL INFORMATION Not sure if backports are allowed for documentation at this point in time, but it would be nice to fix 2.7 documentation too.Try this instead, and then no modifications to module_utils will be required: ```shell cd ../../../../ python -m ansible.modules.files.file  <<< '{""ANSIBLE_MODULE_ARGS"": {""path"": ""/path/to/file"", ""state"": ""absent""}}' ```::Except the cd isn't needed.::Have to remove the .py From the end of the module too. ::",ec0bed96a1951794c6f87a42c11ab8d78880f323::
https://api.github.com/repos/ansible/ansible,45607,reboot-fix::devel,0,merged,affects_2.7::affects_2.8::bug::needs_revision::support:community::,"##### SUMMARY This fixes a problem for bare Linux systems that do not support 'who -b' or 'uptime -s'. For example, OpenELEC does not ship with `who` and does not support `uptime -s`. Probably needs a backport to Linux v2.7. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME reboot ##### ANSIBLE VERSION v2.8 and v2.7wouldn't we need the previous boot id to compare to? ::I would aggregate both errors here, both 'uptime' and 'cat /proc..'::@bcoca The comparing is done in `check_boot_time()`. This method just gets the boot time and returns it.::I'm wondering if we should just switch to using this command rather than `who -b`, then `uptime-s`, then `cat ...`. Since this is Linux specific, it doesn't work on FreeBSD/Darwin/Solaris, so we would have to implement a lookup dict for boot time commands as well.::actually .. uptime is a bad check then, since you get a race condition in the case of 'chained reboots' not something that will happen often, but you can get to the point in which the previous uptime < current uptime even though you rebooted. You should check the uptime vs the time since you started the reboot.::The `uptime -s` (and `who -b`) command return a string that is the time the last system was booted, different than what `uptime` is normally used for, which is reporting _total_ system up time. The plugin doesn't do anything more than look for the output of this string to change. If it has not changed, it assumes the system has not been rebooted. Since it is not doing `timedelta` comparison on the uptime output, I do not believe we will hit the scenario you describe.::i sit corrected then, i should have looked closer at the switches::Agree with this. Don't want to swallow the output from the initial command. Long term, it feels like we may need to change distribution to being an attribute, that way we can run `cat ...` for Linux hosts, and use `who -b` for others, removing the need for `uptime -s` and a hard coded tree of commands to attempt.::I fixed it so we collect all the stdout and stderr information in case we need it for the AnsibleError. The problem with having only a single guaranteed command per OS is 1. You would need to know the platform/OS you're working with 2. I don't think it's that clear-cut So this fallback method, while not necessarily 100% clean, it does the job effectively. And `who -b` and `uptime -s` are very sensible things to do before resorting to the random boot_id. (Which may not be present in all Linux kernels either ?)::My next question was going to be if the random boot ID is widely available. I guess I'll have to do some research to see when it was added. I created a WIP PR (#45656) exploring what it would look like to add platform and dist to the plugin. I'm not terribly happy with it, but it's a start (and it accounts for Alpine, which is particularly annoying since it lacks both `who` and `uptime` for no good reason (IMO)). That PR also changes to using the random boot ID by default rather than `who -b`. That has the nice side effect of being able to remove the `uptime -s` command for systems that lack a RTC, but at the cost of all the added complexity of platfrom and dist checking.::One issue with this is that `win_reboot` uses this same method. So if the windows `DEFAULT_BOOT_TIME_COMMAND` results in an rc != 0, it will then try this `cat` command, which will gloriously fail. The previous conditional which runs `uptime -s` won't ever match on Windows because that string will never match the output of `(Get-WmiObject -ClassName Win32_OperatingSystem).LastBootUpTime`. This is the point where it would be helpful to have platform/dist as a class attribute, either as an additional check here, or to look up the correct boot time command based on platform/dist. I'm also open to other ideas.::I don't mind if a fallback method fails though. As long as we cover all bases so in the end the function always works. For win_reboot it could be a lot easier if we have a list of commands, for both Windows and Unix.::In my WIP PR, I did change the ""get the last boot time"" command to be a variable, so that will remove the hard coding here. Will fix in future™. Still, I can see it being confusing to someone running `win_reboot` (assuming the first command failed to get the last boot time) if they get this error: ``` win_reboot: failed to get host boot time info, rc: 1, stdout: 20180913204044.576906+000 , stderr: cat : Cannot find path 'C:\proc\sys\kernel\random\boot_id' because it does not exist. At line:1 char:1 + cat /proc/sys/kernel/random/boot_id + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo          : ObjectNotFound: (C:\proc\sys\kernel\random\boot_id:String) [Get-Content], ItemNotFoundEx ception + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetContentCommand ``` Evidently Windows has a `cat` command now!?::Well, the distinction between Windows and Unix is now easy because it's a different entry-point. So we don't need to do a `cat` on Windows. That was my main point. But I also don't mind having the fallback mechanism on Unix, that first does `who -b`, then `uptime -s`, and then `cat /.../boot_id`. Which to me is quite sensible as well. It's a trade-off for simplicity and in most cases it only requires a single command `who -b`. If you implement support for getting the platform, you will *always* have to run at least 2 commands. So basically what I am saying is that in general the fallback mechanism is more efficient than targeting based on platform.::And yes, PowerShell has aliases for common Unix commands, which is freaking a lot of people out (because they are not drop-in replacements). https://daniel.haxx.se/blog/2016/08/19/removing-the-powershell-curl-alias/::this might not be py2/py3 compatible, we might want to force bytes::Yes, you are correct. One day I'll master that distinction. 😄 ::",2b485b86f892ec3eee085094ee5dcf42e1a98c66::bdbfe419d3da2adde9eeba652b919ba0378eb064::
https://api.github.com/repos/ansible/ansible,45599,iam_group_fix::devel,0,merged,affects_2.8::aws::bug::cloud::core_review::module::support:community::support:core::test::,"##### SUMMARY Use AnsibleAWSModule for iam_group and handle BotoCoreErrors as well as ClientErrors. Use fail_json_aws to improve error messages Fixes #45593 <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME iam_group ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ansible 2.8.0.dev0 (devel 1463c2e4a8) last updated 2018/09/08 10:08:47 (GMT +1000) config file = None configured module search path = [u'/Users/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/will/src/ansible/lib/ansible executable location = /Users/will/src/ansible/bin/ansible python version = 2.7.14 (default, Mar  9 2018, 23:57:12) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.39.2)] ``` ##### ADDITIONAL INFORMATION Candidate for backport to all supported versions of ansible",a09ee83ed03ea1ceeda3ef0efe7c7fe8dd9ffc3d::d4ed074457b2f3677ce5e89f56ad3d52e303a7b9::6157c996b1afcfe6c31d535a78f17848e164ff57::
https://api.github.com/repos/ansible/ansible,45595,windsc-user_guide::devel,0,merged,affects_2.5::affects_2.6::affects_2.7::affects_2.8::docs::support:core::windows::,"##### SUMMARY This PR fixes an issue with a link in: - https://docs.ansible.com/ansible/devel/user_guide/windows_dsc.html#examples - https://docs.ansible.com/ansible/2.6/user_guide/windows_dsc.html#examples - https://docs.ansible.com/ansible/2.5/user_guide/windows_dsc.html#examples This could be backport to v2.5, v2.6 and v2.7 ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME Windows DSC user_guide ##### ANSIBLE VERSION v2.8 and earlier ##### ADDITIONAL INFORMATION **Before** ----------- ![screenshot from 2018-09-13 13-22-22](https://user-images.githubusercontent.com/388198/45485492-2032b800-b758-11e8-8013-2852aaf6746f.png) ----------- **After** ----------- ![screenshot from 2018-09-13 13-26-51](https://user-images.githubusercontent.com/388198/45485682-cb437180-b758-11e8-8d10-3e6c07b7a0a9.png) -----------",67ef8d256bffb2c9ba251ca979dd5cc6bf35aaa3::
https://api.github.com/repos/ansible/ansible,45594,ec2_group_list_of_targets_containing_strings_and_lists::devel,0,merged,affects_2.8::aws::bug::cloud::core_review::module::support:core::test::,##### SUMMARY Fix targets that may be a list containing strings and lists which worked prior to 2.6. Also added diff mode support for lists of targets containing strings and lists. Fixes #45580 This should probably be backported (but will not cp cleanly since diff mode has been added) ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ec2_group ##### ANSIBLE VERSION ``` 2.8 ```,450fb9f855ae7090acbdea3e726082d4038994f8::14e3399db162c7ddaa9cb9aa6c8a476471a376c2::fb17db0876d75cb629a0ed180ead1058e15a737b::61d43f97024cea8f1c77c716aef653e8640996d1::
https://api.github.com/repos/ansible/ansible,45517,move_porting_entry::devel,0,merged,affects_2.8::docs::support:core::,"##### SUMMARY When the `devel` branch was In transition from version 2.6 to version 2.7, this documentation about changes to the `lineinfile` module got mistakenly added to the Porting Guide for 2.7. The code change was made in version 2.6, so the note belongs in the 2.6 Porting Guide. On the `stable-2.6` branch, the location is already correct. This PR will fix `devel` and when it's merge I'll backport to `stable-2.7` so the Porting Guide is consistent across branches (and therefore across versions of the docs). Related to #42013 and #42204. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs.ansible.com ##### ANSIBLE VERSION 2.8 and 2.7",9663babcf07bdf44fa85f1a3c7af6470b606a339::
https://api.github.com/repos/ansible/ansible,45514,list_vault::devel,0,closed,affects_2.8::bug::small_patch::support:core::,"##### SUMMARY Solves the issue described in https://github.com/ansible/awx/issues/2226 I haven't gotten around to filing a corresponding issue in the Ansible issue queue. More targeted steps to reproduce can be found in: https://github.com/AlanCoding/Ansible-inventory-file-examples/tree/master/scripts/vault/bug2226 Implementation of the original feature was by @bcoca in https://github.com/ansible/ansible/pull/38759, it just never did lists, because it never addressed the list type. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME JSON-defined vault decryption ##### ANSIBLE VERSION ```paste below ansible --version ansible 2.8.0.dev0 config file = None configured module search path = [u'/Users/alancoding/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/alancoding/.virtualenvs/ansible/lib/python2.7/site-packages/ansible-2.8.0.dev0-py2.7.egg/ansible executable location = /Users/alancoding/.virtualenvs/ansible/bin/ansible python version = 2.7.11 (default, Oct 17 2016, 14:59:40) [GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] ``` Also present in 2.6, but I am ambivalent about need for backport. ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> Output post-fix: ```paste below ____________ < PLAY [all] > ------------ \   ^__^ \  (oo)\_______ (__)\       )\/\ ||----w | ||     || ______________ < TASK [debug] > -------------- \   ^__^ \  (oo)\_______ (__)\       )\/\ ||----w | ||     || ok: [server1.example.com] => { ""msg"": { ""ansible_check_mode"": false, ""ansible_diff_mode"": false, ""ansible_facts"": {}, ""ansible_forks"": 5, ""ansible_inventory_sources"": [ ""/Users/alancoding/Documents/repos/ansible-inventory-file-examples/scripts/vault/bug2226/single.py"" ], ""ansible_playbook_python"": ""/Users/alancoding/.virtualenvs/ansible/bin/python"", ""ansible_run_tags"": [ ""all"" ], ""ansible_skip_tags"": [], ""ansible_verbosity"": 0, ""ansible_version"": { ""full"": ""2.8.0.dev0"", ""major"": 2, ""minor"": 8, ""revision"": 0, ""string"": ""2.8.0.dev0"" }, ""baz"": [ ""MyPassword"" ], ""group_names"": [ ""ungrouped"" ], ""groups"": { ""all"": [ ""server1.example.com"" ], ""ungrouped"": [ ""server1.example.com"" ] }, ""inventory_dir"": ""/Users/alancoding/Documents/repos/ansible-inventory-file-examples/scripts/vault/bug2226"", ""inventory_file"": ""/Users/alancoding/Documents/repos/ansible-inventory-file-examples/scripts/vault/bug2226/single.py"", ""inventory_hostname"": ""server1.example.com"", ""inventory_hostname_short"": ""server1"", ""omit"": ""__omit_place_holder__0046b1b0c58b197e5c71c8a30447e342aee266b7"", ""playbook_dir"": ""/Users/alancoding/Documents/repos/ansible-inventory-file-examples/debugging"" } } ____________ < PLAY RECAP > ------------ \   ^__^ \  (oo)\_______ (__)\       )\/\ ||----w | ||     || server1.example.com        : ok=1    changed=0    unreachable=0    failed=0 ``` This shows the value ``` ""baz"": [ ""MyPassword"" ], ``` which is what the issue (and examples made for the issue) showed was not being decrypted. i'm not sure you need to traverse the list as the json decoder should already be doing that::It's been a while since I've written my own custom `JSONDecoder`, but I remember it working different than you would expect.  I believe `decode` gets a single decoded blob, not per item, like `JSONEncoder.default` does. I believe we would need to use `object_hook` instead, to avoid having to traverse by ourselves. Something like: https://gist.github.com/sivel/2513c72d83c5b23a77c6fb400e9739cd The diff in that gist, seems to take care of it in a potentially more simple way.::It's not already doing this, I can file an issue to give more details if needed. Tomorrow morning I'll see about re-testing with @sivel's diff.::you are probably correct, i remember going over the traversal with default, but i didn't check if it did the same here.::@sivel confirmed with the noted steps, from top of my inventory examples repo, run: ``` ansible-playbook debugging/hostvars_print.yml -i scripts/vault/bug2226/single.py --ask-vault-pass ``` (provide foobar as secret) After applying your diff the content in the list under the ""baz"" hostvar is decrypted, but it is not in devel. 👍 to that as far as I'm concerned. Would you like to make it into a PR?::@AlanCoding sorry for the delay, I'll try to get a PR together soon.::",9fd0bcd5280d49b66ddb9b48f6c2a78944b929c4::
https://api.github.com/repos/ansible/ansible,45498,cloudfront_distribution_method_name::devel,0,merged,affects_2.8::aws::bug::cloud::community_review::module::small_patch::support:community::,##### SUMMARY Fix method name from 'validate_distribution_id_from_caller_reference' to 'validate_distribution_from_caller_reference' and set distribution_id to the distribution's key 'Id'. Fixes #45496 Should be backported as well. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME cloudfront_distribution.py ##### ANSIBLE VERSION ``` ansible 2.8.0.dev0 ```,249c8257293569e4f5266162b7cb3ae278aeb97e::
https://api.github.com/repos/ansible/ansible,45480,patch-1::devel,0,closed,affects_2.8::bug::core_review::docsite_pr::module::new_contributor::support:core::,"Added a small note about what happens when importing a (still) empty playbook in a master playbook. You then get: ""ERROR! playbooks must be a list of plays"",  which is rather ambiguous. It's correct behaviour, but when setting up a new project, people tend to put the structure in first, while not actually putting any useful tasks in the playbook. (or at least, we do :-p ) +label: docsite_pr ##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request - Docs Pull Request - Feature Pull Request - New Module Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` It might make sense to give an example of error or smth::you're right, I'm sorry. the error generated is: ``` ERROR! playbooks must be a list of plays ```::Updated patch.::You don't have to apologize, you are doing great! It's just a typical iterative feedback/review-based improvement process :) Thanks for the patch!::we might want to give a better error instead: ```python diff --git a/lib/ansible/playbook/__init__.py b/lib/ansible/playbook/__init__.py index f365566f90..708e2f8563 100644 --- a/lib/ansible/playbook/__init__.py +++ b/lib/ansible/playbook/__init__.py @@ -79,7 +79,9 @@ class Playbook: except UnicodeDecodeError as e: raise AnsibleParserError(""Could not read playbook (%s) due to encoding issues: %s"" % (file_name, to_native(e))) -        if not isinstance(ds, list): +        if not ds: +            raise AnsibleParserError(""Empty playbook, nothing to parse"", obj=ds) +        elif not isinstance(ds, list): # restore the basedir in case this error is caught and handled self._loader.set_basedir(cur_basedir) raise AnsibleParserError(""playbooks must be a list of plays"", obj=ds) ```::@bcoca +1 for improving the error message; that will go into 2.8, right?::I'll see if i can backport, but probably wont make 2.7.0, but 2.7.1::",7a8654cefbb666505b3f2a48e4064c447ec936d2::49a19bc614cbc80bde25c37e0760b0a668d8278b::b52065979c69809eedbdac0b529505dd1ed6ffc8::
https://api.github.com/repos/ansible/ansible,45462,win_group_membership-bug::devel,0,merged,affects_2.8::bug::core_review::module::support:core::windows::,"##### SUMMARY As part of https://github.com/ansible/ansible/pull/45334, I found that win_group_membership occasionally fails to cast the ADSI object object when getting the group membership with ``` Cannot convert value ""System.__ComObject"" to type ""System.DirectoryServices.DirectoryEntry"". Error: ""COM object that has been separated from its underlying RCW cannot be used."" At line:51 char:58 +     $current_members = $Group.psbase.Invoke(""Members"") | ForEach-Object { +                                                          ~~~~~~~~~~~~~~~~ + CategoryInfo          : InvalidArgument: (:) [ForEach-Object], RuntimeException + FullyQualifiedErrorId : InvalidCastConstructorException,Microsoft.PowerShell.Commands.ForEachObjectCommand ScriptStackTrace: at <ScriptBlock>, <No file>: line 54 at Get-GroupMember, <No file>: line 51 at <ScriptBlock>, <No file>: line 106 ``` Changing the method to cast it just once before running the `InvokeGet` methods fixed this issue in that branch. Creating a separate PR so I can backport the changes without relying on a feature PR. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_group_membership ##### ANSIBLE VERSION ```paste below devel ```",df512bd218031432ff261952f31e464c1f6dab39::
https://api.github.com/repos/ansible/ansible,45400,issue/39583::devel,0,closed,affects_2.8::community_review::docs::module::new_contributor::support:community::windows::,"##### SUMMARY Previously win_psmodule could only install latest version of powershell module or uninstall it. Added new functionality to declare needed versions on targets. Fixes #39583 ##### ISSUE TYPE - Docs Pull Request - Feature Pull Request - Bugfix Pull Request ##### COMPONENT NAME win_psmodule ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ansible 2.6.2 config file = /opt/ansible/ansible.cfg configured module search path = [u'/opt/ansible/modules'] ansible python module location = /usr/local/lib/python2.7/dist-packages/ansible executable location = /usr/local/bin/ansible python version = 2.7.13 (default, Nov 24 2017, 17:33:09) [GCC 6.3.0 20170516] ``` tested on 2.6, should work on all new versions and on all previous up to 2.4 ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> New parameters: - latest: checks current installed version and available in repository and update if new version available - required_version: functionality to install specific version. - force_required_version: installs specified version even if highest already installed (removes all version, than installs specified). Other changes: - Changed remove function to remove all versions of module. - Updated docs. - Fixed bug, when installing nuget asked user input. (Initially planned to fix it as separate PR, but tests failed without it) Also, there is possible case with ansible check mode, when nuget is not installed: updated module uses powershell cmdlet Find-Module to get versions of powershell modules from repository. Find-Module requires nuget. So: - when nuget is not installed and module is not present yet, win_psmodule will assume, that version of requested module is 1.0.0 - when nuget is not installed and module is present, win_psmodule will use current version of powershell module to search in repository. This applies only when ansible is run with --check. I can change this behavior if needed, just did not find a better solution <!--- Paste verbatim command output below, e.g. before and after your change --> This PR added an extra space at the end of the line, are you able to remove it?::Wondering whether we should have `latest` as a state like we do with a few other modules like `win_chocolatey`::What is your reasoning behind this, if it is a bug we should change it in a separate PR and backport it.::Should we have a conditional on using `AllVersions` to only remove a particular version if `version` is set?::I prefer this being simple as `version`, less to type out and we have done the same on some other modules like win_chocolatey.::If we change the above, this can then be `force_version` which is a lot less to type.::Will do::yes, sounds better, will implement::Yes, it is a bug. There is already PR #45566 that fixes it. When i created my PR, #45566 had not been created yet, so i had to fix it to pass tests. ::I could, but actually, i do not think it will be usefull. I will try to explain why, if you decide i'm wrong - i will add this conditional. Simply remove exact version is not enough. Powershell uses latest versions of modules by default, as far as i know. So removing exact version, if it is not the latest will not make any sense (except, maybe, saving some kilobytes). User will need to know which versions are installed already somehow, before he removes particular version to get any effect. Functionality like `-minimumVersion` or `-maximumVersion` or, maybe, ""remove all except"" to `absent` will actually duplicate  `present` with `version` parameters in general, but in less straightforward way (it will ensure, that required version is latest on the target host). In my opinion, in most cases if one want to remove module he wants to remove it completely. In case, when one will need to have exact version - `present` with `version` will be enough. It will ensure, required version is latest on the target host. So waiting for your decision on this one. ::Agree, will do::Agree on this one too::We should still only remove an individual version if version is set and state=absent. If version is not set then yes all should be removed. There shouldn’t be a reason that I know off for a user to explicitly set a version and state=absent but expect all to be removed.::",611b9ae64cc39f6c76b326c7f538a52f43ac4554::73a595d319fe7a771962a9f0a0392d6ec4feeeb0::95f9df1d5f4cddcd96eb9f8f6196d33ddba81cfb::cc4153267f0cfaa195a458413b077e032dbdca9c::a33a9c11d7428f028d7099390c95fe94f2cc0354::3cf57c06cce414485b59cb4cd53b7ae27d39b5ef::5d2d73f7582c7ad9adcbb401fc39d2157a2b18a0::e028c1e14ef82e6c54da7f3342572ec383a57272::39a25c8c8165aedc5ef4f818f96ac233d77ebe4c::3173b1303b2ce4fc88030fc9c48a3917a217bd17::7d9a5264e9a57d3b401e8ff51709c6d9d3552d7e::
https://api.github.com/repos/ansible/ansible,45399,rds_snapshot_facts-no-boto3::devel,0,closed,affects_2.8::aws::bug::cloud::core_review::module::support:community::support:core::,"##### SUMMARY Add boto3 availability checking for rds_snapshot_facts ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> lib/ansible/modules/cloud/amazon/rds_snapshot_facts.py ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below 2.8, okay to backport to 2.7 and 2.6 ```",f95ee08a28ecb6d4b40b24c09a20386445477328::
https://api.github.com/repos/ansible/ansible,45296,ec2-group-multi-account::devel,0,merged,affects_2.8::aws::bug::cloud::core_review::module::support:core::test::,"##### SUMMARY <!--- Describe the change below, including rationale and design decisions --> Another fix for #44788 <!--- HINT: Include ""Fixes #nnn"" if you are fixing an existing issue --> ##### ISSUE TYPE <!--- Pick one below and delete the rest --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Write the short name of the module, plugin, task or feature below --> ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes --> ```paste below ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here --> <!--- A step-by-step reproduction of the problem is helpful if there is no related issue --> <!--- Paste verbatim command output below, e.g. before and after your change --> ```paste below ``` Nervous about backporting as this adds new functionality.::Oh, testing 2.5, it looks like this was supported at the time as well. There's just a lack of documentation regarding it. Not new at all.::Will module_defaults be backported? Or should these tests be updated to use module_defaults after the cp has been done?::module_defaults was in 2.7, so for backporting to 2.7 this is fine. For 2.6 we'll have to either change to not use module_defaults or not backport the integration test at all. ::",d6654b30ed6633aec677dbff2ddc7ff77a6ca528::bf4583bad73aeace51f57f3dd4019b8d2de17e99::475c6a9c95a813d4820ceb980e6945dfe47ed454::de1a78d54f65514d6fe7a1a344fdd95ac100c07c::3bd557e629db1a209b75aaa0a18bc32603da92af::08343772a2761b78604a8d47ce38012c1ad88a30::27c456766b1e721e11132b74c092a4156e0e1dca::274fe8220bcbd3a64d3ee1d33a5c9de7d92699d6::8663ba0168f32f8228b72eecf994473f90d7137c::
https://api.github.com/repos/ansible/ansible,45290,ec2_group_cross_account::devel,0,closed,affects_2.8::aws::bug::cloud::core_review::module::support:core::,"##### SUMMARY Fixes #44788 This should be backported ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ec2_group ##### ANSIBLE VERSION ``` ansible 2.8.0.dev0 ``` This line wasn't right, since the index 1 and 2 will both be true since the group_id matched the foreign account ID regex - group_id will be something like `group_id: 123456789012/sg-0176895cee456bb3b/test-shertel-group`, not `group_id: 123456789012/sg-0176895cee456bb3b` or `group_id: 123456789012/test-shertel-group`.::",5269d2033af4c56147e268ab6826f37df94eccf8::
https://api.github.com/repos/ansible/ansible,45169,fix_elb_target_group::devel,0,merged,affects_2.8::aws::bug::cloud::core_review::module::support:community::support:core::traceback::,"##### SUMMARY Fixes ecs_cluster integration tests that use this module. The tests don't run in CI so it wasn't caught. Should be backported. ``` The full traceback is: Traceback (most recent call last): File ""/Users/shertel/.ansible/tmp/ansible-tmp-1536067282.28-226823377978774/AnsiballZ_elb_target_group.py"", line 113, in <module> _ansiballz_main() File ""/Users/shertel/.ansible/tmp/ansible-tmp-1536067282.28-226823377978774/AnsiballZ_elb_target_group.py"", line 105, in _ansiballz_main invoke_module(zipped_mod, temp_path, ANSIBALLZ_PARAMS) File ""/Users/shertel/.ansible/tmp/ansible-tmp-1536067282.28-226823377978774/AnsiballZ_elb_target_group.py"", line 48, in invoke_module imp.load_module('__main__', mod, module, MOD_DESC) File ""/tmp/ansible_elb_target_group_payload_cjLRoP/__main__.py"", line 720, in <module> File ""/tmp/ansible_elb_target_group_payload_cjLRoP/__main__.py"", line 714, in main File ""/tmp/ansible_elb_target_group_payload_cjLRoP/__main__.py"", line 433, in create_or_update_target_group KeyError: 'Targets' ``` Introduced in c4303804bff45b0ea53996acf6f71acf2920ffc2 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME elb_target_group.py ##### ANSIBLE VERSION ``` ansible 2.8.0.dev0 ```",9d0a60e3147eacd53dc5975d0b53d71a22593b4b::12559afc8489ec8548c917c107d10073dd69a511::b36dde7e4650c3d163f0607e920a64e2791d1916::b02b6183a270bf5cc00adf7286238c487e5a754c::
https://api.github.com/repos/ansible/ansible,45162,backport-5cf9644-stable-2.7::stable-2.7,0,merged,affects_2.7::cloud::core_review::module::new_plugin::support:community::support:core::test::,"(cherry picked from commit 5cf9644003eeb1936f9c9f269e6f979fcc913b8d) Co-authored-by: Rémy Léone <remy.leone@gmail.com> ##### ISSUE TYPE - New Module Pull Request ##### COMPONENT NAME * lib/ansible/modules/cloud/online/online_user_facts.py ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.7 ``` ##### ADDITIONAL INFORMATION This new module was merged before the freeze deadline but it was missing a license header so it was left out when I branched stable-2.7.  The license header has been added so I decided that it would be okay to backport to the 2.7 release.  It is an isolated change which will only affect the new module.",caa8984f4f6cff7837ffc197fb5adb212d9a405f::fac2d2e6083c34a48de4bda8b539c134ada62904::
https://api.github.com/repos/ansible/ansible,45055,windows-docs2::devel,0,merged,affects_2.7::core_review::docs::stale_ci::support:core::windows::,"##### SUMMARY This PR includes: - Using explicit yaml+jinja code-blocks - Capital letter to start a comment or description - Use yes/no instead of true/false ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME Windows docs ##### ANSIBLE VERSION v2.7I'm just wondering, is there a consensus as to whether we want upper case or lower case in the docs, I treat the name block as a bullet list so don't worry about starting with caps or ending with a sentence but that's just me.::Same thing here, is it really necessary we do this?::Hmm, I find it easier to read though. Especially for descriptions and documentation. I don't mind that much for integration tests, but anything that ends up in the documentation (user-facing) I prefer to use sensible, pleasing standards.::Is it necessary ? From a technical perspective no, but to me it's more pleasing. But I am the guy who prefers punctuation marks and correct spelling too ;-)::The trouble with using this as justification is that everybody has different preferences and we could get into an endless loop with these types of edits. If @acozine has a standard that she's trying to set with the documentation then we should be following that standard but right now I'm unsure what that would be.::In general, Red Hat documentation follows the IBM Style guide. That said, it doesn't cover this scenario directly. Our Ansible style guide also doesn't cover this, but documenting modules has an example section: https://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html#examples-block That uses an initial cap. Also the few examples I poked at in https://github.com/ansible/ansible-examples also uses initial cap for names.  I'll ask @acozine directly if she wants to adopt this as a standard (and say so in the docs so it's clear). ::From a Community point of view we need to be careful not to cause ""busy work"" for Contributors and reviewers. I think it's is OK to: * Update ""how to document your module"" to state how we'd *like* documentation to be written * update any examples in `docs/docsite/rst` to use the ""best"" form (with `name:`, capital letters, etc.) * Bulk update of `support:core` modules to use the ""best"" form. * If others want to update modules that's fine, though that must be the only change in the PR to make it easy to review and backport. I wouldn't want to add review comments on PRs asking them to add capital letters (or fullstops/periods at the end).::Chatted offline w/ @acozine and she doesn't have a preference for either way. So I think the 'gist' of it is: - Don't comment on another PR to request capitalization etc change - Recommend to always use a name and make it a useful phrase or sentence. - no bulk changes to existing content, because there's no 'right or wrong' way to do it.::",d16828ae9b653df40371caaf45d34787fac295fe::
https://api.github.com/repos/ansible/ansible,45046,toc-for-changelog::devel,0,merged,affects_2.7::docs::small_patch::support:core::,"##### SUMMARY ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, task or feature --> Generated changelog ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` devel (backport to 2.7 and possibly earlier releases) ``` ##### ADDITIONAL INFORMATION * new rst output: It just has a contents directive: https://gist.githubusercontent.com/abadger/9e3603ada5c06b80cf2cd0767dd121d6/raw/f4e0677e010634e688d92fb4bf35ec5447c07677/CHANGELOG-v2.7.rst * What the new output looks when rendered:  https://gist.github.com/abadger/9e3603ada5c06b80cf2cd0767dd121d6",7962893cf29dbd05f38b8490e902dc9575301632::
https://api.github.com/repos/ansible/ansible,44988,acme-support-post-as-get::devel,0,merged,affects_2.7::bug::crypto::feature::shipit::support:community::support:core::test::,"##### SUMMARY This is a WIP version implementing [POST-as-GET](https://tools.ietf.org/html/draft-ietf-acme-acme-16#section-6.3) of draft-15 and draft-16. This was originally a Feature Pull Request since it appeared as if a new ACME v3 endpoint would be added ([announcement](https://community.letsencrypt.org/t/acme-breaking-change-most-gets-become-posts/71025)), but has been changed to another announcement that the ACME v2 endpoint will adopt POST-as-GET, and the old unauthenticated GET method [will be disabled on November 1st, 2019](https://community.letsencrypt.org/t/acme-v2-scheduled-deprecation-of-unauthenticated-resource-gets/74380). This PR modifies the current ACME handling to support both the current (unauthenticated GET) implementation, as well as the new POST-as-GET implementation. My plan is to deploy this and backport it, so that the ACME modules of Ansible 2.6 and 2.7 will remain working after November 1st, 2019, and then later (as soon as Let's Encrypt enables full POST-as-GET suppport) to change the `devel` implementation (i.e. for Ansible 2.8) to only use authenticated POST-as-GET calls for ACME v2. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/module_utils/acme.py acme_certificate ##### ANSIBLE VERSION ``` 2.7.1 ```",557ba54fa05149409a2f919f61c198886dea6675::179688be5979cb3dddd1021bdc40a1f487db6575::a5090926d3cbc09016c46fcefb968b6b0a379260::385f609accd54e24fb75e791712124794de2fd6d::68f3d5b91fa314cfc9071bb2a67d2d98c0b09071::df50fdb48e7643f0083efb987c854630dd82e07a::ea28d2dbd3798dcceb4b2add22ab602dc16d6585::
https://api.github.com/repos/ansible/ansible,44755,fix_win_nssm::devel,0,merged,affects_2.7::bug::core_review::module::new_contributor::support:core::test::windows::,"##### SUMMARY The win_nssm module is full of bugs and is almost not working at all. This PR adds or changes the following to win_nssm: - integration tests, including indempotence tests - fix service not started when `state=started` - fix error with the `dependencies` option when using a comma-separated list of dependent services - resolve several non-indempotence issues - drop support of YAML dict for `app_parameters` option as it's broken since 2.3 release - add missing space between arguments with `app_parameters` - fix incorrect argument line with `app_parameters` or `app_parameters_free_form` when a parameter contains spaces, quotes or backslashes - fix extra space added in argument line with `app_parameters` or `app_parameters_free_form` when a parameter start by a dash and is followed by a period (e.g. `-Dcom.test`) ##### ISSUE TYPE - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME win_nssm ##### ANSIBLE VERSION ``` devel ``` ##### ADDITIONAL INFORMATION It's a bit an all-in-one PR because I tried to write a complete set of tests and get it to work. There are still some issues on special cases that are not solved here and may be dealt with later (for example, it's not possible to set user to LocalSystem without password, as the module throw an error if no password is given). The module also still lacks check-mode support, but this may be part of another PR after this one. Fixes #25265 Fixes #44079 Fixes #35442 Fixes #38557 Fixes #20625 And other issues not yet reported I've never used this module before but after looking at the existing UI I'm quite confused. Honestly I think we should look into simplifying it a bit more. My thoughts are; * `app_parameters` is designed to take in a dict/hashtable according to the docs and that seems wrong * `app_parameters_free_form` is meant to be a string of parameters which is more what I expect but the name of the option isn't that great * Ultimately a dict/hashtable is a poor way of defining some args considering the YAML syntax makes it hard to start keys with `-` I'll leave it up to you whether you want to address this in this change or in a future PR but I think we should do is; * deprecate the `app_parameters_free_form` option * have `app_parameters` accept a string, list, or dict/hashtable but deprecate the dict/hashtable form as it is confusing * potentially change `app_parameters` to be just `arguments` or `parameters` and have `app_parameters` as an alias for this Let me know your thoughts, obviously you used or have a need for this module so would know more.::As much as I would like to force it being a dict/hashtable we still need to support the older option (string representing a dict). We should be adding a deprecation warning saying that this format will be removed in 4 releases. In reality we should remove the whole dict/hashtable part as well but see my comment above.::We will still need to call this for backwards compatibility, would probably need a check to ensure the string is in this form so we can fire the warning.::I'm not sure if separating by a space is better than a comma, a service name can definitely have a space and this break backwards compatibility. Instead we should change the type of dependencies to be a list which allows people to define it like ``` dependencies - adf - tcpip ``` This means they user doesn't have to deal with escaping issues for complex service names as well as keeping backwards compatibilities as the code already splits by `,`. This is all done in `Get-AnsibleParam` so no logic is required in win_nssm.::It's also exactly what I think, as I wrote in my previous comment in a summary form: > => I suggest removing app_parameters_free_form, have app_parameters accept both a simple string or a list, as it's done in other modules like win_package, and abandon the dict support (IMHO not really helpful). However, for the renaming of `app_parameters`, I'm less convinced because this name match the internal name used by nssm, but this can be discussed later: ![image](https://user-images.githubusercontent.com/3837104/44775025-dd2bee80-ab74-11e8-8bbe-17b4314977c3.png) The goal of this first PR remains to fix the current codebase in the simplest and fastest way so that it can be merged quickly and maybe backported. I totally agree that this module would require a lot more changes, improvements, and features addition (including check mode support), but I prefer to address this in futures PRs to avoid mixing bug fixes, feature requests and breaking changes and delay this first PR ;) ::I saw a similar comment on issue https://github.com/ansible/ansible/issues/25265#issuecomment-306271563, but I don't understand what is it exactly. The module documentation doesn't give any example of this usage. Is it really something that is supposed to be supported ? Where does it come from ? That said, from my experience, currently the app_parameters parameter doesn't work at all on any of the supported Ansible versions (see #25265), so maybe it's not a big deal to break a little while fixing almost everything else, as a first step before doing what is said in the comment above... Also, if we keep this support, and in the perspective of merging the `app_parameters_free_form` and `app_parameters` options as said before, so that `app_parameters` support a simple string, how can we distinguish a chain supposed to be a dict/hashtable and a simple string ?::Neither space nor comma are good separators in fact, as a service name can also have a comma (and probably any printable ASCII character except slash and backslashes): ![image](https://user-images.githubusercontent.com/3837104/44777244-6560c280-ab7a-11e8-83ce-56c0ea71d6c9.png) But again here is a simple and easily backportable fix to get current and previous versions to work almost well, because the current code just doesn't work if you use a comma as separator (the module doesn't splits by `,`, it pass the string as is to NSSM and an error is thrown saying that the service ""service1,service2"" does not exist). In fact the doc does not reflect the current code (or the other way). So from my point of view this doesn't really break BC. Nevertheless I can restore comma easily, just a single char to change in code. Either we match the doc to the current code, or the opposite ;) I also thought about the list form and I think it will be much better for the future, but this may be part of following PRs. I actually prepared the code in this PR for this purpose, as I already use arrays by splitting the string to be able to do an order insensitive comparison for idempotence check: https://github.com/ansible/ansible/blob/51843a7b3c7120721d19b192408d7a5984b12d67/lib/ansible/modules/windows/win_nssm.ps1#L434-L437 ::Cool if the nssm refers to it as AppParameters then keeping the name sounds good, I wasn't aware of this. Perfectly fine for all this to be resolved in future PRs just wanted to bring out my concerns with the current UI.::I'm honestly not sure, I need to play around with it tomorrow and have a closer look at the code. Weird things are happening in this module so I'll get back to you tomorrow about this.::Yep agreed that services can have spaces or commas, this is why setting the type for this in the `Get-AnsibleParam` to `list` means someone can define a list in the playbook side and not have to worry about that. While it ""may"" not work today as a comma separated string, Legacy.psm1 has internal logic to split a string by `,` if `type=list`. Having it split by a space goes against this logic and really doesn't need to be done in win_nssm.::Ok, after a second look, I understand your point, and you're perfetly right. Do we need to change something in the doc to specify that a list is accepted ? By the way, it makes me find another issue with this module: if you give a name containing a quote to your service, the module fails because the quote is not escaped in the commands run by the module... ```yml - win_nssm: name: test""quote application: 'C:\Windows\System32\cmd.exe' ``` In a future PR, I think we need to consider refactoring the code more in depth so that all the command-line parameters go through the Escape-Argument/Argv-ToString functions, as other module parameters may be affected too.::Any update on this? Have you had the time to look into this?::Ok, sorry @ksubileau for taking so long but here is what I found out * The docs for win_nssm gives examples on specifying `app_parameters` as a literal YMAL dict which worked in previous versions of Ansible * The commit https://github.com/ansible/ansible/commit/ff1efb2c1c2cbaebe3ed28ca28695b9bc15d5bca#diff-5ba1945628b98dfd2ff1c1893772b39a added `-type ""str""` to the value which meant a the value would have been converted using `.ToString()`, in this case a hashtable ToString value is `System.Collections.Hashtable` * The commit above effective broke compatibility with someone specifying a literal dict but `app_parameters` still supports the `key=value` format * This was added in the 2.3.0 release so this example has been broken since then What I think we should do is; * Update the existing docs in a separate PR to show that examples using the `key=value` syntax * Don't re-add support for specifying a dict, we've already ripped the bandaid off so there's no sense in us going through the pain once again if we planned on deprecating it * Deprecate `app_parameters` saying it will be removed in Ansible 2.12 as supporting a key=value syntax for arguments is a bit silly * Alias `app_parameters_free_form` to a new option called `arguments` of the type `str` I know you said the name `AppParameters` is used internally in nssm but I think we should still move away from that and use something that is a bit more standard in Ansible. My reasoning for this are; * The gui for editing an nssm service has the relevant field as `Arguments` * The install command line docs at [nssm](https://nssm.cc/commands) show the value as `<arguments>` * There is a section around add/change/querying individual parameters that align with the `AppParameters` name but Ansible is more a state driven engine than an imperative action on individual args, e.g. a definition for win_nssm is more about specifying all the args for the service and not removing a particular one * The screenshot you sent through was for the registry so it's more an internal naming standard in nssm and not necessarily what they expose to end users Hopefully this makes sense but ultimately it means we can get rid of the Hashtable handling code and cordon off the key=value until 2.12 where we can then remove it.::As stated in https://github.com/jborean93, let's add an explicit check and error our if the value is a `Hashtable` and not a string. We should also deprecate this option and remove in 2.12.::Let's rename to `arguments` and have `app_parameters_free_form` as an alias for this. Up to you as to whether you want to add support for a list or arguments or not but my recommendation is to keep that for another PR.::Ok, I understand your reasoning but indeed I made the opposite reasoning while doing this PR. For me, what is specified in the module's current documentation is what should work. So I fixed the code so that the YAML dict notation works, and I tried to make only minimal changes so that this PR could be backported easily. In the other side, AFAIK the key=value syntax for this option has never been documented, so I think we can assume that very few users use it. So, taking into account your previous comment, here is my proposal: * In this bugfix PR, for the upcoming 2.7 and possibly backported in 2.6: * Restore support of the  `key=value` format (broken with the current code of this PR). * Keep support for specifying a YAML dict. Broken since 2.3.0, but that's what's specified in the doc, the work is already done, and the code will be shared with the `key=value` format. If this PR is backported, it will work as specified in the doc for versions 2.6.x and 2.7 * Eventually update the doc to show examples using the `key=value` syntax (here or in a separate PR) * In a next feature PR, for 2.8 or another future release: * Deprecate `app_parameters` * Alias `app_parameters_free_form` to a new option called `arguments` * Add support of list form to `arguments` * Maybe also add check mode, add more NSSM options like AppDirectory, and more... I've already started working on this next PR, and the first three points are already done (see #45693) Let me know if you agree with this plan, I think this may be a good compromise ;)::No worries, I totally understand your reasoning with adding back the dict support but because we have had 4 (soon to be 5) releases where the YAML dict format has not worked I don't see the point in adding it back in considering no playbook since 2.2 would have worked. Are you on IRC, it would be great to talk to you in an easier fashion and we can sum up what to do in one post once we've come to an agreement? My nickname on there is jborean93 but we can also just chat on the #ansible-windows channel.::",a5d1241fa13b308813173e7686277e15c09c0bdb::20a0d90ebeec92fc498e29d57393b280f6e639a5::e50234bdb32304703fd1ce1d4f6067a0d551049e::8180a7c39b2936426e6def0fa06edd974845d36b::ddd4b4bea69a39e8e2aadac9d23c1f64bd1355f5::aba0d48ba5fe74842ceb3584753e4fc9bca1bc92::46a5e4f3bfbeecb34693d0a8597e5d9643a03624::933a4092bf584108849b5161bbdd00092c4c8c09::51843a7b3c7120721d19b192408d7a5984b12d67::ead882bb9b0bb9e576eda9e074f9150785f9512f::862855252b5f8ff9cdd6ef8a4b3e6afee6a3c326::9b9c839461bc428e0ab3897b7681492a45728f73::
https://api.github.com/repos/ansible/ansible,44726,async-deprecate::devel,0,merged,affects_2.7::bug::small_patch::stale_ci::support:community::,"##### SUMMARY This fixes #44702 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME async_status (via basic.py) ##### ANSIBLE VERSION v2.7I have not looked at this in depth, but I believe this should be `msg` instead of `message`.::Correct, I was fixing that before I saw your comment :-)::what if msg does not exist?, shouldn't it also be a get::in any case, deprecations should always be a list, unsure how a dict is making its way here::Both python and powershell module_utils define it as a list of dictionaries. - https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/basic.py#L959 - https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/powershell/Ansible.ModuleUtils.Legacy.psm1#L125 It originates from this: https://github.com/ansible/ansible/pull/20884 and I reimplemented it for Windows.::ah, nvmd, misread the code, thought you were operating on the 'top level' ... yes it is a list of dictionaries but we allowed for pre-existing string cases::unsure why we need mapping, need to look at original bug, the self.deprecate(d) should be able to handle dicts already::So I guess this should be backported as well.::If the `module.deprecate()` call was used, the message cannot be missing. And we rewrote all modules to use this call.::yeah, it makes sense now, i was just being dumb, modules doing right thing, async_wrapper is acting as proxy but not intelligently so it is passing the final artifact, which we have to reprocess again::",085127093ea42733f10969757a86650917ff8f64::
https://api.github.com/repos/ansible/ansible,44426,add_felixfontein_docker_maintainer::devel,0,merged,affects_2.7::botmeta::docker::feature::small_patch::support:core::,##### SUMMARY `docker_container` module: add @felixfontein  as maintainer: * @felixfontein [expressed interest in being `docker_container` maintainer](https://github.com/ansible/ansible/pull/43874#issuecomment-414447042) * one docker maintainer [backs it](https://github.com/ansible/ansible/pull/43874#issuecomment-412266988). List of contributions from @felixfontein to docker modules * merged: 42457 (and the associated backport: 42877) * open pull requests approved by another docker maintainer: * 43238 * 42380 * pull request reviewed: 16748 ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME .github/BOTMETA.yml ##### ANSIBLE VERSION ``` 2.7 ``` cc @kassiansun,ab6c321f42b897b7b226498077aeccbc0d3c67ad::
https://api.github.com/repos/ansible/ansible,43691,win-async-fix-race::devel,0,merged,affects_2.7::bug::support:community::support:core::test::windows::,##### SUMMARY Fixes a race condition where the async results file may not exist in when the child process tries to read from it. This change also adds a trap to log out any errors that occur to a file making it easier to debug issues like this in the future. Fixes https://github.com/ansible/ansible/issues/42838 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_async ##### ANSIBLE VERSION ``` devel ``` ##### ADDITIONAL INFORMATION No need for backport as this issue was only in the devel branch and has not been part of a release yet.,df124e0b495a04ceb7bb26bf8fcfe9c925dbf24a::
https://api.github.com/repos/ansible/ansible,43583,only-warn-when-ignoring-cfg::devel,0,merged,affects_2.7::bug::docs::support:core::test::,"* Also add unittests for the find_ini_config_file function Fixes #42388 ##### ISSUE TYPE - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME config manager ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` devel 2.6 2.5 2.4 ``` ##### ADDITIONAL INFORMATION This is not a security issue but it is an ""informational regression"": ```ANSIBLE_CONFIG=$(pwd)/ansible.cfg``` works but it was printing that the config file would be skipped.  So I'll backport this to 2.4 but not make a new release especially for it.can we link from the CVE name to a description?::s/world writable/world-writable::I'd change the title to tell folks why they (should) care about this: ""Mitigating security risks of using local ansible.cfg"" and then reorganize the paragraph so we state the issue, the easy fix, the warning, and the ""if you must"" part. I can do that bit . . .::Would this one be good? https://access.redhat.com/security/cve/cve-2018-10875 I looked around and the mitre database of CVEs doesn't have a very good description.::yeah, the RH one looks like a good choice ::",3ccc885a595be89977529b8ca3c8fbe08901db86::afa876982a342206d424eb3789f4d9ee5dd62f9d::ef0ff03b0da861c665ddc003b9c5649ec3408267::901cd2ccd2ff2a7ea580b68d1dc10382c202aecc::c9e19a86d8f540cf69ddfb0a28658d604341a348::
https://api.github.com/repos/ansible/ansible,43575,release_link_typo::devel,0,merged,affects_2.7::docs::small_patch::support:core::,##### SUMMARY Fixes bad link from release and maintenance docs page to 2.6 changelog. This fix was included in backport PRs #43572 and #43567 for the docs for 2.5 and 2.6. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs.ansible.com ##### ANSIBLE VERSION 2.7,844eb76ae5a0ff065a67fda196d62fbd44057c94::
https://api.github.com/repos/ansible/ansible,43426,vmware-examples-local::devel,0,merged,affects_2.7::bug::cloud::module::needs_rebase::needs_revision::support:community::vmware::,"##### SUMMARY Some users have problems using the VMware modules because they use the vCenter as target, and Ansible uses SSH to connect to the targets. (We should backport to v2.6 and v2.5 too) The reason for preferring `delegate_to: localhost` over `connection: local` or an inventory-based solution is that this makes it very obvious from the examples that the modules are not run on the target. Which is fundamental to understand how it currently works. Obviously at some point we want to: - Document this in the VMware guide (explain `connection` vs `delegate_to`) with examples #43430 - Document how this can be done from the inventory #43430 - Link the VMware guide from every VMware-related module #43433 - Implement a VMware connection plugin and retire the `hostname`, `port`, `username`, `password` and  `validate_certs` parameters #43428 ##### ISSUE TYPE - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME VMware modules ##### ANSIBLE VERSION v2.7 and older",ba07bd22cc3eab1ea244d05ac14aeb9d38d5b563::
https://api.github.com/repos/ansible/ansible,43330,issue_41383::devel,0,merged,affects_2.7::bug::needs_revision::support:core::test::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> According to the `do_encrypt` interface, `encrypt` arg should be the hash method name used for encrypting returning password. But in the doc and lookup code it's a boolean flag. This PR change clarifies the usage of `encrypt`. <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does.--> Fix #41383 ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> /lib/ansible/lookup/password.py ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.7.0.dev0 (issue_41383 b1b3ea60fa) last updated 2018/07/26 16:56:32 (GMT -400) config file = None configured module search path = [u'/home/zhikangzhang/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /home/zhikangzhang/Desktop/ansible/lib/ansible executable location = /home/zhikangzhang/Desktop/ansible/bin/ansible python version = 2.7.15 (default, May 16 2018, 17:50:09) [GCC 8.1.1 20180502 (Red Hat 8.1.1-1)] ```you should make note on how the parameter changed (used to be boolean) and in which version::Take a look of this: https://github.com/ansible/ansible/blob/stable-2.0/lib/ansible/utils/encrypt.py#L71 Looks like even back to ansible 2.0, the `do_encrypt`  treat `encrypt` as the name of encryption schema. So the bool type in the doc is always wrong in the history, should we note a wrong history?::yeah, even if just `- for a long time this was incorrectly labeled as a boolean`::then backport ::Ok, make sense.::",b1b3ea60fa18aeb8b527b071a758e4e8219875ac::aa0e67d37db7255e4371676614f0b1cfcb6072ff::1d510a5f5f6796ebe237e0ad288e932cf2aba840::8e1e35c3549b2cc4e1cebc4fbde0066036f3f36a::
https://api.github.com/repos/ansible/ansible,43133,open_url-post-if-data::devel,0,merged,affects_2.7::bug::shipit::support:core::,"##### SUMMARY Only assume GET if no data, otherwise POST. Fixes #42876 #43091 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/module_utils/urls.py ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.6 2.7 ``` ##### ADDITIONAL INFORMATION This needs to be backported to 2.6.x, and should preferably be done via whoever merges as I am likely to not be available.",87a523af34a4710869e9607a532f324e323b4be0::ee3e8bf20e206a095652f91069d6e653495a1c69::
https://api.github.com/repos/ansible/ansible,43054,win_acl-fix::devel,0,merged,affects_2.7::bug::core_review::module::small_patch::support:core::test::windows::,##### SUMMARY Recent commit broke win_acl if inherit was not specified. This fixes that issue and adds some basic tests to hopefully catch some of these issues. Fixes https://github.com/ansible/ansible/issues/43049 No need to backport as this bug is only in the devel branch. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_acl ##### ANSIBLE VERSION ``` devel ```,578586c1d29f7962a6a63a7f2720c99dec075f0f::
https://api.github.com/repos/ansible/ansible,42675,aci_bd_subnet-scope_None::devel,0,merged,aci::affects_2.7::bug::cisco::community_review::module::networking::owner_pr::support:community::,"##### SUMMARY If parameter scope is not set (is None) the usual handling of lists does not apply, and should be avoided or we get an exception. This needs to be backported to earlier versions of Ansible. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME aci_bd_subnet ##### ANSIBLE VERSION v2.7 and earlier",64ce8d76778543c4c744272560f425039ba13867::
https://api.github.com/repos/ansible/ansible,42647,fix_wu_return::devel,0,merged,affects_2.7::bug::core_review::module::support:core::windows::,##### SUMMARY fixes #42423 - regression in 2.6.0 needs backport to 2.6.0 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_updates ##### ANSIBLE VERSION 2.6.0 ##### ADDITIONAL INFORMATION,5a36317bfd0a8975bc229c159d50e811c8326918::
https://api.github.com/repos/ansible/ansible,42600,fix_vmware_fact_gather::devel,0,merged,affects_2.7::bug::cloud::core_review::new_contributor::support:core::vmware::,"…enter ##### SUMMARY <!--- Describe the change, including rationale and design decisions --> Fixes #42597 <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does.--> This changes the way the guest IP address is reported, using guest.ipAddress ensures that if vmware-tools is reporting it then it will get returned (In this specific case no IP for a specific physical interface but a virtual interface exists that vmware-tools detected and reports). ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> vmware_guest_facts ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.x ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ``` It looks like the original code could return both `ipv4` and `ipv6` addresses. Where are with your change, only the first found of ipv6 or ipv4 would be returned. Is it possible for this interface to have *both* IPv4 and IPv6 addresses?::Using this property you are basically letting VMWare pick one address to throw at you so it could be either v4 or v6 but it will be only one address. My change doesn't rely on checking interfaces it just asks VMWare for the answer directly.::This is a bit of a bad way of checking wether it is IPv6 or IPv4: `::` only occurs if one of the hexadectets is `0000`. You can easily end up with `2001:db8:1:2:3:4:5:6`, which does not contain `::`. quick fix: check for `:` in `ipaddress`. Clean fix: use the `ipaddress` python module (python 3.3+ native https://docs.python.org/3/library/ipaddress.html; or https://pypi.org/project/ipaddress/ for 2.6, 2.7 and 3.2, which is a backport (so same functionality). This is the interesting part: > ipaddress.ip_address(address) > Return an IPv4Address or IPv6Address object depending on the IP address passed as argument. Either IPv4 or IPv6 addresses may be supplied; integers less than 2**32 will be considered to be IPv4 by default. A **ValueError** is raised if address does not represent a valid IPv4 or IPv6 address. ```python >>>ipaddress.ip_address('192.168.0.1') IPv4Address('192.168.0.1') >>> ipaddress.ip_address('2001:db8::') IPv6Address('2001:db8::') ``` ::I'll throw the quick fix in for now, I'll leave deciding on adding a python2 dep to @Akasurde .::",c511d69395f29a1d60148c486eb5bab03c9fd02f::0f514ea92202faa819788f0f738a5f5c1590c35a::
https://api.github.com/repos/ansible/ansible,42513,core-stack-frame-exc::devel,0,merged,affects_2.7::bug::python3::support:core::traceback::,"##### SUMMARY On Python 2 the traceback could be any exception from the stack frame and *likely unrelated* to the fail_json call when fail_json() was called outside the except: block. On Python 3 the traceback is cleared outside an exception frame, so the call always returns the most inner traceback (if any), and therefor is *most likely related* to the fail_json call. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME module_utils/basic ##### ANSIBLE VERSION v2.7 and earlier ##### ADDITIONAL INFORMATION Eligible to be backported to v2.6 and v2.5 (as an unrelated backtrace is confusing and misguiding). ##### EXAMPLE SHOWING ISSUE In the below output there's an unrelated traceback while the module failed because the status code was not 200. Users may assume the reason for the error is that there's a JSON-related issue, which is just another caught exception testing if the returned data contained JSON. Relates to #39526 ``` [dag@moria ~]$ ansible -m uri -vvv -a url=http://httpbin.org/status/202 localhost ansible 2.7.0.dev0 (aci-docs-type 57e116cba8) last updated 2018/07/17 16:14:15 (GMT +200) config file = None configured module search path = [u'/home/dag/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /opt/anvers/default/lib/ansible executable location = /opt/anvers/default/bin/ansible python version = 2.7.5 (default, Feb 20 2018, 09:19:12) [GCC 4.8.5 20150623 (Red Hat 4.8.5-28)] No config file found; using defaults --snip-- <127.0.0.1> EXEC /bin/sh -c 'rm -f -r /home/dag/.ansible/tmp/ansible-tmp-1531846777.37-100327007151919/ > /dev/null 2>&1 && sleep 0' The full traceback is: File ""/tmp/ansible_9tOvt1/ansible_module_uri.py"", line 581, in main js = json.loads(u_content) File ""/usr/lib64/python2.7/json/__init__.py"", line 338, in loads return _default_decoder.decode(s) File ""/usr/lib64/python2.7/json/decoder.py"", line 366, in decode obj, end = self.raw_decode(s, idx=_w(s, 0).end()) File ""/usr/lib64/python2.7/json/decoder.py"", line 384, in raw_decode raise ValueError(""No JSON object could be decoded"") localhost | FAILED! => { ""access_control_allow_credentials"": ""true"", ""access_control_allow_origin"": ""*"", ""changed"": false, ""connection"": ""close"", ""content"": """", ""content_length"": ""0"", ""content_type"": ""text/html; charset=utf-8"", ""cookies"": {}, ""cookies_string"": """", ""date"": ""Tue, 17 Jul 2018 16:59:37 GMT"", --snip-- ""msg"": ""Status code was 202 and not [200]: OK (0 bytes)"", ""redirected"": false, ""server"": ""gunicorn/19.8.1"", ""status"": 202, ""url"": ""http://httpbin.org/status/202"", ""via"": ""1.1 vegur, 1.1 aer01-mda2-dmz-wsa-6.cisco.com:80 (Cisco-WSA/X)"" } ```don't we have PY3 var already to detect 3.x?::It appears so :-) Fixed.::",b0fd4052230246eb87816ac317f43086e63a945b::745e468d4a59d4b34960c270f096f956843e680f::
https://api.github.com/repos/ansible/ansible,42474,fix_s3_bucket_urlparse::devel,0,merged,affects_2.7::aws::bug::cloud::core_review::module::support:core::,##### SUMMARY Fixes #42459 should be backported ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/modules/cloud/amazon/s3_bucket.py ##### ANSIBLE VERSION ``` ansible 2.7.0.dev0 ```,f12c8594c27c46c532c5e10759f76bf785647daa::
https://api.github.com/repos/ansible/ansible,42428,changelog-fragment-docs::devel,0,merged,affects_2.7::docs::support:core::,"##### SUMMARY We generate the changelog from changelog fragments for release notes now, but don't have good docs on how to write them or  what sections are valid (without reading the `config.yaml`). Here are some docs to address this. ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Docs Pull Request ##### COMPONENT NAME `release_and_maintenance.rst` ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.7 ```We're using our own changelog processor in 2.6+ instead of reno. It will most likely be backported to 2.5 as well. It does use reno formatted changelog fragments though. Details for new plugins and modules are extracted from ansible-doc, not from commit messages.::I don't think we need to mention the changelog here. If we do, we should make sure to point out that it should not be edited.::We shouldn't need this sentence either, as it doesn't relate to changelog fragments and stable-2.4 is only receiving security updates now, making it unlikely to have any community contributions.::Please leave these two lines in the docs - they're helpful for anyone who hits this page because they're searching for something like the 2.6 changelog.::I like this content a lot, but I'm not sure it belongs in the reference section under Releases and Maintenance, which is more targeted at users who are wondering when 2.1 was released or when the can expect the next version to come out. I'll think about where this content would fit best - probably somewhere in the Developer Guide. If I can't come up with a better location, and we add this content in this location, I'd change the beginning of this sentence, so it goes with the restored sentences above: ""We made this change so we could generate changelogs based on fragments."" The rest of the content looks great. ::Giving an example of a good ""unique and descriptive name"" would make this documentation stronger.::Again, let's keep these lines for those who hit this page because they're looking for a specific changelog and they can't find it. If we keep the how-to content in this file, then these lines should move up above the how-to documentation.::+1 for examples. ::Originally I found this here and just expanded it. A better home is probably in `development_process.rst` and link to it there from `release_and_maintenance.rst`, the opposite of how it is now.::This line mentions older versions; so does line 148. I vote we delete one and keep the other.::Add a link here, perhaps, to show how these fragments get amalgamated and what the end result looks like. ::",8f7100e2522593eab7bcb37b2a880f18db2ceebc::2688c45f0d3973060e223d62cd51b519db59786e::4ffef51e201bbbd4e035f8fb3653298c65d023b8::ced16c1e18cea8573d37ef38197066b48cd9c2c2::
https://api.github.com/repos/ansible/ansible,42313,devel::devel,0,closed,affects_2.7::bug::cloud::merge_commit::module::needs_rebase::needs_revision::new_plugin::owner_pr::support:community::test::virt::,"##### SUMMARY @LaurentDumont @killswitch-GUI @fredmiranda @berendt @xoxys this PR Fix issues #40921 #41940 #32294 #28277 ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> [proxmox_kvm](https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/cloud/misc/proxmox_kvm.py) ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible --version ansible 2.3.2.0 config file = /usr/local/ansible/orchestrator/ansible.cfg configured module search path = Default w/o overrides python version = 2.7.13 (default, Nov 24 2017, 17:33:09) [GCC 6.3.0 20170516] ``` ##### ADDITIONAL INFORMATION Note: For the parameter `pause`, we recommand using option `pause` in `loop_control` which allows you to control the time (in seconds) between execution of items in a task loop. Cf https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html#loop-control For testing the PR before Merged you can download directly module from https://github.com/helldorado/ansible/blob/devel/lib/ansible/modules/cloud/misc/proxmox_kvm.py and put in `playbooks/library/proxmox_kvm.py`Python 2.6 doesn't support non indexed format string, could they please be updated in this PR? This may apply in a number of places where you have `{}`.::Done.::If we add this new option then this is a ""Feature PR"", and can't be backported to `stable-2.6`.::This is an option only to bypass what the  `pause` parameter on `loop_control` already does. I will delete it from this PR and add it eventually in a future version of this module (Not necessarily ...) ::",
https://api.github.com/repos/ansible/ansible,42277,k8s-defaults::devel,0,merged,affects_2.7::bug::k8s::support:core::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> Fills in kind, apiVersion, name and namespace based on the top level parameters if they were not provided in the resource definition. The values in the definition still take precedence. <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does.--> Fixes #42243 ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> k8s ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> Needs backport to 2.6",1061d0e2b2bc668f698752a53a1f8fc24b546089::
https://api.github.com/repos/ansible/ansible,42202,k8s-set-env-api-key::devel,0,merged,affects_2.7::bug::k8s::support:core::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does.--> Fixes #42193 ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> k8s ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> Needs backport to 2.6",5bba32d9e9ad3baa71bcb65a4b6c4ba7f912da90::
https://api.github.com/repos/ansible/ansible,42144,meraki/util_return_code::devel,0,merged,affects_2.7::bug::cisco::meraki::module::needs_revision::networking::support:community::,"##### SUMMARY - All request calls now check for response code before responding - If the response code isn't what it should be, it fails or returns nothing - Breaking this into multiple PRs to make backporting easier - Using status property in Meraki module utility which has the code - Partially fixes #41282 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME meraki meraki_organization meraki_snmp meraki_network meraki_admin ##### ANSIBLE VERSION ``` ansible 2.7.0.dev0 (meraki/util_return_code 03813a0d78) last updated 2018/06/29 19:36:14 (GMT -500) config file = None configured module search path = ['/Users/kbreit/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules'] ansible python module location = /Users/kbreit/Documents/Programming/ansible/lib/ansible executable location = /Users/kbreit/Documents/Programming/ansible/bin/ansible python version = 3.5.4 (default, Feb 25 2018, 14:56:02) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.39.2)] ```So we tend to not do the else if the previous if-block returns from the function. The else is unneeded.::So we tend to not do the else if the previous if-block returns from the function. The else is unneeded.::Looking at this again, I would prefer even this: ```python if self.status != 200: self.fail_json(msg='Organization lookup failed') return response ``` So that the default flow returns the response, except if the status is not 200. I think that's more clear, exceptions go into if-blocks, default flow is to succeed.::",03813a0d78412ab75df582118d4fb185d9742a45::e0c021a92f5cf1392f56744e6e0817eea36c0a58::
https://api.github.com/repos/ansible/ansible,42132,projectrequest::devel,0,merged,affects_2.7::bug::k8s::support:core::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> Automatically translates Projects to ProjectRequests if the user isn't permissioned enough to make Projects. This basically makes project creation for low-permissioned users the same as running `oc new-project`. This again makes it possible to create projects from Ansible with < admin permissions on the cluster. <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does.--> Fixes #42116 ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> k8s ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> This should be backported to 2.6",7afde63aadb462c997917dc77ff6d8fb1ee72995::
https://api.github.com/repos/ansible/ansible,41888,inventory_plugin_check_options::devel,0,merged,affects_2.7::bug::inventory::packaging::small_patch::stale_ci::support:community::support:core::test::traceback::,"##### SUMMARY 1. Check that `config` API works well with inventory plugins (integration tests) 2. ~Fix `config` API usage (regression introduced by 0102e422722afbadb65e93bcdd1b8f2fe80794b4)~ (fixed in #41913) 3. Fix a typo in docstring Since 0102e422722afbadb65e93bcdd1b8f2fe80794b4, the first call to [`AnsiblePlugin.set_options`](https://github.com/ansible/ansible/blob/0b2ec9b11c1348b1d3d9ddc8b2319b4382497d79/lib/ansible/plugins/__init__.py#L65) set `_options` attribute and subsequent calls don't modify this attribute - even if `direct` parameter is used - because `_options` attribute is [already set](https://github.com/ansible/ansible/blob/0b2ec9b11c1348b1d3d9ddc8b2319b4382497d79/lib/ansible/plugins/__init__.py#L74). This causes a regression for inventory plugins which: 1. store configuration in the inventory file 2. and use [BaseInventoryPlugin._read_config_data](https://github.com/ansible/ansible/blob/0b2ec9b11c1348b1d3d9ddc8b2319b4382497d79/lib/ansible/plugins/inventory/__init__.py#L191) method 3. then call [`AnsiblePlugin.get_option`](https://github.com/ansible/ansible/blob/0b2ec9b11c1348b1d3d9ddc8b2319b4382497d79/lib/ansible/plugins/__init__.py#L56) to retrieve their configuration ([`foreman`](https://github.com/ansible/ansible/blob/0b2ec9b11c1348b1d3d9ddc8b2319b4382497d79/lib/ansible/plugins/inventory/foreman.py#L221), [`constructed`](https://github.com/ansible/ansible/blob/0b2ec9b11c1348b1d3d9ddc8b2319b4382497d79/lib/ansible/plugins/inventory/constructed.py#L96), [`nmap`](https://github.com/ansible/ansible/blob/0b2ec9b11c1348b1d3d9ddc8b2319b4382497d79/lib/ansible/plugins/inventory/nmap.py#L99), [`scaleway`](https://github.com/ansible/ansible/blob/0b2ec9b11c1348b1d3d9ddc8b2319b4382497d79/lib/ansible/plugins/inventory/scaleway.py#L141)) In such cases, `AnsiblePlugin.set_options` is called first in [`InventoryManager._setup_inventory_plugins`](https://github.com/ansible/ansible/blob/0b2ec9b11c1348b1d3d9ddc8b2319b4382497d79/lib/ansible/inventory/manager.py#L186), next by [`BaseInventoryPlugin._read_config_data`](https://github.com/ansible/ansible/blob/0b2ec9b11c1348b1d3d9ddc8b2319b4382497d79/lib/ansible/plugins/inventory/__init__.py#L191). This second call doesn't update `_options` attribute and following calls to` AnsiblePlugin.get_option` will return default plugin configuration (instead of the configuration from the inventory file). Without this patch, added integration test [fails](https://app.shippable.com/github/ansible/ansible/runs/71261/48/console): ``` Running inventory_plugin_config integration test script Run command: ./runme.sh -v [...] + ansible-inventory --list -i ./config_with_parameter.yml --export + env python -c 'import json, sys; inv = json.loads(sys.stdin.read()); assert set(inv['\''_meta'\'']['\''hostvars'\'']['\''test_host'\'']['\''departments'\'']) == set(['\''paris'\''])' Traceback (most recent call last): File ""<string>"", line 1, in <module> AssertionError ``` ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME inventory plugins ##### ANSIBLE VERSION ``` ansible 2.7.0.dev0 (devel f30e0b833d) last updated 2018/06/24 16:11:47 (GMT +200) ``` ##### ADDITIONAL INFORMATION Commit adding the regressing has been backported (#41823), the fix should be **backported** too. Another fix could be to: 1. keep the call to `set_options` in `InventoryManager._setup_inventory_plugins` 2. calls `C.config.get_plugin_options` in `AnsiblePlugin.set_options` when direct parameter is set. The disadvantage is that `ConfigManager.get_configuration_definitions()` would be called twice.",313201a1bd896fc2b101facc4c42523e337bd851::2b7f6aa8110482fd088b095e7a371f6a24d2495f::
https://api.github.com/repos/ansible/ansible,41878,scaleway_inventory_no_public_ip::devel,0,closed,affects_2.7::bug::needs_rebase::needs_revision::small_patch::stale_ci::support:core::traceback::,"##### SUMMARY Scaleway inventory plugin: handle host without public IP. Fix this exception: $ SCW_TOKEN=XXXX ANSIBLE_INVENTORY_ENABLED=scaleway ansible-inventory --list -i scaleway.yml -vvvv [WARNING]:  * Failed to parse scaleway.yml with scaleway plugin: 'NoneType' object is not subscriptable File ""ansible/lib/ansible/inventory/manager.py"", line 269, in parse_source plugin.parse(self._inventory, self._loader, source, cache=cache) File ""ansible/lib/ansible/plugins/inventory/scaleway.py"", line 146, in parse self.do_zone_inventory(zone=zone, token=token, tags=tags) File ""ansible/lib/ansible/plugins/inventory/scaleway.py"", line 135, in do_zone_inventory self._fill_host_variables(server_id=server_id, server_info=server_info) File ""ansible/lib/ansible/plugins/inventory/scaleway.py"", line 100, in _fill_host_variables self.inventory.set_variable(server_id, ""ipv4"", server_info[""public_ip""][""address""]) Another commit remove an useless duplication. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME scaleway inventory plugin ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.7.0.dev0 (devel f30e0b833d) last updated 2018/06/24 16:11:47 (GMT +200) ``` ##### ADDITIONAL INFORMATION If not to late, it should be backported to 2.6: #41880.",54af38cc941e28ee73866e97a7cfb8ba93ac3881::1589899ed56bfc3a17db90f6b341bbe2f21787f0::
https://api.github.com/repos/ansible/ansible,41827,meraki/scenario-guide::devel,0,merged,affects_2.7::docs::support:core::,##### SUMMARY A scenario guide for the Meraki modules will provide the following benefits: - Explain what can be done with the modules - Provide inspiration for what can be done programmatically with Meraki - Explain limitations of the API and modules ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME meraki Try this maybe ? ``` :: - name: Query SNMP settings meraki_snmp: api_key: abc123 org_name: AcmeCorp state: query delegate_to: localhost ``` I couldn't find any instance of ``code_block`` by grepping the docs.::Unscores and dashes are important.::I would make this 'json' instead.::I'm trying to do this in the backport and really struggling. Is json not a valid option or do I need to include quotes?::,e094041dabdc9268b642d1781858c2c4c1aaa90f::a2c9e0b8ef9063929556bd45107cab48d0740368::c2a4414dc8e4653462a662036d00e32bd65ae4a2::1ba3e2eef40c5f7b2b4a947b6159cb4bbcf58405::c3d10c02854ffa626eba608c4e99405bac02bf13::d84ac934d7d26a861acf11891fa4826ff711ea89::7ef41152eb02fc4b2c559291e8a026d9eded0ba2::
https://api.github.com/repos/ansible/ansible,41403,feature/integrate-cherry-picker::devel,0,merged,affects_2.7::docs::feature::needs_revision::support:core::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> This adds config for using [cherry-picker](https://github.com/python/core-workflow/tree/master/cherry_picker) tool from Python Core Workflow. No docs yet, but it should be enough for people to start trying it out. ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Feature Pull Request - Docs Pull Request - New Tool Config Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> ‒ ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` devel ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> ‒This is long enough that I think I'd reformat it as a higher level section.  Maybe "" Backport Pull Request Process (with vanilla git)"" and ""Backport Pull Request Process (with helper script)"" Ask acozine for input.:::+1: ::I like adding cherry-picker as an option, but I'd prefer to keep the documentation of how to use it on their docs site, so we don't have to maintain it. I would replace lines 87-126 with a much shorter bit of text: `If you prefer, you can use CPython's cherry-picker tool to backport commits from devel to stable branches in Ansible. Take a look at the cherry-picker documentation for details on installing, configuring, and using it.`::(with a link added for the cherry-picker documentation)::It's okay for me, but I already know how to use it, while for newcomers it might be a bit confusing since upstream doc still mainly focuses on CPython now and has additional irrelevant information, like setting up config (which should just exist in ansible repo w/o user having to worry about it).::done::",74cdeca80e3d53af094c8b6cb5f479a5387efe52::437f2965f04efc42eedffb26d2f31f80f96c2312::2ffdbf2887607023c87483020854b1f56ae399a5::
https://api.github.com/repos/ansible/ansible,41289,changelogs::devel,0,merged,affects_2.7::bug::docs::support:core::,"##### SUMMARY Closes #40997. Updates link from docs.ansible.com to the changelogs on GitHub. Since we changed the way we generate the changelog files, there's no comprehensive single file of all changes in all versions. This PR makes that clear in the information about releases and also updates the links on the individual porting guides. This fix will need to be made on old docs versions, though backporting this commit won't work because some of these files don't exist on earlier versions. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs.ansible.com ##### ANSIBLE VERSION 2.7",f38a5082875713257ae42839a723789733693e30::4670d56beb6b8d2e163571124f20f12c793dde5f::
https://api.github.com/repos/ansible/ansible,41132,devel::devel,0,closed,affects_2.7::affects_2.8::bug::has_issue::needs_revision::new_contributor::stale_ci::support:community::,"##### SUMMARY Fix get value in Vault if K/V version 2 is used ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME hashi_vault lookup plugin ##### ANSIBLE VERSION ``` ansible 2.5.0 ansible 2.6.0 ``` Is the 2.8 here still correct, or does this needs to be updated to 2.10 (what current `devel` will become)?::Or do you plan to backport this to 2.8? In that case, it should be more precise; the next 2.8.x version will be 2.8.6, though it might already be too late for it; @abadger until when will backports for 2.8.6 be merged? In case you plan to backport it: what about backwards compatibility? Does this break existing playbooks/roles which were using the old v2 approach from the samples below? If yes, this can't be backported, and you also need a [2.10 porting guide](https://github.com/ansible/ansible/blob/devel/docs/docsite/rst/porting_guides/porting_guide_2.10.rst) entry.::Hi @felixfontein -  I'll have to let @beudbeud respond to the 2.8 comment feedback.  (I'm not sure if that comment is required) I was planning on back porting to 2.8 & 2.9. I've tested the patch against both v1 and v2 KV stores and it works.  My view is that it won't break backward compatibility (as far as I've tested). ::@Im0 For me is okay to backport in 2.8 and 2.9::@beudbeud I think Felix was asking if this was correct: `As of Ansible 2.8, if you use KV v2 now you get only the last secret from a path.`::",57550a91b26dbb39ea05794d4ac7d96f5080d9ef::3eb00e855f96f48b070b31e676db3f4bbd0c8281::8d7a09819614a07a9dc568a8339ef1d699601523::38ca5d635046fbac484cf90ae99654b1091f228e::72a1c0ace9fc22d489451fa6b17a27d9a21d76f1::4af25df54ec611de74de9b9d0b0b392934886f68::a1a081ee680936dd9d44a3f503ff43fee1f5de7f::
https://api.github.com/repos/ansible/ansible,41112,winrm-test-fix::devel,0,merged,affects_2.7::bug::support:core::test::,"##### SUMMARY Fixes some broken unit tests, this should also be backported to 2.6 and 2.5. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME winrm ##### ANSIBLE VERSION ``` devel 2.6 2.5 ```",9832085540d70798f44283b35d21845fb6bd25f2::
https://api.github.com/repos/ansible/ansible,41088,k8s_facts::devel,0,closed,affects_2.7::bug::core_review::k8s::module::stale_ci::support:community::support:core::traceback::,"##### SUMMARY Using `kind=*List` should just perform a query but the `List` ending gets stripped off, so need another mechanism to identify that it's a query. Add a PodList example with minimal information to show that it works. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME k8s ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.7.0.dev0 (devel 13c7d149bb) last updated 2018/06/04 21:51:42 (GMT +1000) config file = None configured module search path = [u'/Users/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/will/src/ansible/lib/ansible executable location = /Users/will/src/ansible/bin/ansible python version = 2.7.14 (default, Mar  9 2018, 23:57:12) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.39.2)] ``` ##### ADDITIONAL INFORMATION Candidate for backport to 2.6 (as PodList is broken without this fix) ``` The full traceback is: Traceback (most recent call last): File ""/var/folders/7q/dxr6_bf51zb12fs7rld5_7zc0000gp/T/ansible_pazOPS/ansible_module_k8s.py"", line 165, in <module> main() File ""/var/folders/7q/dxr6_bf51zb12fs7rld5_7zc0000gp/T/ansible_pazOPS/ansible_module_k8s.py"", line 161, in main KubernetesRawModule().execute_module() File ""/var/folders/7q/dxr6_bf51zb12fs7rld5_7zc0000gp/T/ansible_pazOPS/ansible_modlib.zip/ansible/module_utils/k8s/raw.py"", line 80, in execute_module File ""/var/folders/7q/dxr6_bf51zb12fs7rld5_7zc0000gp/T/ansible_pazOPS/ansible_modlib.zip/ansible/module_utils/k8s/raw.py"", line 171, in perform_action File ""/usr/local/Cellar/python@2/2.7.14_3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/openshift/dynamic/client.py"", line 31, in inner resp = func(self, resource, *args, **kwargs) File ""/usr/local/Cellar/python@2/2.7.14_3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/openshift/dynamic/client.py"", line 184, in patch raise ValueError(""name is required to patch {}.{}"".format(resource.group_version, resource.kind)) ValueError: name is required to patch v1.Pod localhost | FAILED! => { ""changed"": false, ""module_stderr"": ""Traceback (most recent call last):\n  File \""/var/folders/7q/dxr6_bf51zb12fs7rld5_7zc0000gp/T/ansible_pazOPS/ansible_module_k8s.py\"", line 165, in <module>\n    main()\n  File \""/var/folders/7q/dxr6_bf51zb12fs7rld5_7zc0000gp/T/ansible_pazOPS/ansible_module_k8s.py\"", line 161, in main\n    KubernetesRawModule().execute_module()\n  File \""/var/folders/7q/dxr6_bf51zb12fs7rld5_7zc0000gp/T/ansible_pazOPS/ansible_modlib.zip/ansible/module_utils/k8s/raw.py\"", line 80, in execute_module\n  File \""/var/folders/7q/dxr6_bf51zb12fs7rld5_7zc0000gp/T/ansible_pazOPS/ansible_modlib.zip/ansible/module_utils/k8s/raw.py\"", line 171, in perform_action\n  File \""/usr/local/Cellar/python@2/2.7.14_3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/openshift/dynamic/client.py\"", line 31, in inner\n    resp = func(self, resource, *args, **kwargs)\n  File \""/usr/local/Cellar/python@2/2.7.14_3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/openshift/dynamic/client.py\"", line 184, in patch\n    raise ValueError(\""name is required to patch {}.{}\"".format(resource.group_version, resource.kind))\nValueError: name is required to patch v1.Pod\n"", ""module_stdout"": """", ""msg"": ""MODULE FAILURE"", ""rc"": 1 } ```",221522a7ecf411c8ac2dbdb262015b12090c6432::
https://api.github.com/repos/ansible/ansible,40856,meraki/util_request_jsonify::devel,0,merged,affects_2.7::bug::cisco::community_review::meraki::module::networking::support:community::test::,"##### SUMMARY Meraki utility now `loads()` using the JSON module. Modules were modified to account for these changes. Additional bugs were fixed in the code. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME meraki module utility ##### ANSIBLE VERSION ``` ansible 2.7.0dev0 (meraki/util_request_jsonify 182979ffc4) last updated 2018/05/29 20:06:47 (GMT -500) config file = None configured module search path = ['/Users/kbreit/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules'] ansible python module location = /Users/kbreit/Documents/Programming/ansible/lib/ansible executable location = /Users/kbreit/Documents/Programming/ansible/bin/ansible python version = 3.5.4 (default, Feb 25 2018, 14:56:02) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.39.2)] ``` ##### Additional Information This should also be backported to 2.6.",0ba1e52bdd7d0d622ac7506172f743e01bc3f461::182979ffc493e7c3574f2cf67b4378a4d8603160::5350dcf52cae7699601307d39e13d121d9bae317::
https://api.github.com/repos/ansible/ansible,40839,docker_container_init_check_requirements::devel,0,merged,affects_2.7::bug::cloud::docker::module::python3::shipit::support:community::support:core::traceback::,"##### SUMMARY `docker_container` module: - check version of `docker-py` dependency too - fix compatibility with `docker-py<2.2` Using this playbook with docker-py<2.2: ``` - hosts: localhost gather_facts: no tasks: - name: Create a container docker_container: name: testcontainer hostname: testcontainer image: debian:stretch init: yes ``` the following exception occurs: ``` Traceback (most recent call last):"", File /tmp/ansible_n0psgms7/ansible_module_docker_container.py, line 2081, in <module>"", main()"", File /tmp/ansible_n0psgms7/ansible_module_docker_container.py, line 2076, in main"", cm = ContainerManager(client)"", File /tmp/ansible_n0psgms7/ansible_module_docker_container.py, line 1703, in __init__"", self.present(state)"", File /tmp/ansible_n0psgms7/ansible_module_docker_container.py, line 1723, in present"", new_container = self.container_create(self.parameters.image, self.parameters.create_parameters)"", File /tmp/ansible_n0psgms7/ansible_module_docker_container.py, line 825, in create_parameters"", host_config=self._host_config(),"", File /tmp/ansible_n0psgms7/ansible_module_docker_container.py, line 931, in _host_config"", return self.client.create_host_config(**params)"", File lib/python3.6/site-packages/docker/api/container.py, line 596, in create_host_config"", return HostConfig(*args, **kwargs)"", TypeError: __init__() got an unexpected keyword argument 'init'"" ``` Related: #34547. This pull-request should be backported on 2.6. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME docker_container ##### ANSIBLE VERSION ``` ansible 2.7.0dev0 (devel 726d7fe4c3) last updated 2018/05/29 10:06:10 (GMT +200) ```proabably one note, since this is ""common"" code for docker, I have concerns that there are other things depending on this, we should probably keep this code.::`init` and many other options are for `docker_container` only, we should not have put version detection here.::This version check was added for `docker_container`'s `init` (in #34547) only recently (May 24).::Shouldn't this be a `>` test?::Same here.::(Actually, `>=`.)::Can confirm, the tests should be `>=`. With those modifications, I have sucessfully applied this patch to v2.6.0 (8ce3bd6dea).::",020d4a331298ba4fed99bd0840bef7e831e5746e::b5b4f08ca625df52683c30855bb423f0de0d0800::
https://api.github.com/repos/ansible/ansible,40688,platform_index_update::devel,0,merged,affects_2.6::docs::networking::support:core::,"##### SUMMARY Closes #40011 Adds a table summarizing the connections available for a number of platforms. We expect to add rows (platforms) to this table in future, but not columns. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs.ansible.com ##### ANSIBLE VERSION 2.6 ##### ADDITIONAL INFORMATION We can backport this to the 2.5 docsite - having it there may even encourage folks to upgrade.",87e84e90fe37a553b843ac7ee0db2636971c2317::
https://api.github.com/repos/ansible/ansible,40218,lenovo_cli_expansion::devel,0,merged,bug::core_review::module::networking::support:community::support:core::,"##### SUMMARY Starting with our recent CNOS release version 10.7, we have moved certain CLI keywords to match with Industry Standard CLI (ISCLI) keywords.  For backward compatibility,  old CLI keywords will continue to work for next one or two CNOS releases with a condition that “command acronyms” of old CLI keywords, cannot be used. For eg: Use “display version” instead of “disp ver”. This PR is to expand the acronymns if they are present in the python code This has to be backported to 2.5 as well. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib\ansible\modules\network\cnos\cnos_backup.py lib\ansible\modules\network\cnos\cnos_bgp.py lib\ansible\modules\network\cnos\cnos_conditional_command.py lib\ansible\modules\network\cnos\cnos_conditional_template.py lib\ansible\modules\network\cnos\cnos_factory.py lib\ansible\modules\network\cnos\cnos_image.py lib\ansible\modules\network\cnos\cnos_interface.py lib\ansible\modules\network\cnos\cnos_portchannel.py lib\ansible\modules\network\cnos\cnos_reload.py lib\ansible\modules\network\cnos\cnos_rollback.py lib\ansible\modules\network\cnos\cnos_save.py lib\ansible\modules\network\cnos\cnos_showrun.py lib\ansible\modules\network\cnos\cnos_template.py lib\ansible\modules\network\cnos\cnos_vlag.py lib\ansible\modules\network\cnos\cnos_vlan.py ##### ANSIBLE VERSION ansible 2.6.0 config file = /etc/ansible/ansible.cfg configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/sha re/ansible/plugins/modules'] ansible python module location = /usr/local/lib/python2.7/dist-packages/ansibl e-2.6.0-py2.7.egg/ansible executable location = /usr/local/bin/ansible python version = 2.7.6 (default, Nov 23 2017, 15:49:48) [GCC 4.8.4] ##### ADDITIONAL INFORMATION Tried to change the documentation where the user has to use anisble_ssh_user and ansible_user_pass instead of username and password.",9f880251f1f72ef73737327a07657d2d7d137645::f99501cd739dd976b50d8eb0e0b4d86e41c2eb1f::
https://api.github.com/repos/ansible/ansible,40212,improve-docs::devel,0,merged,affects_2.6::bug::docs::stale_ci::support:core::,"##### SUMMARY If there is a list of choices for an option whose type is not string, the default is currently not marked. Example: https://docs.ansible.com/ansible/devel/modules/acme_certificate_module.html, search for `acme_version`; the default value is `1` (integer), but it is not marked. ##### ISSUE TYPE - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME docs/templates/plugin.rst.j2 ##### ANSIBLE VERSION ``` 2.6.0 2.5.4 ``` ##### ADDITIONAL INFORMATION Kind of follow-up to #40050, which fixed the display of the choices in this case. Pinging @webknjaz @dagwieers because of this. Now that #39924 has been merged into devel you can: ```python from functools import partial from ansible.module_utils.common.collections import is_sequence test_list = partial(is_sequence, include_strings=False) ```::Nice :-) I've added that. (That part can't go into a backport, though.)::Could you please move this next to line 53? We tend to logically group imports.::I'm not sure whether it will work with Jinja syntax, but I'd do smth like: ```jinja {% if choice in (value.default if value.default is list else [value.default]) %} ```::Sure, but then you already did that yourself ;-)::The last time I tried, array literals did't work in Jinja (unfortunately).::So while it's been said that this would only be python-centric code, as I suspected it is now trickling into the Jinja filter. Sequence, list, strings, the mess is even messier now :-/ Both in Ansible python and Jinja.::It's just a helper function. So everyone reinventing it would not have to do this again.::",cfe1f604c89e21627741af305423b780a6478100::d08b63af85baa8bdfa59f86b5c7c7645e572ad38::366b5cbc79a7609e61375dae212b0cc69a2b1bd2::83de7324697ddb3598b96a3217d15c4939ce8c12::
https://api.github.com/repos/ansible/ansible,40131,revert_39726::devel,0,merged,affects_2.6::bug::cloud::community_review::module::stale_ci::support:community::vmware::,"##### SUMMARY Fixes changes from #39726 a0b4462a as it was possible to end up with a ``ValueError: invalid literal for int() with base 10: 'non_existing_vlan'`` situation if you passed in a string that was not a number, ie: ``vlan_name`` vs ``3``. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME cloud/vmware/vmware_guest.py ##### ANSIBLE VERSION ``` ansible 2.6.0 (revert_39726 de3aa03865) last updated 2018/05/15 00:04:24 (GMT -400) config file = /Users/deric/.ansible.cfg configured module search path = [u'/Users/deric/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/deric/ansible/lib/ansible executable location = /Users/deric/ansible/bain/ansible python version = 2.7.14 (default, Sep 25 2017, 09:54:19) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.37)] ``` ##### ADDITIONAL INFORMATION I believe #39726 had backports as well.",246892b06bfd45fdce3ef5427d172fc44b68841c::
https://api.github.com/repos/ansible/ansible,39887,win_template-dest-dir::devel,0,merged,bug::core_review::module::support:core::test::windows::,"##### SUMMARY When using win_template to template a file to a dest directory, it will create a destination file with the filename of `source` when dest is a directory while it will fail on the 2nd task if dest is a directory with a trailing `\`. This should also be backported to stable-2.5 once merged into devel. Fixes https://github.com/ansible/ansible/issues/39886 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_template ##### ANSIBLE VERSION ``` devel ```",9bc5c80b1aad3ae8bf11633cf7bb33e668b24d33::
https://api.github.com/repos/ansible/ansible,39859,nxos_become::devel,0,merged,cisco::docs::networking::nxos::support:core::,##### SUMMARY Updates network documentation to cover changes in https://github.com/ansible/ansible/pull/39355 ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs.ansible.com ##### ANSIBLE VERSION 2.5 Will backport to `stable-2.5` Note about 2.5.3 here?::addressed by 119f45e286d59b54916965f7ce0aaec86bac57cf?::Looks good::this also needs to be removed from nxapi provider spec.::,580f222da721ccc4d9f4b56e5eaf7f0e5da6861f::
https://api.github.com/repos/ansible/ansible,39811,constrain-regex::devel,0,merged,bug::needs_revision::support:core::,"The pattern we're matching can have zero or one p.  Be more careful to match exactly that. Slight revision of #39730 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME facts ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` devel ``` Will join the backport to 2.5 in https://github.com/ansible/ansible/pull/39804",fc4768a6f5adfe43213b6690649203173f9c2642::
https://api.github.com/repos/ansible/ansible,39665,patch-41::devel,0,merged,bug::networking::support:core::,"Issue : NameError: global name ‘cnos_devicerules’ is not defined. while running cnos modules. Device Rule file validates the range and type of data going into each CLI based on device type it is executed against. This has to be backported to 2.5 ##### SUMMARY While executing the playbooks involving cnos modules, there comes an error where the files cnos_devicerules.py and cnos_errorcodes.py are not available in pythonpath. To mitigate this the change has to be made in import statement. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/module_utils/network/cnos/cnos.py ##### ANSIBLE VERSION ansible 2.6.0 config file = /etc/ansible/ansible.cfg configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /usr/local/lib/python2.7/dist-packages/ansible-2.6.0-py2.7.egg/ansible executable location = /usr/local/bin/ansible python version = 2.7.6 (default, Nov 23 2017, 15:49:48) [GCC 4.8.4] ##### ADDITIONAL INFORMATION This change has to be backported to Ansible 2.5 version as well.",337df479979f2a3bc8b75c2999dbce782254beff::
https://api.github.com/repos/ansible/ansible,39626,fix/influxdb_query_common_return_clash::devel,0,merged,bug::community_review::module::owner_pr::support:community::,"##### SUMMARY module uses a common return name `results` for module return key, which causes an unexpected behaviour. Renaming the return, Fixes #38027 ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME influxdb_query ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.5 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ``` needs backport to 2.5",fd7cfcd282dba25967df8689b2708bb865cacc18::
https://api.github.com/repos/ansible/ansible,39514,fix_startwith_typo::devel,0,merged,bug::support:core::,"##### SUMMARY Error was: `AttributeError(""'str' object has no attribute 'startwith'"",)` resulting in `ansible_virtualization_role` being not set. Fixes #39138 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/module_utils/facts/virtual/linux.py ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.6.0 (devel ac754c736f) last updated 2018/04/27 16:24:14 (GMT +200) ``` ##### ADDITIONAL INFORMATION Present in 2.5.1 (ae0a9a5e9cfab4f910ca15861787cccc3c9bb600), should be backported in 2.5.2. Bug wasn't caught by the CI because integration tests don't use `real` hardware (moreover bug only occurs when `kvm`/`vboxdrv` modules aren't loaded).",cc3facdb9fd32ca030691d3000dd07daae754792::
https://api.github.com/repos/ansible/ansible,39432,galaxy_bad_path_warn_39082::devel,0,closed,,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> backport #39082 <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does.--> ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> ansible-galaxy ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.5 ```",aa1c4a0de2302c32ae700c6719fdade3c98c9d6b::d6127361d3eab64a634762fe7d28ccbac9ff4087::482e204afa111663515c3d92b6d31630af66abf3::0a2db12370145f7f707117d9ec23cc758ba95d58::9ff46ca52f6398f95ce0a54bd57afd23c0ff7a9e::c47401463dd820433dca0681e65da65ad66b8b3e::36186c3a04ca7a22ccbc4a4f4887d8ff943fc029::c264061272241033d1214c36d09c96a6689179ff::1b3433b9691faec307823bc520782b80dee4e559::8d7fe469ea471fff6020b437a7435936360b479f::9f02fea15b1e72536f1e56aef09201a3586b4899::b8c6adbe18533dd2be6a9c930f86f328f774bf54::934462a5db96315796b7bff31024adbcc370f5c8::1381de72d0622788859aa53d198f806aeadf3f7a::5ebce3e6188d53283d2cecd7be94f382ec80477d::2f8a851b442d4bf49121849b75f91f19cb8917e7::20fcaeb854166feb73255c0a45111e37632fceb7::3b1df957981bd40f5fcdc6123628aae5d7575180::144e5ae65a8f046041eff6545c606967e0f72baa::61887e7c2fbb9ec89830392f4e30c98fe7d14096::6b0b4ddf0032b31205879a0ca85f8a7a559e863f::26659123560af805b40bf7a1c8239c02b020bdf5::a57a2e1d4f9b8553492f566865a83362473bfb24::2c2dd1a1b3eca6248979e04e70afff6dd3fcf366::44d3bcbc6f3bef3bb06cf4581e17e20696e395e0::f237508caa6e99aafb8691b148b41371105d12e7::4b406de19ae66263c3623d82db6b93d7d112018a::2604832858e0a0f5d65570ad773c70692ae19c90::617d156eacd966060bca4444a3a9780404676192::e33f1777fe3d36cb957662b9701f5cf949d5f96f::687780323a091bdee07d5e6081a4ae48a3d1d7d8::0b0bb65198fcb4e2e1c2974bca2cc8b5071e4ae2::ae4c246a3c3b1eff91d5acf7d4b4e131f6ecd22f::60e7aa0dbd01e2f48fe322d7f8f4fd16b4c6c497::a716fe97e354e4a947e4d67ab012c71357465698::4dffcd35cd037eb4c1afda87caf763f9fcea0dd0::ec59181a285c65b7befad6b0b4814beab2d8efe8::f91cda4b02b0416e95da7c89aa2e98cd15d0b687::5ac9a7418fddf73605aef21c5eafa527e03aae62::4e5f17e52d253d2526f48c362abcfa56a10c7491::98633e51575bfa8b041c15938cf62a9c954e8518::d47e020d5528de4298e6a329f5afa619ccfeb407::ae0a9a5e9cfab4f910ca15861787cccc3c9bb600::2dd02eb812d46d08634d751adc41f31a21fc146b::f23c1004199f9ffbf2e59ca0700e7cccfbafd4ea::8d008d00ed55490768fac5bf1f00ba628cadd97b::64cdeba7a234fb838f2258f8087ab7c9e4e6df35::87119348b5dceae8dc49757a83294107ea787cb9::97a0516cf679c4a30e0f9704ded4ad5310da2457::389c4d15362bc762ba421e33a243cb021dab8290::4ecd16b2ae0dc35dbd3d76786107b12da6cd39b3::5b0d8ab86870fdc3642891acc183253b396a6e00::27382f38dceebe1c6ea62dcb37cd5d0ccdeceba7::d64a352a40dc5e5aedb8e9db50727c5c2ff83973::663400b504baa706c9136c13c990ed447c00a364::8f5565f948af000bb6ed0d7bbde2fde080cc775e::ca3457458f87ebb65eeefc8361fb25e4baf70ef8::3ac91f7e28b46c468e6487d5bbc9bc13d151b21f::46cf6ed677644842e34ce676607b154b0fdcca96::00623c3da5702f0c090ee3b279810b31163656a8::112f577d3a79a3b78283a02d3828b118a82d1050::f1a060743ae8327c39ad17064335c45a8b16e372::d0f1a23c458d2752e9ef1dc629275a609b9922dc::c056b8a35c0bfa6780822bcafc5a2aa13bbbf080::0c88f199ec6f32b8b3c582564d1b62f332beff62::886a88a96725d8066f4bb418c4d07058126e6c47::800980ec833a00ecb5973d0493bd830bd30e8a0e::f2b0171b934958343e70a3bd7070bce574367854::f629825299cfb5db7ffb60f5590233381ec45588::09dc621238e4a2ce761c37dfabb20d9c83e1bef1::fa57dec5e0ae43c79dec66e199edfe6ef0296f34::6e1ca544dde742805b4bb100121190c75470dedb::eaa484f05dd319033ef9037081b1548c81dff309::b86d376a85c4f9f89e952bae02268a4993e4b19f::febd1ca44add483486566a49516d4ce43d74626d::4e3e2c712adc3b1850550d28efb7671df1b77233::5ee10ad19c50ec0f4ceb2e99cdd4f00090ca0026::323e3b6914ef23116f89b42fb9e12454a08bda39::aed8aea3f37891f65be533498ef1a3c3fd493229::08029a38dfbf1775be8887f968933adf58e7e037::05cf76cbd754470442f4ebfadd8839c533ce74c4::92562a2ba99229f6c11f9986c0100461c9e35def::20a5987c30798e6bf413e1ae5a6f229b2e077e25::5cf14202515d591187d9d12eae5b8b765f6f4651::50c971df43d2f962b36605b117957e24fa682620::63566334f67923df94e8340d61e1e09c42325bab::82779890391385f5f4f3bd3a84798ab02b4b75be::58bafcb01cc5992c0d81d173b459a002f20e658d::8b62aef632c0016142d9e1c03ec226bff742579d::c97c02e83b92e35fe45c46ccf05b5735e642a9ed::ff03fc0f6758126bef093197c46fa040a86ec348::536dff507d8b790a9328f9d81f780bb12cc505e3::4aafa90c89dbac043415e9f4a11601ef28dbd7a4::cbeadb2c9adf1351249dce10306eceac444f9a10::f25eea16e602678b5dacfec04baa7448ad9d23b7::f10b82c0d3c0c8205b86e9c18b0590a738886f87::222c1f1090fe646a446b30a529d4ca60d38f1bcc::604b748295cd4c2bd122486ba89aa911e991193a::2b78985ff259004cc556f8f31e5674c67f161cbd::32a99acc88e4c515ca4de29e8557bdc6033a60df::14011dbe2a8c1f9556e216e253e008dd2b71d6b1::e60c4d46908e4de4d4af5348eff21968f3e54b2f::2895daacdbd2dd46b509716077b1308ab54dd04d::57931804ed4646c615f66ff0cb87a9ed40e956ee::4f0389ad4eb1169f073fd774e21d41194dc870b8::4875477d17e9111bbba25b1c003a9dca2037c73c::f96c1092866728a9b39e6a4f8bebf97e47720b94::28b41f5c830640a32aca3a239604cd15ed7d4cc0::2e881f29297a7ee38b978ab0b7624e2d4673b36d::38a13f41cdb49e429acb4f0a757c009102af087d::9bb2a362893d80fb6900a3dcda50fbf8e1b4b3cf::9d0ebfdea6d1ff1a10b4a6c06bcc1688bfce83da::b9ccac8550aa842ca66592fd6f620affddcd40fe::31e28a04a5dcd4fbfc564e7a143309e7f4218428::3ac6c6ebd9ab4e16f8706719543b479f932fbf77::7e621b3dbe904e2a789b91d848220905879e340f::0525d4cf9d962151fc3ac2a5f2f6374ef382e57b::7f55954cc1262627d0dc53d381f9c99c14fbfbad::bbcb7d9118b7e290d4c423cf1ee69a4f9920a0f7::0a441eb2f116e43c78204e94aa7fd8be5ece4513::96efaa3ff386a1db4e6f4ba813bad392dfaa6d25::23e57fe095a861f6b31cf01605e9b2a06a89795f::8b8455523d6709e53dfd5a7f082740c548636032::91c8a8dccc4818b4e7695ba5c6b713c01065c833::430195f0f19389acb58aa7539b8032d7e391fa48::28651a85ab7558b8006cd75e533971fcaa8b1fba::9fd122d7be88bf666233c9b2e48ba6521b6888c4::48a4b00adeb245197fed55d1b77553aca3bdd777::27f2653c7f2f838b120f6ed770f19a0f4b59d709::0f524a1632477e6d5f40df0bf3b57ab67bcfd021::78484137c006729bd480496c0a4f2abb6ce7bd69::4b436847fc6212bd2230eb9fb1a9ce7185ac825e::955ef020ef9c726fd156734f1c47b4bc38189b88::86f5a824572ffebc4ab1848028fb960bc434afe3::5f8812ec239b7bab20e89fb89d1060db565aff98::0ce544c29b2773b1b8fc9f930c72b831adbcb6db::3a6f93c19012066b0865e06bbfbd383a3a27e32a::5f98ee878ee4fbf49a34b2d8f25d40ea01973783::9011a0abc65e0bd9de98cdcc22190ec17c2572de::c1c65168d5d28a9fa405e1c6b41d4a36c253bb95::34861a3524cda41368a2126ad497d648a32fe23d::7993dc90e50defa46d1a260161391e9f9e36cb68::fdcbcf313a03feefbd6bccdd4bd90abef73ee78a::0143aa94161ed16b096cc0271b11cc1a429239e2::e8469a51177ab37768426727f8d26e541b2a741f::1de0515af9cce05110b02ad82832e975535f0d61::0fdfb27e0f5ad631bde9cff40801eb18127eb542::30d338f66444c2130c27655658b6000fe446bd4d::603053591771e8a175a518c9a045aa19ba9d44b0::829f9fda7a67fb84a8b93fee166db18b86eef113::16848231962f69441b6ad4f0c83071a30272349b::23fd9bb3286c1140bf0a54ce108a89544ea670a1::b52391026973e9c5a26bfe165ff4d8c5f113f5a7::4d7e1747489fe3d02df1a74075fa8b5110ffa485::ce1913a76f9fe3676082983917022e4c11994e8a::897eab8d04e2286bfe0f55b6223d50798b303a88::8f2d46ecf86bd2159bae0fef9fc9c90dd6755173::95386d60755059e980a4cb722bf45e69b0c68514::d9436f18f5a12034e7b4e3e23ae2407fcb8f155b::5f8758d6a3a8c0d86eb9973014f269449ecbc154::bb50c65769bacba9cbf7c7461e497f31bd0d6560::507423f111b87fb490e11ca43f6099481e51b7c0::f5befa5ab4ce98e30eba57f7f81dfeab548c78ce::24c1e2ed0a59a03f10a61a88fe4d924cfe444139::ae79eef0b2fd8771426505c4c8c77411afb9d7f1::867bc8967e7ed0862b2ad66b9e918311e2e42800::938625add76ccec99e3e03c9a1ae057986ca7d61::2b73a5b69fdb8713f8f1c1c1ecef7ee85b96b99d::9178def4560e35d51f2a9c527017988d3b862acd::10aa5a37aa0823178128cea5f8bc07c03825afa7::4091ab479f768b1ecaabc6b2e13e5e56cfc82bd9::893807bfc91bce8e3d691e40528e6f8f40353133::8606fa0431f323437ca82ec92caa7e36affada25::4b55ecc82590cf72e4c17e2b790f8e73afbb62ee::0fede2ba60772b11ab06e7d73e1a5f5045d09d43::9a7da8d3da8de20f8181c058bb8df3b8d927816a::456fe2add176f8e36eee774a86aac98e643e29d2::61e3f32f81556acc2ef7e2e4ce202aeee5428b84::003c52f1ef8d5082450ac3b46ebf197b4cd163e1::145f42eba3ef4fc254e71269147470e4763d601a::751ae4f4a92db156bb148dcf009febf15771fd8c::f670602448f63bfbbc9caffe90694bb99a0ac857::00848dff17a2007d500bc6023e28ed6a22e28543::cf1cb61efb79d10428295fc6f64736d1c3bbbd27::dfbba6e75b89b4db12a3eb9ed2097fdcf7444203::0852ea6dc05b333d50a7ebb72eb9710cc60faf0f::923015d9d7ddf325eda1e9c16f4f1dbfeb350450::a3798d9b624d9b7aa84adb408d28a0b66b2197ee::d31d84cfa3b1f797adea7f78274b5148333ba6f9::b37facb2349e642c87af5bcd3daa7e4628747869::8473765ae6bbc672d9400030044145024796e9e0::5fc9f3d219ba7a00032c39b667ea1380b072ceef::529d778015fd3a9aef1084c6bc10650124c37aac::07bb0407ad6e6598e8cd2e0b96dacdabf38b82c3::d4be7f772ac959dbb93d159f9e2761b14292641a::5e8aeddc854b043899cfec0c0cf540db1c2335a0::5ea8fa4052f51b6a412356b3d84ad9b2f579051a::3362ad16b1d43e51755372872008ef753781d768::20430f901e3ec34e3d33754292eb653310a26805::2f64d6fcfb016ecfe0c640c01f930a58929fb20c::3d0c00091dc70ded2ab0a837a3782cb12b3f2f27::ed473d792bbe9c0b9a51084a362e3b2cb85f626c::16f48b539f88b29eb4b3f7448af80fe9d26341e9::2b985137d77f35fccd1c0433d93f256a6e37e793::4d95f467f51d7f87b0fcd9e18bb2d5b765a6d466::cb5083b6797afe13ce762a27f2a0445a8ea23931::0d83a0a888c4ef3a5f2aa3a3b61bb9a75239bc53::0e5c66ae721989bf70cc29ba549a2a50bded7b43::5ec8a19b79c04fe2f771e128efaaa7bcffc0b5c1::a2df7ab75ea8f1fc5f021a78bdab446a7eac3e59::0a7f2093a3ae00ce07f846055aa990ee8e10e18f::057ceb724de011373eb455980e3f53d2ffdad308::27ad5808e2a13e03b28bc4b297d33ba3c162fb53::0e98011f3a54572840515f788592b789e9432b7b::3e54803fa457a21ec84f857f4123dc9a566c3592::07ca962417bb6b1c159f7710203f3e1f3e43b773::017f9a4876604b400aaadd8a577e055feb480d1e::0bbb67383b9fbbd0db01153d2048474cb0fb3143::d6872a7b070d1179e7d76bcda1490bb7003c4574::94d40c8515ccedb1ababc7d43c47dd19d86631db::cd7042857c5ed81223080c51fde1d597a2eeebca::628492f8b35a3a0ba0f887675129eedaa0c53c71::3a0e8efc216f99e6628177b66ca57bf59b45e873::ea765be9931fd231e2687e23a013842497bbb85d::1a96cd67d0ef2a2c2bd51449856f143a05eaaf48::711769db4fbb27c95e138e096b85dae1f5725057::ec8bce205196ffc922a8f2dbe82c8c72e5a8f1c8::299861a302fa4ee31a803395156e7740cb41057a::250d5b74fa0f9ec7a2e35848572a0ea9f4f8d9ee::6ab0d60e81ee04be1a35c855ee439cce54005586::b372eb094795b5a4140858c50f13d61e39eeaa1f::0e961f9ace57266518b546e3e2d86212260b524f::f0761660bb8ec70e4ca026bbdd44cc6c0f028ffb::6c03fcdc0e3cd1a648258dd5f1a5ec2bf5b849ab::6b4b2d5381b1377d860106cda97d762500329e08::7dbe964de5458980602a1833b654060df236dc93::6458a6699b506e482f7ebcebcadd1aeecbaea9d0::b88161055f0ca765a71426f39e2375a5ddd718c1::3bcca725fc417fb3939d7403d0f6a3379a0e628a::d1e6b9a1992d79589ca25d4542972831fd12bb4c::75c5bc0ef73ed441f216b704bbb08585b30a74ec::cb27ed5a58c9fdcc268852c2fa846bda92aa1035::757fb5263f4aa3cf91f31b9a3c3765adc169a225::f529d758651bcce66c39f26bfa1ea789363acdd4::48b75cad8ee7b4f20cee2f5f1dac5c4eef760a3e::a02592baecbb7881f3cd3d304e00b4eaacfb76a5::c1d91bfcaa7dcf9fcc1af4cbd8ed258661b2f3d2::655ffa53688469a79fd5775d712fda214599734a::070c7b77ab53f947aab608859fbec535aea949a5::78e3884c03b59c77ada5a9e5b12eda59565bf162::
https://api.github.com/repos/ansible/ansible,39421,bkp_chkconfig_locale_29818::devel,0,closed,,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> backport of #29818 <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does.--> ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> modules/service ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.5 ```",d60eac9bc453570decf511b4576739873d6e04b4::b1bdc5dae245c53edea1e920af50f62f439d7b05::6bf30f65b994e5f9365aa3bfe1605ed3f9e23725::0aa62a54cdd965e178a3298fc4c9f4e78877c320::d67d19bc1ff4e5aa7d5e25599a63dd970e15aa0e::5052db269884aaa34038cdf47f89fef1be238bfe::eb12520854fe0ca57b804dde84e7a454c3409aa3::b86f07324e349ae407c2c6bf706f4fb2a81e7deb::e1eae55e55c09f114567c053f1799b3cd046e76a::78cc85fa27652819e0474c3f28cf772eb8035f35::9e9f910cb6ba399eb2fab1f2590f7d55379f5b28::99f4e016bbf373e24f0465dc98dd1b25ecdc7fdf::19ea7bcdd89cc3477e1ba91f937badf1302fd19d::409193a7dc2fd0ad16bfc76d18bf1b4a55f271a6::fb630c926a8944b65911cf5f2bd39a50c6e27ff8::d4252c89e990a2f930e05847b042738f61a2bba3::f14e0e7ee31a38b28166f90448a28bd71a506928::3257fe28f33b890f202732250d858f8d38f8e677::8040168c4f6e41c8027d344ef40803ae83225e66::bfbea05d26b9aa873487e72fe57e75873024d202::f5684acee5b14c75d67ea7b134eaf2d1871b61f9::5c65fa3e003c5a6eee4d3993b3c9185c6cd7fae7::f3653747bb48b0ac34f00c1750bdfb1164010c5a::dce80b13645e03954a99f979a1978da6556f9b0f::a275a3929924a730ba3ef1add62acfa738de3e0c::617659a33c9103f3b313c40f424b051730c7fe1b::3e123d8298d74f2ae974eeb61daeebc0894883fa::2cd49b4ab092e8c46fd40490b80b5db0fe2f1b76::3f8377c2d94b08150de6e9fa452bcda95e137be4::36566e62a716f55a187fc4f510da25a1402ba381::801b5dcd04459146feff30665e534130aaf94160::639f7b569a7cf8992e2817a5b9aa8631252b0492::9ac8aa355222e481027a293d0169adfb37e44ed1::a3f96ec4af3de30daafcaba168db604acadd25a8::a50b332768c118aeb06a3ca1145e76e95a100ae4::9711c60b018490686e34ef403655323e59935307::8cc9abcd754bd7fdb3a2421ede06e2548bd1f3a8::1a412d49bfdad5496ee1df3bca6d8d99993c4e80::86cc8ae59141306cf420fd0338f616b4b9f8840e::644b1168483ae08b1a7e81985eee849710d36a7d::f0e65cb05a62de59bdfc46218c37f9c9c94179c7::2bcc02e653f3c1bfc5bd533e45d6ddd74bca0167::ee4578c4cd2c699c9fa0377721cec1dc1c3c683a::422e4aa3101238012885ebbebf98635f51c1a299::38a498bcfd6ae36de73fe713c02cfeec38fe010a::bbf27efe06e44db1808975bef1f2143ade0b267a::f48d636500867797e10fff240dd9a5e9e1a649c7::e03b17e2e57b0a161393a044ff7cfd7f367d37b0::c4cb7daa6bc1f3821675479491bd11130910c5b9::5ec5c05f0d7d704844c212adadef78df9c53ea74::c2cc6e4ac8f17a2cd0edeb7ed8e6fc4871380e9e::fccb6962fe59d8fc0c7c2d7981894535005d1a56::111c2d6c1fe6d2476680e2fa79bae76761d76ded::4ad30ad9b5432ba7d01ae2d5bb86a0b5f47c12d2::471e75a0190aec7cf70de930d7555ebc43349c07::f0a808e02c6cb780ebc4321b6f6f5af0cc785ebc::33773624fbcbdc529db1965c68c8b2f0dea86b20::b1f8fd7edb131c49639a779f9147d591b7e445fa::2be960f84a813ffad3282df5d26287553686e9b1::4bb5f40e992716d2455f98053e637408018b8f67::ee67c6c1e33f911443870df37dd836460b7b694a::0c4d8a9ce59bafb23f0b354f16c8f2ea10f1fa1c::895d9abd7b53a3bcecea394347f41fe2f92b297a::c054527d65e76d6a4945e37a8aa030f894460806::f230d8e9c4a42b47762c6efdb3a7242eece249ac::3b1be8d881d26bf52ff7189e35221886cd07c077::09de6dc020f27130a33626d30c584d77eaeb93d6::0fd9c9b0149113d84efbd422d70dd52d4ee6f4ae::bfceaf696c673c6a587df6d7c8eb95e01a9da260::193687851bafd262a7311818276d3ad5df0ef383::e6effb32b8ab721c5c9986ba63ea2a1eb9c55c71::934d1df0d141e2c95b50adf0748a3e901cc91148::2e145cd1f272a43a370276bb3834765f5c40cf5c::7213d0017b8059b6272bb4b3da1dfe6c31c32cb2::d06f8dda3b5103ed6a834d3fcf1f5d1640bd78c9::fb8a9d4e79c7b732b7bdbe781ec85ab2fe9d3932::bb3cbac73821ee070c6310f657ffa899a0278338::4477ce809f3fd80df80160631e5797c641226bf8::51bf373fd17eda443e187e002e4fb0d89f0414e6::9e315f15ee4a18f72d8cfc17116073b82a2e4d1a::4df0be4b1bbe91c0a5b0b9d41b9edb1092f86430::044aa1cb7399a8cee6dc8c16ce9ddcc9467768db::acef6d25b1a882502ca9071331b306d13242ac57::e02b2376494b4811502e1a407bb2a17a54af07bd::1842e34a738a2c4df6a3e6220b8720885c9cd10f::05b3b731854646a8375c9fb96da817a64a5c9576::24d98f9e70ac257ea4c45bb60d602f4da7fcb3bd::1258bf57e69162c723bf8db4866d86639b7d5c7e::643fe472e7c24b1468363f82ff674d99b325ac81::de039e914fc798269fe559a3a517ae648feaaabd::2ee6a85463d17a62d3bb5386ac3030b10ed51c3f::573c53fd007fff9eec6f46df00f4a4901276073a::cc46e752e03941b041bf87621b65f18d3b3235c7::aa1c4a0de2302c32ae700c6719fdade3c98c9d6b::d6127361d3eab64a634762fe7d28ccbac9ff4087::482e204afa111663515c3d92b6d31630af66abf3::0a2db12370145f7f707117d9ec23cc758ba95d58::9ff46ca52f6398f95ce0a54bd57afd23c0ff7a9e::c47401463dd820433dca0681e65da65ad66b8b3e::36186c3a04ca7a22ccbc4a4f4887d8ff943fc029::c264061272241033d1214c36d09c96a6689179ff::1b3433b9691faec307823bc520782b80dee4e559::8d7fe469ea471fff6020b437a7435936360b479f::9f02fea15b1e72536f1e56aef09201a3586b4899::b8c6adbe18533dd2be6a9c930f86f328f774bf54::934462a5db96315796b7bff31024adbcc370f5c8::1381de72d0622788859aa53d198f806aeadf3f7a::5ebce3e6188d53283d2cecd7be94f382ec80477d::2f8a851b442d4bf49121849b75f91f19cb8917e7::20fcaeb854166feb73255c0a45111e37632fceb7::3b1df957981bd40f5fcdc6123628aae5d7575180::144e5ae65a8f046041eff6545c606967e0f72baa::61887e7c2fbb9ec89830392f4e30c98fe7d14096::6b0b4ddf0032b31205879a0ca85f8a7a559e863f::26659123560af805b40bf7a1c8239c02b020bdf5::a57a2e1d4f9b8553492f566865a83362473bfb24::2c2dd1a1b3eca6248979e04e70afff6dd3fcf366::44d3bcbc6f3bef3bb06cf4581e17e20696e395e0::f237508caa6e99aafb8691b148b41371105d12e7::4b406de19ae66263c3623d82db6b93d7d112018a::2604832858e0a0f5d65570ad773c70692ae19c90::617d156eacd966060bca4444a3a9780404676192::e33f1777fe3d36cb957662b9701f5cf949d5f96f::687780323a091bdee07d5e6081a4ae48a3d1d7d8::0b0bb65198fcb4e2e1c2974bca2cc8b5071e4ae2::ae4c246a3c3b1eff91d5acf7d4b4e131f6ecd22f::60e7aa0dbd01e2f48fe322d7f8f4fd16b4c6c497::a716fe97e354e4a947e4d67ab012c71357465698::4dffcd35cd037eb4c1afda87caf763f9fcea0dd0::ec59181a285c65b7befad6b0b4814beab2d8efe8::f91cda4b02b0416e95da7c89aa2e98cd15d0b687::5ac9a7418fddf73605aef21c5eafa527e03aae62::4e5f17e52d253d2526f48c362abcfa56a10c7491::98633e51575bfa8b041c15938cf62a9c954e8518::d47e020d5528de4298e6a329f5afa619ccfeb407::ae0a9a5e9cfab4f910ca15861787cccc3c9bb600::2dd02eb812d46d08634d751adc41f31a21fc146b::f23c1004199f9ffbf2e59ca0700e7cccfbafd4ea::8d008d00ed55490768fac5bf1f00ba628cadd97b::64cdeba7a234fb838f2258f8087ab7c9e4e6df35::87119348b5dceae8dc49757a83294107ea787cb9::97a0516cf679c4a30e0f9704ded4ad5310da2457::389c4d15362bc762ba421e33a243cb021dab8290::4ecd16b2ae0dc35dbd3d76786107b12da6cd39b3::5b0d8ab86870fdc3642891acc183253b396a6e00::27382f38dceebe1c6ea62dcb37cd5d0ccdeceba7::d64a352a40dc5e5aedb8e9db50727c5c2ff83973::663400b504baa706c9136c13c990ed447c00a364::8f5565f948af000bb6ed0d7bbde2fde080cc775e::ca3457458f87ebb65eeefc8361fb25e4baf70ef8::3ac91f7e28b46c468e6487d5bbc9bc13d151b21f::46cf6ed677644842e34ce676607b154b0fdcca96::00623c3da5702f0c090ee3b279810b31163656a8::112f577d3a79a3b78283a02d3828b118a82d1050::f1a060743ae8327c39ad17064335c45a8b16e372::d0f1a23c458d2752e9ef1dc629275a609b9922dc::c056b8a35c0bfa6780822bcafc5a2aa13bbbf080::0c88f199ec6f32b8b3c582564d1b62f332beff62::886a88a96725d8066f4bb418c4d07058126e6c47::800980ec833a00ecb5973d0493bd830bd30e8a0e::f2b0171b934958343e70a3bd7070bce574367854::f629825299cfb5db7ffb60f5590233381ec45588::09dc621238e4a2ce761c37dfabb20d9c83e1bef1::fa57dec5e0ae43c79dec66e199edfe6ef0296f34::6e1ca544dde742805b4bb100121190c75470dedb::eaa484f05dd319033ef9037081b1548c81dff309::b86d376a85c4f9f89e952bae02268a4993e4b19f::febd1ca44add483486566a49516d4ce43d74626d::4e3e2c712adc3b1850550d28efb7671df1b77233::5ee10ad19c50ec0f4ceb2e99cdd4f00090ca0026::323e3b6914ef23116f89b42fb9e12454a08bda39::aed8aea3f37891f65be533498ef1a3c3fd493229::08029a38dfbf1775be8887f968933adf58e7e037::05cf76cbd754470442f4ebfadd8839c533ce74c4::92562a2ba99229f6c11f9986c0100461c9e35def::20a5987c30798e6bf413e1ae5a6f229b2e077e25::5cf14202515d591187d9d12eae5b8b765f6f4651::50c971df43d2f962b36605b117957e24fa682620::63566334f67923df94e8340d61e1e09c42325bab::82779890391385f5f4f3bd3a84798ab02b4b75be::58bafcb01cc5992c0d81d173b459a002f20e658d::8b62aef632c0016142d9e1c03ec226bff742579d::c97c02e83b92e35fe45c46ccf05b5735e642a9ed::ff03fc0f6758126bef093197c46fa040a86ec348::536dff507d8b790a9328f9d81f780bb12cc505e3::4aafa90c89dbac043415e9f4a11601ef28dbd7a4::cbeadb2c9adf1351249dce10306eceac444f9a10::f25eea16e602678b5dacfec04baa7448ad9d23b7::f10b82c0d3c0c8205b86e9c18b0590a738886f87::222c1f1090fe646a446b30a529d4ca60d38f1bcc::604b748295cd4c2bd122486ba89aa911e991193a::2b78985ff259004cc556f8f31e5674c67f161cbd::32a99acc88e4c515ca4de29e8557bdc6033a60df::14011dbe2a8c1f9556e216e253e008dd2b71d6b1::e60c4d46908e4de4d4af5348eff21968f3e54b2f::2895daacdbd2dd46b509716077b1308ab54dd04d::57931804ed4646c615f66ff0cb87a9ed40e956ee::4f0389ad4eb1169f073fd774e21d41194dc870b8::4875477d17e9111bbba25b1c003a9dca2037c73c::f96c1092866728a9b39e6a4f8bebf97e47720b94::28b41f5c830640a32aca3a239604cd15ed7d4cc0::2e881f29297a7ee38b978ab0b7624e2d4673b36d::38a13f41cdb49e429acb4f0a757c009102af087d::9bb2a362893d80fb6900a3dcda50fbf8e1b4b3cf::9d0ebfdea6d1ff1a10b4a6c06bcc1688bfce83da::b9ccac8550aa842ca66592fd6f620affddcd40fe::31e28a04a5dcd4fbfc564e7a143309e7f4218428::3ac6c6ebd9ab4e16f8706719543b479f932fbf77::7e621b3dbe904e2a789b91d848220905879e340f::0525d4cf9d962151fc3ac2a5f2f6374ef382e57b::7f55954cc1262627d0dc53d381f9c99c14fbfbad::bbcb7d9118b7e290d4c423cf1ee69a4f9920a0f7::0a441eb2f116e43c78204e94aa7fd8be5ece4513::96efaa3ff386a1db4e6f4ba813bad392dfaa6d25::23e57fe095a861f6b31cf01605e9b2a06a89795f::8b8455523d6709e53dfd5a7f082740c548636032::91c8a8dccc4818b4e7695ba5c6b713c01065c833::430195f0f19389acb58aa7539b8032d7e391fa48::28651a85ab7558b8006cd75e533971fcaa8b1fba::9fd122d7be88bf666233c9b2e48ba6521b6888c4::48a4b00adeb245197fed55d1b77553aca3bdd777::27f2653c7f2f838b120f6ed770f19a0f4b59d709::0f524a1632477e6d5f40df0bf3b57ab67bcfd021::78484137c006729bd480496c0a4f2abb6ce7bd69::4b436847fc6212bd2230eb9fb1a9ce7185ac825e::955ef020ef9c726fd156734f1c47b4bc38189b88::86f5a824572ffebc4ab1848028fb960bc434afe3::5f8812ec239b7bab20e89fb89d1060db565aff98::0ce544c29b2773b1b8fc9f930c72b831adbcb6db::3a6f93c19012066b0865e06bbfbd383a3a27e32a::5f98ee878ee4fbf49a34b2d8f25d40ea01973783::9011a0abc65e0bd9de98cdcc22190ec17c2572de::c1c65168d5d28a9fa405e1c6b41d4a36c253bb95::34861a3524cda41368a2126ad497d648a32fe23d::7993dc90e50defa46d1a260161391e9f9e36cb68::fdcbcf313a03feefbd6bccdd4bd90abef73ee78a::0143aa94161ed16b096cc0271b11cc1a429239e2::e8469a51177ab37768426727f8d26e541b2a741f::1de0515af9cce05110b02ad82832e975535f0d61::0fdfb27e0f5ad631bde9cff40801eb18127eb542::30d338f66444c2130c27655658b6000fe446bd4d::603053591771e8a175a518c9a045aa19ba9d44b0::829f9fda7a67fb84a8b93fee166db18b86eef113::16848231962f69441b6ad4f0c83071a30272349b::23fd9bb3286c1140bf0a54ce108a89544ea670a1::b52391026973e9c5a26bfe165ff4d8c5f113f5a7::4d7e1747489fe3d02df1a74075fa8b5110ffa485::ce1913a76f9fe3676082983917022e4c11994e8a::897eab8d04e2286bfe0f55b6223d50798b303a88::01ab11b0518ad9b6b2afbf7377da852f4e509b8f::
https://api.github.com/repos/ansible/ansible,39343,copy-template-mode-preserve::devel,0,merged,bug::module::needs_revision::support:core::test::windows::,"* Document mode=preserve for template and copy * Make mode=preserve work with remote_src for copy * Make mode=preserve work for template Fixes #39279 ##### ISSUE TYPE - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME copy and template ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` devel ``` ##### ADDITIONAL INFORMATION ~This just needs some integration tests to go along with mode=preserve for copy's remote_src=True and template.~ Tests added.  This is ready.Need to mention preserve only worked from local to remove from 2.3, 2.6+ would work with remote_src True::Only copy with remote_src: no worked in 2.3, template would be 2.6+ unless you plan on backporting::Fixed via a note in the remote_src description (which lists other remote_src limitations)::Fixed in latest commit.::",87b8040e7d2d69b4451b86e633b20b1c7b7bc35e::4a59c6d6978054d3ba97d629ce4b41e00a5f8bde::
https://api.github.com/repos/ansible/ansible,39256,ec2_vpc_net_stabilization::devel,0,merged,aws::bug::cloud::core_review::module::support:core::,"##### SUMMARY Fixes #36063. Should be backported to 2.5. ~Don't merge yet, going to run the tests for a few hours.~ ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/modules/cloud/amazon/ec2_vpc_net.py ##### ANSIBLE VERSION ``` 2.6.0 ```",094f591a3b0366323c779f760548b39a9602af0a::fa4eac061631dc756758783b670f751117577128::
https://api.github.com/repos/ansible/ansible,39213,yuwzho-nic-bugfix::devel,0,merged,azure::bug::cloud::module::shipit::support:certified::support:core::test::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> Subset of #38643 , but only contains bugfix, can be backported. <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does.--> Fixes #37872 Fixes #36093 Fixes #35656 Fixes #38809 ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> azure_rm_networkinterface ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.5.0 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ```",933befba946174732d89e6c305c4fcfac5941b6f::31b53a3aea2c59477a62fcbe9485e962e771a7f3::96890a18eb628ed01e0bb985a77d9714b2bf895c::1f0baddfd9409e750e00049253f7106a421f9ed2::be42c10cfc4a56411c3819025455090841aa5537::2548aa19335566e365f05d58763de80450c0f71c::2c9bfcdd827e85fd09c558561271bfbf3e9355eb::b471f0b5585fac5b922f448865cd7401c8a1eba3::1f5a494a69891906712883fd507cf0ffd1b9fc84::82cf938c391da56f50aab495763c686df68aaa71::fb51f4e4b7a69a40f3f6ac629ebacab0a570bf67::0d0f2f6be74edb59a6c7d7e2b34fc3c50c137412::fbd6197380c22187ed23158f3cdbca87e792ec86::d6f97a774d0db5866af7b512899bdc0130f379be::118c06bc7619d2fb7e15f97b5c1df870cb670f88::52e435e21004577feef41cb54e41fe292dfb67e7::011cccc920cd381fd0f1784cd96e2d823dfd0547::7b4705102fa3068287569578045ebd5cb515556b::436cc818ad314eab711aa2c43c42bb3901109b57::f65c5cfcbdcc5d4df24736d9fdf76ac708cb92cc::96b3061fbed12643e49ec2dddc79c7d3213eea5d::65e733cb7057c97a0e2f145075d6bace871da341::b58cae7ae8290d2dae6c4653d2cda689cb339edb::b6e95fa9b8d8b08c3d79434f322de87368f7b8d7::113e6f7bccc0517633cae5b21e916ad07d046f6d::cfadb855b128deb000ed46b11bc87f95ed9831c0::8094ea9369367bb93e416744230bcb3fa2c84c1d::b0af712a7af76701d1057e7f549cd7ba13e792e4::44997142e9b10b33eabe8ef426e15666cee635e7::
https://api.github.com/repos/ansible/ansible,39023,fix_aws_s3_module_remote_src::devel,0,merged,bug::stale_ci::support:core::,"##### SUMMARY This re-enables uploading remote files (which worked prior to 4d58d16793962fb7186defa3f1a4db90a2aa2a69). Fixes https://github.com/ansible/ansible/issues/38656. 2.5 backport candidate. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/plugins/action/aws_s3.py ##### ANSIBLE VERSION ``` 2.6 ```Do we also need to copy the file from controller to target? I've only ever tried this with controller == target.::Hey, @willthames sorry for taking a while to get back to this one. I wasn't sure exactly how it works and what the expected behavior is so I took some time to test it out and compare with older versions. It appears the controller file has never been copied so that would be a feature. Since I'd like this to be backported that could be a separate discussion maybe (though looks like it would add potential for more problems). I have tested with a target that is not the controller, and this fixes uploading a file that exists on the target. I think I'm going to clarify the error if the file doesn't exist on the remote or the controller because it is a little confusing: ``` ""msg"": ""Could not find or access '/tmp/onlyonremote.txt' on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"" ``` If the file exists on the controller but not the remote I get this message, which seems better: ``` ""msg"": ""Local object for PUT does not exist"" ```::",66f5e3f957f26f01c300efd5a25282fdf9968a35::dcfd6db53ce8716270357c181b215fc3f45c0650::
https://api.github.com/repos/ansible/ansible,38972,ec2_ami_validate_present_parameters::devel,0,merged,aws::bug::cloud::committer_review::module::support:certified::test::,Add integration tests for backward compatibility and ensuring name or image_id is provided Will cherry pick to https://github.com/ansible/ansible/pull/38585 for backporting. ##### SUMMARY Follow up to https://github.com/ansible/ansible/pull/38514. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/modules/cloud/amazon/ec2_ami.py ##### ANSIBLE VERSION ``` 2.6.0 ``` This task now tests the thing https://github.com/ansible/ansible/pull/38514 fixed.::,7aaa57890c8681ad21a4cb270a0b68bb66ce9fb1::
https://api.github.com/repos/ansible/ansible,38966,doc-sumologic::devel,0,merged,docs::needs_revision::support:community::,##### SUMMARY Previously this was causing a backtrace in `plugin_formattter.py` Should be backported into older branches ##### ISSUE TYPE - Docs Pull Request,f3be197fa5a6aab1de9efaf654be4e22b6fae4ce::
https://api.github.com/repos/ansible/ansible,38604,script-error-toggle-added::devel,0,merged,docs::needs_revision::support:core::,"##### SUMMARY A bugfix backported to 2.5 (#38177) also contained a new toggle option. The release manager (@nitzmahone ) approved backporting this added feature to the dot release. Updating `devel` to accurately reflect when the fetaure was added. ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Docs Pull Request ##### COMPONENT NAME `lib/ansible/plugins/inventory/script.py` ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.6 ```",f3ac7414fa87be8a2e0aeee67b2347e961f27f09::
https://api.github.com/repos/ansible/ansible,38582,backport-38514::devel,0,closed,bug::needs_rebase::needs_revision::,"##### SUMMARY Fix for issue #38482 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ec2_ami ##### ANSIBLE VERSION ``` ansible 2.5.0 config file = None configured module search path = [u'/Users/msaidelk/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/msaidelk/venv/lib/python2.7/site-packages/ansible executable location = /Users/msaidelk/venv/bin/ansible python version = 2.7.10 (default, Jul 15 2017, 17:16:57) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.31)] ``` ##### ADDITIONAL INFORMATION See issue #38482 Submitted based instructions from https://github.com/ansible/ansible/pull/38514 Cherry picked the fix and backported...",9935cda4a3ba4297eeeb62d1d80c24db806094b4::16845be9b1874bbeaf9f95ef1f544cedd5de1115::c6af1550496ab5421601c1495a6bd2d2858a1095::7188165dd121331b7b54b1e29a42b14fe9d9e677::bcc3ce8d74aec04d046bde4411cbf12f0bea1180::2c8d9beca3b0383c3af244f25c4ba00669b4c28c::234ba3f8b3328321fae79653a464e74c420af1d5::77af8f36cb93a7e38beb0de84a8f34db50ee8c7d::32515884efce06e9141d0e317ed960b2027d4da9::741b941f332d037a32bb70427865eeddc888ee0d::7f9fdbbb30647c4482b56b17381c16c37008bf8b::cb73fba36942c9264a0290c57654315d18ee0b65::54f9f06edca3c6c97f2f31d0d5c563ad1cfa6ff9::0057cfa0664fddb2356119f57c602f3d543dd336::61c1241a77e3906496911cdc61d90a7a56c2ede5::df78df5d9056552dd6e8628e76f291479afaab57::138ed416eba751c49ebf656c77318441dc63f460::7965ecb96202e4fd71f3bba3714a24022e05ef25::26cdfd84a029286a683691cd36f514248bfda19c::84debca5fb0014b3c85c6e2ab1228d96df60a3aa::e93cc41211dfae792b8842ca638a4381c209e97b::c4e94af4e9836a76d4a0cdd571690e55825e0778::980b6a00e2f86aac634487ce087dafb49c8a61c5::7e378e791cfa8bca1c05df204dafa95412df24ef::9bd7147bb87fb9ec8950a471a77377fe295ca3ab::f8d8d84f05a6dda2811077ec37e4a475c0191a17::3d1c8bc2e15733c89eb61ca521f23df2c68be3cf::b1e125b7188ce9ca08a1b0ade13452a4ff2b525f::ed9781bbfbb980ef30f094ba1ca6334a1e363858::917e5ae5d842f94f299998facd0e0657093bce8f::2ddcdb87208d62ee00ecabd12621e43cb4229861::97a7c3f39cc43889d657e1f557f2a8973347fc5e::98882b725f14ba314a3232593acacd5722444290::e77c1b9e424043a873e4d33b371ac2b29ad7681d::e1174f8864a3f4794d11651971be4151db2358de::b717765d598a6c58f303e9010abad404c3fbaa71::a48254275f692e8d81ac00f65a5006dc0fdf4d0e::d60eac9bc453570decf511b4576739873d6e04b4::b1bdc5dae245c53edea1e920af50f62f439d7b05::6bf30f65b994e5f9365aa3bfe1605ed3f9e23725::0aa62a54cdd965e178a3298fc4c9f4e78877c320::d67d19bc1ff4e5aa7d5e25599a63dd970e15aa0e::5052db269884aaa34038cdf47f89fef1be238bfe::eb12520854fe0ca57b804dde84e7a454c3409aa3::b86f07324e349ae407c2c6bf706f4fb2a81e7deb::e1eae55e55c09f114567c053f1799b3cd046e76a::78cc85fa27652819e0474c3f28cf772eb8035f35::9e9f910cb6ba399eb2fab1f2590f7d55379f5b28::99f4e016bbf373e24f0465dc98dd1b25ecdc7fdf::19ea7bcdd89cc3477e1ba91f937badf1302fd19d::409193a7dc2fd0ad16bfc76d18bf1b4a55f271a6::fb630c926a8944b65911cf5f2bd39a50c6e27ff8::d4252c89e990a2f930e05847b042738f61a2bba3::f14e0e7ee31a38b28166f90448a28bd71a506928::3257fe28f33b890f202732250d858f8d38f8e677::8040168c4f6e41c8027d344ef40803ae83225e66::bfbea05d26b9aa873487e72fe57e75873024d202::f5684acee5b14c75d67ea7b134eaf2d1871b61f9::5c65fa3e003c5a6eee4d3993b3c9185c6cd7fae7::f3653747bb48b0ac34f00c1750bdfb1164010c5a::dce80b13645e03954a99f979a1978da6556f9b0f::a275a3929924a730ba3ef1add62acfa738de3e0c::617659a33c9103f3b313c40f424b051730c7fe1b::3e123d8298d74f2ae974eeb61daeebc0894883fa::2cd49b4ab092e8c46fd40490b80b5db0fe2f1b76::3f8377c2d94b08150de6e9fa452bcda95e137be4::36566e62a716f55a187fc4f510da25a1402ba381::801b5dcd04459146feff30665e534130aaf94160::639f7b569a7cf8992e2817a5b9aa8631252b0492::9ac8aa355222e481027a293d0169adfb37e44ed1::a3f96ec4af3de30daafcaba168db604acadd25a8::a50b332768c118aeb06a3ca1145e76e95a100ae4::9711c60b018490686e34ef403655323e59935307::8cc9abcd754bd7fdb3a2421ede06e2548bd1f3a8::1a412d49bfdad5496ee1df3bca6d8d99993c4e80::86cc8ae59141306cf420fd0338f616b4b9f8840e::644b1168483ae08b1a7e81985eee849710d36a7d::f0e65cb05a62de59bdfc46218c37f9c9c94179c7::2bcc02e653f3c1bfc5bd533e45d6ddd74bca0167::ee4578c4cd2c699c9fa0377721cec1dc1c3c683a::422e4aa3101238012885ebbebf98635f51c1a299::38a498bcfd6ae36de73fe713c02cfeec38fe010a::bbf27efe06e44db1808975bef1f2143ade0b267a::f48d636500867797e10fff240dd9a5e9e1a649c7::e03b17e2e57b0a161393a044ff7cfd7f367d37b0::c4cb7daa6bc1f3821675479491bd11130910c5b9::5ec5c05f0d7d704844c212adadef78df9c53ea74::c2cc6e4ac8f17a2cd0edeb7ed8e6fc4871380e9e::fccb6962fe59d8fc0c7c2d7981894535005d1a56::111c2d6c1fe6d2476680e2fa79bae76761d76ded::4ad30ad9b5432ba7d01ae2d5bb86a0b5f47c12d2::471e75a0190aec7cf70de930d7555ebc43349c07::f0a808e02c6cb780ebc4321b6f6f5af0cc785ebc::33773624fbcbdc529db1965c68c8b2f0dea86b20::b1f8fd7edb131c49639a779f9147d591b7e445fa::2be960f84a813ffad3282df5d26287553686e9b1::4bb5f40e992716d2455f98053e637408018b8f67::ee67c6c1e33f911443870df37dd836460b7b694a::0c4d8a9ce59bafb23f0b354f16c8f2ea10f1fa1c::895d9abd7b53a3bcecea394347f41fe2f92b297a::c054527d65e76d6a4945e37a8aa030f894460806::f230d8e9c4a42b47762c6efdb3a7242eece249ac::3b1be8d881d26bf52ff7189e35221886cd07c077::09de6dc020f27130a33626d30c584d77eaeb93d6::0fd9c9b0149113d84efbd422d70dd52d4ee6f4ae::bfceaf696c673c6a587df6d7c8eb95e01a9da260::193687851bafd262a7311818276d3ad5df0ef383::e6effb32b8ab721c5c9986ba63ea2a1eb9c55c71::934d1df0d141e2c95b50adf0748a3e901cc91148::2e145cd1f272a43a370276bb3834765f5c40cf5c::7213d0017b8059b6272bb4b3da1dfe6c31c32cb2::d06f8dda3b5103ed6a834d3fcf1f5d1640bd78c9::fb8a9d4e79c7b732b7bdbe781ec85ab2fe9d3932::bb3cbac73821ee070c6310f657ffa899a0278338::4477ce809f3fd80df80160631e5797c641226bf8::51bf373fd17eda443e187e002e4fb0d89f0414e6::9e315f15ee4a18f72d8cfc17116073b82a2e4d1a::4df0be4b1bbe91c0a5b0b9d41b9edb1092f86430::044aa1cb7399a8cee6dc8c16ce9ddcc9467768db::acef6d25b1a882502ca9071331b306d13242ac57::e02b2376494b4811502e1a407bb2a17a54af07bd::1842e34a738a2c4df6a3e6220b8720885c9cd10f::05b3b731854646a8375c9fb96da817a64a5c9576::24d98f9e70ac257ea4c45bb60d602f4da7fcb3bd::1258bf57e69162c723bf8db4866d86639b7d5c7e::643fe472e7c24b1468363f82ff674d99b325ac81::de039e914fc798269fe559a3a517ae648feaaabd::2ee6a85463d17a62d3bb5386ac3030b10ed51c3f::573c53fd007fff9eec6f46df00f4a4901276073a::cc46e752e03941b041bf87621b65f18d3b3235c7::aa1c4a0de2302c32ae700c6719fdade3c98c9d6b::d6127361d3eab64a634762fe7d28ccbac9ff4087::482e204afa111663515c3d92b6d31630af66abf3::0a2db12370145f7f707117d9ec23cc758ba95d58::9ff46ca52f6398f95ce0a54bd57afd23c0ff7a9e::c47401463dd820433dca0681e65da65ad66b8b3e::36186c3a04ca7a22ccbc4a4f4887d8ff943fc029::c264061272241033d1214c36d09c96a6689179ff::1b3433b9691faec307823bc520782b80dee4e559::8d7fe469ea471fff6020b437a7435936360b479f::9f02fea15b1e72536f1e56aef09201a3586b4899::b8c6adbe18533dd2be6a9c930f86f328f774bf54::934462a5db96315796b7bff31024adbcc370f5c8::1381de72d0622788859aa53d198f806aeadf3f7a::5ebce3e6188d53283d2cecd7be94f382ec80477d::2f8a851b442d4bf49121849b75f91f19cb8917e7::20fcaeb854166feb73255c0a45111e37632fceb7::3b1df957981bd40f5fcdc6123628aae5d7575180::144e5ae65a8f046041eff6545c606967e0f72baa::61887e7c2fbb9ec89830392f4e30c98fe7d14096::6b0b4ddf0032b31205879a0ca85f8a7a559e863f::26659123560af805b40bf7a1c8239c02b020bdf5::a57a2e1d4f9b8553492f566865a83362473bfb24::2c2dd1a1b3eca6248979e04e70afff6dd3fcf366::44d3bcbc6f3bef3bb06cf4581e17e20696e395e0::f237508caa6e99aafb8691b148b41371105d12e7::4b406de19ae66263c3623d82db6b93d7d112018a::2604832858e0a0f5d65570ad773c70692ae19c90::617d156eacd966060bca4444a3a9780404676192::e33f1777fe3d36cb957662b9701f5cf949d5f96f::687780323a091bdee07d5e6081a4ae48a3d1d7d8::0b0bb65198fcb4e2e1c2974bca2cc8b5071e4ae2::ae4c246a3c3b1eff91d5acf7d4b4e131f6ecd22f::60e7aa0dbd01e2f48fe322d7f8f4fd16b4c6c497::a716fe97e354e4a947e4d67ab012c71357465698::4dffcd35cd037eb4c1afda87caf763f9fcea0dd0::ec59181a285c65b7befad6b0b4814beab2d8efe8::f91cda4b02b0416e95da7c89aa2e98cd15d0b687::5ac9a7418fddf73605aef21c5eafa527e03aae62::4e5f17e52d253d2526f48c362abcfa56a10c7491::98633e51575bfa8b041c15938cf62a9c954e8518::d47e020d5528de4298e6a329f5afa619ccfeb407::ae0a9a5e9cfab4f910ca15861787cccc3c9bb600::2dd02eb812d46d08634d751adc41f31a21fc146b::f23c1004199f9ffbf2e59ca0700e7cccfbafd4ea::8d008d00ed55490768fac5bf1f00ba628cadd97b::64cdeba7a234fb838f2258f8087ab7c9e4e6df35::87119348b5dceae8dc49757a83294107ea787cb9::97a0516cf679c4a30e0f9704ded4ad5310da2457::389c4d15362bc762ba421e33a243cb021dab8290::4ecd16b2ae0dc35dbd3d76786107b12da6cd39b3::5b0d8ab86870fdc3642891acc183253b396a6e00::27382f38dceebe1c6ea62dcb37cd5d0ccdeceba7::d64a352a40dc5e5aedb8e9db50727c5c2ff83973::663400b504baa706c9136c13c990ed447c00a364::8f5565f948af000bb6ed0d7bbde2fde080cc775e::ca3457458f87ebb65eeefc8361fb25e4baf70ef8::3ac91f7e28b46c468e6487d5bbc9bc13d151b21f::46cf6ed677644842e34ce676607b154b0fdcca96::00623c3da5702f0c090ee3b279810b31163656a8::112f577d3a79a3b78283a02d3828b118a82d1050::f1a060743ae8327c39ad17064335c45a8b16e372::d0f1a23c458d2752e9ef1dc629275a609b9922dc::c056b8a35c0bfa6780822bcafc5a2aa13bbbf080::0c88f199ec6f32b8b3c582564d1b62f332beff62::886a88a96725d8066f4bb418c4d07058126e6c47::800980ec833a00ecb5973d0493bd830bd30e8a0e::f2b0171b934958343e70a3bd7070bce574367854::f629825299cfb5db7ffb60f5590233381ec45588::09dc621238e4a2ce761c37dfabb20d9c83e1bef1::fa57dec5e0ae43c79dec66e199edfe6ef0296f34::6e1ca544dde742805b4bb100121190c75470dedb::eaa484f05dd319033ef9037081b1548c81dff309::b86d376a85c4f9f89e952bae02268a4993e4b19f::febd1ca44add483486566a49516d4ce43d74626d::4e3e2c712adc3b1850550d28efb7671df1b77233::5ee10ad19c50ec0f4ceb2e99cdd4f00090ca0026::323e3b6914ef23116f89b42fb9e12454a08bda39::aed8aea3f37891f65be533498ef1a3c3fd493229::08029a38dfbf1775be8887f968933adf58e7e037::05cf76cbd754470442f4ebfadd8839c533ce74c4::92562a2ba99229f6c11f9986c0100461c9e35def::20a5987c30798e6bf413e1ae5a6f229b2e077e25::5cf14202515d591187d9d12eae5b8b765f6f4651::50c971df43d2f962b36605b117957e24fa682620::63566334f67923df94e8340d61e1e09c42325bab::82779890391385f5f4f3bd3a84798ab02b4b75be::58bafcb01cc5992c0d81d173b459a002f20e658d::8b62aef632c0016142d9e1c03ec226bff742579d::c97c02e83b92e35fe45c46ccf05b5735e642a9ed::ff03fc0f6758126bef093197c46fa040a86ec348::536dff507d8b790a9328f9d81f780bb12cc505e3::4aafa90c89dbac043415e9f4a11601ef28dbd7a4::cbeadb2c9adf1351249dce10306eceac444f9a10::f25eea16e602678b5dacfec04baa7448ad9d23b7::f10b82c0d3c0c8205b86e9c18b0590a738886f87::222c1f1090fe646a446b30a529d4ca60d38f1bcc::604b748295cd4c2bd122486ba89aa911e991193a::2b78985ff259004cc556f8f31e5674c67f161cbd::32a99acc88e4c515ca4de29e8557bdc6033a60df::14011dbe2a8c1f9556e216e253e008dd2b71d6b1::e60c4d46908e4de4d4af5348eff21968f3e54b2f::2895daacdbd2dd46b509716077b1308ab54dd04d::57931804ed4646c615f66ff0cb87a9ed40e956ee::4f0389ad4eb1169f073fd774e21d41194dc870b8::4875477d17e9111bbba25b1c003a9dca2037c73c::f96c1092866728a9b39e6a4f8bebf97e47720b94::28b41f5c830640a32aca3a239604cd15ed7d4cc0::2e881f29297a7ee38b978ab0b7624e2d4673b36d::38a13f41cdb49e429acb4f0a757c009102af087d::9bb2a362893d80fb6900a3dcda50fbf8e1b4b3cf::9d0ebfdea6d1ff1a10b4a6c06bcc1688bfce83da::b9ccac8550aa842ca66592fd6f620affddcd40fe::31e28a04a5dcd4fbfc564e7a143309e7f4218428::3ac6c6ebd9ab4e16f8706719543b479f932fbf77::7e621b3dbe904e2a789b91d848220905879e340f::0525d4cf9d962151fc3ac2a5f2f6374ef382e57b::7f55954cc1262627d0dc53d381f9c99c14fbfbad::201da19577a134d8d7a3196ff9bd8da418acbe29::ca758d185b9a783839c33bb78ee553acee4852c9::
https://api.github.com/repos/ansible/ansible,38578,issue-38564::devel,0,merged,automerge::aws::bug::cloud::module::shipit::support:community::,"##### SUMMARY The docs suggest that `port` parameter is the default port upon which targets listen. As such, a target need only provide a `Port` key to override the default. This restores behaviour present in 2.4.1, before TargetType was implemented. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME elb_target_group ##### ANSIBLE VERSION ``` ansible 2.6.0 (devel fda9312379) last updated 2018/04/11 07:59:50 (GMT +1000) config file = /etc/ansible/ansible.cfg configured module search path = [u'/home/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /home/will/src/ansible/lib/ansible executable location = /home/will/src/ansible/bin/ansible python version = 2.7.14 (default, Feb 27 2018, 20:43:24) [GCC 7.3.1 20180130 (Red Hat 7.3.1-2)] ``` ##### ADDITIONAL INFORMATION Should be backported to 2.5 and possibly 2.4 Fixes #38564",a923250f4b33d2ba4485542969d2baa183656f60::
https://api.github.com/repos/ansible/ansible,38514,devel::devel,0,merged,aws::bug::cloud::committer_review::module::new_contributor::support:certified::,"Fix for issue #38482 ##### SUMMARY Adds a default empty value to the name parameter after the move to boto3 - to fix a bug ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ec2_ami ##### ANSIBLE VERSION ``` ansible 2.5.0 config file = None configured module search path = [u'/Users/msaidelk/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/msaidelk/venv/lib/python2.7/site-packages/ansible executable location = /Users/msaidelk/venv/bin/ansible python version = 2.7.10 (default, Jul 15 2017, 17:16:57) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.31)] ``` ##### ADDITIONAL INFORMATION See issue #38482 @willthames should there be a required_one_of=[['name', 'image_id']] for this? Now it may try to create an AMI without a name if no image_id is provided.::Also disagree that name should default to an empty string since that isn't documented and it isn't used at all in the update image function. Defaulting to an empty string was probably just done to allow this check to be bypassed which was no longer necessary once this line was removed. I've opened https://github.com/ansible/ansible/pull/38972 which also has tests to make sure backward compatibility isn't broken again. If that gets merged I'll cherry pick that commit onto maishsk's pull request for backporting (thanks for opening that and working on this, @maishsk!).::",60a32771039c190a7e9f6e0eb4d0f6bf4c356fd4::91357d07f4f9eb3714f582c1959ff54d25129500::
https://api.github.com/repos/ansible/ansible,38442,firewalld_fail_method_doesnt_exist::devel,0,merged,bug::community_review::module::support:community::,"##### SUMMARY ``` Error was: File ""/tmp/ansible_qY_BMb/ansible_module_firewalld.py"", line 703, in <module> main() File ""/tmp/ansible_qY_BMb/ansible_module_firewalld.py"", line 548, in main module.fail(msg='firewall is not currently running, unable to perform immediate actions without a running firewall daemon') AttributeError: 'AnsibleModule' object has no attribute 'fail' ``` Should be backported in 2.5. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME firewalld ##### ANSIBLE VERSION ``` ansible 2.6.0 (devel a8953fcac4) last updated 2018/04/07 19:18:31 (GMT +200) ```",a9785b362c979a208a5eec74e2e4dbf91f52e207::
https://api.github.com/repos/ansible/ansible,38325,plugin-test-finished::devel,0,merged,affects_2.6::feature::needs_revision::stale_ci::support:community::support:core::test::,"##### SUMMARY This provides a more convenient way for testing (async) jobs. When used with a non-async job it will report a warning so the user is aware that he may be doing something incorrect. Since the 'finished' result value is an integer (!), the test is turning this in a proper boolean. Both these tests would never finish successfully. ```yaml until: job.finished == true until: job.finished == false ``` As it requires this: ```yaml until: job.finished == 1 ``` But now this works as expected ```yaml until: job is finished ``` PS I don't think it makes sense to also add a `finished` filter, as we want to move to tests for everything. PS2 I would prefer to backport this it is also available in newer v2.5 (and possibly v2.4) releases. Just so we can recommend using this instead. ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME core ##### ANSIBLE VERSION v2.6",13ff7594799f89defa0d8aa5ecff76b94dcaba35::
https://api.github.com/repos/ansible/ansible,38245,aci_domain_to_vlan_pool-bugfix::devel,0,merged,aci::bug::cisco::community_review::module::networking::owner_pr::support:community::,##### SUMMARY This requires backporting to v2.5 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME aci_domain_to_vlan_pool ##### ANSIBLE VERSION v2.5+,d967b276f244a9d7069636c9b0e2ae778ce4b7ca::
https://api.github.com/repos/ansible/ansible,38156,rabbitmq_user_node_add_default_value::devel,0,merged,affects_2.6::bug::core_review::module::rabbitmq::small_patch::support:community::support:core::test::,"##### SUMMARY `rabbitmq_user` module documentation states that the default value for `node` parameter is `rabbit`. However in `argument_spec`, there isn't any default value specified. This leads to an error when the `RABBITMQ_NODENAME` environment variable is set. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME rabbitmq_user ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.6.0 (devel 45e4dfda3d) last updated 2018/03/31 02:21:43 (GMT +200) ``` ##### ADDITIONAL INFORMATION Fix should be backported to 2.5.",a7d21aa8bd1f44632931fc197c2eb72dd5633d62::bacf7c42b459141a55ad3b6bd4c775d8233e2fd1::ef431d4d5d2a7e35e5504944979f84974b80cf0b::
https://api.github.com/repos/ansible/ansible,38018,issue-37963::devel,0,merged,aws::bug::cloud::core_review::module::support:core::test::,"##### SUMMARY SGs created when a VPC ID was not specified would not necessarily get the default egress rule, even when no explicit egress rules were set. Add some checks for egress rules in results from existing tests Fixes #37963 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ec2_group ##### ANSIBLE VERSION ``` ansible 2.6.0 (devel 0ee275ca64) last updated 2018/03/28 11:18:16 (GMT +1000) config file = None configured module search path = [u'/home/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /home/will/src/ansible/lib/ansible executable location = /home/will/src/ansible/bin/ansible python version = 2.7.14 (default, Mar 14 2018, 13:36:31) [GCC 7.3.1 20180303 (Red Hat 7.3.1-5)] ``` ##### ADDITIONAL INFORMATION Should be backported to 2.5",d98f0a06896edca92ee99d594ae2ad0137fc434c::
https://api.github.com/repos/ansible/ansible,38016,30034-detect-separate-git-dir::devel,0,merged,affects_2.6::bug::module::needs_revision::new_contributor::support:core::test::,"##### SUMMARY fixes #30034 Detects a separate git tree configuration in the working tree  and sets `$GIT_DIR` environment variable to that value ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> git.py ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.0.0.2 config file = /etc/ansible/ansible.cfg configured module search path = Default w/o overrides ``` There's no point of having this var here unless you're going to reuse it after the checks. Please remove this line.::Please dedent all the following code, so that it would be outside of `with`-block.::should the line start with `gitdir` or should it be in the end of line with smth prefixed? you might want to prefix the regex with `^`. On the other hand, taking into account that regexps are expensive, you could just use str.split or partition with bits of validation on top, like: ```python try: ref_prefix, separate_git_dir = data.split('gitdir: ', 1) if ref_prefix: raise ValueError('.git file has invalid git dir reference format') if not os.path.isdir(separate_git_dir): raise TypeError('%s is not a directory' % separate_git_dir) os.environ['GIT_DIR'] = separate_git_dir except (TypeError, ValueError) as err: """"""``.git`` file does not have a valid format for detached Git dir."""""" module.fail_json( msg='Current repo does not have a valid reference to a ' 'separate Git dir or it refers to the invalid path', details=str(err), ) ```::I would not assign it w/o validation: 1) it might cause errors happening in some other place, which would be hard to spot 2) it might be a weak place, vulnerable to injection attacks (security issue)::I don't think it has anything to do with GPG commit signing.::For safety reasons, I'd create some random dir using `mktemp -d`::Also don't forget to clean-up dirs after testing (tear down stage)::A random dir for `separate.git` directory? What kind of safety do you mean? If the problem is that it may already exist then we can clear the directory the same way as the `checkout_dir`.::Do I have to write test cases for validations then?::Also, what is the better way to handle the exceptions: to keep trying the execution or to shut down immediately?::Fail fast and loud for fatal errors like being unable to fulfill the module's purpose. I've updated a snippet in the comment above to reflect this. And yes, negative test cases for error code paths are highly appreciated, please add them.::yes, i'm concerned about it already existing in place, but also current approach will cause conflicts and false failures in case of simultaneous test runs.::Also, in case of not match `gitconfig` would have `None` value, which would've broken this module in some place being executed later.::@cmrd-senya I've got concerns about modifying globally accessible env vars, so after talking to a colleague he brought up that whenever you change the env var value you should revert it to its initial state after using it. So I strongly recommend moving to CLI arg instead of messing with env vars.::@cmrd-senya I've updated your branch with my implementation for now.::Why not use `{{ checkout_dir }}` instead of `git` arg + chdir?::Honestly, I don't understand why you'd want to change this env var at all. If the repo already has a separate git dir it will figure it out automatically. The only step git looks at this var is clone/init phase, for which there's an appropriate `--separate-git-dir` CLI argument, which is preferable over env var.::Because in order to set `--separate-git-dir` I would have to modify every function call and definition in this file which calls a git command::This place in code **does not affect** cloning/initing, while operating on **existing repo**, which makes it pointless. Also, it would be architecturally wrong to do it from some random phase of module execution. We would still have to bypass it to clone/init anyway.::After adding support for module arg, you'll need to just use the git module itself rather then shell command.::Why? The problem at #30034 is related to existing repo only.::The point of this PR is not to support cloning/initing with a separate git dir, the point is to support updating the existing repositories with separate git dir.::1) It does make almost no sense to support this feature of Git only partially. 2) `GIT_DIR` env var does not affect fetch, since Git would already parse `gitdir: ...` from `.git` file to figure out where the repo is located. 3) Also, the very first snippet (and the issue description) in #30034 showcases `clone` happening there. Which happens because of `not os.path.exists(gitconfig)`, not because of env var.::> Also, the very first snippet (and the issue description) in #30034 showcases clone happening there. Which happens because of not os.path.exists(gitconfig), not because of env var. Clone is happening right because the ansible git module fails to detect the existing cloned repository. If you read the issue description carefully it says: >  if I try to update using the git module it fails with this error::Yes, but it is still unrelated to the env var.::We also need to test the case where `gitdir: ...` is on the other line.::Like this https://github.com/ansible/ansible/pull/38016/commits/82430f6c2d0c80475177cbb2dbae0857606abeeb ?::it should not fails if `.gitdir` contains a list of `key: value`::Except it should succeed::That's why I asked you to reuse existing code: https://github.com/ansible/ansible/pull/38016#issuecomment-387800545::Okay::To be clear: don't copy-paste blindly, merge the best parts of the approaches ;)::I can't find any reference that proves that. Git documentation [says](https://git-scm.com/docs/gitrepository-layout#_description): >  Also you can have a plain text file .git at the root of your working tree, containing gitdir: <path> to point at the real directory that has the repository. And no information about the key-value list. I also tried a few examples, including ``` key: value gitdir: ...path ``` and (with newline at the front): ``` gitdir: ...path ``` And all of the examples fail at the repository update stage with the message from git: `fatal: Invalid gitfile format: .git`. Can you please provide any correct examples of key-value lists for the `.git` file which will work with Git?::Not really, but since that other snippet loops through key-value lines there must be something working this way. I'll try investigating this.::It looks like the best way of checking integrity of the repo is [`git-fsck`](https://git-scm.com/docs/git-fsck), but I don't thing that it's needed here now.::But you are right, it does contain a validation for a file immediately starting with `gitdir: `: https://github.com/git/git/blob/master/setup.c#L592::So now we know that it should only contain `gitdir: ...path` and nothing more in that file. Trailing EOLs are being stripped off by git.::Returning an error on Ansible module protocol level shouldn't be mixed up with just identifying a directory. Use exceptions to communicate failures to the calling code and process them there, outside of this function. So no `module` argument is needed here — let's separate different abstraction layers.::Now that we support separate git dir the comment above requires extension.::This is a forgotten, unclosed and unnecessary file descriptor. We need to wipe this line.::BTW, it feels like calling `get_repo_path` for the second time for the same `dest` is somehow redundant. `get_repo_path` is called in `main` anyway. Is there a way to save the result after the first invocation and use it later?::Yes, it's called [`lru_cache`](https://docs.python.org/3/library/functools.html#functools.lru_cache), but it's not available in stdlib of Python 2.7, so we cannot use it (unless we vendor [it's backport](https://pypi.org/p/backports.functools_lru_cache) into the project like `six` distribution).::Why `IOError` or `AttributeError` can happen? I can see only `ValueError` occuring.::@cmrd-senya `IOError` can happen in case of insufficient privileges or similar issues while accessing fs, but I cannot see `AttributeError` appearing. Do you recall anything causing it?::I don't. `AttributeError` was present in the original code and I don't think I ever saw it being thrown.::I missed that it should've been `git_version.stdout | version_compare(""1.7.5"", '>=')`::I copied that from the line 34::",a8eb1350d7ea2dee9d01679c21b9717f433a2fa2::ea764991f04a688cf2207e53d8147a1911e0f29f::ece9b5f54af21da84e7a5029fb4fe7bfb8c71dc1::39ffef393b7c7bda14df7b577e44c77a32726496::4eb8011512eeca43e74d765693140a4994641800::c9c4433a4280e0f730df43f212b5e7eb1d6a9703::cec81921f5e75e007c8d32639e32d0c5505c1552::4ac3675db7fc8115920d42438356d297dc41913b::e830f040b40a0b5272a02672183dd6a43cad9a60::59d07dc721ae9909f4fe15a5bcdb45e20649d261::
https://api.github.com/repos/ansible/ansible,37999,docsite_pr_fix::devel,0,merged,bug::docs::docsite_pr::support:core::,##### SUMMARY The plus sign was eaten because it was not encoded. ##### ISSUE TYPE - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME docs ##### ANSIBLE VERSION v2.6 + backport to v2.5 and rebuild docs,f049c6a7457fd6da8c7e64b1b05ed1453981d5ee::
https://api.github.com/repos/ansible/ansible,37982,index_var_fix_version::devel,0,merged,docs::stale_ci::support:core::,"##### SUMMARY e9b0a4ccb42854329b33b06624379c6122b67bd7 is present since v2.5.0b1 Example given in the documentation works well with Ansible 2.5: ``` $ ansible --version ansible 2.5.0 (stable-2.5 2604832858) last updated 2018/03/27 10:39:36 (GMT +200) $ cat test.yml - hosts: all gather_facts: no tasks: - name: count our fruit debug: msg: ""{{ item }} with index {{ my_idx }}"" loop: - apple - banana - pear loop_control: index_var: my_idx $ ansible-playbook -i localhost, test.yml PLAY [all] *** TASK [count our fruit] *** ok: [localhost] => (item=apple) => { ""msg"": ""apple with index 0"", ""my_idx"": 0 } ok: [localhost] => (item=banana) => { ""msg"": ""banana with index 1"", ""my_idx"": 1 } ok: [localhost] => (item=pear) => { ""msg"": ""pear with index 2"", ""my_idx"": 2 } PLAY RECAP *** localhost                  : ok=1    changed=0    unreachable=0    failed=0 ``` Must be backported to 2.5. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME doc ##### ANSIBLE VERSION ``` ansible 2.6.0 (devel 135d343254) last updated 2018/03/27 10:36:19 (GMT +200) ```",35cf646681d8e7fba497399724e48a020543fd2c::
https://api.github.com/repos/ansible/ansible,37558,letsencrypt-fix-acmev2-ordering::devel,0,merged,automerge::bug::crypto::module::owner_pr::shipit::support:community::,"##### SUMMARY Fixes #37557. ##### ISSUE TYPE Bugfix Pull Request ##### COMPONENT NAME letsencrypt ##### ANSIBLE VERSION ``` 2.5.0rc3 ``` ##### ADDITIONAL INFORMATION This fix is for devel, but backporting to stable-2.5 should be trivial.",148c4dd4b59ffc16e49a39631af8403735912170::
https://api.github.com/repos/ansible/ansible,37517,jinja2-type-tests::devel,0,closed,affects_2.6::feature::needs_rebase::needs_revision::stale_ci::support:community::support:core::test::,"##### SUMMARY So Jinja2 only has tests for testing string types, or iterable types, which is quite limiting. If you need to test a boolean value in Jinja2 the ~only~ option is to test it is not a string and convert it to a string and compare it to 'True' or 'False'. So these tests are essential constructs in playbooks and templates. This includes tests for: - boolean - true - false - list - integer - float So you can simply do things like: {% if result.value is false %} or {% if result.value is list %} Just like you already can do {% if result.value is none %} and {% if result.value is mapping %} See the included integration tests for a complete explanation of what Jinja2 already can do, and how this is insufficient in some cases where this would be useful. This is related to #37514 ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME Jinja2 core tests ##### ANSIBLE VERSION v2.6Future additions to this list will result in cleaner diffs if this is reformatted: ```python IGNORED_TESTS = ( 'list', ) ``` ::Also, why does this test need to be ignored?::I'm guessing because jinja2 provides a `list` filter: http://jinja.pocoo.org/docs/dev/templates/#list::Although I'm concerned about adding both a filter and test by the same name.::Well, `sequence` is already taken and `tuple` doesn't really describe what it is. But today `string` already exists both as a filter as well as a test. So I have no objections to do the same. I proposed this upstream, so we may want to delay this until they have made a decision ?::JFYI In the internal slack channel we came up with an idea: https://github.com/ansible/ansible/pull/39924 So it might get into devel before you merge this::Well, I think we should be pushing this to Jinja rather than invent our own. That is why I moved it upstream: pallets/jinja#824 PS I personally don't like the name ""is_item_sequence"".::Honestly, I just failed to invent a better name::Having it upstream would be nice, but I doubt we can change our minimum required Jinja2 version anytime soon.::@mattclay The idea was to backport it once it is accepted upstream (and the names are set in stone). If we do it now, we risk additional confusion.::Now that #39924 has been merged into devel you can: ```python from functools import partial from ansible.module_utils.common.collections import is_sequence test_list = partial(is_sequence, include_strings=False) ```::I am not impressed, sorry. I don't think this will make it easier to upstream. I don't need an Ansible-only solution.::I'm not talking about upstream. This is about this PR, which currently doesn't need to have duplicate code, like one in devel.::shippable/posix/group1::This code is already available in `ansible.module_utils.common.collections.is_sequence` for broader use. So please follow earlier suggestion to reuse it: https://github.com/ansible/ansible/pull/37517#discussion_r192379339::",43e716b17ab9e695122c9512c8a810f305efe4ae::
https://api.github.com/repos/ansible/ansible,37484,fix-docs::devel,0,merged,aci::cisco::cloud::docker::docs::f5::feature::gce::needs_maintainer::networking::nxos::support:core::,"##### SUMMARY Fix docs build and add a ref target for modules ##### ISSUE TYPE - Feature Pull Request - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> Docs ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` devel ``` Might want to backport the alias change to stable-2.5 and stable-2.4.  I'll submit separate PRs with just that commit if so. ##### ADDITIONAL INFORMATION The bugfix portion of this may not be final.  I suspect that value.default is being converted to a string somewhere and that is the actual root of this problem.",24a91633fa5522389a8b21a156d8f80ae94016dc::
https://api.github.com/repos/ansible/ansible,37369,letsencrypt-acme-v2-final::devel,0,merged,automerge::crypto::docs::module::owner_pr::shipit::support:community::,"##### SUMMARY There's now a ACME v2 endpoint with Let's Encrypt. This updates the documentation of the Let's Encrypt module accordingly. Official announcement: https://community.letsencrypt.org/t/acme-v2-and-wildcard-certificate-support-is-live/55579 ##### ISSUE TYPE Docs Pull Request ##### COMPONENT NAME letsencrypt ##### ANSIBLE VERSION 2.5.0, 2.6.0 ##### ADDITIONAL INFORMATION The current `letsencrypt` module doesn't work with the endpoint, due to the problem described here:  https://github.com/ansible/ansible/pull/37165#issuecomment-372779851, so this shouldn't be backported to 2.5.0 until that is resolved.",5ee7b4575a089c6b789150b16fed95acc719ed9e::
https://api.github.com/repos/ansible/ansible,37329,connection_avoid_to_return_unsafe_data::devel,0,merged,bug::support:community::support:core::test::,"##### SUMMARY Connection error messages are unsafe: wrap them. For example, in case of error, `docker` connection plugin returns exception message containing Go template (`{{.Server.Version}}`). These messages weren't tagged as unsafe and were consequently rendered, then a template exception occurred. ``` The conditional check 'result is failed' failed. The error was: { 'msg': u'Docker version check ([\'/usr/bin/docker\', \'version\', \'--format\', ""\'{{.Server.Version}}\'""]) failed: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.35/version: dial unix /var/run/docker.sock: connect: permission denied\n', 'failed': True }: template error while templating string: unexpected '.'. String: Docker version check (['/usr/bin/docker', 'version', '--format', ""'{{.Server.Version}}'""]) failed: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.35/version: dial unix /var/run/docker.sock: connect: permission denied ``` Integration test provided :tada: ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME connection plugin ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.6.0 (devel c1008d693c) last updated 2018/03/12 18:09:57 (GMT +200) ``` ##### ADDITIONAL INFORMATION 2.4 and 2.5 are affected too: bugfix should be backported.",e556340211c9a0267ce4508d2d623e816c1f99f1::d2d0cf2c5fe02e6d6984f8b049b6853413956801::
https://api.github.com/repos/ansible/ansible,37212,WIP_AWS_diff_mode::devel,0,closed,WIP::affects_2.6::aws::cloud::feature::module::needs_rebase::stale_ci::support:community::support:core::,"##### SUMMARY WIP. Unit tests, integration tests, utilization to come. ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME lib/ansible/module_utils/aws/core.py ##### ANSIBLE VERSION ``` 2.6 ```Why not check the actual type? In botocore we'll use the backport from the `ordereddict` package on 2.6. So `botcore.compat.OrderedDict` will be the version from `collections` on versions that support it. Are there other versions that you're looking to support?::It looks like all this method is doing is un-ordering dicts, so something like `convert_response` may be a better name.::You shouldn't need to cast this to a dict since you've already asserted it is one.::What's the expected structure of `extra_output`? It looks like you're not traversing it.::This will fail if the response type isn't a dict. If it is a dict, you don't need to cast it since you've already done that in `create_response_dict`. Also both of these methods traverse the dictionaries. That's probably not an issue, but it might makes sense to consolidate them so you're only traversing it once.::Yeah, I wish we had better metadata around this. You can look at the http method, but POST might be used for read-only stuff for some services. I'm *pretty sure* GET methods don't modify state, but not 100%.::",7356113adb800c2cd9546797fbcf66c7a0504afa::86719f5ed22871a5a7b421eb27637b4cb65f5ae1::c155895031199851356a10eea7d63119e1cdd5d7::d67a5c00abcd6d74f2536ab8d1218408f1a34af1::
https://api.github.com/repos/ansible/ansible,37197,patch-3::devel,0,merged,affects_2.6::cloud::core_review::docs::module::small_patch::support:community::support:core::test::,"'Present' was not in the docs, though it is in the code. 2.4 documentation shows 2 entries of ""latest"" instead of ""present"" so perhaps this could backport to 2.4 as well as being in devel. ##### SUMMARY 'Present' was not in the docs, though it is in the code. 2.4 documentation shows 2 entries of ""latest"" instead of ""present"" so perhaps this could backport to 2.4 as well as being in devel. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME atomic_container ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.4.2.0 config file = /etc/ansible/ansible.cfg configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /usr/lib/python2.7/site-packages/ansible executable location = /usr/bin/ansible python version = 2.7.5 (default, May  3 2017, 07:55:04) [GCC 4.8.5 20150623 (Red Hat 4.8.5-14)] ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> n/a .. purely documentation to serve code.",29f2dcd7b288682f20e27f1d4947546a9e596438::66df8243b944d66a5e5a99fd15a6a47e5a5e7486::
https://api.github.com/repos/ansible/ansible,37151,setup-missing-bin-scripts::devel,0,merged,bug::support:core::,"##### SUMMARY This seems to not affect everything, but is specifically noticeable with `pip install -e` This should be a backport candidate. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME setup.py ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.4 2.5 2.6 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ```",48aeba782bc8983e8ff0c797280ede433d0094f3::
https://api.github.com/repos/ansible/ansible,36973,docker-py-3::devel,0,merged,bug::cloud::core_review::docker::module::new_contributor::python3::support:community::support:core::,"##### SUMMARY Adds decision trees in the container, image, and network docker modules to account for Docker SDK for Python changes made in version 3. Effectively adds Ansible support for the docker_ modules for Python 3.6 since Docker SDK 3 adds that support. The SDK changes being fixed for comptatibility are specifically outlined at https://docker-py.readthedocs.io/en/stable/change-log.html#breaking-changes . I cannot guarantee I've fixed every incompatibility, but I'm fairly sure I've found at least ""most"" of them - and certainly this addresses more than current devel, which is ""none of them"". I tested creating images, pulling an image, pushing an image to a tar file, and running a container with and without detaching it, using (docker-py, docker < 3, and docker >= 3). Fixes #35612 . ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/module_utils/docker_common.py lib/ansible/modules/cloud/docker/docker_container.py lib/ansible/modules/cloud/docker/docker_image.py lib/ansible/modules/cloud/docker/docker_network.py ##### ANSIBLE VERSION devel (This may want to be backported to at least 2.5, which was separated from devel at about the same time that docker SDK 3 came out.) ##### ADDITIONAL INFORMATION Credit to @sivel for early clues as to where to apply module fixes. I took those, modified, and applied more of them.",df5c4f15e4c77efe0e896b5c7667517902e61bc0::
https://api.github.com/repos/ansible/ansible,36642,doc-references::devel,0,merged,aci::cisco::docs::networking::support:core::,##### SUMMARY This is required if we want to use *absolute* :ref: references instead of *relative* :doc: references. This PR includes: - Anchor for `aci_guide` and `network_guide` - Anchors for `playbooks_vault` and `playbooks_environment` - Anchors for module/plugin categories (e.g. `network_modules`) - Anchors for module/plugin section (e.g. `aci_network_modules`) This fixes #36240 This should be backported. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME Various docs ##### ANSIBLE VERSION v2.5Does that work correctly? Just checking this doesn't get escaped and ends up not being valid RST::This works and the link gets replaced with the title.::,05060c12f3f4d5ec094f027250f7ecaaf2b7879e::f5961328cb61807c33da896fc43cbad28383e949::01b31fc895cc7970f8a5b36cb577d2144879cd3d::0894f8e560cceaaae80b7c21aa797eb7dd5dd525::862a7eb8596674ceef2e17e437dbc12038089b3f::66e060d10ff1273861a5eb10dd37c222a547188f::588a00f01df72067633bfc11f3336e6407d2ff72::
https://api.github.com/repos/ansible/ansible,36610,aci_rest-error_handling::stable-2.5,0,merged,aci::cisco::networking::,##### SUMMARY Somehow this file was missing from the previous backport. ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME aci_rest ##### ANSIBLE VERSION v2.5,3048d3131b532157b2e5d695fc830731932c5b29::
https://api.github.com/repos/ansible/ansible,36474,issue/36156-lineinfile::devel,0,merged,bug::core_review::module::support:core::test::,"##### SUMMARY Add tests to cover this scenario Fixes #36156 ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME `lineinfile.py` ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.6 ``` ##### ADDITIONAL INFORMATION Need to backport to `stable-2.4` and `stable-2.5`",816a9e1c48de5c6dafd01dc7419fb443086dedc2::
https://api.github.com/repos/ansible/ansible,36405,run_waf_tests_in_parallel::devel,0,merged,aws::bug::cloud::core_review::module::support:community::support:core::test::,…eptions and update ChangeToken for each attempt Fix test cleanup in case of test failure ##### SUMMARY These modules are new in 2.5 so this should be backported to not release semi-broken modules. Change tokens are not scoped. This fixes running WAF tasks in parallel (and will let the WAF tests be re-enabled in CI). ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME AWS WAF modules and tests ##### ANSIBLE VERSION ``` 2.6.0 ```,dfca9255b5dfcec0d96a025d9995864092b30b8c::bee95fcec7492ae9b62a287206f58a7c09c774fd::
https://api.github.com/repos/ansible/ansible,36244,console_vault_auto_prompt_33027::devel,0,merged,bug::support:core::,"##### SUMMARY Fix ansible-console always asking for vault passwords ansible-console was calling setup_vault_secrets twice. Once directly and once via _play_prereqs() The direct invocation was not setting auto_prompt=False. However, the direct invocation isn't need at all so this removes it so only _play_reqs() is used. That fixes the unrequested vault password prompting. Fixes #33027 <!--- Describe the change, including rationale and design decisions --> <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> lib/ansible/cli/console.py ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.6.0 (console_vault_auto_prompt_33027 c417dc547f) last updated 2018/02/15 11:07:35 (GMT -400) config file = None configured module search path = [u'/home/adrian/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /home/adrian/src/ansible/lib/ansible executable location = /home/adrian/src/ansible/bin/ansible python version = 2.7.14 (default, Jan 17 2018, 14:28:32) [GCC 7.2.1 20170915 (Red Hat 7.2.1-2)] ``` ##### ADDITIONAL INFORMATION Likely candidate for backporting to stable-2.4/stable-2.5 <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ```",c417dc547f2bab0d25fedc8ba2a70611ec109e90::
https://api.github.com/repos/ansible/ansible,36238,doc_2.3.3_has_been_released::devel,0,merged,docs::stale_ci::support:core::,"##### SUMMARY 2.3.3 has been released: update CHANGELOG and documentation Sources: * https://github.com/ansible/ansible/releases/tag/v2.3.3.0-1 * https://pypi.python.org/pypi/ansible/2.3.3.0 ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME documentation ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.6.0 (devel 0f893027c4) last updated 2018/02/15 15:58:31 (GMT +200) ``` ##### ADDITIONAL INFORMATION `stable-2.4` and `stable-2.5` need to be updated too, not sure if `stable-2.3` should be updated. I have created branches for 2.4 and 2.5 with this commit cherry-picked: * https://github.com/pilou-/ansible/tree/doc_2.3.3_has_been_released_backport_2.4 * https://github.com/pilou-/ansible/tree/doc_2.3.3_has_been_released_backport_2.5 if this one is accepted i will created pull-requests for both of them.",deb7d56e62f442f625e137bd88a668232d69a1a1::
https://api.github.com/repos/ansible/ansible,35487,win_uri_fixes::devel,0,merged,feature::module::needs_revision::net_tools::support:community::support:core::test::windows::,"##### SUMMARY Fix various aspects of the win_uri module. Fixes https://github.com/ansible/ansible/issues/35413 - no support for TLS 1.1 and 1.2 Fixes https://github.com/ansible/ansible/issues/34698 - no json return object Fixes https://github.com/ansible/ansible/issues/32037 - set both string and dict for body (json) Fixes https://github.com/ansible/ansible/issues/31981 - cannot set headers Fixes https://github.com/ansible/ansible/issues/31166 - not validating non 2xx error codes Also fixes (no issues currently raised for it) * Disabling redirection works without an error occuring * Idempotency when creating a file based on the content * Integration tests (more work is required to move away from an external dependency) * Ability to set a password for client certificate (required when not using CredSSP) * Actually return header key/value pairs instead of a list of header keys like before There are some breaking changes here but I thought it would be good to rip them out considering it is a preview module. The stuff I have removed are; * Changed from `Invoke-WebRequest` to the .net `HttpWebRequest` in order to support redirection properly * Because of the above, some return objects are not returned anymore * Changed the maximum redirection to `50` to reflect the default of `HttpWebRequest` * `use_basic_parsing` does nothing anymore so a short warning is set saying it is no longer used and will be removed * Removed some return values which are just a copy of the input values Unfortunately the scope of changes means I won't be able to backport it. ##### ISSUE TYPE - Feature Pull Request - Bugfix Pull Request ##### COMPONENT NAME win_uri ##### ANSIBLE VERSION ``` 2.5 ```Typo `$hader.Value`::So I was told we didn't want to do test against Internet infrastructure, that's why we have this long-standing issue open regarding having access from the Windows VM's to the httptester infrastructure that Docker images are using.::We don't, this is a wait and see thing. If we come across any recurring issues we will disable the tests in CI but until we have added the code to forward the httptester container ports to the Windows host this is better than nothing.::Fine by me. Although enabling httptester wasn't supposed to be so hard either ;-)::We are getting close, there is a PR out there to install the SSH server on the Windows hosts and @mattclay is looking into creating a remote port forwarder to the Windows host with this SSH server for certain tests. We can do all this manually but the trick is getting it to work in CI and be stable. Once that is in, it will be as simple as changing this variable to be `localhost:port`.::L67-L69 can be removed from the documentation.::Ouch that sounds messy :-\ And wouldn't that be tricky to run from your laptop ?::",a807ccc82c888440a1a819c3a7af1d8a272419a2::4af3e00fa975d284853ff967c4dba27d7c24b9c2::
https://api.github.com/repos/ansible/ansible,34769,issue/33177::devel,0,merged,affects_2.5::docs::support:core::,"##### SUMMARY Add note to 2.4 porting guide about initial playbook relative host/group_vars and inheritance Addresses #33177 ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME docs/docsite/rst/porting_guide_2.4.rst ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.4/2.5 ``` ##### ADDITIONAL INFORMATION This change should also be backported to the stable-2.4 branch for docs versioning cc @abadger @dharmabumstead proposed this in channel: > In Ansible versions prior  to 2.4, the inventory system would maintain context of the initial playbook that was executed. This allowed successively included playbooks to inherit ``group_vars`` and ``host_vars`` placed relative to the playbook file. jctanner said this sounds like this applies to all playbook-relative vars and suggested this: > In Ansible versions prior  to 2.4, the inventory system would maintain context of the initial playbook that was executed. This allowed successively included playbooks to inherit ``group_vars`` and ``host_vars`` placed relative to the toplevel playbook file. ::We were trying to figure out how to change ""inventory file relative"" to be clearer as well.  dharmabumstead proposed this: > Similar functionality can still be achieved by using ``group_vars`` and ``host_vars``, ``vars_files``, or ``include_vars`` placed relative to the inventory file. This sounded good to me but we clarification from someone who knows the feature whether this remains accurate.  The previous version limits ""placed relative to the inventory file"" to group_vars and host_vars.  This new version applies it to group_vars, host_vars, vars_files, and include_vars.  We need to know if this is accurate.::I agree that the recommendation change sounds better. I realized I didn't put enough emphasis on the fact that this is in relation to included playbooks in subdirectories.::The `group_vars` and `host_vars` are the part that needs to be inventory file relative.  `vars_files` or `include_vars` don't matter, as you reference those by path, as opposed to automatically being ""sourced""::",0547676dd5a08237b495eaca75c7affa9f511186::3357c34979d89772bf187ee95c16d2e0c1c5da8e::45d05452ae6373610a0221cac70d4ada3c9bf2c5::b26e13d6da9e8fc785069b3f7078597a0afc6e10::9d0a13a6afc074e0d781ae95b33993c444c01cd0::7707d017bb16ac229112f821c7ec9315cf68bda4::
https://api.github.com/repos/ansible/ansible,34383,win_firewall_2016_fix::devel,0,merged,affects_2.5::bug::ci_verified::module::needs_revision::support:community::test::windows::,"##### SUMMARY * obscure type promotion issue in some versions of Powershell causes [int]::MaxValue to be promoted to [int64] when doing a COM property get or set. Since the ""All"" profiles value of 0x7FFFFFFF is [int]::MaxValue, it would trigger ""Specified cast is not valid"" when modifying a rule that's already set to All Profiles or trying to be. * Fixed catch-all error handler to include exception detail * Added test coverage for this case ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME win_firewall_rule ##### ANSIBLE VERSION 2.5.0 ##### ADDITIONAL INFORMATION needs backport to 2.4",89d9444ad560ef5c4a8aac911e2e7abcf7aa9c76::
https://api.github.com/repos/ansible/ansible,34079,fix_encode_xml_string_devel::devel,0,merged,affects_2.5::bug::community_review::module::networking::support:community::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> In dellos10, response of few CLI commands are in XML format. Parsing that XML data throws below error. Error snippet: ""ValueError: Unicode strings with encoding declaration are not supported. Please use bytes input or XML fragments without declaration."" Fix for the above error is to encode XML string data <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> - modules/network/dellos10/dellos10_facts ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` root:~/ansible/ansible-xml/ansible# ansible --version ansible 2.5.0 (fix_encode_xml_string_devel c71b80e698) last updated 2017/12/20 04:18:59 (GMT -500) config file = /etc/ansible/ansible.cfg configured module search path = ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> This PR needs to be backported to older versions Before change: <!--- Paste verbatim command output below, e.g. before and after your change --> ``` TASK [dellos10_facts] ********************************************************************************* An exception occurred during task execution. To see the full traceback, use -vvv. The error was: ValueError: Unicode strings with encoding declaration are not supported. Please use bytes input or XML fragments without declaration. fatal: [VLT-C-1]: FAILED! => {""changed"": false, ""module_stderr"": ""Traceback (most recent call last):\n  File \""/tmp/ansible_hb6LzP/ansible_module_dellos10_facts.py\"", line 505, in <module>\n    main()\n  File \""/tmp/ansible_hb6LzP/ansible_module_dellos10_facts.py\"", line 490, in main\n    inst.populate()\n  File \""/tmp/ansible_hb6LzP/ansible_module_dellos10_facts.py\"", line 223, in populate\n    xml_data = ET.fromstring(data)\n  File \""src/lxml/lxml.etree.pyx\"", line 3213, in lxml.etree.fromstring (src/lxml/lxml.etree.c:79010)\n  File \""src/lxml/parser.pxi\"", line 1843, in lxml.etree._parseMemoryDocument (src/lxml/lxml.etree.c:118282)\nValueError: Unicode strings with encoding declaration are not supported. Please use bytes input or XML fragments without declaration.\n"", ""module_stdout"": """", ""msg"": ""MODULE FAILURE"", ""rc"": 0} to retry, use: --limit @/root/ansible/vxlan/lothlorien/ansible-dellos-examples/getfacts_os10.retry PLAY RECAP ******************************************************************************************** VLT-C-1                    : ok=0    changed=0    unreachable=0    failed=1 ``` After Change: ``` PLAY RECAP ******************************************************************************************** VLT-C-1                    : ok=2    changed=0    unreachable=0    failed=0 ```",c71b80e6988b84981d681700eaf015df149180be::
https://api.github.com/repos/ansible/ansible,34072,win-ipv6::devel,0,merged,affects_2.5::bug::docs::needs_revision::stale_ci::stale_review::support:core::windows::,"##### SUMMARY Previously, Ansible combines the host with the port like `hostname:5986`, this fails on IPv6 address as `2001:db8::1:5986` changes the actual address. This change uses the `ipaddress` library to try and parse an IPv6 address and set the host/port combo to `[address]:port` which works. Unfortunately ipaddress is not available in Python 2 by default but there is a backported packages in pypi that can be installed to add this functionality. Luckily pyOpenSSL includes this as a dependency so existing CredSSP users will be fine. Another way would be to use `socket.inet_pton` but this won't work on Windows hosts and we want to keep the option of running Ansible on Windows open for the future. This PR makes https://github.com/ansible/ansible/pull/26934 redundant. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME winrm ##### ANSIBLE VERSION ``` 2.5 ``` ##### ADDITIONAL INFORMATION I'm planning on backporting this fix to stable-2.4 once it is in but will do so in another PR as it does not include the doc changes.Did you mean to say 'authenticating' here?::Suggestion: end the sentence after the word ""hostnames"", and then start a new sentence: ""This option is normally set in an inventory.""::suggest changing to ""just add the IPv6 address as you would an IPv4 address or hostname::""::Please change the comma after ""Python 3.x"" to a period and start a new sentence.::Yep it should be, will fix.::",7aa9327c8a1a067697026baaa009506dd57ac5bd::43f9370619f6dd178d6f8be0bcbb4713b001dd04::b984eed604c0a76bb781f8ff00f6b79193a4eccc::
https://api.github.com/repos/ansible/ansible,34028,fix_encode_xml_string::stable-2.4,0,closed,needs_rebase::needs_revision::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> In dellos10, response of few CLI commands are in XML format. Parsing that XML data throws below error. ValueError: Unicode strings with encoding declaration are not supported. Please use bytes input or XML fragments without declaration. Fix for the above error is to encode XML string data <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module, plugin, module or task --> - modules/network/dellos10/dellos10_facts ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.4.3.0 config file = configured module search path = ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> These fixes need to go into devel and also need to be backported to older versions. ``` Before change: fatal: [DEVICE-1]: FAILED! => { ""changed"": false, ""module_stderr"": ""Traceback (most recent call last):\n  File \""/tmp/ansible_W05jTm/ansible_module_dellos10_facts.py\"", line 505, in <module>\n    main()\n  File \""/tmp/ansible_W05jTm/ansible_module_dellos10_facts.py\"", line 490, in main\n    inst.populate()\n  File \""/tmp/ansible_W05jTm/ansible_module_dellos10_facts.py\"", line 223, in populate\n    xml_data = ET.fromstring(data)\n  File \""src/lxml/lxml.etree.pyx\"", line 3213, in lxml.etree.fromstring (src/lxml/lxml.etree.c:79010)\n  File \""src/lxml/parser.pxi\"", line 1843, in lxml.etree._parseMemoryDocument (src/lxml/lxml.etree.c:118282)\nValueError: Unicode strings with encoding declaration are not supported. Please use bytes input or XML fragments without declaration.\n"", ""module_stdout"": """", ""msg"": ""MODULE FAILURE"", ""rc"": 0 } to retry, use: --limit @/root/ansible/vxlan/lothlorien/ansible-dellos-examples/getfacts_os10.retry PLAY RECAP ******************************************************************************************** DEVICE-1                    : ok=0    changed=0    unreachable=0    failed=1 After change: PLAY RECAP ******************************************************************************************** DEVICE-1                    : ok=2    changed=0    unreachable=0    failed=0 ```",4528313a48720cc8c1ee27d16c81b05f3b37472c::20173ab4418794b53892da5a840e26a0ec425da2::dafc90c1468897ea97c12ce12ef2d58ad98c665f::8c7ab621c992d522e5e5e3ec724059357bb5d538::bbb2563e0d88df28fd4561142816949611204dad::11313699ab5bb41a5004c095aed0b75549950e0e::b61bfc87b85776a633ba27198a1587048079d60e::2b862381dbac4f2e8e54717fb7bfe877c2c1a4cc::38c3da5ffdacbf057fd477749beb8b8e6538e3c1::47aa292c3b0d4dc3c3c454e4ae89cad001958fe6::0e13202f3ea6358160af22be506f1cf97f1d9fd1::f1384b5598686cdd8e75856b617f5eabf3f49f64::8d997e98363b977fb4d147cd17867a711b95d4c5::b22a580e66ea36f98001154dcb5602ec1bd296e8::eddb4fc25d16753ed97f03d017d0ab78a2b899f4::98c942f0d9d29662d028fa98bf4855059b685cce::265652212d4d452fe49917ee2b112cdc96eaf430::fa2a18a740b2fd6dd3f40cfd17ca69dea696aa4e::e50a51751ba0ecf97b955d7d5a70ba606d3ac589::28a36790401f34328dcb265e145bcef0d7ba68ef::e7d86856432d6b664e3ca5646a0eb1e97ea226ab::bd624837fa94a49fe50ecd1dee9082fd1b909816::c73543ef8de6016b6f1fc877cd8acd3f7e625936::d651bcbc063eda008ed84caadb2d173aa4c07ee3::66b5e6bf7dc2d3dc47739972b22e5a69431a599f::2f30de35ba8a2ca3e7b1b7e06ff41347d9426efa::2f71772a282a78c2fd9ecfd685e859c254ebf3f4::8e97f33b883164acced4fa2e8c06e8c18b45dd3e::49d99609745087dfb8f6d301ae89d036d68c8be0::5288ccd1f6aa6efa785df9eac1948a99434a8c3f::d5df56d4fc548af09d16a409dc1c0fe92043c02c::52f58e4bbd626f97dc369e3bf33a89e2611a40d4::2c4104be9e5228923c7bf95a31cc93b08e5d8a83::cd854c1d2b19295114787897150e3ecebc2731bb::f29285b4b55a03b691a67aadb33f956712fdfbee::a59eede7a2240bcca2b930ec55d671879fd30cac::f2e833946799d4979575b6c95136213ecc0c6d84::0aa015de5ede65ab8447b497270cccaf0d63b7ea::bc12de27dd9ecb0f9beb020338641ac8f459372b::a69f93f4f5060438bca7f3d6d7852cdef5423737::70c3aefdaf15192b2a1703fe907367ccd979a62d::6d4d2d88b4037f8a67497aa93a48b58debb995e0::541d5db97a212d7dce768bd11dd745fa9c9329c5::2340c7ac6e7b1592c1a72c73d2f38cea8ba80fa0::49a7c3f2f1d6b4eda81aae2cec4dcdb9a392a7bf::caa3a3618b2409aafd087bb1fbf8ea785f87cad7::10d6e1be90bed34d5f60f5ffafa016ebca480af6::88e7bb3e28c2814947f01da9202c8d583296fcb8::4a8ffe56a9f2190beb32195824420febc1cd285c::bb7977c5b4625f92e032bc4b9f4868dda6080c5b::dbe3a44a465051622cccfd219470aa985728653b::04834013398fa6963537f098d0523c5f1243af53::4978fc633c03ad5d19a97f1d80ff18f822910db6::29b50d99c7f3a6c06922175b46479412f5f941e6::8d91a6d72e45d42b8763760d0aa9e3e3f6bab4f3::dc90280b8f4a6db2d1649eb74f416915ff58955c::a0c123a86e55ace2c6531675fb698570d63ae433::56efcb1b72b4d3188011c89c377281a7c2c6626a::2a42800c44aa876427118d3daf6061e09dd850ae::124b3dce50e6f9e608b2cf4a67156fdd8a442e68::c4951039966dbb1d9b590f0516e753e4c20358b6::1e318f6224a6c1bdc84532c151ce078acc7376d9::b65496eecec2f8c43b29fe2b30218f4d19b7ccbb::e2065dc68c128e84c8c8878ccdfb857eafcc50a4::b6c117ebdda8d39894bebcd2f70132da9b57f3a5::fdcb419c8d85ccdddc8a2da7d4b80cf59a0d7d18::4b94ea807552bac4c4af0e29d72daff48774cecb::2c4cb42337b191b682c0236931ff2a33281fd6dc::262d6b6dccc5fb61226c3d3bd1fd31945386063a::497c73d06e486890965930014e0a23ff50659b12::3cf7e31c4e0e5528f06518cf4e162ea5e69bd0f6::34d7f9e3db3dbbeabd58261e8b750ba66f99762b::071f86afc6d5f05840029af16b0082623c72dbf1::8453398dd4e9dfb58b516099b9d28c9e93ebce6b::cb696ba112d297f3fcdb6359e42e00cefc301c87::618b4999fb2b99e44c8fad93f94b3c1b9378eb0d::0711f41e3dbb9a1026305e3047df6a06af4f5cb0::f79cd6c846d8e2967b32e85eb510e90e074f8732::5398d653caaaa9bc15350bb25120d4ff0550f8cf::8ae0079ef71fcd822795b38dfabe20473145943e::8c1dfdbc31e27403712890dc68b0bc610504528f::e40149bb1a4c2a831659830ccea08c25374094b3::9233ece2245f98c8101b866fcd840c9b4db446b3::6721c5392516487bfd4d54e7ad11f128bbfde294::7967b759805bd3d10dfc65d49af24346d4d99762::de60b9e1a8c7345173929b9afdd7b6858e31b00b::ebd559c43a34dc5707c81f9c57ddc7fdc467cbce::ac1c7b03ff8f91ebc8bcfa955381113b3b378841::cc0a18e5bd016e78f42c61179f5c8f446cbbbdb6::0faa72e8c4b1d3c397ce366ac6a9b4dfc19981e2::fd477a9c2550834e8cbd690b2eaea75af362a8d8::ee210e4d5b1f0a02437851784df12625b2c05b62::b8ee3bb24fd3079c527785a14366bdcd4ddbcdab::bc01b5d9812ce1f2943769d4b9f2880d3195ee6b::5bbf70afe165d70307ce4235ab1465bebb8dd5b6::b2cef41bcd5ae20601384dea7960d74a64f48190::6f2876f49cd30484e664d7fec55ef1255c0a81fb::6a7333950ab029d460cd68a0df9fe32686a3c9a3::b2f3dc90528c9dcb475ce37044fe4c4ea428d516::0140372d0f387521df69870eadee1e197aaefbff::35d942d6a0de08fa401eb9955a9cec93aacb357e::fa289a022c8b5702decf5ca89e9df3aef66b1b2c::dd19f96561b297c69a71fe2e74f68d5fa1919530::3df921a14aa229ae6cebc8591c351bc4c2e260a7::dd930344b64c3f5b4b5a1fd11d8b13a524eee963::07674f5062aaf87564e22c017b72803e8a3243b5::82c2da31beb4b571571902a8c54681434153ce4a::e771b64f1b27b916a289b60695f6b56ba88198e9::f76e8a8e392f6a1f4a420c27ad5fb0d05cee4249::07fa5715024299c3d65be81ec4ebb2a0a21cb505::0617ac1f2437bc19faf492e75c6453c7dc0f99e2::20764e248e74de1b4bd4ce3ffd679999326289c9::309dbecbc784c91499fe7efcff743f51485788a1::0796190053c1374e6f2b059ab90beefc50a56700::d8bfed678ce32c259410b93ff8199ec9dc3c7258::274503991ed05085fd44de8f2234017762d1c475::36bcab8a687ead9909dc58663176dae18f1794e5::29cf3751572fab82d3e3f91bf855e9076de65832::793c473fe22af43cf8c27639a4328b956c98460c::97c30372060926ab63fa38a2c0e5d3aad6e6fd8c::f9e16d7072d7c77648cb70bb28bc65ea19dac6d5::e9b5e14764d9ee713c0d29dd08e92746fe9f6187::24743e5cdca47da694bad41b1c623c1fb6f76d96::aa54a3510f6f14491808291a0300da609b42753d::000df969dc4c41a39dda6c55f4a1556d5d201fdb::95bd052c4ed97e23e49186a5aeaeb0b0edc1d91e::f00f2466d47852b2460f8f2efddc6a0f060ecc72::c994819fcf05d69d365e1f93159328087197f287::db54b0fb255e44d2e52505165ec26d3bbcc421e8::df04fde6c306dffe61a8adc8dc509570b8e2e54b::612d9e04d73eaa777689bf5df927502de4ec3f09::32c1953df00010b371f93f687f4ce7ab1f786f7b::fa23f30762a1e8083e10009ff0c1c579d4cccaec::65ed70955df1b41b1ec9a328e44889f7207f1541::80c275a371e81f330425a62dc9dbf8ee47c47699::64f75fc2d347e31fd7bed9ae6f259b4dcd830504::ac1538ac74da620441046cd2c34d6db066d9ee4a::eb4c5936f316dd28b1df043cfdbaf9662e2061d9::5944a447f7f83b6bb1924a60a3d1e6e1173f0ef9::58d37124d9b15d842377cf68e0fc672f951070ac::29bdd0b326af1a52c52a97889af8161bfb9647f9::52d2245b265800fa91a933c836df260f943911b4::b702687f39e1c2008af9054c7b610a805d7ef485::f8415adb1746db24bba85ec6cef7fa4e221a262f::4f333eff78249c4d8d1d8a8d74737ae2d29aea6b::4433544eb07d11659f9049b3f7f895cd4d3b3cf3::0a4344939193d3b6a44b5394fca611f78b9732bd::f179adcf2c49f8087c209d39661aa51927eaebcf::363e605ac4351f2f3017b655369c1e5daa504e28::8b19c1c02da7e4439cfb5572f738d3e91e92b4ab::545bd41927eafe82775793b4bba5b0aa1e09c626::1379e77bf10d832824db106ebc9819502c8f3caa::e2e3ab4d4528536cb13751d1d0f0c83cf3945a0f::df47cf43a03746140d9373c6e4ac41d82f0d9d67::a821a96e53cd0534d5a0fc3df8db4985005e88fd::466e4eb892c1559a7c792127d7c175a23fa9dc81::6f7259df3a92beeba42b0bc2bbd59924c4ad5999::3b9b3b281ef7b95c5177cc102d4955aa22421351::f68330acb2bb668774b0773a4e53c5c2c45d08c6::c4f61a9db4448eae429bdb5bee2f9fd19f2ec50f::2bef683fdeacce07624a95a7a28a530816e569b0::42b20ee8ebf5fe823f32f7e5f457cea97e8b83a1::6d24fe3d727b7824d79b2015b71f2652687a3de2::b059dfe69f94333f22b439e67ba3b7ab56b3b24b::eac4dc46f50698b9b2ed75cb02851788a5b2c6a5::65192991e5322cee21ddf2893ee3d8c4b5c6e08d::8398de77b21254b6e67c66f7ed4dcb52952ba12a::a890108dac0e28bf6101d78a50a5d5cdfc1dc752::2f6e03956fcdac807736dd167841f7e212cdd5e5::9645c43c5e309afda117e9178694cc3575644d96::2f1a60ddace4bfdb6297065c8a363c8c3bd124ee::c1d2b4a03f5de9460b9211c379c4aaf1ec318698::ecf2dfd6d552745519ec814572296bce70d46d7f::b0404dbe39ab1c807737de88367a632d34d626f7::36a3388a3ae7b246862292dffcbc57b73c26c6f2::aa98ffb7a8113e54ef62efa9b823d155eae556e9::e208a522fe1d7d2489285018136bd5dee81793e0::bc0a0fb99ce7010d11966c805ef90ee2f0b93b99::db83d420af1f94aad1f2171a707ef5f1b983c8ae::0541c00ef766067d091a16576a7f67344157d042::832c8e5f097e26e43fdcd52e07c4d83c2df98ad3::b9111860245e2f831f4e1552f2d71ac4e5024b5e::689065924aa79a9dd77a6dc6106b82308946f7d8::5866aac64b8f47ed4bbe571739c0a47871c15e42::51d21b0f41296450be7991878e909942bec5e88c::5fa8480a6169908fc5c39a5dd486f04b80d01f96::85fa06713d52704c659bbec3dc7ccb78e92efc50::b0e5e108dda66366470054fd5b11efa0f621a3dc::9845e5a018874ec79b603f037b6bea84f3749a29::f10404335d86c91d19006a1cbcf59e63af9d3626::880cb223b73ded7c0c8108aeffc0326ba5d56fe6::5d5b5d5a8077509499204462bce559434f18af9a::e3a8bf02acaa5ed6841cc8bf1cb0560656c41c8d::f0741ecaa055abd33eef1762b361986b90a25f09::5340da2a7dff39f4f101254f226511a2a3727fd6::6a67aee3da990edc56a548928b1725c87f68a7bc::bcbc9fcf317f195a877a74b57b521597a5aa46c8::b336c06a4244ffefe46ff8262fd84d24c7cc9e78::c422d7a8c6a642df3502ba6f213ed27efc72f6d3::2b9dd2337723906d5ba3500d845b9fea023290e3::60bf72d69ed17bc2f3ca7dd2a9b464d8c74dbb05::ada84532710f4d2e717614b9f31a3ec24cf2239e::c40dff2108cb184b8870433a68b85ac17fe1d6b2::3608c708eabcfc6bdb682dc593a10419f56e4f3d::cd246d0f455471704853ed7f0cad88c5499472f9::d4be600328d9033998b6186cbc93bd483851eb4e::e295a93f075fc4d6ea28781c491deb3c627cff72::5c8423658a28b7fb84557c5158569c93876eddde::de6b3eff4e3d8d16696c117b67c37ec8f82601d5::8b05ac687c9861ee909b8bedbbdb053db5e2ef7a::790e290b6b3f8519c8823a0b1dabafa0b7485b51::ef7cea1f89075d70294bea43b19d1100dbdf14fc::f78a60aaa68477f336815a942b7ef6777bd93edf::4550dbc9dcefc4bfab7dd6364a4398fa7c5e9146::2627b3153e4c233847d0dc76af195dc08aa0664c::b9fc9adc443b4882cfac7a70c796959205a6b27b::e4c2872b7fe05b523f201d4c4be5ae6fcb4ffaff::07021a36feb2abc8edd23b87b17585dc13e70579::fcd6731113729aae953ceecead8f8ba3f746ac38::aaf7bf8fc9e8404cbb6501ac0907e193e9fe28a9::c1567c0222aef708018cf5ed3b0da9c640c547d8::5435c7a9cb11040e7ede32c320871abd672d74a7::dc788f137768402476128791b7633d25b17a71d4::f2bf74991ee283de7f5159701f7f6d1d0cc40628::132d6fe78cfd26af3426d3b6ae9c14232274aae3::6a6ae0cedeb58db5ab7990a3b1be87196123962c::298255095d96d3dbfc10f6be4f4cb2fb0419a6ca::c7a903c34b02d146f2f16607b222f5a4b139d30d::109471cb7fe6d62b24df43c6b77d509916780e48::39f590523f3cf0af69e143a40201b2d346c19c16::5fb97aa6c956068e2e732950a0dc0f126a58e0ec::5067a1340a514b5359961c53f6c2943d20e8b363::74de512bfc71c2c1e0b3fbafebd825b4848130af::926dfb7c04a76b275d33281aa51a6cdd790057c0::07a1217aa7478f51623e4757e9deef34595b4284::a635a7861b7ff8a578584f68453303a0a45ee2f1::06ddcf6fa7c3dfc9fb977cae6f8433f1e154e58e::4f1586ec07e2340b52c1f68cfd1cc9133000d26e::3f7b1ba60698d4c9cb0147904f55c943b28ac05e::13937ce772052c4a9055e19813467d16d1113893::2a007e2b4d81af150e9e6acc7f736109239f39d0::0850a7635be51fe20da48ba2ff9efb9d8fe5e4b3::df3b45e0f41552b28be9bf3d4733e060cf4a1f7c::c08ae38a9d3d5bd10deacc447d720b5af7128e87::5dd40349b259499b4ee85c587e37dddf8c2f9422::e95611980ad1bb5b9e8bd061b065bd9aed1de52a::86fbaffc07da7a124909995920e60b98bc13400f::aa5081850691fa318653104d9f1a66db8ee0263a::284625f18c5da6012a72155826ffc88defd860a1::68090ec96184ad6bc84db26c1122b2ce0b584082::
https://api.github.com/repos/ansible/ansible,33937,facts::devel,0,closed,affects_2.5::feature::needs_rebase::needs_revision::stale_ci::support:core::test::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> Current match don't work with ""non-standard"" devices like NVMe. <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Feature Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> setup ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.3.2.0 config file = /home/k0ste/.ansible.cfg configured module search path = [u'/home/k0ste/ansible/my_modules', u'/home/k0ste/ceph-ansible/library'] python version = 2.7.14 (default, Sep 20 2017, 01:25:59) [GCC 7.2.0] ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> Before: ```json ""ansible_devices"": { ""nvme0n1"": { ""holders"": [], ""host"": ""Non-Volatile memory controller: Lite-On Technology Corporation M8Pe Series NVMe SSD (rev 01)"", ""model"": ""PLEXTOR PX-128M8PeY"", ""partitions"": {}, ""removable"": ""0"", ""rotational"": ""0"", ""sas_address"": null, ""sas_device_handle"": null, ""scheduler_mode"": """", ""sectors"": ""250069680"", ""sectorsize"": ""512"", ""size"": ""119.24 GB"", ""support_discard"": ""512"", ""vendor"": null }, ""nvme1n1"": { ""holders"": [], ""host"": ""Non-Volatile memory controller: Intel Corporation PCIe Data Center SSD (rev 01)"", ""model"": ""INTEL SSDPEDMD400G4"", ""partitions"": {}, ""removable"": ""0"", ""rotational"": ""0"", ""sas_address"": null, ""sas_device_handle"": null, ""scheduler_mode"": """", ""sectors"": ""781422768"", ""sectorsize"": ""512"", ""size"": ""372.61 GB"", ""support_discard"": ""512"", ""vendor"": null }, ""nvme2n1"": { ""holders"": [], ""host"": ""Non-Volatile memory controller: Lite-On Technology Corporation M8Pe Series NVMe SSD (rev 01)"", ""model"": ""PLEXTOR PX-1TM8PeY"", ""partitions"": {}, ""removable"": ""0"", ""rotational"": ""0"", ""sas_address"": null, ""sas_device_handle"": null, ""scheduler_mode"": """", ""sectors"": ""2000409264"", ""sectorsize"": ""512"", ""size"": ""953.87 GB"", ""support_discard"": ""512"", ""vendor"": null }, ``` After: ```json ""ansible_devices"": { ""nvme0n1"": { ""holders"": [], ""host"": ""Non-Volatile memory controller: Lite-On Technology Corporation M8Pe Series NVMe SSD (rev 01)"", ""model"": ""PLEXTOR PX-128M8PeY"", ""partitions"": { ""nvme0n1p1"": { ""holders"": [], ""sectors"": ""58720256"", ""sectorsize"": 512, ""size"": ""28.00 GB"", ""start"": ""2048"", ""uuid"": null }, ""nvme0n1p2"": { ""holders"": [], ""sectors"": ""2097152"", ""sectorsize"": 512, ""size"": ""1.00 GB"", ""start"": ""58722304"", ""uuid"": null }, ""nvme0n1p3"": { ""holders"": [], ""sectors"": ""58720256"", ""sectorsize"": 512, ""size"": ""28.00 GB"", ""start"": ""60819456"", ""uuid"": null }, ""nvme0n1p4"": { ""holders"": [], ""sectors"": ""2097152"", ""sectorsize"": 512, ""size"": ""1.00 GB"", ""start"": ""119539712"", ""uuid"": null }, ""nvme0n1p5"": { ""holders"": [], ""sectors"": ""58720256"", ""sectorsize"": 512, ""size"": ""28.00 GB"", ""start"": ""121636864"", ""uuid"": null }, ""nvme0n1p6"": { ""holders"": [], ""sectors"": ""2097152"", ""sectorsize"": 512, ""size"": ""1.00 GB"", ""start"": ""180357120"", ""uuid"": null }, ""nvme0n1p7"": { ""holders"": [], ""sectors"": ""58720256"", ""sectorsize"": 512, ""size"": ""28.00 GB"", ""start"": ""182454272"", ""uuid"": null }, ""nvme0n1p8"": { ""holders"": [], ""sectors"": ""2097152"", ""sectorsize"": 512, ""size"": ""1.00 GB"", ""start"": ""241174528"", ""uuid"": null } }, ""removable"": ""0"", ""rotational"": ""0"", ""sas_address"": null, ""sas_device_handle"": null, ""scheduler_mode"": """", ""sectors"": ""250069680"", ""sectorsize"": ""512"", ""size"": ""119.24 GB"", ""support_discard"": ""512"", ""vendor"": null }, ""nvme1n1"": { ""holders"": [], ""host"": ""Non-Volatile memory controller: Intel Corporation PCIe Data Center SSD (rev 01)"", ""model"": ""INTEL SSDPEDMD400G4"", ""partitions"": { ""nvme1n1p1"": { ""holders"": [], ""sectors"": ""62914560"", ""sectorsize"": 512, ""size"": ""30.00 GB"", ""start"": ""2048"", ""uuid"": null }, ""nvme1n1p2"": { ""holders"": [], ""sectors"": ""2097152"", ""sectorsize"": 512, ""size"": ""1.00 GB"", ""start"": ""62916608"", ""uuid"": null }, ""nvme1n1p3"": { ""holders"": [], ""sectors"": ""62914560"", ""sectorsize"": 512, ""size"": ""30.00 GB"", ""start"": ""65013760"", ""uuid"": null }, ""nvme1n1p4"": { ""holders"": [], ""sectors"": ""2097152"", ""sectorsize"": 512, ""size"": ""1.00 GB"", ""start"": ""127928320"", ""uuid"": null }, ""nvme1n1p5"": { ""holders"": [], ""sectors"": ""62914560"", ""sectorsize"": 512, ""size"": ""30.00 GB"", ""start"": ""130025472"", ""uuid"": null }, ""nvme1n1p6"": { ""holders"": [], ""sectors"": ""2097152"", ""sectorsize"": 512, ""size"": ""1.00 GB"", ""start"": ""192940032"", ""uuid"": null }, ""nvme1n1p7"": { ""holders"": [], ""sectors"": ""62914560"", ""sectorsize"": 512, ""size"": ""30.00 GB"", ""start"": ""195037184"", ""uuid"": null }, ""nvme1n1p8"": { ""holders"": [], ""sectors"": ""2097152"", ""sectorsize"": 512, ""size"": ""1.00 GB"", ""start"": ""257951744"", ""uuid"": null } }, ""removable"": ""0"", ""rotational"": ""0"", ""sas_address"": null, ""sas_device_handle"": null, ""scheduler_mode"": """", ""sectors"": ""781422768"", ""sectorsize"": ""512"", ""size"": ""372.61 GB"", ""support_discard"": ""512"", ""vendor"": null }, ""nvme2n1"": { ""holders"": [], ""host"": ""Non-Volatile memory controller: Lite-On Technology Corporation M8Pe Series NVMe SSD (rev 01)"", ""model"": ""PLEXTOR PX-1TM8PeY"", ""partitions"": { ""nvme2n1p1"": { ""holders"": [], ""sectors"": ""204800"", ""sectorsize"": 512, ""size"": ""100.00 MB"", ""start"": ""2048"", ""uuid"": ""aaaf3aa9-feab-4a6d-ada1-466f15e53494"" }, ""nvme2n1p2"": { ""holders"": [], ""sectors"": ""1935190671"", ""sectorsize"": 512, ""size"": ""922.77 GB"", ""start"": ""65218560"", ""uuid"": null }, ""nvme2n1p3"": { ""holders"": [], ""sectors"": ""62914560"", ""sectorsize"": 512, ""size"": ""30.00 GB"", ""start"": ""206848"", ""uuid"": null }, ""nvme2n1p4"": { ""holders"": [], ""sectors"": ""2097152"", ""sectorsize"": 512, ""size"": ""1.00 GB"", ""start"": ""63121408"", ""uuid"": null } }, ""removable"": ""0"", ""rotational"": ""0"", ""sas_address"": null, ""sas_device_handle"": null, ""scheduler_mode"": """", ""sectors"": ""2000409264"", ""sectorsize"": ""512"", ""size"": ""953.87 GB"", ""support_discard"": ""512"", ""vendor"": null }, ```Wouldn't it be more correct to verify if diskname start by those strings ?::May be. This is ""backport"" from https://github.com/ceph/ceph-ansible/pull/2219. Regex was replaced by a match in string.::I agree, startswith is less likely to collide with other device names. ::Needs tests.::",d5fff8bb08ab279b48f4ed45e95acfb88ae39a44::
https://api.github.com/repos/ansible/ansible,32887,devel-os_flotaing_ip::devel,0,merged,affects_2.5::automerge::bug::cloud::module::openstack::shipit::support:community::,"##### SUMMARY Openstack provision fails with AttributeError 'internal_network' error when required instance is already present in the cloud. This patch fixes that error by adding additional verification that the floating ip is on the required nat-destination network. Fixes #32884 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME os_floating_ip ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` 2.5.0.0 ``` ##### ADDITIONAL INFORMATION Needs backporting to 2.4 stable branch too.",b4eaa3714a04f35289255ef4f2f1464c45ab00fe::
https://api.github.com/repos/ansible/ansible,32761,asa_save::devel,0,merged,affects_2.5::asa::automerge::bug::cisco::module::networking::owner_pr::shipit::support:community::,"##### SUMMARY The save parameter of asa_config is broken. Even though this has been deprecated in other modules I'm not sure the save_when configuration would work to well as you sometimes would need to issue `more system:running` to see passwords that `show running` would mask. But the ""more"" command doesn't work in multiple context mode. At any rate I prefer to save the configurations using a handler instead, i.e. https://networklore.com/how-to-save-ios_config/ Fixes #32735 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME - asa_config ##### ANSIBLE VERSION ``` (prod) ~/src/playbooks  ᐅ ansible --version ansible 2.5.0 (devel bed78872f9) last updated 2017/11/09 19:16:52 (GMT +200) config file = /Users/patrick/src/playbooks/ansible.cfg configured module search path = [u'/Users/patrick/.virtualenvs/prod/lib/python2.7/site-packages/napalm_ansible'] ansible python module location = /Users/patrick/src/forks/ansible/lib/ansible executable location = /Users/patrick/src/forks/ansible/bin/ansible python version = 2.7.14 (default, Sep 25 2017, 09:53:22) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.37)] (prod) ~/src/playbooks  ᐅ ``` Impacts Ansible 2.4 as well and could be backported. ##### ADDITIONAL INFORMATION Before: ``` TASK [Baseline] **************************************************************************************************************************** An exception occurred during task execution. To see the full traceback, use -vvv. The error was: AttributeError: 'AnsibleModule' object has no attribute 'config' fatal: [172.29.50.2]: FAILED! => {""changed"": false, ""module_stderr"": ""Traceback (most recent call last):\n  File \""/var/folders/9x/3f2j6dpj7r76dhj9q4pnc14m0000gn/T/ansible_8I5kn8/ansible_module_asa_config.py\"", line 306, in <module>\n    main()\n  File \""/var/folders/9x/3f2j6dpj7r76dhj9q4pnc14m0000gn/T/ansible_8I5kn8/ansible_module_asa_config.py\"", line 300, in main\n    run(module, result)\n  File \""/var/folders/9x/3f2j6dpj7r76dhj9q4pnc14m0000gn/T/ansible_8I5kn8/ansible_module_asa_config.py\"", line 251, in run\n    module.config.save_config()\nAttributeError: 'AnsibleModule' object has no attribute 'config'\n"", ""module_stdout"": """", ""msg"": ""MODULE FAILURE"", ""rc"": 0} ``` After: ``` TASK [Baseline] **************************************************************************************************************************** changed: [172.29.50.2] ```",5700aec5f76445bfcb83b5fee61a2178ee4f592c::
https://api.github.com/repos/ansible/ansible,32666,pg_hba::devel,0,merged,affects_2.5::database::module::new_contributor::new_module::new_plugin::postgresql::shipit::support:community::test::,"##### SUMMARY Postgres pg_hba files are difficult to manage. They can best be related to iptables config: - first lines hit, will be applied - there are complexe datatypes involved, like ip addresses and subnets, which could have different notations for the same value. For these reasons (order is important, complex datatypes), lineinfile doesn't really work well. On the other hand, templating does work, but overwrite the whole file. Any changes which are there, but are not part of the template, are basically reverted. With Ansible, you can manage only parts of config, but not for pg_hba rules. This module fixes that. You an state that a hba rule should be there and the modules makes sure it is there and even on the on a logical place, so that it hits, without overriding other rules (other than what should be logical). ##### ISSUE TYPE - New Module Pull Request ##### COMPONENT NAME pg_hba ##### ANSIBLE VERSION ``` ansible 2.4.1.0 config file = None configured module search path = [u'/Users/smannem/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /usr/local/Cellar/ansible/2.4.1.0/libexec/lib/python2.7/site-packages/ansible executable location = /usr/local/bin/ansible python version = 2.7.14 (default, Sep 25 2017, 09:53:22) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.37)] ``` ##### ADDITIONAL INFORMATION This module already was created in juli 2015, and used internally on many occasions. I wanted to commit it to the community,since then, but never took the time too jump through all hoops. It has always been on my personal github account, for anyone to use. I just hope to help others to manag postgres databases in a more transparant way. After this change, you can ``` ansible -m pg_hba -a 'dest=/tmp/pg_hba.conf contype=host source=192.168.8.0 netmask=255.255.255.0 method=md5 backup=true order=sud state=present create=true' ``` Use shorter licence declaration ([example](https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/monitoring/grafana_plugin.py#L4)). ::required parameter don't have default value.::Formatting function `C()` could be used with `postgres` and `enterprisedb`.::`dest`, `owner`, `group`, `mode` parameters are present: common file arguments must be used instead: -  use [`add_file_common_args=True`](https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/crypto/openssl_csr.py#L472) parameter - use [`extends_documentation_fragment`](https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/crypto/openssl_csr.py#L151) ([doc](http://docs.ansible.com/ansible/devel/dev_guide/developing_modules_documenting.html#documentation-fragments)).::`required` parameters don't have a default. Besides `required` isn't used in `argument_spec` for this parameter. I suggest to not require this parameter without any default value (then`None` would be the default value),meaning the default behavior would be to read contents unless `contype` is set. ::`rc` is [deprecated](https://github.com/ansible/ansible/blob/devel/lib/ansible/executor/task_executor.py#L572), don't use it. ::`AnsibleModule.set_fs_attributes_if_different` should be used instead of the `touch` method (related to the comment below about _common file arguments_). ::[ipaddress](https://docs.python.org/3/library/ipaddress.html) Python module should be used instead in order to check/handle IP addresses. This module is included in Python 3.3 and backport exists for previous versions.::`postgres` database could have been deleted.::The if/else block be replaced by `return not self.rules`.::this could be `return self.diff['before'] or self.diff['after']`::Fixed in new commit (coming up).::Fixed in new commit (coming up).::Fixed in new commit (coming up).::Good notion. I have changed as you suggestedin new commit (coming up).::Fixed in upcoming commit::Also changing source to src parameter::And extends_documentation_fragment has even removed owner from the docstring entirely.::Yes, I like that module and I see the benefit in using that over my implementation. But I need some time on that.::I have enabled pylint and he tells me the same. Will fix all errors. This is fixed.::fixed::Modified in latest commit.::`check_mode` (meaning: file isn't created/updated when check mode is enabled) and idempotence (meaning: changed is `False` when a task is repeated) should be checked.::`contype` is required here but isn't required in `argument_spec`.::The four `assert` could be grouped (`that` parameter is a list).::`debug` tasks should be removed.::YAML syntax should be used (`dest: /tmp/pg_hbp.conf`).::Idempotency test: the four `source`/`netmask` pairs could be tested.::Removing pg_hba entry must be tested too (idempotency, check mode).::backup file existence and content should be checked.::typo s/rul/rule/::typo: `commentsselfself`::If the only expected exception type is the one raised line 390, a custom exception class should be used. Note that it seems that a simpler way (without exception) could be used: ``` key = rule2key(rule) oldrule = self.rules[key] ekeys = set(list(oldrule.keys()) + list(rule.keys())) ekeys.remove('line') for k in ekeys: if oldrule[k] != rule[k]: self.rules[key] = rule self.diff['after']['pg_hba'].append(rule['line']) [...] ```::typo: `methid`::This method seems unused, it must be removed.::`tempfile` and `shutil` are standard modules, use `import tempfile` and `import shutil` instead.::Use `author: Sebastiaan Mannem (@sebasmannem)`::typo: `wich`::With this example: ``` pg_hba: contype: host dest: /tmp/pg_hba.conf method: md5 netmask: 172.21.0.0/24 src: all users: pilou databases: awx ``` two entries are created: ``` host    awx             pilou             172.21.0.0/24           md5 host    awx pilou   all md5 ``` It seems an error should be raised when `netmask` is used with `src: all` or `src: samehost` or `src: samenet`.::Should not this parameter named `address` ?::Check that ``` src: 172.21.0.0 netmask: 255.255.255.0 ``` and ``` src: 172.21.0.0/24 ``` generate the same configuration.::value of keyword parameter `order` is already `sdu` because `sdu` is the default value for `order` module parameter. Same for `backup` and `create`.::This test is always False since choices for `order` is already `PG_HBA_ORDERS`.::typo: `ipv6`::Using `order: sdu`, the file below was generated: ``` local   all             postgres                                peer host    all             all             127.0.0.1/32            md5 local   all             all                                     peer host    all             all             ::1/128                 md5 ``` should not that be ``` local   all             postgres                                peer local   all             all                                     peer host    all             all             127.0.0.1/32            md5 host    all             all             ::1/128                 md5 ``` ?::Fixed.::Fixed.::Fixed.::Fixed.::Fixed.::Fixed.::This is not the only exception. key = rule2key(rule) Could also raise an error. But I have made this part more descriptive.::Fixed.::Removed.::Fixed.::Fixed.::Fixed.::I had split this up, for better clarity which assert actually breaks. But I merged the again.::Fixed.::Changed it to address and added src and source as aliases.::Added netmask_sameas_prefix::That is true. I made this so you can also import it as a module for something else. In that case I cannot be sure that the caller uses these defaults. I'd like to keep it unless you're really bothered with it.::That is true. I made this so you can also import it as a module for something else. In that case I cannot be sure that the argument is an element of PG_HBA_ORDERS. I'd like to keep it unless you're really bothered with it.::Fixed.::Although this is technically not important, I fixed this. I also added some better testcases to pg_hba_test_ips to better test this.::typo: `idemptotency`::Because `/tmp/pg_hbd.conf` doesn't exist and `state` is `absent`, should not the module return `changed == False` (meaning: `pg_hba_idempotency_check1 is not changed`) ?::Ok, no need to change.::Ok, no need to change.::Using the previous example, now an exception is raised: ``` TASK [pg_hba] *** fatal: [localhost]: FAILED! => { ""changed"": false, ""rc"": 1 } MSG: MODULE FAILURE MODULE_STDOUT: Traceback (most recent call last): File ""/tmp/ansible_FtGIVa/ansible_module_pg_hba.py"", line 600, in <module> main() File ""/tmp/ansible_FtGIVa/ansible_module_pg_hba.py"", line 574, in main for rule in new_rules(contype, databases, users, source, netmask, method, options): File ""/tmp/ansible_FtGIVa/ansible_module_pg_hba.py"", line 518, in new_rules rule['src'] = str(rule2source_ipnw(rule)) File ""/tmp/ansible_FtGIVa/ansible_module_pg_hba.py"", line 464, in rule2source_ipnw mask_as_ip = ipaddress.ip_address(u'{0}'.format(rule['mask'])) File ""/usr/lib/python2.7/dist-packages/ipaddress.py"", line 166, in ip_address address) ValueError: u'172.21.0.0/24' does not appear to be an IPv4 or IPv6 address MODULE_STDERR: Shared connection to localhost closed. ``` In order to check if `netmask` is used with `src: all` or `src: samehost` or `src: samenet`, should not a test be added in `main` method ?::Fixed::This was already the case, but because 'changed: true'. This now also is the case with changed: False.::```suggestion # Copyright: (c) 2019, Sebastiaan Mannem (@sebasmannem) <YOURMAIL@HERE> ```::```suggestion DOCUMENTATION = r''' ```::```suggestion type: str ``` Seems it will empty by default::```suggestion choices: [ absent, present ] ``` It's a strong recommendation to use alphabetic order for aliases, choices, etc::```suggestion choices: [ dsu, dus, sdu, sud,  uds, usd] ```::I think you can use quotes if you want but several Ansible commiters always removed them from my PRs. Maybe it's their point of view but not really necessary.::```suggestion EXAMPLES = r''' ```::Better to add more examples, at least with removing rules too::```suggestion RETURN = r''' ```::```suggestion state: absent ``` IMO, easier to read::```suggestion short_description: Add, remove or modify a rule in a pg_hba file ``` They usually use syntax of short description like this::```suggestion type: str aliases: [ 'source', 'src' ] ``` It's a strong recommendation to use type for each option::```suggestion choices: [ host, hostssl, hostnossl, local, """" ] type: str ``` type: str alphabetic order and is """" really neseccary here? seems if you don't pass it at all it will be """" by default::```suggestion - Databases this line applies to. type: str ```::```suggestion - Path to C(pg_hba) file to modify. type: path ``` or maybe str, it should be checked::```suggestion default: ""md5"" type: str ```::```suggestion choices: [ cert, gss, ident, krb5, ldap, md5, pam, password, peer, reject, radius, scram-sha-256, sspi, trust  ] ``` recommendation - alphabetic order::```suggestion - The netmask of the source address. type: str ```::```suggestion ``` and seems it will be empty by default, should check::```suggestion - Users this line applies to. type: str ```::```suggestion - ipaddress ```::We're changing this construction to using pg_utils from postgres lib like this [#52077](https://github.com/ansible/ansible/pull/52077/files): ``` argument_spec = postgres_common_argument_spec() argument_spec.update( table=dict(type='str', required=True, aliases=['name']), state=dict(type='str', default=""present"", choices=[""absent"", ""present""]), db=dict(type='str', default='', aliases=['login_db']), port=dict(type='int', default=5432, aliases=['login_port']), ssl_mode=dict(type='str', default='prefer', choices=['allow', 'disable', 'prefer', 'require', 'verify-ca', 'verify-full']), ssl_rootcert=dict(type='str'), tablespace=dict(type='str'), owner=dict(type='str'), unlogged=dict(type='bool'), like=dict(type='str'), including=dict(type='str'), rename=dict(type='str'), truncate=dict(type='bool'), columns=dict(type='list'), storage_params=dict(type='list'), session_role=dict(type='str'), ) module = AnsibleModule( argument_spec=argument_spec, supports_check_mode=True, ) ```::```suggestion netmask=dict(type='str'), ``` seems it's default='' by default::```suggestion options=dict(type='str'), ```::needs to be changed. the good example is a check for psycopg2 ``` if not HAS_PSYCOPG2: module.fail_json(msg=missing_required_lib('psycopg2'), exception=PSYCOPG2_IMP_ERR) ```::Maybe change the option backup: yes|no, to backup_file: '/path/to/file', type: 'path' ?::IMO, better to add a warn if the file doesn't exist, just to inform the admin::I understand what you mean, but this is far more error prone. Do we have access to the path, permissions to write the file, etc. In addition to that, chances are high that they specify the same file for multiple runs, and keep overwriting their backup file. Therefore I went for letting the module make files where it always can (/tmp) and generating new filenames for every backup.::Maybe add the option to set backup_file to a path if they want to hard specify it?::yup, the more flexible the better ;) and it's safer (e.g., unexpected reboot). I think anyawy there will be an issue from people soon with a request to implement a possibility of choosing the bacup file path.::That is the behaviour when create is set to false (default)...::Ok::Yeah, I agree. Will try to add it. When should we commit this one?::Resolved.::Better before 3 March (4 feature freeze). However if it's possible to add it later without changing the ui, that's OK.::It is in there.::On this comment: I tried this, but it breaks, since postgresql_pg_hba does not have all of the postgres stuff to login, which all others do. We want to change that, but that is not in yet. So I reverted this for now (commented the lines), and will add that when I implement the 'login and check' feature. Not sure if that will be in in this commit, bit that is fine. It can be added later.::Ok::",45eb88b3d4eba53c38f7e199d7c227d5d19563a6::ec7f6ec0723b970d5db5c64f1017a0b935faf1b5::
https://api.github.com/repos/ansible/ansible,32539,devel::devel,0,merged,affects_2.5::cloud::community_review::docs::module::support:community::vmware::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> In module vmware_guest_find I've added the datacenter parameter to the examples. IMHO a mandatory parameter should be used in any example. I create this pull request against the devel branch. But I think this change should be backported to the released versions which are already using this module. Because it's a documentation change it should not bread any api. What's your opinion on this? ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Docs Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> vmware_guest_find ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.4.0.0 config file = /etc/ansible/ansible.cfg configured module search path = [u'/home/jkastning/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /usr/lib/python2.7/site-packages/ansible executable location = /usr/bin/ansible python version = 2.7.5 (default, May  3 2017, 07:55:04) [GCC 4.8.5 20150623 (Red Hat 4.8.5-14)] ```",23158ab27977bcc15b01d6d686b75fe79581b2f9::
https://api.github.com/repos/ansible/ansible,32053,fix-ssl-context-creation::devel,0,merged,affects_2.5::bug::crypto::module_utils/urls::needs_revision::support:core::,"We do not go through the effort of finding the right PROTOCOL setting if we have SSLContext in the stdlib.  So we do not want to hit the code that uses PROTOCOL to set the urllib3-provided ssl context when SSLContext is available.  Also, the urllib3 implementation appears to have a bug in some recent versions.  Preferring the stdlib version will work around that for those with Python-2.7.9+ as well. Fixes #26235 Fixes #25402 Fixes #31998 @sivel, if you have time, please review this. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/module_utils/urls.py ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` devel, 2.4, 2.3 (but I don't know if we'lll backport to 2.3.x) ```I like this. It should have been done this way to start with.::",34ac0590882764ada5dacfc05b965da1ad4d321f::
https://api.github.com/repos/ansible/ansible,32007,asa_doc_bug::devel,0,merged,affects_2.5::asa::cisco::community_review::docs::module::networking::owner_pr::support:community::,"The documentation mentioned the ""commit"" and ""update"" parameters which didn't exist. ##### SUMMARY Documentation bug, fixes #31609. Should also be backported to the 2.4 branch. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME - asa_config ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` ansible 2.4.0.0 config file = None configured module search path = [u'/Users/patrick/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/patrick/.virtualenvs/prod/lib/python2.7/site-packages/ansible executable location = /Users/patrick/.virtualenvs/prod/bin/ansible python version = 2.7.14 (default, Sep 25 2017, 09:53:22) [GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.37)] ```",17973c40e360004f7e2a35b7554786b426862d65::
https://api.github.com/repos/ansible/ansible,31443,param-type-path::devel,0,merged,affects_2.5::azure::bug::cloud::community_review::docker::docs::module::net_tools::support:community::,"##### SUMMARY Add a simplistic test for whether a module might be needing to use an argument_spec with type=path instead of type=str.  Also port most of the modules that should be fixed to have type-str. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> Various modules ##### ANSIBLE VERSION <!--- Paste verbatim output from ""ansible --version"" between quotes below --> ``` devel ``` Not important enough for a backport",eed3dba60a7e2996e73a0835ecab1987fe769a46::b63b5790bff78e52998404e45f33564d3fdd69be::
https://api.github.com/repos/ansible/ansible,30984,unarchive-unzip-warning::devel,0,closed,affects_2.5::bug::core_review::m:unarchive::module::owner_pr::support:core::,##### SUMMARY This PR fixes #30976 This could be backported to v2.4. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME unarchive ##### ANSIBLE VERSION v2.4,07573a6f4a369b620fd33fd715b96df7e1fbe13e::
https://api.github.com/repos/ansible/ansible,30902,fix_s3::devel,0,merged,affects_2.5::aws::bug::cloud::core_review::module::support:core::,"##### SUMMARY Currently the aws_s3 module deletes the security_token and profile_name values from the connection parameters, thus breaking S3 for anyone using profiles or STS. Comment above suggests only removing the values for non-S3 services, so let's just do that. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME aws_s3 ##### ANSIBLE VERSION ``` ansible 2.5.0 (devel cb5f2c7ac3) last updated 2017/09/26 11:45:15 (GMT +1000) config file = /etc/ansible/ansible.cfg configured module search path = [u'/home/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /home/will/src/ansible/lib/ansible executable location = /home/will/src/ansible/bin/ansible python version = 2.7.13 (default, Sep  5 2017, 08:53:59) [GCC 7.1.1 20170622 (Red Hat 7.1.1-3)] ``` ##### ADDITIONAL INFORMATION Must be backported to stable-2.4",3c3da8c33e6dc849fd150fc3381198452b2ab480::
https://api.github.com/repos/ansible/ansible,30823,issue-30806::devel,0,merged,affects_2.5::aws::bug::cloud::community_review::module::support:community::,"##### SUMMARY Fix broken exception handling and improve non-existent exception handling This PR is designed as three commits. The first of them should be backported to 2.4, the other two are additional improvements for devel Fixes #30806 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME cloudwatchevent_rule ##### ANSIBLE VERSION ``` ansible 2.5.0 (devel dc8aedb274) last updated 2017/09/22 10:17:03 (GMT +1000) config file = /etc/ansible/ansible.cfg configured module search path = [u'/home/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /home/will/src/ansible/lib/ansible executable location = /home/will/src/ansible/bin/ansible python version = 2.7.13 (default, Sep  5 2017, 08:53:59) [GCC 7.1.1 20170622 (Red Hat 7.1.1-3)] ``` Don't need to import HAS_BOTO3 now.::You can remove this since it's handled in module_utils/aws/core.py: https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/aws/core.py#L98-L100::",fb5693e0b353bdd7d1f2740bbda49f39b5c1f9f8::43abf72678b9bcff3c068b87d3ab287da9aea6fc::9fdd4cb7001e90cf50d3964f1d99fb602290971d::5cff50ac8471f7df89e28155491c4040a4c98e42::
https://api.github.com/repos/ansible/ansible,30743,rsync-password-fix::devel,0,merged,affects_2.5::bug::core_review::module::new_contributor::plugins/action::support:community::support:core::,"##### SUMMARY > The action plugin detects the inventory data and connection type then juggles the connection to local and sets the remote host args for rsync. If the remote host required a password for auth and the user gave a password via the available methods, we would wrap ssh calls with sshpass. However, we completely ignore that in the action plugin for synchronize where we would probably know that a password is needed based on contexts. We should look into detecting that situation and wrapping rsync with sshpass. > sshpass somewhere in the the exec arguments and sending the password when the prompt occurs. > Fixes #16616 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME synchronize ##### ANSIBLE VERSION (could be easily backported to older versions if needed) ``` $ ansible --version ansible 2.5.0 config file = /etc/ansible/ansible.cfg configured module search path = [u'/home/user/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /usr/lib/python2.7/site-packages/ansible executable location = /usr/sbin/ansible python version = 2.7.13 (default, Jul 21 2017, 03:24:34) [GCC 7.1.1 20170630] ``` Shoot.... There's a problem, this is insecure.  command line args can be seen on nearly any platform so they cannot be used to pass around passwords and other secrets.::We will need to follow the pattern as used in the ssh connection plugin of creating a socket and passing the password over the socket.::These days environment variables (-e with SSHPASS) are safe on most platforms but there may be some platforms still in use where any user can view those as well.  -f might be okay but we'd have to be very careful not to create a race condition where someone can place their own temporary file or directory to subvert that.  -d, opening up a separate file descriptor, is likely the most secure and least error prone way to pass the password securely but you may have to use subprocess instead of module.run_command to make use of that.  (The call to run_command() looks very simple so I don't believe porting to raw subprocess will be a problem). EDIT; -d is the method sivel is proposing as well.  See: * https://github.com/ansible/ansible/blob/devel/lib/ansible/plugins/connection/ssh.py#L493 * https://github.com/ansible/ansible/blob/devel/lib/ansible/plugins/connection/ssh.py#L713 * https://github.com/ansible/ansible/blob/devel/lib/ansible/plugins/connection/ssh.py#L732::@abadger good catch, thanks::thanks for reviewing, i've pushed the fix ::In modules you'll need to call ```module.fail_json(msg='error message here')``` instead of raising an exception.::The logic here seems like it leaves of PY2 + rsync_password?::i've copied it from here: https://github.com/ansible/ansible/blob/devel/lib/ansible/plugins/connection/ssh.py#L711::thanks, fixed!::@abadger autocheck not allowing to use Popen::i see, that's because `pass_fds` not implemented in python2::i am wondering if some warning or error need to be produced to react on such case? and if so, should this handling be also added to ssh connection plugin?::@sivel could you review this code?  I don't know the history but I suspect that PY3 needs the pass_fds parameter and PY2 doesn't but both PY3 and PY2 need to write the portion which then handles writing to the ssh_pass pipe.::@abadger it seems you were the one who added that PY3 branch for `pass_fds`: https://github.com/ansible/ansible/pull/17863::now i've understood what the point, on python2 it just works without passing fds explicitly pushed a fixup::",879eb14e8d07b20f4b129dd817ab908fad6d2660::8133039afa8412e0637cc804d1b0ebed808ba05a::23103daf16f51fc60b3e8f04e39766ae7b902a0b::fc0205792203f357666e63ceaf6b3d33d300ade4::48c28395e273255f331b7268e9c636fb3083ea8d::3cd74c6b1ebfce947b12f9bfbaef45d343a2fa5b::a02de0f27b8fc205f731733097456c1776dc1fef::b4eeca74e6d444b634b8fac937b43d2f3c4b398e::
https://api.github.com/repos/ansible/ansible,30622,better_boto3_tag_list_defaults::devel,0,merged,affects_2.5::bug::cloud::module_utils/::needs_revision::support:core::,"##### SUMMARY Default to trying both `key` and `Key`, and corresponding `value`/`Value`. Alternative to #30542 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME module_utils/ec2 ##### ANSIBLE VERSION ``` ansible 2.5.0 (devel 07f5a186fb) last updated 2017/09/20 21:37:41 (GMT +1000) config file = None configured module search path = [u'/Users/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/will/src/ansible/lib/ansible executable location = /Users/will/src/ansible/bin/ansible python version = 2.7.13 (default, Dec 18 2016, 07:03:39) [GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] ``` I think we could just ignore these parameters entirely, and assume we'll need to try both all the time. It would simplify this code, and let us list those params as deprecated. ::I'm not sure I understand this.  When you say 'we'll need to try both all the time', both what? I think we need these parameters because there are multiple variations that AWS use for tag key names, not just `value` or `Value`.::I've just checked the source, and we don't actually pass the keyword parameters to `boto3_tag_list_to_ansible_dict` anywhere at present! Is this a practical concern or a theoretical concern - are there any services that don't use `[{'Key': tag_key, 'Value': tag_value}]` ? I know that using the way the return result of `compare_aws_tags` is used does greatly depend on the service in question, but really don't know if there are similar concerns here. **Edit**: My first search was wrong. There are places the extra args are used, but only for `key` or `Key` ``` $ git grep 'boto3_tag_list.*[kK]ey' lib/ansible/module_utils/ec2.py:def boto3_tag_list_to_ansible_dict(tags_list, tag_name_key_name='Key', tag_value_key_name='Value'): lib/ansible/module_utils/ec2.py:def ansible_dict_to_boto3_tag_list(tags_dict, tag_name_key_name='Key', tag_value_key_name='Value'): lib/ansible/modules/cloud/amazon/ec2_group_facts.py:        security_group['tags'] = boto3_tag_list_to_ansible_dict(security_group.get('tags', {}), tag_name_key_name='key', tag_value_key_name='value') lib/ansible/modules/cloud/amazon/ec2_instance_facts.py:        instance['tags'] = boto3_tag_list_to_ansible_dict(instance.get('tags', []), 'key', 'value') lib/ansible/modules/cloud/amazon/ec2_snapshot_facts.py:            snapshot['tags'] = boto3_tag_list_to_ansible_dict(snapshot['tags'], 'key', 'value') lib/ansible/modules/cloud/amazon/ec2_vpc_dhcp_option_facts.py:                        'Tags': boto3_tag_list_to_ansible_dict(dhcp_option.get('Tags', [{'Value': '', 'Key': 'Name'}]))} lib/ansible/modules/cloud/amazon/ec2_vpc_nacl_facts.py:            nacl['tags'] = boto3_tag_list_to_ansible_dict(nacl['tags'], 'key', 'value') lib/ansible/modules/cloud/amazon/ec2_vpc_vpn.py:        current_tags = ec2_utils.boto3_tag_list_to_ansible_dict(current_attrs['tags'], u'key', u'value') test/units/modules/cloud/amazon/test_ec2_vpc_vpn.py:    correct_changes = boto3_tag_list_to_ansible_dict([{'Key': 'Three', 'Value': 'three'}, {'Key': 'Four', 'Value': 'four'}]) ```::The way I'm thinking about it, we have the choice between: A: trying and falling back on a known alternative (lower-case `key`), thus *not* adding parameters to this function and avoiding more surface area B: adding these params to handle a case we don't have an example of To me, option A seems like the way to go if we're able to get away with it, and we can just remove the usage of these kwargs in those instance/snapshot/etc modules. Does that make sense to y'all? ::Ah, mild issue: since this is also going to be a backport, we shouldn't remove the kwarg usage entirely, just ignore the parameters for same effect. ::This is weird. I definitely remember coding a module that didn't use Key or key. I thought it was merged but maybe not. We definitely need to keep the parameters to specify. Previously this module did what is proposed as (a) but I changed it because it doesn't satisfy all cases::Any objections to just merging this as is then?::LGTM::",9962ed1c9c3ceafd9ab03587ed53a8cc19e11f70::
https://api.github.com/repos/ansible/ansible,30537,iam_managed_policy_limit::devel,0,merged,affects_2.5::aws::bug::cloud::community_review::module::owner_pr::support:community::,"##### SUMMARY When policy versions exceed 5, we hit LimitExceeded. However, the exception checking should use `e.response['Error']['Code']` ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME iam_managed_policy ##### ANSIBLE VERSION ``` ansible 2.5.0 (devel 5aebcd4f7f) last updated 2017/09/19 12:22:40 (GMT +1000) config file = /etc/ansible/ansible.cfg configured module search path = [u'/home/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /home/will/src/ansible/lib/ansible executable location = /home/will/src/ansible/bin/ansible python version = 2.7.13 (default, Sep  5 2017, 08:53:59) [GCC 7.1.1 20170622 (Red Hat 7.1.1-3)] ``` ##### ADDITIONAL INFORMATION Please backport to stable-2.4",af165f5d4c8a92b1127bcadd3a3d617d5ffbf97b::
https://api.github.com/repos/ansible/ansible,30528,coloring::devel,0,merged,affects_2.5::bug::plugins/callback::support:core::,"This fixes the bug raised in #30506. While the bug exists in the `devel` branch it also exists in `stable-2.4`, so it would be great if this could be backported to 2.4. ##### SUMMARY A bug was introduced in the selective callback plugin which caused the names of the colors to be printed instead of changing the actual output. This PR will restore the functionality while still allowing the user to configure which colors to use. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME - plugins/callback/selective ##### ANSIBLE VERSION ``` ansible 2.5.0 (coloring 8422a90561) last updated 2017/09/18 22:52:59 (GMT +200) config file = None configured module search path = [u'/Users/patrick/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/patrick/src/forks/ansible/lib/ansible executable location = /Users/patrick/src/forks/ansible/bin/ansible python version = 2.7.12 (default, Dec  5 2016, 11:55:02) [GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] ``` and: ``` ansible 2.4.0.0 (stable-2.4 3c805f85bc) last updated 2017/09/18 14:08:17 (GMT +200) config file = None configured module search path = [u'/Users/patrick/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/patrick/src/forks/ansible/lib/ansible executable location = /Users/patrick/src/forks/ansible/bin/ansible python version = 2.7.12 (default, Dec  5 2016, 11:55:02) [GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> Zero length formats are not supported on python 2.6. Use this instead: ```python 'ok': '\033[{0}m'.format(codeCodes[C.COLOR_OK]), ``` ::Ah, Python 2.6 :) Looks like that's a general problem throughout this plugin. I can take a look at that.::",8422a9056146ec277cb08ae55ccd5dcedbe6a62d::2373a6643b520447e634218de9725ed9e5fbaf27::
https://api.github.com/repos/ansible/ansible,30522,openssl_cert_to_bytes::devel,0,merged,affects_2.5::bug::community_review::crypto::module::owner_pr::python3::support:community::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> The key_usage, extended_key_usage and subject_alt_name parameters were silently ignored on Python3. <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> openssl_certificate ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.4 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> Please backport to 2.4.1 too, this is a pure bug fix for Python3. <!--- Paste verbatim command output below, e.g. before and after your change --> Taking another look at this (and the similar code on line 555) there's a few things to change: ``` python current_ku = [OpenSSL._util.lib.OBJ_txt2nid(usage.strip()) for usage in to_bytes(extension, errors='surrogate_or_strict').split(b',')] ``` the changes I noticed: * No need to use both str and to_bytes.  Use to_bytes once to save one encoding step. * Use surrogate_or_strict so that we raise an exception if we can't encode something in utf-8.  The default error handler for to_bytes is surrogate_then_replace which could end up with replacement characters in the output.::Line 568 is also similar::`extension` comes from `extension = self.cert.get_extension(extension_idx)` which is an object, not a string or bytestring (https://pyopenssl.org/en/stable/api/crypto.html#OpenSSL.crypto.X509Extension). Pyopenssl itself usually just returns bytes, which is the reason `extension.get_short_name() == 'keyUsage' never will be True on python 3 (https://pyopenssl.org/en/stable/api/crypto.html#OpenSSL.crypto.X509Extension.get_short_name). There are helper functions, like `__str__()` (https://pyopenssl.org/en/stable/api/crypto.html#OpenSSL.crypto.X509Extension.__str__) that serialize the contents of this extension which unfortunately can't really be nicely reached any other way unless (like on line 310 in openssl_csr.py in https://github.com/ansible/ansible/pull/30338) you manually work around bugs or not exposed functionality in pyopenssl directly. To me the implementation seems a bit arcane (https://github.com/pyca/pyopenssl/blob/master/src/OpenSSL/crypto.py#L761), so I'm happy to let the library handle this for me, even if it means that I would need to create a new bytestring from the result. This means the `str(extension)` call is not optional and `to_bytes(extension, ...)` will probably not work, as this is not a string initially (maybe the __str__() method is called internally though when calling `to_bytes()`?). Lastly there still could be some cleanup done in this module to make sure that stuff that is a string is used as a string and bytes stay bytes. I'm not a huge fan of the `_sanitize_inputs()` function that changes members in the class, not when they are used - but then again that's mostly a style argument and sooner or later this module could be rewritten using the cryptography module anyways I hope.::",fde8eba093ac4de6430cee8d8b4c264be0170a73::e7aa453853b799eac57d41ccc7f5af62547f7fe2::f1dc2f88909973890128b74cee2ff4939fe8175e::37ca18fd1abec3efde9317001a0521fcbec364b9::
https://api.github.com/repos/ansible/ansible,30493,issue/30491::devel,0,closed,affects_2.5::bug::cli/vault::support:core::,"##### SUMMARY ansible-vault edit: prompt for existing instead of new password (#30491) Currently the `ansible-vault edit` command is prompting for a new password after one has been set. The purpose of the edit command is to edit an already encrypted file. New encryptions should be done using the `encrypt` or `create` commands. See issue for more info. Need to backport this to 2.4 per @abadger . ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/cli/vault.py ##### ANSIBLE VERSION ``` ansible 2.5.0 (issue/30491 139f3e7bbd) last updated 2017/09/17 22:49:04 (GMT -500) config file = /etc/ansible/ansible.cfg configured module search path = [u'/home/reid/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /home/reid/git/ansible/lib/ansible executable location = /home/reid/git/ansible/bin/ansible python version = 2.7.13 (default, Sep  5 2017, 08:53:59) [GCC 7.1.1 20170622 (Red Hat 7.1.1-3)] ``` ##### ADDITIONAL INFORMATION BEFORE: ``` [reid@laptop ~/git]$ ansible-vault edit dummy.txt --ask-vault-pass New Vault password: Confirm New Vault password: ``` AFTER: ``` [reid@laptop ~/git]$ ansible-vault edit dummy.txt --ask-vault-pass Vault password: ```",139f3e7bbd6ecbb074401a7c03ea327e0285958c::
https://api.github.com/repos/ansible/ansible,30475,win_file-fix2::devel,0,merged,affects_2.5::bug::module::needs_revision::support:core::windows::,"##### SUMMARY This fixed #30442 This is ready for backporting to v2.4 and v2.3 too. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_file ##### ANSIBLE VERSION v2.5Why change to pascal case, we already have a set way to writing modules in here and would prefer to keep it consistent.::I didn't know we had a standard already. The reason I renamed it to -WhatIf is because it's more clear this is directly affecting lower level Powershell cmdlets. IMO that's more clear.::There isn't a global standard but we try and keep each script aligned to how they are written. In this case it seems like a semi snake case is being used and it would be preferable to keep that standard. Personally I find it nice that our custom functions are lower case as it sets them apart from the standard MS cmdlets but in the end as long as it is consistent I am fine with it.::Jordan, that's assuming it was consistent. The original module was also inconsistent in this regard and I had two options to make it more consistent, I chose CamelCase (as that's was used for internal functions as well in the main loop). But have it your way :-) I don't like CamelCase either, and I hate case insensitive language with a vengeance ! But now it looks more like potpourri than before IMO.::I don't think it was inconsistent before, having a look all the variables are in `snake_case` format. I agree we do things differently when calling our functions compared to the inbuilt functions like `-file` vs `-File` but all the variables we set were in a camel case style and I think it should be consistent in the style the module is currently in. I'll review the changes tomorrow when I wake up and start work.::The module did call internal functions with `-CheckMode` and `-File`, as well as `-checkmode` and `-file`. So there were 2 ways to go with that. I chose CamelCase to make everything CamelCase. So my original proposal was more consistent, both with the original and the current proposed PR according to your liking. I don't care, but the rules become very blurry if 1. the file itself is inconsistent 2. the original file style should be maintained 3. it ends up being someone's preference anyhow And in the end I have to rewrite my PR which is just a waste of my time. Just saying...::",6f4408df68487fb122445c358e223d980662f456::
https://api.github.com/repos/ansible/ansible,30380,i30328::devel,0,merged,affects_2.5::automerge::feature::ipa::module::shipit::support:community::,"##### SUMMARY Fix adds ipa host_add functionality of generating random passwords for host enrollement. This fix also preserves the idempotency of host_add and host_mod IPA APIs. Fixes: #30328 Signed-off-by: Abhijeet Kasurde <akasurde@redhat.com> ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME lib/ansible/modules/identity/ipa/ipa_host.py ##### ANSIBLE VERSION ``` 2.5devel ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> Please backport this to 2.4 and 2.3 branches if possible.There is an issue when the host has already been enrolled to IPA and we call the module with randompassword: true. The module will properly create a random password but it does not remove the existing keytab and calling ipa-join or ipa-client-install with the new OTP will fail (because the host already has a keytab). A possible fix would be to call ipa host-disable in this case, right before host-mod.::Make sense. I will fix it.::The method host_disable should be called only when a random password is requested and the ipa_host already contains 'has_keytab'=True. Otherwise the module may perform unwanted disable operation, for instance in a scenario where only the 'description' of a host needs to be modified.::ok::",64476e154448d3101bd265f86f74611c5c274f3e::
https://api.github.com/repos/ansible/ansible,30247,target_group_size_change::devel,0,merged,affects_2.5::aws::bug::cloud::community_review::module::support:community::,"##### SUMMARY Don't update the target_group_attributes dict while iterating over it. Fixes #30190 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ec2_target_group_facts ##### ANSIBLE VERSION ``` ansible 2.5.0 (devel 779e365639) last updated 2017/09/13 10:11:58 (GMT +1000) config file = /etc/ansible/ansible.cfg configured module search path = [u'/home/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /home/will/src/ansible/lib/ansible executable location = /home/will/src/ansible/bin/ansible python version = 2.7.13 (default, Sep  5 2017, 08:53:59) [GCC 7.1.1 20170622 (Red Hat 7.1.1-3)] ``` ##### ADDITIONAL INFORMATION Should be backported to stable-2.4",8f3f651c08c6ccb0bee4d3bc6c0799045636c928::
https://api.github.com/repos/ansible/ansible,30151,openssl_certificate_san_type_renaming::devel,0,merged,affects_2.5::automerge::bug::crypto::module::shipit::support:community::,Unfortunately OpenSSL is inconsistent when it comes to the identifiers for the subjectAltName extension. When generating CSR's it wants `IP:<address>` but when printing a CSR or Certificate it will use `IP Address:<address>` ([Bug in OpenSSL](https://github.com/openssl/openssl/issues/4004)). The `openssl_csr` module fixes this by replacing `IP Address` from OpenSSL output with `IP` before comparing it with the module arguments. The fix in this module worked the other way round (replacing the `IP` with `IP Address` in the modules arguments before comparing). For most cases this doesn't matter but if the user would use `IP Address` as identifier the workaround would replace that with `IP Address Address` which must fail. Also `openssl_certificate` will print a misleading message when the check fails. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME openssl_certificate ##### ANSIBLE VERSION ``` 2.4 ``` ##### ADDITIONAL INFORMATION Please backport this to stable-2.4 branch as well.,871ee7b0f816f7e4ece8f31c4b23bdc516da898b::
https://api.github.com/repos/ansible/ansible,30128,patch-2::devel,0,merged,affects_2.5::bug::module_utils/::support:core::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> Adds more extended key usage names to module_utils/crypto.py ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> module_utils/crypto.py ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.4 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> Please backport to 2.4 release.",1512d52d48af4e20f17d6f26d570c5ac199d0232::6e2560a059d4f924ebb1ead82d4a51d6f602f3ef::
https://api.github.com/repos/ansible/ansible,30062,docs-minor-bool-consistency::devel,0,merged,affects_2.5::docs::support:core::,##### SUMMARY * Document that default values of booleans can use whichever Ansible recognized boolean reads better. * Make doc fragments used by the copy module conform to the documentation guidelines (type: bool and do not use choices). ##### ISSUE TYPE - Docs Pull Request ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel ``` this can be backported to 2.4 and 2.3 but it's not a big deal either way.Should this be `default: 'no'` now that you put `type: bool` in there?::,df19221faa8022d83c56451cfb4e8fd69587e0b0::ba12d3b990045860a7ade8c3c8cd637f71cfafdb::
https://api.github.com/repos/ansible/ansible,29604,harmonize_csr_arg_names::devel,0,merged,affects_2.4::affects_2.5::bug::community_review::crypto::easyfix::module::support:community::,##### SUMMARY This is basically the same as PR #28521 and fixes mixed usage of CamelCase and snake_case for argument names. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME openssl_csr ##### ANSIBLE VERSION ``` 2.4 ``` ##### ADDITIONAL INFORMATION Please backport this to stable-2.4 branch as well.,daf6a3b09f74bbb4e9ace9f60a9677a143b813a7::f31a1427c72de4906fed14cd6bdeadc21ce7d29e::
https://api.github.com/repos/ansible/ansible,29152,ansible_config_hostfile::devel,0,closed,affects_2.5::bug::needs_rebase::needs_revision::support:core::,"##### SUMMARY Revert the removal of the hostfile configuration setting, and ensure a deprecation warning is printed instead. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ansible configuration ##### ANSIBLE VERSION ``` ansible 2.5.0 (devel e71cddc026) last updated 2017/09/08 12:44:20 (GMT -700) config file = None configured module search path = [u'/Users/will/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = /Users/will/src/ansible/lib/ansible executable location = /Users/will/src/ansible/bin/ansible python version = 2.7.13 (default, Dec 18 2016, 07:03:39) [GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] ``` ##### ADDITIONAL INFORMATION This must be backported onto 2.4 as well.",26775b8b4fc4f5f6bed61fc072b8ac071bf34f1c::
https://api.github.com/repos/ansible/ansible,29038,cert_integration_test::devel,0,merged,affects_2.4::crypto::feature::module::shipit::support:community::test::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> Add a simple integration test for the openssl_certificate module. <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Feature Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> * crypto/openssl_certificate * test/integration ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.4 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> Not a lot of functionality yet, but it is a start. The design is modeled after the openssl_csr integration test. <!--- Paste verbatim command output below, e.g. before and after your change --> IIUC [RFC3280](https://tools.ietf.org/html/rfc3280) (section6.1) > A certificate is self-issued if the DNs that appear in the subject >   and issuer fields are identical and are not empty So what I understand is that this is true for 'self-issued' certificate, but not a requirement for 'self-signed' certificate. Hence in this scenario, the ouput of `openssl x509 -noout -issuer -in {{ output_dir }}/cert.pem -nameopt oneline,-space_eq` is `issuer=` which I think is valid. However, we could add an option to the self-signed backend to eventually allow one to specify the issuer via [set_issuer()](https://pyopenssl.org/en/stable/api/crypto.html#OpenSSL.crypto.X509.set_issuer) What are your thoughts on this ?::That's definitely an option that is fine by me, it seemed just like an easy assertion to initilly try out. I'm more concerned about the CI failure when checking the private key in the module itself.::I don't unserstand: > I'm more concerned about the CI failure when checking the private key in the module itself The following assertion works: ``` - name: Validate certificate (assert) assert: that: - cert_modulus.stdout == privatekey_modulus.stdout ``` What are you exactly refering to ?::https://app.shippable.com/github/ansible/ansible/runs/36244/21/console for example::@MarkusTeufelberger ok, I found the root cause issue. I'll provide a patch as soon as I find an elegant solution for it.::@MarkusTeufelberger could you integrate this commit https://github.com/Spredzy/ansible/commit/a25db3d61f69a6d5f82ce67d7ed2abff199bb539 in your PR (if you agree with its content - else let me know if there is anything you'd like to see modified)? This will fix the issue you've spotted. Once this PR merged, we will need to backport it for RC2 since you've found an actual issue with the code. Thanks again for that.::Are dictionary parameters (subject, issuer) internally parsed into tuples? Otherwise it might be necessary to add a `elif isinstance(attr, dict):` line there, right?::Yep, they are internally parsed into tuple. Hence the tuple test. None of the current input are parsed as dict. so that why the test isn't present.::Great, thanks! :-)::Ideally, you should put commit a4026d0 before c66ccce in your branch so tests are always ok no matter on which commit it is run. Also for now I think we can drop the subject.stdout == issuer.stdout until we add this feature in the code.::Missing two spaces and the version should be 0.15.0 and up, not 16.0.0::@Spredzy - are you sure about that one? Seems like it fails on shippable: https://app.shippable.com/github/ansible/ansible/runs/36756/summary/console::@MarkusTeufelberger Yep, pretty sure. The issue the CI is reporting is about `openssl_csr` module. > 2017-09-11 15:53:29 TASK [openssl_csr : Generate CSR] > 2017-09-11 15:53:30 fatal: [testhost]: FAILED! => {""changed"": false, ""failed"": true, ""msg"": ""You need to have PyOpenSSL>=0.15 to generate CSRs""} Since 6819e71 is ensuring `pyOpenSSL>=0.15`, the same `block/when` condition should be added in the `openssl_csr/tasks/main.yml` file::",74bfd595d01831e5de7c2c99afe01f92dc8d6501::9d45302f9e22aa99a1f503d253ff95c0282e2953::e0e22884f65695cd102dfbbdedda90110c8b3938::74ac650107030422ca484487443ec9e78c1ba9ce::0e516197ab04563489c0f43090849569f70039a4::95b790d7e5463e6a93c38b24a7c452f42fc228a6::29f0a11b23214bb3afb278ecdb0072d487e0874e::f9217c0cbfca83fa96209f7542eb3231ed49e0b3::6819e71e082874f26aa9575d933cee8805ac9f44::6c767d4752398c2515c8457b1e6225f45f00d254::
https://api.github.com/repos/ansible/ansible,28450,transport_test::devel,0,merged,affects_2.4::bug::c:plugins/connection/paramiko_ssh::c:plugins/connection/ssh::c:plugins/connection/winrm::support:core::,"##### SUMMARY So we are removing the transport_test for the listed connection types, because they fail to take into account bastion or proxy servers for testing the transport. The result of removing this, is that modules using this facility will do a complete connection round-trip attempt from the very start, running the ping module, which is a bit heavier but at least is supposed to work. I have left the transport_test facility in place, since it's not impossible to write lightweight test for connection types. This fixes #23774 and fixes #23766 This should probably be backported to v2.3 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME wait_for_connection win_reboot ##### ANSIBLE VERSION v2.4",b47295717c4d3ea6229f51cd8066eae1fd3caf0a::
https://api.github.com/repos/ansible/ansible,28115,reconcile-ssh-retry-put-fetch-with-smart-transport::devel,0,merged,P2::affects_2.3::affects_2.4::bug::c:plugins/connection/ssh::support:core::,"1fe67f9 introduced retries to the ssh connection put file and fetch file.  Unfortunately, that change broke the smart transport because it started raising exceptions instead of returning from _run().  This breakage is documented in #23711. An attempt to fix it was made at #23717 but the first attempt was objected to as needing to touch too much code.  The second attmept was objected to as smart was forced to encapsulate retries (thus retrying a sftp ""rety"" times before trying scp ""retry"" times and then finally moving onto piped).  This third attempt has retries encapsulate smart. So each sub-transport is tried once and if all three fail, another retry attempt is made which tries each of the three again. Fixes #23711 Fixes #23717 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME lib/ansible/plugins/connection/ssh.py ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel 2.3.2 ``` ##### ADDITIONAL INFORMATION The bug affects 2.3.2 as well as current devel (2.4).  I don't need it backported but it would probably be nice to backport considering that a disabled sftp setup will currently break the smart transport  (our default) as well.",f9cd93824cf5e7a94bd5f8d51d7b398da0d7b0db::
https://api.github.com/repos/ansible/ansible,27966,win_power_plan::devel,0,merged,affects_2.4::module::needs_revision::new_module::new_plugin::support:community::windows::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> Added module for adjusting the power plan in Windows systems. By default Windows sets it to Balanced which will throttle CPU. This module will default to changing to High Performance which will remove the throttling. It accepts any string value in case people are trying to define custom power plans. (Apologies if the pr wasn't done right. First time contributing and was unable to find good documentation on the git steps) <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - New Module Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> win_power_plan ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` ansible 2.3.2.0 config file = /opt/ansible/ansible.cfg configured module search path = Default w/o overrides python version = 2.7.12 (default, Sep  1 2016, 22:14:00) [GCC 4.8.3 20140911 (Red Hat 4.8.3-9)] ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ``` We now have a one-line GPL header we use for modules. ```python # GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt) ``` ::Same here, add: ```yaml # GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt) ``` ::This should be a list: ```yaml author: - Noah Sparks (@nwsparks) ```::Should not have a trailing dot.::Should be 2.4 (as we don't backport new modules to older releases).::Should have a trailing dot. (Only the short_description must not have one)::Not needed. The module is new in version 2.4.::Wouldn't it be easier to return a dictionary with the name as key ?::Trailing dot.::This should be removed an replaced with: ```yaml default: high performance ```::This is not related to the power_plan property. So not relevant here. (Besides it is incorrect, the available powerplans is not return in the stdout, but as a result value, which is already documented elsewhere)::Thanks for the reviews. I'll see if I can convert it. Was just converting the powershell object to json and this was the result, should be able to convert it to a dictionary first though. Will fix documentation errors as well. Also updating the integration test a bit. Will commit again once ready.::If there's no reason not to, I don't mind. But a dictionary with the name as key is easier to use it in Ansible.::It's ok. Not to difficult to accommodate and it makes sense. Pushed changes.::Hmm...I guess I needed to approve these before pushing, sorry.::Make this `This module wil...`::You may want to use C(balanced) and C(high performance) to make it stand out more in the documentation.::Again, use C(balanced) and C(high performance) here.::Remove this line. By default parameters are not required, unless stated so.::So we used `$diff_support` as the default variable for this. I know someone recently started to do it differently, but all other modules do use **diff_support**.::Casing of $result must be consistent everywhere.::Ok, I'll change it. I'm wondering though if I should leave this in and if so, do I need to do any kind of handling for it if my module doesn't do anything for diff mode?::Ah, if you don't have diff support, please remove it or we might think it does :-D::ok thanks::It is generally preferred to put the $check_mode conditionals in the normal decision tree. So enclosing the actual actions that would induce a change. It makes it easier to read, and ensures that at least the return codes and return values are in sync with a normal run.::Important here is to only add try-blocks around the statements you expect to fail. If more than one statements needs a try-block, you need more than one block. This way errors can be more fine-grained and it becomes easier to understand what statement caused an exception.::thanks for the reviews. updated for both changes.::",4c4815559546c0822b222c354ebc785f1a792ad0::9917761a92df949ec92f33c980daca47fa4b794e::98e9939377c9cb01aa8578735899f0874156bb79::
https://api.github.com/repos/ansible/ansible,27253,fix-non-module_util-import::devel,0,merged,affects_2.4::aws::bug::cloud::committer_review::module::,##### SUMMARY cloudformation module was trying to import a module from an install of ansible.  That would mean that ansible would have to be installed on the remote machine.  Fix that by using hashlib directly. ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> lib/ansible/modules/cloud/amazon/cloudformation.py ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel ``` ##### ADDITIONAL INFORMATION This code is not in the stable-2.3 branch so does not need to be backported ``` ```,8fa18c607782205d512f1c53f094fea7ef7de6ef::
https://api.github.com/repos/ansible/ansible,26569,handlers_and_host_variables::devel,0,closed,affects_2.4::bug::c:plugins/strategy::support:core::,"##### SUMMARY Fix `AnsibleUndefinedVariable` error when handler names use host variables. First commit adds an integration test. Affected version: 2.4 only (backport isn't needed). Fixes #25334. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME StrategyBase ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` ansible-playbook --version ansible-playbook 2.4.0 (devel 52c1a1936d) last updated 2017/07/10 02:28:52 (GMT +200) config file = None configured module search path = [u'$HOMe/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = src/ansible/lib/ansible executable location = src/ansible/bin/ansible-playbook python version = 2.7.13 (default, Jan 19 2017, 14:48:08) [GCC 6.3.0 20170118] ```",4e0e4a867e1666d0c4f1a1d870c66964aa9d3dcc::5d17ca6ee30e7e8e6d5c6fa2a89cf569e460cd7d::
https://api.github.com/repos/ansible/ansible,26302,devel::devel,0,merged,affects_2.4::easyfix::module::support:core::windows::,"##### SUMMARY In Pull request #21846 its stated that the changes won't be backported to Ansible v2.3. Now the documentation still shows introduced in v2.3, which needs to be fixed :) Also see #24307 ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME win_template ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.4 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ```",104cdcaed60395158fc18ea7240cf5ed20870d8b::
https://api.github.com/repos/ansible/ansible,26254,wakeonlan-tests::devel,0,merged,affects_2.4::feature::owner_pr::python3::support:community::support:core::,##### SUMMARY This PR includes: - Checkmode improvements - Integration tests - PEP8 compliancy - Python3 fixes This backports improvements from the win_wakeonlan module. ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Feature Pull Request - Bugfix Pull Request - Docs Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> wakeonlan ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> v2.4,8957b06f2d93d697e16e106b1be865f6382ed1e1::
https://api.github.com/repos/ansible/ansible,26232,win_wakeonlan::devel,0,merged,affects_2.4::module::needs_revision::new_module::new_plugin::support:community::windows::,"##### SUMMARY This is the Windows implementation of the **wakeonlan** module. Useful if you want to wake up systems in a remote network with only Windows systems. ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - New Module Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> win_wakeonlan ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> v2.4Consider passing $check_mode to Wake-On-Lan function and only wrapping L55-56 in 'if (-not $check_mode) to ensure the mac format validation happens even in check mode?::Definitely, that's good feedback. I mostly translated it from my python version, and I am not doing that there. So I am going to backport this there too. Plus integration test (not testing if it actually works, but at least gives some coverage).::`Fail-Json $result """"`?::Should this be mandatory like `wakeonlan`?::I don't see the point of having this in a function, can we just make it simpler by having the code outside? Also you don't need to pass in `$whatif`, you can access `$check_mode` from within this function.::`C(win_wakeonlan)`?::is todo a valid document entry?::Yup, fixed.::It was done exactly like the python version. But there's no real point, it's even easier not to do it :-)::Well, within the function $result was not exposed, but since we don't have a function, this is no longer an issue.::Yup !::It's not being exposed, which is fine. But it could be processed if needed. Best of both worlds IMO.::",3dd15245a24718c372d08bc7dbe9ac0d1f68f222::
https://api.github.com/repos/ansible/ansible,26208,win_updates_arg_fix::devel,0,merged,,"##### SUMMARY Switch to dicts in common code caused silent failures during arg translation, so default values and non-check-mode were always used. * fixes #23653 * fixes #24062 * fixes #22938 * fixes #25156 ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME win_updates ##### ANSIBLE VERSION 2.4.0 ##### ADDITIONAL INFORMATION backport to 2.3 for 2.3.2RC2 If only we had a sane way to test this module... :(Why don't we use `Get-AnsibleParam` here ? With `-type ""path""` even !::",e6f364e2d661861939b567a219207fd855966e02::
https://api.github.com/repos/ansible/ansible,25854,test/cs_host::devel,0,merged,affects_2.4::bug::cloud::cloudstack::module::needs_revision::owner_pr::,"##### SUMMARY After having a proper CI for creating hosts, several issues has been identified and fixed. This fix has been kept as small as possible and will be backported to 2.3. stable (excluding tests). There are disabled tests cases for host tags due to issues with the library cs underneath. These tests will be enabled, as soon as the issue is fixed upstream. - Allocation state could not be changed. closes #25645 fixes #25644 - Fix Host idempotency, url only used for creation and not returned from API. (That is why I separated out this param) closes #25641 fixes #25642 - Remove Host error-ed out due to host not in maintenance. - When adding a host, the result is return as list. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME cs_host ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.3 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ```",ddb651174c088359245340cd1dd7ae6607905f2e::7887e30a8b34dbff690fbe871a4e5637f16224f9::
https://api.github.com/repos/ansible/ansible,25843,lookup-passwordstore-use-builtin-gen::devel,0,merged,affects_2.4::c:plugins/lookup::c:utils/encrypt::cloud::docker::feature::support:core::,"##### SUMMARY Currently the `passwordstore` lookup uses an external utility called `pwgen` this is only mentioned in the plugin, but nowhere else, not even the documentation. This change uses the `_random_password` function from the `password` lookup instead. I know it might not be ideal to import the `password` lookup for the `_random_password` function, but I'm not sure where I should ideally move it. ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME plugin / lookup ##### ANSIBLE VERSION master ##### ADDITIONAL INFORMATION This fixes #25256 ### Current Issues #### Ubuntu 12.04 No available package for `pass` so can only test if we manually install from https://www.passwordstore.org #### CentOS6 Getting this error for an unknown reason: ``` fatal: [testhost]: FAILED! => {""failed"": true, ""msg"": ""An unhandled exception occurred while running the lookup plugin 'passwordstore'. Error was a <type 'exceptions.TypeError'>, original message: __init__() takes exactly 3 arguments (4 given)""} ```Use ``dummy`` instead of ``_``  for dummy variable names (If we ever i18n the code, ``_`` will be used as an alias for gettext).::Since we don't want encoding errors to go unnoticed here, use ``` python inputdata = to_bytes(kwargs['input'], errors='surrogate_or_strict') ``` That will raise an error if there are encoding problems instead of silently changing the data.::Also prepend inputdata with ```b_``` so everyone knows it's a variable intended to hold a byte value.::I like doing this instead of string concatenation as it does not create an intermediate string: ``` python if retcode != 0 or any(b'encryption failed: Unusable public key' in output for output in (b_out, b_err): ```::rather than transforming these here (which makes the output different from check_output from the python stdlib) I would make other things in this function deal with them as bytes.  So this would be: ``` python b_out, b_err = process.commincate(inputdata) ```::If you follow my suggestion to leave out and err as byte strings, the two lines below this comment should be: ``` python raise subprocess.CalledProcessError(retcode, cmd, to_native(b_out + b_err)) return b_out ```::You were wondering where to move this.  Let's move it to lib/ansible/utils/encrypt.py or a new file in lib/ansible/utils (password.py or similar).::I'm assuming this isn't a performance critical path? String concatenation doesn't sound like too big a performance hit and you lose some code clarity with your example.::any() isn't the most readable way to write this, but it's clearer what's intended than ```""here's a message"" in out + err```.  The latter could be checking whether out == ""Toshio, here's a"" and err == ""message end"". I'm okay with this not being the fastest code but being more clear.  how about the long hand: ``` if (retcode != 0 or 'encryption failed: Unusable public key' in out or 'encryption failed: Unusable public key' in err): ```::Since there was something else to change still, go ahead and get rid of this ```.. note:: [...]``` as well.  We've moved it back into ansible.utils, now ;-)::We're checking if an error message exists in all process output, which seems clear enough. I feel like all the suggested alternatives are more verbose/unneeded but if you insist we can go with either one.::This line was changed to fix the previously mentioned Py3 errors. I'm still not entirely sure where/when it's best to convert between string/byte types.::Our strategy is at the borders.  In this case, check_output is a backport of newer subprocess functionality and subprocess's API is bytes-oriented (in both py2 and py3) so it is the border.  (This is the right place to convert).  However, since this is controller code we should use to_text() to convert the output into a text string on both python2 and python3 at this border. Note that being a string always may cause other pieces of the code to need to be turned into a text string as well.::Would it be correct to also change this to to_text then?::this one should stay to_native because it's being handed to an exception.  Exceptions are a python language feature and they use native strings.  http://pythonhosted.org/kitchen/unicode-frustrations.html#frustration-5-exceptions text and bytes types are confusing in python2... a little better in python3, but usually we're writing code that has to straddle the two :-(::i've changed that line to this: ``` python self.passoutput = to_text(check_output2([""pass"", self.passname]), errors='surrogate_or_strict').splitlines() ``` and run the integration tests for passwordstore on python-3.5.  It worked.  So I think we can merge this with that change.::",c807413d1b77f136e5976609bbb0be0171845ba8::b7cd5fe97889419bf88754a76283da74a33cee48::1674af9a57daacfe5d2711999c8396510c8afe09::e0fdd148dfa6cba54946fbfaa7460d63a219d8b4::4a27b2524059ce4886542979859138ec419a4f40::
https://api.github.com/repos/ansible/ansible,25560,cyptography-pr-20566-rebase::devel,0,merged,affects_2.4::aws::c:parsing/vault/::cloud::community_review::crypto::docker::feature::gce::module::,"##### SUMMARY Port the ansible code to work with the cryptography python library as this is the library that everyone in the python community is getting behind for cryptographic functions. We maintain a fallback for pycrypto so that older distros will still work out of the box. The idea is for the following to work: * ```pip install ansible``` to install with cryptography as its setuptools dep (install time and runtime) * ```ANSIBLE_CRYPTO_BACKEND=pycrypto pip install ansible``` will install with pycrypto as its setuptools  dep (installtime and runtime). * If both cryptography and pycrypto are installed, ansible will prefer to use cryptography whether or not it is the setuptools dep. ##### ISSUE TYPE - Feature Pull Request - Bugfix Pull Request ##### COMPONENT NAME primarily vault ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel (2.4) ``` ##### ADDITIONAL INFORMATION based on https://github.com/ansible/ansible/pull/24894 Which in turn is based on https://github.com/ansible/ansible/pull/20566 @reaperhulk, @alikins, Please have a look for the crypto code.  I'll see if we can wrangle some security people to look at it as well. @mattclay, @gundalow Please have a look for the test portion.  docker images probably need to be updated.  It would be good to find a way to test the code when using both cryptography and when using pycrypto.  We might be able to do that by monkeypatching HAS_CRYPTOGRAPHY to False when we want to choose the pycrypto code (This is assuming that the test machine has both installed).This will fail on Python 3 as f is opened as 'r' rather than 'rb' and load_pem_private_key requires bytes. key_passphrase must also be bytes -- if that path accepts utf8 `encode('utf8')` would be appropriate::😆 ::CTR mode doesn't actually require padding, so this is unnecessary. That said, I assume you're staying compatible with existing vault implementations which already do this. It's not a security thing, just a few wasted bytes/CPU cycles.::Is this really required?::yes, we've been wanting to change that for a while but were waiting until we made the architecture more pluggable to allow for old/new formats to be used transparently.::It shouldn't be.... But I felt like I needed to put something in here because we (alikins and I) think that all of these should be caught in __init__().  Not sure how we can signal this otherwise....::Good point.  I'll convert this to use 'rb'.::Unrelated, but wonder if we should ditch reference to easy_install, as pip now recommends `get-pip.py`...::Minor consistency nit- our stuff seems to be using `[action]_[backend]()`, where these aliased imports have that reversed. I'd vote for `[action]_[backend]()` over this- makes the code a little easier to read...::Do we know a minimum version we could specify?::This may need changing in other places, such as install guide.::I think we should do this one separately.  There's questions of  availability that we'd need to figure out. (I checked whether I had get_pip.py on a centos6 box and it wasn't there... then I checked fedora25 and it wasn't installed either).::It may be pycrypto 2.6 but I'm not sure.  2.6 is the minimum version that was specified in the requirements.txt file (in code in setup.py after this patch).  If you want to do some research and update the patch.... The message as written isn't a regression, though...::Okay, on python-2.7.13 and python-3.5 (have to check older versions for pyhton2 but I'm pretty sure it wasn't in python-2.6.x) you can run this: ``` $ python -m ensurepip ``` to get pip and dependencies installed.::ensurepip was added in 3.4+ and backported to 2.7 in 2.7.9+::",1dac7e12fd119a57f7c7326024edd0b9a2a6d11b::a92e9cac930c370443a4b235e02e32965c1a6491::836ec5383604be6c9392ba1e808084ce64208e63::92956c2b1a2d9634610948f0091518e4b908f07e::725a34677963da6150f9c3bcf483b75e4f6fc667::3dfd2edc6c19cf606b30a001fe3ce0418ce02b75::428ab4f20158610bf7e4273225663e7123e03161::caf98b6e0cf2f25c5241f711dbf67a420b8af411::14022ebcbb85e911b999fe424a933ea7126dcc44::c801654aa24fd3756f1c3820a9c68c1b09d2a949::d01d9855547bf692b6a1af00e9a22695315fb082::c62fecfc4d684cff2c92233d52ecedcf05af7848::e3f46b36111c83319fa2ce9940d4b5f843fcfebc::e681b58624a904533b7c3462165697748d0be4a7::70cfcf6535f484728d56206ff2a4eafc52ac6500::6d0fb3a92d529031bdc26e3964f3024fec9a7ad8::aea4ac328cad0e738db26d6378e384b8885a62bb::783da158acbd7cc85ce1e717796faca36bbd0dc6::5df1d6765b3f357a9cc78f4a869f4d7ad1793f97::c2681c4403e4e7bc893c6f1c3a260aaa60630afa::60ec86257e7c0a22cbf0733219f184cef44dbd75::14a33fedee3d80111bafa8c1e965cbb3b863af39::36292ac2216fec8d15b9c002479de7b905936ad5::85481ada321cd96dbd9178db80938e650365dd37::723caae97400d88c4d6b4ab224e89644597edd90::e25a93d10aa58137c935ef69f259e94b4bc190e4::946bfb3ef34cd11c8790345b351674d06f979e73::57af83735cad7e0ced2af2652aa23ef7c4af3d5e::928d1512e5e739e782ab274b72aef82c676b4f90::dd053d92e875761481d1f909f609737be4c41c0d::4ff09b71cdf15bdfcf1f6450907c65e08df746bd::703bf187d11f9969938ea81768331563fe8b2440::bc37819a55b51fc8e184e5b171b9fb4cc162194c::b2a1195936817bdbdd2e4f132d54b166d9029ee1::5c4c80a75b6c26e0fe4335b53b6577df73e318e0::7ced276d3c23793b938188d5f1fb73812bb01dd9::7056b5e25ff529578a123cf37b92be7d5eed72ef::bd8b56e066337e0937541e78b5ab8328602ae6bf::1f1bd4cec3baf71af86bf9b442518a040716df99::
https://api.github.com/repos/ansible/ansible,25390,document-user-module_utils::devel,0,merged,affects_2.4::docs::stale_ci::support:core::,##### SUMMARY Just adds module_utils directory as examples to the docs ##### ISSUE TYPE - Docs Pull Request ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel ``` ##### ADDITIONAL INFORMATION Other pieces of the documentation document module_utils for 2.3 so it's not critical to backport this.,ff972708a3d8451cb9b4479c34155de27f167f5d::
https://api.github.com/repos/ansible/ansible,25215,devel::devel,0,closed,affects_2.4::crypto::feature::module::needs_rebase::needs_revision::stale_ci::support:community::,"##### SUMMARY Modify CSR when diff found between existing CSR and user values <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Feature Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> modules/crypto/openssl_csr.py ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` ansible 2.3.0.0 config file = /etc/ansible/ansible.cfg configured module search path = Default w/o overrides python version = 2.7.3 (default, Jun 21 2016, 18:38:19) [GCC 4.7.2] ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> Needs Python pyOpenssl module with version greater than 0.15. With Debian Jessie you have to install python-openssl on backports repo.",586ef8fb94ea2be34e0e36639b9b7db1de0c5334::6d3048474d30444a6ec89df80a0334e27e3bfb21::9b825fd7ceffa1a29c6031dfc6ff457dad7dcaf8::
https://api.github.com/repos/ansible/ansible,25118,devel::devel,0,closed,affects_2.4::ci_verified::feature::module::needs_rebase::needs_revision::new_contributor::stale_ci::support:core::system::,"##### SUMMARY Adds two new parameters to the `iptables` module which allow logging: `log_prefix` and `log_level`. This is an implementation of the feature requested in issue #25100. Because `iptables` itself doesn't allow these options unless the `jump` target is the LOG extension, so does this implementation. If the `jump` parameter is not specified but either of the added parameters is, the `jump` parameter is set as LOG. This implementation creates the expected command: ``` iptables -A LOGGING -m limit --limit 2/second --limit-burst 20 -j LOG --log-prefix 'iptables: ' --log-level info ``` Given this: ``` iptables: chain: LOGGING action: append state: present limit: 2/second limit_burst: 20 log_prefix: ""iptables: "" log_level: info ``` ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME `iptables` module ##### ANSIBLE VERSION ``` ansible 2.4.0 (devel 9c40fa9c89) last updated 2017/05/28 16:45:38 (GMT -500) config file = configured module search path = [u'/~/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules'] ansible python module location = ~/ansible/lib/ansible executable location = ~/ansible/bin/ansible python version = 2.7.13 (default, Jan 19 2017, 14:48:08) [GCC 6.3.0 20170118] ```It will be added in 2.5, you can backport it on 2.4.2 if it get merge on time.::Same as previous comment::This param is already present on line 529 ;-)::This line is already present line 416::By the way, fixing this will resolve all the checks problems::Hi, I'm new so I don't exactly know what this means. Should I replace `version_added` to read 2.5, 2.4.2, or remove it altogether?::Oh sorry: put 2.5 ;-)::",5902033dc2d994bc009a4624015b5e33124b2673::46586e05ba4253c175173631796bec8d625d484d::
https://api.github.com/repos/ansible/ansible,24958,temp-staging-post-2.3.1::stable-2.3,1,merged,affects_2.4::bug::cloud::core_review::module::openstack::vmware::,##### SUMMARY Merge the backport branch for 2.3.1rc3 (or 2.3.2 if there's no rc3) ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME Various ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.3.1 ```,3b771d556aa8f30fd55b8afe3cc0491ea164427a::b961d9ba59c3932fe041f885327c781e5550846b::c59946a63973971a1660a0cc2c2b0cac08a72fd5::dd71712dbb75e959d3c1b90d41b8e6a448e34a23::ce67dc4ff9e89196a91cfc9f7e5749223e060ee0::955041268c275df4c36a9ef196256d141f845b12::e5c73a73d4966ef7da6519665a755ba8ef5b65ae::8611899124b9436d927abbc015220cbdc5409c13::
https://api.github.com/repos/ansible/ansible,24951,lambda-policy-with-tests::devel,0,closed,affects_2.4::aws::c:module_utils/::cloud::module::needs_rebase::needs_revision::new_module::new_plugin::ovirt::support:community::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> This is basically a future version of  PR https://github.com/ansible/ansible/pull/20890 which includes integration tests.  This shares code with https://github.com/ansible/ansible/pull/24722 so either that can be merged first or it can be closed when this is merged. ##### ISSUE TYPE - New Module Pull Request ##### COMPONENT NAME lambda_policy module ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` config file = /etc/ansible/ansible.cfg configured module search path = [u'/home/mikedd/dev/ansible/ansible-add-modules/library'] ansible python module location = /home/mikedd/dev/ansible/ansible-add-modules/lib/ansible executable location = /home/mikedd/dev/ansible/ansible-add-modules/bin/ansible python version = 2.7.12 (default, Jul  1 2016, 15:12:24) [GCC 5.4.0 20160609] ``` ##### ADDITIONAL INFORMATION The integration tests a) provide some practical documentation of how to use lambda_policy in eal deployment and b) show how to deploy a fully functional AWS ""hello world"" microservice and c) will provide some protection for forthcoming changes.  I will backport fixes on this branch to the other lambda_policy PR so it shouldn't matter which order things get merged in. <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ansible  localhost -m lambda_policy -a 'function_name=fred statement_id=fred principal=apigateway.amazonaws.com action=lambda:InvokeFunction region=eu-west-1' ``` output before ``` [WARNING]: provided hosts list is empty, only localhost is available localhost | FAILED! => { ""failed"": true, ""msg"": ""The module lambda_policy was not found in configured module paths. Additionally, core modules are missing. If this is a checkout, run 'git pull --rebase' to correct this problem."" } ``` output after ``` [WARNING]: provided hosts list is empty, only localhost is available localhost | SUCCESS => { ""ansible_facts"": { ""lambda_policy_action"": ""none"" }, ""changed"": false } ``` You can import this function now since https://github.com/ansible/ansible/pull/25780 was merged.::`assert vpc_subnet_ids and vpc_security_group_ids`?::New copyright: http://docs.ansible.com/ansible/latest/dev_guide/developing_modules_documenting.html#copyright::Space before ).::required: false is the default and doesn't need to be specified.::default: none is also the default.::I suspect this policy comparison is not going to work quite right, but since the AWS APIs vary so much I might be wrong. Probably not a blocker, just a bug that at some point will probably need to get fixed.::None is the default.::This should probably just be botocore.exceptions.ClientError here since fail_json_aws is called? Or the inner Exception, at least (plus an else).::To be imported.::This can also be an ARN, right? In which case the length can be up to 140 characters. ::Probably better to be a more specific exception. For the rest of the module too.::Since changed will always be True to get here you can return True and remove the changed variable assignments.::result.failed? This works, but is there a reason for the different syntax?::This seems like it tests a subset of the one above.::Would it make more sense to create the client in main() and then just pass it around?::Rather than pass aws everywhere we could just pass the connection and simplify a little?::Do you need this line? region is passed to the module on line 57.::This is something inherited from the module I based on.  I'm not sure about this; it might make the error handling nicere in theory but I haven't yet found a real use for such a class beyond what the AWS class really already does so I think I agree with you.  ::Wonder if we can think of a simple test case that would fail here?  ::correct;  the check would have let through valid ARNs but now I'll fix it to let through longer ones and not allow colons if it isn't an ARN::I know that in certain cases - e.g. when the network connection suddenly disappears half way through a connection - botocore/boto3 can throw non boto exceptions.  The current design of aws_module.fail_json_aws() is that it should be able to accept any reasonable exception so I think it's okay to catch Exception.  Otherwise, I think we have to work out a more or less complete list of the exceptions botocore can throw and provide them as a constant somewhere. For now, at least, I'll leave this as catching exception and let's have a discuss through e.g. on IRC::This is supposed to be more proper ansible code.  Can't remember where but it was recommended strongly (maybe by bcoca or ryansb on IRC??)::Required isn't a list item, I think you want to make this `required: when C(state=present)`::For `action` try passing a single perm, like `s3:GetObject` and then rerun with same inputs. Try the same with an action `[ ""s3:GetObject"" ]` so it's a single-item list and rerun with same inputs. If this code is erroneous, then there will be a spurious `changed=true` in one of those cases. ::Instead of storing `equal`, just `return True` here and `return False` where the `break` is on line 159.::This `return` isn't needed. ::So the issue I was thinking might come up was that the API may ""fix"" lists of one and only return the list content (as S3 does). So running a playbook with a list of one item always displayed changed. I looked at the boto3 docs and since these options must be strings it's a non-issue. Testing this out though, I notice that if an invalid option is provided (such as specifying a list of two actions for a statement) or a typo results in a failure (good, as expected) but also deletes the existing policy (that seems weird). I don't know if that's easily fixable in a way other than validating the options before making API calls... ``` ""error"": { ""code"": ""ValidationException"", ""message"": ""1 validation error detected: Value '['lambda:CreateFunction']' at 'action' failed to satisfy constraint: Member must satisfy regular expression pattern: (lambda:[*]|lambda:[a-zA-Z]+|[*])"" }, ```::Having `user/` in this I think will break on temporary creds, since the error will contain the role ARN instead. So `r""arn:aws:iam::([0-9]{12,32}):\w+/""` is the proper one, I think. ::Changing var names like this obfuscates the attribution, and doesn't seem to make it easier to read. Can you revert these cosmetic changes? ::Possibly me - that `| failed` is a jinja filter that checks that `result.failed == false`. It's pretty much the same. ::Shouldn't the default here be `None`? I suppose 0 can serve the same purpose since a Lambda can never be versioned at 0, but it seems odd. ::I think this should allow either a list or a string (which would just coerce to a single-item list) ::This can be an `elif` instead. ::`if current_state == 'present' and not policy_equal(module, current_policy_statement):`::This is meant to make the ""Required when"" part of the description (whllst the required boolean defaults to false).  Does required: when ... work?  If so then we should do a fix to a bunch of modules which are using the same system.::think this _is_ currently working with temporary credits but your fix seems more general so I will go for it.  ::I think this was done just to make an easy numeric comparison.  Seems to me that None works just as well and is more standard so I'm getting rid of the default.  ::currently the module is limited to handling only one statement at a time; how would you propose to use a list?  Combine? Prepare for later? ::Lambda::Can you remove all the except Exceptions? We should know what exceptions the code will raise and not catch general exceptions because it's not great practice.::Another general exception handling that can be removed.::Another general exception handling that can be removed.::Another general exception handling that can be removed.::Ah, I see. Yeah that has to be a description string. ::Done::Same way we do for stuff like iam managed policies, accepting whatever value (no type) and if it's a list assign a list of action perms or if it's a string coerce to a single-item list. ::s/Pascale/Pascal/ https://en.wikipedia.org/wiki/Pascal_(programming_language)::This can just be ``` if module.params.get('version') is not None: return str(module.params['version']) elif module.params['alias']: return str(module.params['alias']) ``` And that would be functionally equivalent. ::Can you just catch `AttributeError` here instead. ::Instead of removing, just scope down to only catch botocore errors. ::Same: just catch associated botocore errors. ::ryansb left a comment on https://github.com/ansible/ansible/pull/26059 requesting that you don't change the var names. ""I don't see the value in changing these var names - can you change them back to what they were to preserve authorship?"" ""Still don't see these changes as outweighing the loss of authorship/blame.""::In order get this to revers I have to do some complex git history rewriting..  seems to be a complete pain.  Will keep trying however.  ::Easier to read is `if not vpc_subnet_ids or not vpc_security_group_ids:` because None and an empty list will evaluate to false.::Can be simplified to `if 'VpcConfig' in current_config and current_config['VpcConfig'].get('VpcId'):` (since an empty string evaluates to false)::Comment can stay on one line like before.::Comment can stay on one line like before.::This can be simplified to `if not vpc_subnet_ids or not vpc_security_group_ids:`::You could get rid of required=False and default=None in the arg spec.::Should this be using to_text() here and on line 218?::You can remove this. If there isn't a specified return, None is returned.::Yes. Either to_native or to_text would be fine in this case. ::",933f3e6c21e4daa2ba58f01e17cc508bbda647d1::ecbd6f6980bc5206aad46cb294c9b47a31f5f21e::4cffc5a60997f327f7a87068f3852c4fedadc5c5::60a9b7c7be933524a2bdcff2922276d1e68a3743::02300f277de84d4b541ff2d6be93004e04e5cdc9::7eec89d3dddb3a007f0a2fb6c7e71ec86cdea96e::646d93d564030e83964a8d07b88528f1d2870ab3::375a4172235eed30cfaa26965069c85863e6f060::15b97ec6f61b59d195732e626393171d0a4f38d0::19d207b7bbdf3b15a6158f5af9ae442267c04f73::b95ac43ff6b0eb1b031c408e686940439e179279::f14e7f7e20c171453f1f6ae5db91abb16f7b5cae::5dc58952ae3aee4863b9f33f49de3d990b53c2a9::4b8fbca8f8014fc9467cd43c48c96a8eae8abe5d::85559d6dcbe6f5b2d49451bbef90f1e90e0880ee::56a2e43f14dec58ffc305e4ed08bbec2bd47e8fe::c3cdcc9e590e0282d0cf25270046ace501617209::d0087ff934c67b08433c87a0a7b48301f206d420::e831d7391cf058d7eb4593d706f22a7c9fa8d696::943ec49ebf4815d0b8de02bbbf36b69d27173a6d::374038ee1774bee5ce23d74d4e1463ab8b2c4ced::18cc0d8d2f0970b19cd27f97bb9bc67bf51d1b6e::7a0c757a33e3db6a56adb5e3228fc53c8dc42c6e::3f607afeecc13fc89cd6bc8013a3c84d949c1b67::d610bb36a30b2159d9dd0a56a2b4c51e9a2558b1::e50037f7ec5cce1243743cd046c4dd0c8bcfcee2::2d9b16c5d3a1e3f6ce20cfb48be1c4dabbcd57fa::4843313e6a45df2c46966de8bf2ac40cde8c45a7::3942c67f66e3ae862350dfda14c698893113b42d::ed1ee7b17a248b1de21e0b561504e30c90b0ab04::c145e7b1d78b6cdf046004e7d29cc219c13fe423::f1c68e94a88b8c6a820c6ccee062a3f47447aeb0::8593095fff4ea761e8d28d32fd16b1f4040dc152::099c47a7d2ab017bcc248e7d0b7226e4ab0197da::1dd3c37f73c3ac8ea4d2b119290c0b435e03fbf9::cb47fc71714712eef65604a419f375db76959fce::17c3cc584e2a346fc0bc9705202e8c183828b360::8a734a340c7a0d74313afbffcbd92b4c5514aa22::d75a1faaca284609c119f3c60d6b5a562ced8c5e::cb73b0241c5913d3f57413fa78be5a657df076f8::8d114542d6869ad9ea0cb00b51f25d293e600fa1::2e34ef596ce21a2a8587636f0bd1da792be72b9b::8fd13c1120c7351e1ad421a28c838246f16ab082::d3ace629e234ba7c6de42d7a3092f4f2fe8f54d2::f4fb220c39bd8eb5dd5cccff38b5ed14cca59ca2::7ead956b5f3d6a82cfef78bfd4ed80199512a112::47b3de6299c3fa2748b27ed00a8ca756ac1be6cf::0ec65c2447ad108097807224cf4040dd83a2117c::47d394360a593895fddf5624cba60e7277b20c4a::9f726bba12179bbde2f8021895ee5e46a4968113::e97118005d19bd32ad8e46257c8c03c158d474f0::421293ffc12ae7303968cea8d3efc9ed6739807f::23792c26f9b5cd8b5899b29c2625bbf71faeddd9::ed33c745876c9dddbca8b236c2f97efb0520455c::fc846b5a4b862238e92f83e7148beab762806de1::5426a0dcb1293837d71b3d35c1b36f38c152eba4::0426f7c1f2bdc77061cc29de3dd7aa1b81d71be6::
https://api.github.com/repos/ansible/ansible,24865,powershell-exitjson-failed::devel,0,closed,affects_2.4::bug::c:module_utils/::needs_revision::windows::,"##### SUMMARY This is required for modules that may return a non-zero `rc` value for a successful run, line **win_chocolatey**. We also added 'changed' to both Exit-Json and Fail-Json, much like the python calls. This fixes #24652 ! ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> powershell / win_chocolatey ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> v2.4 (elegible to be backported to v2.3 or older)",09382707a1e29e888b993967a225625235b6148d::
https://api.github.com/repos/ansible/ansible,24454,py3-pickle::devel,0,merged,affects_2.4::bug::c:module_utils/::c:plugins/cache::c:plugins/connection/network_cli::c:plugins/connection/persistent::c:plugins/terminal::needs_rebase::needs_revision::python3::,"On Python3 and Python2 use pickle slightly differently so we need to be explicit about some things. If pickles could be shared between python2 and python3, as in ansible-connection and the pickle cache, we need to specify the protocol to use when dumping and the encoding to use for byte strings when loading. The dumping protocol needs to be no higher than 2 as python-2 only supports up to protocol 2.  The encoding should usually be 'bytes' so that python2 str type becomes python3 bytes type.  However, doing this means that we must make sure that the objects being serialized properly make their strings into text strings except when they're supposed to be bytes.  If strings are improperly byte strings, they may cause tracebacks on the receiving end ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ansible-connection, cache/pickle.py and service module ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel ``` ##### ADDITIONAL INFORMATION Although technically a bugfix, I'm hesitant to backport this to 2.3.  So far we haven't had reports of users encountering this (for ansible-connection, they'd need to be using python2 locally and python3 remotely and have non-ascii data in play_context.  For the cache plugin they'd have to be switching back and forth between running ansible under python2 and python3 ).  If all of our data in play_context isn't properly a text string then we may suddenly start getting errors.  If no one reports bugs that are fixed by this, I'd like this to be devel-only (2.4) so that it gets tested there for a good long while before making it into a release.",316315ea895f9c81e4b0665dbbb681be576a859a::
https://api.github.com/repos/ansible/ansible,24420,vmware_guest_facts_name_uuid::devel,0,closed,affects_2.3::affects_2.4::bug::cloud::module::needs_info::needs_rebase::needs_revision::owner_pr::stale_ci::support:community::support:core::vmware::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> vmware_guest_facts required name, whereas you add a uuid <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> Fix issue #24398 A backport to 2.3 is required ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> vmware_guest_facts ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.3.0.0 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ``` Could you please use `required_one_of` just like [here](https://github.com/ansible/ansible/blob/devel/lib/ansible/modules/system/systemd.py#L313) ?::",d3d119d13e6a3f0e53e0fb4bff8ba918d9ca9be6::
https://api.github.com/repos/ansible/ansible,24393,copy-circular-symlinks-fix::devel,0,merged,affects_2.4::c:plugins/action::core_review::feature::module::support:core::,"##### SUMMARY The existing copy code (in devel) doesn't handle circular symlinks (a symlink inside of a directory hierarchy points to a parent directory). The copy code in previous versions (2.3 at least), has a large performance regression where more than a handful of subdirectories can cause the module to perform way too much work. Writing this code to address both of those concerns and allow us to make copy more flexible in the future (Able to copy symlinks as symlinks [may be necessary to fix these problems] and able to copy empty directories.) ##### ISSUE TYPE - Feature Pull Request - Bugfix Pull Request This is a bugfix but may contain some unavoidable feature work in addition. ##### COMPONENT NAME plugins/action/copy.py ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel, 2.3 ``` ##### ADDITIONAL INFORMATION This is currently a Work in progress.  Wanted to get the code posted in case something happens to interrupt my work on this before it is finished. When finished, this Fixes #21513  in a different way than in devel which will be appropriate for backporting to stable-2.3. See also https://github.com/ansible/ansible/pull/23326 for more details on past bug reports related to this code.Would there be any utility to sorted() on files/sub_folders?  AFAICT, os.walk will use the os.listdir() results directly for filenames. os.listdir() is doc'ed as 'arbitrary order' (iirc, more or less up to fs). Wondering if sorting those results would make for more reproducible behavior when trying to replicate errors. It shouldn't matter at all if there are no bugs, but it could make tracking down odd failures easier.::I hate to sort anywhere that it's not needed due to speed and memory.  We can use .sort() for inplace sotring to eliminate the memory doubling but not speed. Note that os.listidr() is going to lightly wrap what's returned by the filesystem so it should be repeatable on the same data.  It could be a different order if we're debugging something that someone else tells us about... but then again, we seldom get enough information to replicate the complete directory that the user is using. When I was debugging this while working on it, I had to print things out anyway, sort order wouldn't have mattered to how I debugged things.::",a16a22094cd1f41dae49ec94f0efa718e54b8740::5fd5204d37d3e13313612f0c1ba9b87dd9d50aea::
https://api.github.com/repos/ansible/ansible,24307,issue/21846::devel,0,merged,affects_2.4::core_review::docs::module::,"##### SUMMARY #21846 introduced some new arguments to the template module.  They indicated they were added in 2.3, but were only merged recently, after the 2.3 release, with a consensus that the changes would not be backported to 2.3 ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME template ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.3 ``` ##### ADDITIONAL INFORMATION N/A",b363a788e1daf00f0867d4f8340cd408ab5d34da::
https://api.github.com/repos/ansible/ansible,24170,module-precedence-test::devel,0,merged,affects_2.4::bug::core_review::module::,"##### SUMMARY we sometimes have regressions with modules not being found in the proper paths (the standard module directory, user defined module locations, or role directories).  Add some integration tests to prevent this from regressing. ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME test/integration/module_precedence ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel, 2.3 ``` ##### ADDITIONAL INFORMATION @agaffney is reporting that there is some strangeness with module precedence in 2.3 so I'd like to backport this to stable-2.3 as well.",1263a83ca7f3f627b36c66c8c6d2bc6419909d92::3094540ed97c57ca55e219198952eaff34e115cd::
https://api.github.com/repos/ansible/ansible,23581,win_copy-bugfix::devel,0,merged,affects_2.4::bug::module::shipit::stale_ci::windows::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> This fixes #23559. This should be backported to v2.3 branch too. TODO: We ought to add proper integration test to avoid regressions. ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> win_copy ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> v2.3",606cb4f582ecc2abd966bfbc9cdbbf4e84080948::
https://api.github.com/repos/ansible/ansible,23366,devel::devel,0,merged,affects_2.4::bug::,"… the group 'all' ##### SUMMARY fix ""auto adding"" to group ""all"" of hosts in groups using YAML inventory. (not listed as issue) ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> ##### ANSIBLE VERSION tested on 2.3 and devel ##### ADDITIONAL INFORMATION The problem is present at least in branches stable-2.3 too (and should be backported). ``` You can test using an host.yml file like : test: hosts: 192.168.1.1: 192.168.1.2: ```",0aeb516c8eef5083f04037e0abf7d4fb70a7c13c::
https://api.github.com/repos/ansible/ansible,23364,nsupdate_fix::devel,0,merged,affects_2.4::bug::community_review::module::networking::owner_pr::,"##### SUMMARY <!--- Describe the change, including rationale and design decisions --> nsupdate always report change when record is correct. this fixes this problem please backport to 2.3 RC, as module is present in RC with this problem <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> ##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> nsupdate ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.2.2.0 ``` ##### ADDITIONAL INFORMATION <!--- Include additional information to help people understand the change here. For bugs that don't have a linked bug report, a step-by-step reproduction of the problem is helpful. --> <!--- Paste verbatim command output below, e.g. before and after your change --> ``` ```",74e35849ad8967c68ea2b08386231a9e08cf8206::
https://api.github.com/repos/ansible/ansible,22950,rename-python3-doc::devel,0,merged,affects_2.4::docs::needs_revision::python3::,"Rename it to make that obvious. ##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME developing_python3 ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel ```Please delete the words 'that is invalid and'. ::Please replace the non-word 'featureful' with 'functional'.::comma after 'Python-2.7'::""old"" is a relative term, I think a more precise title using versions would be better. ::I wonder if something has been lost here, maybe this could be expanded to A) This is how you should detail with exceptions in a way that works with Python 2.6+ & Python 3.5+ Code sample and explain why this is the correct way B) Example of Python-2.4 only bad code C) Example of python 2.4+ & Python 3.5+ exception handling Note that this is only for Ansible 2.? - 2.3 D) Guidelines regarding if/when you should refactoring code from (B) or (C) to(A) ::What would be a word that means it doesn't have a feature that is in later versions?  It still performs the same functions but only by taking differently formatted input.::(A) is what is there now.  Added (B).    (C) is documented in the module section. (D) is a global thing and we haven't really nailed down a decision here.  I skirt around the issue i nthe module section with this wording: ""Unless a change is going to be backported to Ansible-2.3, you should not have to use this in new code."" (where ""this"" refers to the get_exception() based coding style).::GitHUb -> GitHub Also is the formatting for the URL correct, the rendering doesn't look right::Fixed in https://github.com/ansible/ansible/commit/01e27b108338c660446560c278aa2abfe76d556a::",29e0cbf1c576e2baa92e5196c4dc79e9b42cf6ed::06a1198daf8440209d160c47074ac59df4bd791e::558886c9bec2e9e662cd139afe26a749de2fb16f::f0122451b1f418114faf1722d5b4dd0765b7d8c7::3164d28b676bc84e361de6fbfa3bbd23d98816e9::8fd4771f5ea636cdad11c97dcddcc7ed35ae5961::1282c224c9ee807e40a3273597e372e8ced62344::0c037b9eec2444c488e8e32aabc7318f568de388::
https://api.github.com/repos/ansible/ansible,22855,update-module_utils-six::devel,0,merged,affects_2.4::c:compat/six::c:constants::c:executor/module_common::c:executor/task_executor::c:executor/task_queue_manager::c:galaxy/::c:inventory/script::c:module_utils/::c:parsing/mod_args::c:parsing/vault/::c:parsing/yaml/::c:playbook/base::c:playbook/conditional::c:playbook/helpers::c:playbook/loop_control::c:playbook/play_context::c:playbook/playbook_include::c:playbook/taggable::c:playbook/task::c:plugins/action::c:plugins/cache::c:plugins/callback::c:plugins/connection/chroot::c:plugins/connection/docker::c:plugins/connection/local::c:plugins/connection/paramiko_ssh::c:plugins/connection/ssh::c:plugins/connection/winrm::c:plugins/filter::c:plugins/lookup::c:plugins/shell::c:plugins/strategy::c:plugins/terminal::c:template/safe_eval::c:utils/cmd_functions::c:utils/helpers::c:utils/listify::c:utils/shlex::c:utils/vars::c:vars/unsafe_proxy::docs::feature::needs_revision::,"We've been held back on the version of six we could use on the module side to 1.4.x because of python-2.4 compatibility.  Now that our minimum is Python-2.6, we can update to the latest version of six in module_utils and get rid of the second copy in lib/ansible/compat. ##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME ansible/module_utils/six.py ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel ``` I think I'd remove most of syntax compatibility changes from this pr/commit, and do those in a different commit/pr. (At least in cases where there are also non-syntax related changes that may eventually need to be back-ported/cherry-picked. Granted, in this case, the non-syntax changes are also not  2.4 compatible so it is unlikely to ever get backported to a works-with-py24 branch). But in the past I've found it useful to have syntax related changes isolated.::```from ansible.compat.tests import unittest``` seems to have gotten incorrectly updated to reference module_utils.tests ``` ============================================================================================= ERRORS ============================================================================================== _______________________________________________________________________ ERROR collecting test/units/inventory/test_host.py ________________________________________________________________________ ImportError while importing test module '/home/adrian/src/ansible/test/units/inventory/test_host.py'. Hint: make sure your test modules/packages have valid Python names. Traceback: ../../.local/lib/python2.7/site-packages/_pytest/python.py:418: in _importtestmodule mod = self.fspath.pyimport(ensuresyspath=importmode) ../../.local/lib/python2.7/site-packages/py/_path/local.py:662: in pyimport __import__(modname) ../../.local/lib/python2.7/site-packages/_pytest/assertion/rewrite.py:216: in load_module py.builtin.exec_(co, mod.__dict__) test/units/inventory/test_host.py:24: in <module> from ansible.module_utils.tests import unittest E   ImportError: No module named tests ```::Not sure why, but I'm seeing unit test failures on these (py2.7 and py3.6): ``` ____________________________________________________________________________ TestRecursiveFinder.test_from_import_six _____________________________________________________________________________ self = <test_recursive_finder.TestRecursiveFinder object at 0x7ff40d32c250> finder_containers = FinderContainers(py_module_names=set([('six',)]), py_module_cache={}, zf=<zipfile.ZipFile object at 0x7ff40d33c410>) def test_from_import_six(self, finder_containers): name = 'ping' data = b'#!/usr/bin/python\nfrom ansible.module_utils import six' recursive_finder(name, data, *finder_containers) assert finder_containers.py_module_names == set((('six',),)) assert finder_containers.py_module_cache == {} >       assert frozenset(finder_containers.zf.namelist()) == frozenset(('ansible/module_utils/__init__.py', 'ansible/module_utils/_six.py')) E       assert frozenset(['a...tils/six.py']) == frozenset(['an...ils/_six.py']) E         Extra items in the left set: E         'ansible/module_utils/six.py' E         Extra items in the right set: E         'ansible/module_utils/_six.py' E         'ansible/module_utils/__init__.py' E         Full diff: E         - frozenset(['ansible/module_utils/six.py']) E         + frozenset(['ansible/module_utils/__init__.py', 'ansible/module_utils/_six.py']) test/units/executor/module_common/test_recursive_finder.py:118: AssertionError _______________________________________________________________________________ TestRecursiveFinder.test_import_six _______________________________________________________________________________ self = <test_recursive_finder.TestRecursiveFinder object at 0x7ff40d33c490> finder_containers = FinderContainers(py_module_names=set([('six',)]), py_module_cache={}, zf=<zipfile.ZipFile object at 0x7ff40d33c710>) def test_import_six(self, finder_containers): name = 'ping' data = b'#!/usr/bin/python\nimport ansible.module_utils.six' recursive_finder(name, data, *finder_containers) assert finder_containers.py_module_names == set((('six',),)) assert finder_containers.py_module_cache == {} >       assert frozenset(finder_containers.zf.namelist()) == frozenset(('ansible/module_utils/__init__.py', 'ansible/module_utils/_six.py')) E       assert frozenset(['a...tils/six.py']) == frozenset(['an...ils/_six.py']) E         Extra items in the left set: E         'ansible/module_utils/six.py' E         Extra items in the right set: E         'ansible/module_utils/_six.py' E         'ansible/module_utils/__init__.py' E         Full diff: E         - frozenset(['ansible/module_utils/six.py']) E         + frozenset(['ansible/module_utils/__init__.py', 'ansible/module_utils/_six.py']) test/units/executor/module_common/test_recursive_finder.py:126: AssertionError ____________________________________________________________________ TestRecursiveFinder.test_import_six_from_many_submodules _____________________________________________________________________ self = <test_recursive_finder.TestRecursiveFinder object at 0x7ff40d33c790> finder_containers = FinderContainers(py_module_names=set([('six',)]), py_module_cache={}, zf=<zipfile.ZipFile object at 0x7ff40d33ca10>) def test_import_six_from_many_submodules(self, finder_containers): name = 'ping' data = b'#!/usr/bin/python\nfrom ansible.module_utils.six.moves.urllib.parse import urlparse' recursive_finder(name, data, *finder_containers) assert finder_containers.py_module_names == set((('six',),)) assert finder_containers.py_module_cache == {} >       assert frozenset(finder_containers.zf.namelist()) == frozenset(('ansible/module_utils/__init__.py', 'ansible/module_utils/_six.py')) E       assert frozenset(['a...tils/six.py']) == frozenset(['an...ils/_six.py']) E         Extra items in the left set: E         'ansible/module_utils/six.py' E         Extra items in the right set: E         'ansible/module_utils/_six.py' E         'ansible/module_utils/__init__.py' E         Full diff: E         - frozenset(['ansible/module_utils/six.py']) E         + frozenset(['ansible/module_utils/__init__.py', 'ansible/module_utils/_six.py']) test/units/executor/module_common/test_recursive_finder.py:134: AssertionError ```::",6f155799301423260257ba4b9b899e7d6d80f6c2::2562e38b75e4aa46d78810b9b0735712292412b9::
https://api.github.com/repos/ansible/ansible,22845,fix_stderr_false_return_value::devel,0,merged,affects_2.4::bug::c:plugins/action::core_review::module::networking::,"##### SUMMARY exit_json(... stderr=False) has been used in `uri.py` forever. It isn't correct, but it is provoked by a regression introduced in [this commit](https://github.com/ansible/ansible/commit/c86a17b7a003ac22c173cfa832ed2368e15015e6#diff-69a29e19a76e98587550dab380483594R740) by @bcoca, probably inspired by #16294. This is really sneaky. I fixed `uri.py`. For a belt-and-suspenders fix, certainly a boolean shouldn't be passed, but some defensive coding will prevent this from being hit by any other modules. I tried to unit test this (see commit+revert). But testing `_execute_module` is way too hairy for me. This needs to be backported to 2.3. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME `lib/ansible/modules/network/basics/uri.py` `lib/ansible/plugins/action/__init__.py` ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel ``` ##### ADDITIONAL INFORMATION Provoking this requires using `creates` or `removes` and being skipped. That's why it wasn't caught more quickly.I know, right? But if `data['stdout']=False`, then `data.get('stdout', u'')` returns `False`. That's why I added a comment- it isn't intuitive. The next line is `txt.splitlines()`, which doesn't work on `False`. I think this would also fail for `None`. It took some REPL work to make sure I understood what was happening.::just realized same ... really hate how stupid this corner case is::",f18dc99a1d9a192658358e7572d9063201c30d87::e62d8166cc9e380ad0d5744e7f2cec585bd63a67::
https://api.github.com/repos/ansible/ansible,22769,vrf_interface::devel,0,merged,affects_2.4::bug::cisco::community_review::module::networking::nxos::owner_pr::,"##### SUMMARY Since this module uses regex and CLI output to parse interface configuration, it doesn't work well when using incomplete interface names like ""eth2/1"" instead of ""ethernet2/1"". This patch fixes it. This should also be backported to previous versions. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME nxos_vrf_interface ##### ANSIBLE VERSION ``` ansible 2.4.0 config file = configured module search path = Default w/o overrides python version = 2.7.6 (default, Oct 26 2016, 20:30:19) [GCC 4.8.4] ```",d0fae9f204d704f51baa8ff83bc4351d36054a16::
https://api.github.com/repos/ansible/ansible,22768,fix/cs_loadbalancer_rule::devel,0,merged,affects_2.3::affects_2.4::bug::cloud::cloudstack::community_review::module::owner_pr::,"##### SUMMARY get_zone() is special, as it always returns a zone (default zone) even if no zone param is given. This makes sense for many use cases. ##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME cs_loadbalancer_rule ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.3 ``` ##### ADDITIONAL INFORMATION Needs backport to 2.3, tests in #20552 (WIP)",d1e8ef79ea2b5f22d875f0e468e6ce0a4e0ab6e8::
https://api.github.com/repos/ansible/ansible,22242,vlan::devel,0,closed,affects_2.2::bug::cisco::module::needs_rebase::needs_revision::networking::nxos::owner_pr::stale_ci::,"##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME nxos_vlan ##### ANSIBLE VERSION ``` ansible 2.2.1.0 config file = configured module search path = Default w/o overrides ``` ##### SUMMARY I don't know what is the best way to do it, but this fix needs only to be backported to stable-2.2 without being applied to devel.",50a1e7a71960dc1cc8a3a3c8d1c45a1c8d4b62fa::
https://api.github.com/repos/ansible/ansible,22123,stable-2.1::stable-2.1,0,closed,affects_2.3::c:cli/::c:constants::,Fixes #22087 on 2.1 branch by backporting devel merged PR #22103 Signed-off-by: Sorin Sbarnea <ssbarnea@redhat.com>,42a9a63dfe9a7b4a4de79a6db554f3e2cb9659d5::
https://api.github.com/repos/ansible/ansible,22122,stable-2.2::stable-2.2,0,closed,affects_2.3::c:cli/::c:constants::,Fixes #22087 on 2.2 branch by backporting devel merged PR #22103 Signed-off-by: Sorin Sbarnea <ssbarnea@redhat.com>,3ed646d64596c1cf82ebaecbde3056b13eddcc8f::
https://api.github.com/repos/ansible/ansible,21663,vmware_inventor_skip_perm::devel,0,merged,affects_2.3::bug::c:inventory/contrib_script::cloud::vmware::,"##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> vmware_inventory.py ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` ansible 2.2.1.0 (backported vmware_inventory.py from devel) ``` ##### SUMMARY <!--- Describe the change, including rationale and design decisions --> permit to skip nopermission error on guest subkeys notify user in debug mode example use case: you have rights on guest but you cannot see the VMWare host <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> <!-- Paste verbatim command output below, e.g. before and after your change --> ``` 2017-02-20 11:41:39.098261 get facts for vm_guest_001 2017-02-20 11:41:39.311693 Skipping method host (NoPermission) ```",39fac1c825590f48953e181efa8e326efb44d032::
https://api.github.com/repos/ansible/ansible,21652,FixBug#21557::devel,0,merged,affects_2.3::bug::community_review::module::networking::,##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME - modules/network/dellos9/dellos9_facts ##### ANSIBLE VERSION ``` ansible 2.2.1.0 config file = configured module search path = Default w/o overrides ``` ##### SUMMARY Handled dellos9_facts module crash with IPV6 configuration. Playbook executes successfully and retrieves OS9 facts. These fixes need to go into `devel` as well as being backported to ‘2.2' [Fixes#21557](https://github.com/ansible/ansible/issues/21557),2ace62e850235cddf819178c2d0b68ea35b902d7::
https://api.github.com/repos/ansible/ansible,21651,FixBug#5534::devel,0,merged,affects_2.3::bug::community_review::module::networking::,"##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME - modules/network/dellos9/dellos9_command - modules/network/dellos6/dellos6_command - modules/network/dellos10/dellos10_command ##### ANSIBLE VERSION ``` ansible 2.2.1.0 config file = configured module search path = Default w/o overrides ``` ##### SUMMARY Handled command prompt in dellos command modules. User can specify ""yes"" or ""no"". Based on that action will be taken. These fixes need to go into `devel` as well as being backported to ‘2.2' [Fixes#5534](https://github.com/ansible/ansible-modules-core/issues/5534)",afb01d595e1cdd384a3de8ab3239eed6afe01c7c::0fa670fa1be2fe65b5648f4d5bfe96a82649e561::
https://api.github.com/repos/ansible/ansible,21491,vault-pass-nonutf8-2.2-compat::stable-2.2,1,merged,affects_2.3::bug::c:cli/adhoc::c:cli/playbook::c:cli/vault::c:parsing/vault/::c:parsing/yaml/::,"##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME vault password handling.  Various files have implementation details ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.2 ``` ##### SUMMARY Retain vault password as bytes in 2.2 Prior to 2.2.1, the vault password was read in as byes and then remained bytes all the way through the code.  A bug existed where bytes and text were mixed, leading to a traceback with non-ascii passwords.  In devel, this was fixed by changing the read in password to text type to match with our overall strategy of converting at the borders.  This was backported to stable-2.2 for the 2.2.1 release. On reflection, this should not have been backported as it causes passwords which were originally non-utf-8 to become utf-8.  People will then have their working 2.2.x vault files become in-accessible. this commit pipes bytes all the way through the system for vault password.  That way if a password is read in as a non-utf-8 character sequence, it will continue to work in 2.2.2+.  This change is only for the 2.2 branch, not for 2.3 and beyond. Why not everywhere?  The reason is that non-utf-8 passwords will cause problems when vault files are shared between systems or users.  If the password is read from the prompt and one user/machine has a latin1 encoded locale while a second one has utf-8, the non-ascii password typed in won't match between machines.  Deal with this by making sure that when we encrypt the data, we always use valid utf-8. Fixes #20398",da9b7a055352d1200956fca6cd864e403bbb5379::
https://api.github.com/repos/ansible/ansible,21181,feature::devel,0,closed,affects_2.3::bug::cisco::community_review::module::networking::nxos::owner_pr::,##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME nxos_feature ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` ansible 2.2.1.0 config file = configured module search path = Default w/o overrides ``` ##### SUMMARY This needs to be backported to 2.2,e169b61ac3bde6144c71197d096d9bb7d7ebcecc::
https://api.github.com/repos/ansible/ansible,20934,from-select-to-selectors::devel,0,merged,WIP::affects_2.3::c:plugins/connection::c:plugins/connection/local::c:plugins/connection/ssh::feature::python3::,"##### ISSUE TYPE - Feature Pull Request ##### COMPONENT NAME lib/ansible/plugins/connection/ssh.py ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel (possibly 2.4) ``` ##### SUMMARY Select suffers from many problems including running out of file descriptors with no means to tell ahead of time.  Use a backport (bundled if necessary) version of the selectors module from python3.5 in order to use EPoll, Kqueue, or other, more modern OS feature for polling if it's available. This PR seems to work but needs to see testing before we're ready to push it into 2.3.0.  If it doesn't make the cutoff for 2.3.0 but no unfixable problems are found, it will make its way into the devel tree for 2.4.x. Fixes #14143Might want to do a Python version detection here as Python 3.4 does not implement PEP 475, should use selectors2 for 3.4. PEP 475 is only implemented by Python 3.5+::Ansible already states that it does not support 3.4, python 3 support targets >=3.5::Yes this was clarified to be by @abadger. :) Disregard my above comment!::",45eec31f05b7fab4d6a854d10ff2f81dafe7a12d::
https://api.github.com/repos/ansible/ansible,20850,portchannel::devel,0,merged,affects_2.3::bug::cisco::community_review::module::networking::nxos::owner_pr::,##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME nxos_portchannel ##### ANSIBLE VERSION ``` ansible 2.2.1.0 config file = configured module search path = Default w/o overrides ``` ##### SUMMARY Solves #20684 . This only need to be backported to 2.2 .,86b1254a1cad91697ff07d3939057c6c6da6dae4::
https://api.github.com/repos/ansible/ansible,20756,win_ping-cleanup::devel,0,merged,affects_2.3::feature::module::needs_revision::windows::,"##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Feature Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> win_ping ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> v2.3 ##### SUMMARY <!--- Describe the change, including rationale and design decisions --> <!--- If you are fixing an existing issue, please include ""Fixes #nnn"" in your commit message and your description; but you should still explain what the change does. --> Small cleanup and backport `ping` functionality. If you thought `win_ping` could not get any better, try this ! :-P",b146fee162400b979f70641b5299dc2d16aad657::
https://api.github.com/repos/ansible/ansible,20645,bugs::devel,0,merged,affects_2.3::bug::cisco::community_review::module::networking::nxos::owner_pr::,"##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME nxos_interface_ospf, nxos_vrf_interface ##### ANSIBLE VERSION ``` ansible 2.3.0 config file = configured module search path = Default w/o overrides ``` ##### SUMMARY Solves #19088 This  need backporting to stable-2.2 as well.",21e0666a9499fba7d7850902dab800e028fa5f67::9f3d3322212376822bd9e06a1b66895032e84fa7::
https://api.github.com/repos/ansible/ansible,20441,fixes/20332::devel,0,closed,affects_2.3::bug::c:plugins/shell::needs_revision::,"##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME `plugins/shell/__init__.py` ##### ANSIBLE VERSION devel and 2.2.1 ##### SUMMARY The PR https://github.com/ansible/ansible/pull/18551 breaks ansible in some specific configurations, because `~` is not always expanded into `$HOME`. The issue has already been discussed in https://github.com/ansible/ansible/issues/20332 This fix will also need to be backported to the 2.2.1 branch. The 2.2 branch can be tested with: `pip install git+git://github.com/MiLk/ansible.git@fixes/20332-2.2`. The 2.3 branch can be tested with: `pip install git+git://github.com/MiLk/ansible.git@fixes/20332`.",fa705406b108c457ca34f490cfeee52becef15f6::
https://api.github.com/repos/ansible/ansible,20334,vpc_resource_tags::devel,0,closed,affects_2.3::aws::bug::cloud::deprecated::module::needs_rebase::needs_revision::pep8::stale_ci::support:certified::support:community::test::,##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME ec2_vpc ##### ANSIBLE VERSION ``` ansible 2.3.0 (devel b8dd4dd52b) last updated 2017/01/17 16:30:08 (GMT +1000) config file = configured module search path = Default w/o overrides ``` ##### SUMMARY It makes little sense to require resource tags if you have the VPC ID of a VPC that you wish to delete. Any reason you are not using the built in `required_one_of` function for this?::Because it's not at all documented and I'd forgotten about its existence? (even the ec2 helper functions are better documented than `required_one_of`). I've updated the PR now to use it.::It's on my to do list to get this stuff documented.::Probably should add something to the docs. `Prior to 1.7 and after ...`? Will this be backported?::Would a required_if for state absent be better? It's weird to require one of these for creation if you might just plan to use vpc_id to then delete it.::Line not needed?::,a0a6fc33011ca025d166c139a8fbbf2a517dfd10::27f799ee66239684e528b2681b7907bb6d53e193::
https://api.github.com/repos/ansible/ansible,20050,fix/2.3/cs_iso_absent_async::devel,0,merged,affects_2.3::bug::cloud::cloudstack::module::owner_pr::,##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the module/plugin/module/task --> ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` 2.3 ``` ##### SUMMARY Fix async job for state=absent. No backport because new param and an improvement only. fixes #20040,3a0bf7f899556fc65a8b8630bab23d613eda8da8::
https://api.github.com/repos/ansible/ansible,18552,mount-remount-tests::devel,0,merged,bug::,##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME tests for the mount module ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel (2.2 backport) ``` ##### SUMMARY test that changing flags on a mounted filesystem works.  There were errors in it before.,8adbc2fee242576085d069ff01d851e1ab8d76c8::da87c9bab56463ca803ecbface1a8c857c8e68f5::
https://api.github.com/repos/ansible/ansible,18373,loader_get_file_contents_bytes_18355::devel,0,merged,P2::affects_2.2::affects_2.3::bug::,"##### ISSUE TYPE <!--- Pick one below and delete the rest: --> - Bugfix Pull Request ##### COMPONENT NAME <!--- Name of the plugin/module/task --> lib/ansible/parsing/dataloader.py lib/ansible/inventory ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` ansible 2.3.0 (loader_get_file_contents_bytes_18355 f3b9b5cfae) last updated 2016/11/04 17:35:53 (GMT -400) lib/ansible/modules/core: (detached HEAD 2584fca0ae) last updated 2016/11/04 13:15:56 (GMT -400) lib/ansible/modules/extras: (detached HEAD a1dcbf9ce5) last updated 2016/11/04 13:15:56 (GMT -400) config file = /home/adrian/ansible/ansible.cfg configured module search path = Default w/o overrides ``` ##### SUMMARY This is a fix for devel. Will need to be backported to stable-2.2 Make DataLoader._get_file_contents return bytes This is first part of fix for #18355 The issue #18355 is caused by a change to inventory to stop using _get_file_contents so that it can handle text encoding itself to better protect against harmless text encoding errors in ini files (invalid unicode text in comment fields). So this makes _get_file_contents return bytes so it and other callers can handle the to_text(). The data returned by _get_file_contents() is now a bytes object instead of a text object. The callers of _get_file_contents() have been updated to call to_text() themselves on the results. Fixes #18355 (partially) Fix bug (#18355) where encrypted inventories fail Previously, the ini parser attempted to work around ini files that potentially include non-vailid unicode in comment lines. To do this, it stopped using DataLoader._get_file_contents() which does the decryption of files if vault encrypted. It didn't use that because _get_file_contents previously did to_text() on the read data itself. _get_file_contents() returns a bytestring now, so ini.py can call it and still special case ini file comments when converting to_text(). That also means encrypted inventory files are decrypted first. Fixes #18355",1493375d829fe111505366cda4b4b80f94c35a3b::e34b0da338ff71bff199eaab1fa15fb5ba20b455::
https://api.github.com/repos/ansible/ansible,18226,dnf-integration-tests::devel,0,merged,packaging::,##### ISSUE TYPE - Test Pull Request ##### COMPONENT NAME test/integration/target/dnf ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel ``` ##### SUMMARY Integration tests for dnf. Note that this requires https://github.com/ansible/ansible-modules-extras/pull/3309   a feature to install the python bindings for dnf if they are not installed on the box. That's a new feature so if we backport the tests we need to comment out a few tests at the very beginning of this new role.,fedb055659b10df437d7093e737e22e8dfd4caa1::
https://api.github.com/repos/ansible/ansible,18045,unicode-become-password-fixes::devel,0,merged,affects_2.1::affects_2.2::affects_2.3::python3::,"##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME - play_context.py   make_become_cmd() - connection/local.py - connection/paramiko_ssh.py ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel, 2.2, 2.1 (but not known if this fix can be backported to 2.1) ``` ##### SUMMARY Fixes for non-ascii become passwords on - both python2 and python3, - local and paramiko_ssh (ssh tested working with these changes) - sudo and su Fixes #16557",5c16ab8de51074eb477b90f1a1569a63e5d72bd0::
https://api.github.com/repos/ansible/ansible,18032,python3-porting-update::devel,0,merged,affects_2.2::affects_2.3::docs::,"##### ISSUE TYPE - Docs Pull Request ##### COMPONENT NAME dev_guide ##### ANSIBLE VERSION <!--- Paste verbatim output from “ansible --version” between quotes below --> ``` devel, 2.2 (but no need to backport) ``` ##### SUMMARY One of the requests from the contrib summit was more information on how to port to Python-3.  Added some of the scenarios we've encountered so far. Also update the date that Python2.4 support will be dropped to say Ansible-2.4 will no longer have python-2.4 support.",b8765d3d22640746fea0f53f0a5214d54a474458::
https://api.github.com/repos/ansible/ansible,17644,fix-ipv6-urls-connect::devel,0,closed,affects_2.3::bug::c:module_utils/::c:module_utils/urls::module_util::needs_info::needs_rebase::needs_revision::needs_template::stale_ci::support:core::,"ansible.module_utils.urls creates socket with AF_INET family, which doesn't work for IPv6-only machine. this breaks 2.4 compatibility as it was added in 2.6 ::@bcoca is there a common practice to backport such things? Should I just copy it to `ansible.module_utils.urls`? https://github.com/python/cpython/blob/master/Lib/socket.py#L688 ::@jimi-c made the following suggestion: Since we're going to be stopping support of python-2.4 in new versions of Ansible in April of next year, perhaps it makes sense to use create_connection() if  it's available, otherwise using socket.connect().  Would also need a note that the code won't work with ipv6 on python-2.4. ::Fixed in 4e19451878779023bba0679baa35baba1d9e96d7 ::I'm not really a fan of this approach, and generally speaking, we have tried to stay away from it. I am more in favor of just doing: ``` try: sock = socket.create_connection(address) except AttributeError: sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect(address) ``` ::And I'm definitely is not fan of abusing try/except for non-exceptional situations. Your code would raise and handle exception every time on python 2.4. This is not something that could be called ""python 2.4"" support... ::I don't have a huge preference here but I think @sivel's code is slightly better. We do use try: except (Ask forgiveness) quite a lot for compatibility between python versions.  Asking forgiveness seems to be the accepted idiomatice way to write python versus look before you leap. Since this is for python-2.4 only it makes even more sense.  In the large picture there's only a few users running python-2.4 and we're going to be getting rid of support for it in less than a year. Probably the major problem with the approach currently in the code is that it creates an ambiguity in what happens when create_connection() is called that isn't apparent when you are looking at the caller.  This can be worked around by adding the new function under a different name and then putting the conditional into the calling code to select which of the two functions to call or putting the condition and the implementing code into the caller (The latter repeats itself once but for this specific case is probably okay -- it adds less lines of code which often indicates that the function can be considered too trivial to warrant being moved outside the caller).  That will be slower for the common case of operating on non-python-2.4 (exceptions are faster than conditionals when following the happy path) but may be a good compromise.  @sivel is the exception vs conditional the major thing you're looking at or the obfuscation of create_connection's meaning and the relative burden between caller and called? ::Sorry for the slow response, I am concerned both with pythonic implementations, speed and obfuscation combined. Creating a function named the same as the original method, by which it is hard to tell in the calling location which is happening will often lead to confusion. hasattr can also sometimes work in strange ways such as what is described in https://hynek.me/articles/hasattr/ Additionally, with hasattr you are performing the lookup multiple times, instead of just trying to use it and handle the exception.  In the majority of cases, just trying to use it and handling the exception will be the faster way. ::I don't create a function named the same as original method, I just use it if it is available, and define a fallback if it is not available (in which case there is no original method). For python>=2.6 this function would be the original method. There is no confusion. The problem with `hasattr` is not a problem since we use it not on a custom class instance but on a module. Also, it doesn't perform lookup multiple times, since it is called on module import.::Handling exception each time on python2.4 definitely would not be the faster way. The try/except block also has its own little overhead, so it would be slower even on python>=2.6.::I'm going to leave this in needs_revision.  My requirements for considering this change have been outlined above.::",80e16d9f08ef424010693866fdea7b8f5358cee9::
https://api.github.com/repos/ansible/ansible,17524,net_cleanup::devel,0,merged,networking::,##### ISSUE TYPE - Bugfix Pull Request ##### COMPONENT NAME `module_utils/openswitch.py` ##### ANSIBLE VERSION ``` ansible 2.2.0 (net_cleanup 097f913df0) last updated 2016/09/12 11:48:02 (GMT -400) lib/ansible/modules/core: (detached HEAD 1a0e15094f) last updated 2016/09/12 10:08:07 (GMT -400) lib/ansible/modules/extras: (detached HEAD f83aa9fff3) last updated 2016/09/09 15:54:31 (GMT -400) config file = configured module search path = Default w/o overrides ``` ##### SUMMARY Addresses #17415 Also backport get_config signature change for vyos,097f913df06a5dc9ef2ff34e5a78fb706769b483::
https://api.github.com/repos/ansible/ansible,15834,fix_pkgin_detection::devel,0,merged,bsd::bug::,"##### ISSUE TYPE - Bugfix Pull Request ##### ANSIBLE VERSION ``` $ ansible --version ansible 2.2.0 (fix_pkgin_detection 1d779f3311) last updated 2016/05/12 17:24:10 (GMT +200) lib/ansible/modules/core: (detached HEAD 9dfed7c849) last updated 2016/05/12 17:07:30 (GMT +200) lib/ansible/modules/extras: (detached HEAD 2665acb257) last updated 2016/05/12 17:07:30 (GMT +200) config file = /home/misc/.ansible.cfg configured module search path = Default w/o overrides ``` ##### SUMMARY Since this is now the default package manager, it got moved to another location on Netbsd : ``` netbsd# type pkgin pkgin is a tracked alias for /usr/pkg/bin/pkgin netbsd# uname -a NetBSD netbsd.example.org 6.1.4 NetBSD 6.1.4 (GENERIC) amd64 ``` But since the package manager is also used outside of NetBSD, we have to keep the /opt/local path too. Also, this is broken on 2.1 too, and should be backported.",1d779f331187c1229a931057c7696d5a11c6049a::
https://api.github.com/repos/ansible/ansible,14336,fix-eval-json-booleans-1.9::stable-1.9,0,merged,,"We define 'false', 'true' and 'null' as variables so that python eval() recognizes them as False, True and None. This is a backport of a fix from 2.0.0.2 which also affects 1.9.4 (See issue #14291 and PR #14293) This fixes #14291 for 1.9.4.",b6e6c52b125192c90d47b63374d7f21b89912ba6::
https://api.github.com/repos/ansible/ansible,13808,chouse::stable-1.9,0,merged,bug::,"In the mailing list there is a thread (https://groups.google.com/forum/#!topic/ansible-project/L2H6KSAF_o0) of users having issues with ansible-galaxy behind a proxy. In my testing I can get it to work, but only with v2.0 using the --ignore-certs flag. The ignore_certs option gets passed to open_url() as validate_certs=False. This PR backports the same logic to stable-1.9.",f2a32566d516edd4f42941b9c512eb982b8ae22d::007d05c4a1bf9de61307fa670593647f55e35f74::bb993f3aea964de83806f49bab2565bc4e4b0e96::
https://api.github.com/repos/ansible/ansible,13694,fix/case-insensitivity::devel,0,merged,bug::cloudstack::,"cloudstack: fix has_change reports changed for case insensitivity values For some values, the API returns capitalized values while you used lower case ones. And for most values the API handles the values case insensitive. Which means, we would handle it as a change even thought for CloudStack it is not. There are some exceptions, we will handle them later in 2.1. For now, compare the string values case insensitive produces less unwanted changes. Needs to be backported to stable-2.0",766738ef7cdc9c593ae8cfd7bf6458bef9b68969::
https://api.github.com/repos/ansible/ansible,10639,module_utils_facts_1_9::stable-1.9,0,merged,P2::bug::,"@bcoca stable-1.9 backport of https://github.com/ansible/ansible/pull/10628, I hadn't realized that devel was 2.0 based now when I submitted the first PR",626b2fc7ef85773ceff647fc1567bfe4e5a0b419::
https://api.github.com/repos/ansible/ansible,9545,fix-ssh-sudo-hang::devel,0,closed,bug::,Use Python 3.2 backport of subprocess to prevent ssh processes from hanging indefinitely. See #9544.,225efb6e7797ebf562d04b96d8058da2f368633b::3e99c4a815009650d22c37c0e3e83c9523ef1743::
https://api.github.com/repos/ansible/ansible,8898,py24-socket-compat::devel,0,closed,P1::bug::net_tools::,"`module_utils/urls.py` uses `socket.create_connection` for HTTPS connections, however `socket.create_connection` was not added until python 2.6.  This results in tracebacks on Python < 2.6 such as RHEL 5. ``` File ""/home/sivel/.ansible/tmp/ansible-tmp-1409930019.36-92123499720727/get_url"", line 2210, in ? main() File ""/home/sivel/.ansible/tmp/ansible-tmp-1409930019.36-92123499720727/get_url"", line 222, in main tmpsrc, info = url_get(module, url, dest, use_proxy, last_mod_time, force) File ""/home/sivel/.ansible/tmp/ansible-tmp-1409930019.36-92123499720727/get_url"", line 146, in url_get rsp, info = fetch_url(module, url, use_proxy=use_proxy, force=force, last_mod_time=last_mod_time) File ""/home/sivel/.ansible/tmp/ansible-tmp-1409930019.36-92123499720727/get_url"", line 2196, in fetch_url r = urllib2.urlopen(request, None) File ""/usr/lib64/python2.4/urllib2.py"", line 130, in urlopen return _opener.open(url, data) File ""/usr/lib64/python2.4/urllib2.py"", line 358, in open response = self._open(req, data) File ""/usr/lib64/python2.4/urllib2.py"", line 376, in _open '_open', req) File ""/usr/lib64/python2.4/urllib2.py"", line 337, in _call_chain result = func(*args) File ""/home/sivel/.ansible/tmp/ansible-tmp-1409930019.36-92123499720727/get_url"", line 1861, in https_open return self.do_open(CustomHTTPSConnection, req) File ""/usr/lib64/python2.4/urllib2.py"", line 1089, in do_open h.request(req.get_method(), req.get_selector(), req.data, headers) File ""/usr/lib64/python2.4/httplib.py"", line 810, in request self._send_request(method, url, body, headers) File ""/usr/lib64/python2.4/httplib.py"", line 833, in _send_request self.endheaders() File ""/usr/lib64/python2.4/httplib.py"", line 804, in endheaders self._send_output() File ""/usr/lib64/python2.4/httplib.py"", line 685, in _send_output self.send(msg) File ""/usr/lib64/python2.4/httplib.py"", line 652, in send self.connect() File ""/home/sivel/.ansible/tmp/ansible-tmp-1409930019.36-92123499720727/get_url"", line 1852, in connect sock = socket.create_connection((self.host, self.port), self.timeout) AttributeError: 'module' object has no attribute 'create_connection' ``` This pull request backports `create_connection` from python 2.7 (not python 2.6 due to create_connection being enhanced in python 2.7) and made compatible with python < 2.7. Additionally an `__init__` method was added to `CustomHTTPSConnection` to ensure that we have the required instance attributes for python < 2.6. I have tested these changes with Python 2.4 (RHEL5), Python 2.6 (RHEL5) as well as Python 2.7 (Mac OS X 10.9)",05084f21dd2e74079802664b4cd6dbd1f7e86f52::
https://api.github.com/repos/ansible/ansible,7440,upgrade-release::devel,0,merged,bug::needs_revision::packaging::,"Without this, the following task: ``` - name: Try to run ""apt-get dist-upgrade -t wheezy-backports"" apt: upgrade=dist default_release=wheezy-backports ``` would run ""apt-get dist-upgrade"", because the default_release parameter is ignored for upgrade().",0dea177e77aebe367d51de3519bde105aa2fcd5a::
https://api.github.com/repos/ansible/ansible,4927,intellectronica/docker-identify-private-repos-backport::devel,0,merged,docker::,"When using repositories other than the main one at docker.io, the image name contains the repo name (which itself contains "":"" as a separator between domain and port). We don't really care about it here, so just get rid of it before looking at the image name. This is a backport from https://github.com/cove/docker-ansible/ as per @cove's request in https://github.com/cove/docker-ansible/pull/19#issuecomment-28628426",8a39e0a615319e3a5c9db576a0746cbc3f42ac8e::
https://api.github.com/repos/ansible/ansible,2070,fix_bug_in_user_module::release1.0,0,closed,,"Bugfix was accepted into devel branch (https://github.com/ansible/ansible/pull/2061), maybe it's worth backporting it to 1.0. Here's a copy of the pull request message. Remote execution of module ""user"" produced this traceback: Traceback (most recent call last): File ""/root/.ansible/tmp/ansible-1360686502.37-80297117549296/user"", line 1665, in main() File ""/root/.ansible/tmp/ansible-1360686502.37-80297117549296/user"", line 864, in main module.fail_json(name=name, msg=err, rc=rc) NameError: global name 'name' is not defined Patch fixes it, and 'make tests' passes all tests but one (which is skipped).",7b0a3c3f2d6c67cef52b51d002a7b974867e13d7::92fd1c65780405fb45a8d4f2f7ac99341f7b19e6::99a8e95c9879be3465912b057fd4a1e62182643b::ccc903216b2aa6650bc056eccf661ec88834904b::980ffde192dabe4db4779ab76f1ce61a31f731a1::cc6fc149c2bd3c0d1182088ed7a96700cbc40749::a1ea36695724ff07aab84ab8ae40f12316fb7195::cd7c3e7b91403e18caa19c540d5f68b1823afe98::318e3302fbefdb644cb9c64dad4ee10e239da0ee::0ae7f996f59b3db0b2acec84f04c1dee0c1e2832::78ecc45d4d40c524aab8544abc179cf1a504e13f::fe5ab64b623cbb0d3116184c7e757aa8ee293fc7::1e3df3b5ab786557e104bbe55258e299b831b09f::cde5b4b80cfcd5d130d2614cfc4f000ab711752c::bf088a50aad5fbb33eb8fd0eb2d3ed52f867108d::dd91452eda79cca5fc9ae9b2effb33b934e5b97e::f4dddfdbabf17c37ff26beb3294d722205b9cda0::5cdc25ec47ff889569dacbfd26b3366bf9dd3c13::857ccf7f6cfed4e8663d635c119f8683c9ee09e0::7d9b29d48a99584a5d0a89edf924cdf66d5e8ca2::f7aaa5ccc5973b2c2f97dbd57be13daa6801f91c::42daffdb3838c960f661111fca13594ab76f6192::39c8becfc87012f9241a6c0a83aaeb4bf73e73c5::0f44ba5a5ad999cba9e9d9170bc7a01b44b81d47::ebd2ed72f79c40509575aac6bf037eb8349e088b::a79373f6b278f61c5c2fb8c46b84147d56d02c96::9a34c20cc5f9286a7f8d50072129c5cc48e2ffd7::c1e0f0b4dbb3b105852b361051d7f0fa942e412f::3fe0aa9806ab39e2aed71295c0d9adcf89b2cfb1::dc5c430f4535ae8b9f8c70939935f1ca56b98cd9::a025cfcb33b2425db3f4163bb66bf27e51a9f54d::d8d1f2cd7a8571350847eec247c087d734f7258e::28cf95e5855ad220e113f7a90c2a3856fb871419::fed82c2188828466202935e98e808a74903346d4::e25b2fb41c569301b10e9bd70872dc20c5a41da0::06f7858622c9e29b0eb41eeeaaf93927cb0ec346::5478dab4d75c600c42dc77f67a83369eac832b73::1becc665b25da110f845e2ecfb97fd744bd06536::8cf268441e82da0348020bee344d8728a9f41ea8::093a876a5761f981eeb5998500ceb91d83123535::c1b63d15005ebc316b4209ae256787f692fa64ec::7a40ed41f70663d108a90b2c4a8ec7c596e499b8::ac716ac9cace2b290c4c6dd5365f8e15521bca8e::106fb10dabd60994f74d5ce6ab43c2e7c19d9ee8::7a8b27f716ab98400175e13bdc767e728ad2d558::924e9ffe8b9ec8d8f2b38aec7b963ecd4b168ed5::05a3876dc97c9f74f09d28cad4ef7442e4abe156::82011b043af2643a843ce9462834001300720972::d5e63332fede8dc50cd7bf7a34f58daef4121fbf::dab31116b3727bc4a34bda04ab62c0fa07393651::ded3b954a23fe03671e531c10cce7599e0e093e1::43c9a665e102d14b05eb3b99e13c1097d7d28a91::b0932e1638b65f64335c19bd24d5d8fbe6396a2b::98f0a9210efae32b54070c9775694509dcf47730::21a5c5592142f58070a11c8cf3f0c5880a1734df::9174c52b1d04d8c09b07d45902171bc4cb47984d::7a49230e85b14b92e4cb3f36ff53d3432a77b36f::bc709e7b6703ba7fc9a46f69c204f549d3511ed4::70d5dad72611871beb97f27ec4c02d88848eaae8::ffd4ae11b87b648165d1c918ad7680cd13852aa1::312ba593fdb47ae8b3448f49ced1fc23cafc1ad8::c3cfb450a99275224cfc6454a896af0f5d228e44::9113c01e372a54067689eb7ae23dde45448ef937::7d43865e13b48e6f28de04e235dde7af7e00e365::dddfeac9c418c079f62a48b4c2419adf01dfcba8::dd9e3430e4679fe2eef82248f35a207953692419::663052dd16b4a5efc9a04338462080dfe530bb35::19f3cf45f40c5725289e90f569fb42eadd0628ee::1205bbe19513542404e285608935bf154897eeab::f3305564e2cf4eb576a1454e2f82d62b522404c8::3d6993221e5f317d393643905085aed627cbe430::a9162a86f2e2b678eaef04501339c037bfc18319::23bffc5f25a760f9e8be54301afbc6a8a0809900::2ccfc8d2b661cd21b50ff8453e81279216b2717f::6266571c159724e110cf9f8786320107eba15a76::d102f04ffc4da1b564484fea6993b2ac127a06c9::aebacdb2d7b5570345cd56f663a3407f6d1e8854::44084a83a4377720a9d23d0c5ce35a6d4ad57517::50495680d58a72b96a62647233400a5bcf279c25::171a01deacd4cdc125252aa21291fbf6ded0ae0d::0e8627b7e818eec3ce52c17c1fc21c98edd0a1bc::e231708260c7cb76962f985e95dc3c509d187d53::e564de3983939a2f8fa8378dc3cbd51a084024c1::ca5f52b825b0aa986cfb87b5345a9f7925ba1b40::1163c23c35f53a5042091e336cbbafd610926df5::a89479176739dca239c294a87fb3a9e04a5d49fc::36027ddbba27197c0945fe37014487e413fcd3c2::8db504fba85e026fe05b060878b93ea15f8f6d30::6f7855161cfd9744c289249f145a4b153c7bb925::e44412101b630fe9df823b6d5b6581ca350f2d31::fa44f49afb843e23e20ff712aad86411b59f1a84::0f389b311fe9f895632732f9286ddac04797a269::3284fd607f96e932147086d5c9a5156cfde43f3a::4e9a1693cd3347907be674b40868ec89a1841a6a::c91f8c1565feb5c2e4f48577ee47f569413b3149::5457e969dbac1c72769e8687989c5251a1dc2266::550a1b5f02d94b1683d4d0a8dcf0977bdcad6a13::5c3824878866203587c95d4e7b2dc1d74c10ebb1::c692de6b807de1d68519151a980a366cb6a98e19::27ff22610d6e795c1ddb2f23384919ecbe2ef558::3c51feb36cd7ebf16b3056be161206f130fc9cd4::6c4e1db54e98c0ae51d5b8df1df5d6cd625c7a38::790cc11f032b84e262cc7080009f595404dbd3b4::e906271f9141bb5b2231cc468dfc99b06d00e398::ba807ed5a8f83ed1e4ee2eb2b99f8d5b1eddb28b::e6ead2ca7485fb7b69d2f1d63e2ac7f4b3f937dc::828119d823720a1d2360d4e52406b669a6f94b49::df032dfd1170ef1b8d3f77f2f96989bc21cf1ce0::f41cf5528c291cad530866f814568d9f58ee60df::85b52ca625c38b61f24be974f708346200c3c102::0ad6ac408654eda92a45042110c209d1700abfa7::6f0c9592bbad3bb042dd2515fd04ea7a7e7d486d::72a05ae2a067a0038da70fe5fda6c6ebcf1ba9a3::f7497e75e5d04dd02bc2c3fddd0cc2ad4b5a8b31::b1c739889ca59865c66bcc1d2b23badb5dc1eed9::b2b190076593ff51757b10cd4baa2c608ed1f87b::32c7fa7f7084ea1f766328b22c01974818136975::5a4ff6ca601a087c433f77ea5b3bca598e86fc87::c94ec20a1694359941e2bb778a2c23670fce08b5::c83e428a7e91139213a7a072092b5edca7c84380::b79d7a606ceaeee9a4a227445611acc90f96752c::31e5e81fcd63f8908983328e544c2273b35b7c5a::114a4dc5978c74e6620c5deb29d1598b151b0176::2c947c2ed66026da558d35444173902bb976bb2c::ca3b8228f76e730a14d067f09e93e86eaafca1eb::507e49396b19c5467c6a3310c5b1e877f2272b99::a1e00c93e55f6e75080ffd5de864be375f031698::9057f72881363406cbd16968a64bb5a2e2d905ff::1a0f3b173eb61738732f8c1818b453c9db0ee8a0::5ba090c3669dfe1ae7d43b673c89300f75f7cd92::57cac788fba4cc053ffec8b945cc072c17c1e01b::57e51f7fdf2b3a2894abcf8221709bb77ae29d36::89e73c123f1d242560737d38bbd020a7f512b5e4::d63221094145210a6046c1c0803acf03f9aa4194::af3402fe353e6ca3bed17229ece5043cefe74765::30423661994353871eb40da5c7977fbfdd78ade6::589548531eb5a77145cbb3e40f9a38760d51e2df::ae81e3607f4e4aa8fe9cca79e79a8a57fd3518a0::
https://api.github.com/repos/ansible/ansible,577,copy-changed::master,0,merged,,"I propose we backport this fix to the master branch to release a 0.5.1 (which may include other important fixes). I think this issue is important enough to get it out to EPEL, Fedora and other repositories for people to evaluate.",dd88730bb426e23c19052ed245b23e119faeba78::
https://api.github.com/repos/ansible/ansible,420,fix_no_varfiles::devel,0,merged,,"Ignores for now. Could warn or fail. Playbook test for no vars_files with len(), but that excepts if play.vars_files==None, as can happen when there's a vars_files section with no vars files listed. Design considerations: 1. What is the ansible way: ignore, warn, or fail with message (instead of traceback)? 2. Would it be better to alter the playbook parser to ensure a zero-length play.vars_files? 3. Should change be backported to 0.4",67ddf704ba498daa80ad9705dd65c5134d6e0237::
https://api.github.com/repos/ansible/ansible,198,apt-default-release::integration,0,merged,packaging::,"The value is passed to apt-get's ""-t"" option. Useful for installing backports, e.g.: ansible webservers -m apt -a ""pkg=nginx state=latest default-release=squeeze-backports""",d5f3760accc009a3c5e7059bb1dfe5645bc2e5b7::
